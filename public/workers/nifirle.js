/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var comlink__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _niftirle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _nifti__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24);



const functions = {
  nifti2rle: _niftirle__WEBPACK_IMPORTED_MODULE_1__["nifti2rle"],
  rle2nifti: _niftirle__WEBPACK_IMPORTED_MODULE_1__["rle2nifti"],
  writeImage: _nifti__WEBPACK_IMPORTED_MODULE_2__["writeImage"]
};
Object(comlink__WEBPACK_IMPORTED_MODULE_0__["expose"])(functions);

/***/ }),
/* 1 */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEndpoint", function() { return createEndpoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expose", function() { return expose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "proxy", function() { return proxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "proxyMarker", function() { return proxyMarker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "releaseProxy", function() { return releaseProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transfer", function() { return transfer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transferHandlers", function() { return transferHandlers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowEndpoint", function() { return windowEndpoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return wrap; });
/**
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const proxyMarker = Symbol("Comlink.proxy");
const createEndpoint = Symbol("Comlink.endpoint");
const releaseProxy = Symbol("Comlink.releaseProxy");
const throwMarker = Symbol("Comlink.thrown");
const isObject = (val) => (typeof val === "object" && val !== null) || typeof val === "function";
/**
 * Internal transfer handle to handle objects marked to proxy.
 */
const proxyTransferHandler = {
    canHandle: (val) => isObject(val) && val[proxyMarker],
    serialize(obj) {
        const { port1, port2 } = new MessageChannel();
        expose(obj, port1);
        return [port2, [port2]];
    },
    deserialize(port) {
        port.start();
        return wrap(port);
    },
};
/**
 * Internal transfer handler to handle thrown exceptions.
 */
const throwTransferHandler = {
    canHandle: (value) => isObject(value) && throwMarker in value,
    serialize({ value }) {
        let serialized;
        if (value instanceof Error) {
            serialized = {
                isError: true,
                value: {
                    message: value.message,
                    name: value.name,
                    stack: value.stack,
                },
            };
        }
        else {
            serialized = { isError: false, value };
        }
        return [serialized, []];
    },
    deserialize(serialized) {
        if (serialized.isError) {
            throw Object.assign(new Error(serialized.value.message), serialized.value);
        }
        throw serialized.value;
    },
};
/**
 * Allows customizing the serialization of certain values.
 */
const transferHandlers = new Map([
    ["proxy", proxyTransferHandler],
    ["throw", throwTransferHandler],
]);
function expose(obj, ep = self) {
    ep.addEventListener("message", function callback(ev) {
        if (!ev || !ev.data) {
            return;
        }
        const { id, type, path } = Object.assign({ path: [] }, ev.data);
        const argumentList = (ev.data.argumentList || []).map(fromWireValue);
        let returnValue;
        try {
            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);
            const rawValue = path.reduce((obj, prop) => obj[prop], obj);
            switch (type) {
                case 0 /* GET */:
                    {
                        returnValue = rawValue;
                    }
                    break;
                case 1 /* SET */:
                    {
                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);
                        returnValue = true;
                    }
                    break;
                case 2 /* APPLY */:
                    {
                        returnValue = rawValue.apply(parent, argumentList);
                    }
                    break;
                case 3 /* CONSTRUCT */:
                    {
                        const value = new rawValue(...argumentList);
                        returnValue = proxy(value);
                    }
                    break;
                case 4 /* ENDPOINT */:
                    {
                        const { port1, port2 } = new MessageChannel();
                        expose(obj, port2);
                        returnValue = transfer(port1, [port1]);
                    }
                    break;
                case 5 /* RELEASE */:
                    {
                        returnValue = undefined;
                    }
                    break;
            }
        }
        catch (value) {
            returnValue = { value, [throwMarker]: 0 };
        }
        Promise.resolve(returnValue)
            .catch((value) => {
            return { value, [throwMarker]: 0 };
        })
            .then((returnValue) => {
            const [wireValue, transferables] = toWireValue(returnValue);
            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);
            if (type === 5 /* RELEASE */) {
                // detach and deactive after sending release response above.
                ep.removeEventListener("message", callback);
                closeEndPoint(ep);
            }
        });
    });
    if (ep.start) {
        ep.start();
    }
}
function isMessagePort(endpoint) {
    return endpoint.constructor.name === "MessagePort";
}
function closeEndPoint(endpoint) {
    if (isMessagePort(endpoint))
        endpoint.close();
}
function wrap(ep, target) {
    return createProxy(ep, [], target);
}
function throwIfProxyReleased(isReleased) {
    if (isReleased) {
        throw new Error("Proxy has been released and is not useable");
    }
}
function createProxy(ep, path = [], target = function () { }) {
    let isProxyReleased = false;
    const proxy = new Proxy(target, {
        get(_target, prop) {
            throwIfProxyReleased(isProxyReleased);
            if (prop === releaseProxy) {
                return () => {
                    return requestResponseMessage(ep, {
                        type: 5 /* RELEASE */,
                        path: path.map((p) => p.toString()),
                    }).then(() => {
                        closeEndPoint(ep);
                        isProxyReleased = true;
                    });
                };
            }
            if (prop === "then") {
                if (path.length === 0) {
                    return { then: () => proxy };
                }
                const r = requestResponseMessage(ep, {
                    type: 0 /* GET */,
                    path: path.map((p) => p.toString()),
                }).then(fromWireValue);
                return r.then.bind(r);
            }
            return createProxy(ep, [...path, prop]);
        },
        set(_target, prop, rawValue) {
            throwIfProxyReleased(isProxyReleased);
            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a
            // boolean. To show good will, we return true asynchronously ¯\_(ツ)_/¯
            const [value, transferables] = toWireValue(rawValue);
            return requestResponseMessage(ep, {
                type: 1 /* SET */,
                path: [...path, prop].map((p) => p.toString()),
                value,
            }, transferables).then(fromWireValue);
        },
        apply(_target, _thisArg, rawArgumentList) {
            throwIfProxyReleased(isProxyReleased);
            const last = path[path.length - 1];
            if (last === createEndpoint) {
                return requestResponseMessage(ep, {
                    type: 4 /* ENDPOINT */,
                }).then(fromWireValue);
            }
            // We just pretend that `bind()` didn’t happen.
            if (last === "bind") {
                return createProxy(ep, path.slice(0, -1));
            }
            const [argumentList, transferables] = processArguments(rawArgumentList);
            return requestResponseMessage(ep, {
                type: 2 /* APPLY */,
                path: path.map((p) => p.toString()),
                argumentList,
            }, transferables).then(fromWireValue);
        },
        construct(_target, rawArgumentList) {
            throwIfProxyReleased(isProxyReleased);
            const [argumentList, transferables] = processArguments(rawArgumentList);
            return requestResponseMessage(ep, {
                type: 3 /* CONSTRUCT */,
                path: path.map((p) => p.toString()),
                argumentList,
            }, transferables).then(fromWireValue);
        },
    });
    return proxy;
}
function myFlat(arr) {
    return Array.prototype.concat.apply([], arr);
}
function processArguments(argumentList) {
    const processed = argumentList.map(toWireValue);
    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];
}
const transferCache = new WeakMap();
function transfer(obj, transfers) {
    transferCache.set(obj, transfers);
    return obj;
}
function proxy(obj) {
    return Object.assign(obj, { [proxyMarker]: true });
}
function windowEndpoint(w, context = self, targetOrigin = "*") {
    return {
        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),
        addEventListener: context.addEventListener.bind(context),
        removeEventListener: context.removeEventListener.bind(context),
    };
}
function toWireValue(value) {
    for (const [name, handler] of transferHandlers) {
        if (handler.canHandle(value)) {
            const [serializedValue, transferables] = handler.serialize(value);
            return [
                {
                    type: 3 /* HANDLER */,
                    name,
                    value: serializedValue,
                },
                transferables,
            ];
        }
    }
    return [
        {
            type: 0 /* RAW */,
            value,
        },
        transferCache.get(value) || [],
    ];
}
function fromWireValue(value) {
    switch (value.type) {
        case 3 /* HANDLER */:
            return transferHandlers.get(value.name).deserialize(value.value);
        case 0 /* RAW */:
            return value.value;
    }
}
function requestResponseMessage(ep, msg, transfers) {
    return new Promise((resolve) => {
        const id = generateUUID();
        ep.addEventListener("message", function l(ev) {
            if (!ev.data || !ev.data.id || ev.data.id !== id) {
                return;
            }
            ep.removeEventListener("message", l);
            resolve(ev.data);
        });
        if (ep.start) {
            ep.start();
        }
        ep.postMessage(Object.assign({ id }, msg), transfers);
    });
}
function generateUUID() {
    return new Array(4)
        .fill(0)
        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))
        .join("-");
}


//# sourceMappingURL=comlink.mjs.map


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nifti2rle", function() { return nifti2rle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rle2nifti", function() { return rle2nifti; });
/* eslint-disable no-underscore-dangle, func-names, no-param-reassign, no-plusplus, */
const nifti = __webpack_require__(3);

const { compress, decompress } = __webpack_require__(23);

const _appendBuffer = function(buffer1, buffer2) {
  console.time('appendBuffer');
  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);
  tmp.set(new Uint8Array(buffer1), 0);
  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);
  console.timeEnd('appendBuffer');
  return tmp.buffer;
};

const nifti2rle = data => {
  console.time('read nii');
  if (nifti.isCompressed(data)) {
    data = nifti.decompress(data);
  }
  console.timeEnd('read nii');
  console.time('read other');
  const niftiHeader = nifti.readHeader(data);
  const niftiImage = nifti.readImage(niftiHeader, data);
  const imageOffset = niftiHeader.vox_offset;

  // const dim = [niftiHeader.dims[1], niftiHeader.dims[2], niftiHeader.dims[3]];
  const bytesPerVoxel = niftiHeader.numBitsPerVoxel / 8;
  let finalBuffer = null;
  if (bytesPerVoxel === 1) {
    finalBuffer = new Int8Array(niftiImage);
  } else if (bytesPerVoxel === 2) {
    finalBuffer = new Int16Array(niftiImage);
  } else {
    finalBuffer = new Int32Array(niftiImage);
  }
  console.timeEnd('read other');
  console.time('comp');
  const rleBuffer = compress(finalBuffer);
  console.timeEnd('comp');
  return _appendBuffer(data.slice(0, imageOffset), rleBuffer.buffer);
};

const rle2nifti = data => {
  if (nifti.isCompressed(data)) {
    data = nifti.decompress(data);
  }
  const niftiHeader = nifti.readHeader(data);
  const dim = [niftiHeader.dims[1], niftiHeader.dims[2], niftiHeader.dims[3]];
  const imageOffset = niftiHeader.vox_offset;
  const bytesPerVoxel = niftiHeader.numBitsPerVoxel / 8;
  let type = Uint8Array;
  if (bytesPerVoxel === 2) {
    type = Uint16Array;
  } else if (bytesPerVoxel === 4) {
    type = Uint32Array;
  }
  const rt = _appendBuffer(
    data.slice(0, imageOffset),
    decompress(new Uint8Array(data.slice(imageOffset)), dim[0] * dim[1] * dim[2], type).buffer,
  );
  const ss = new Uint8Array(rt);
  let v = 0;
  for (let i = 352; i < ss.length; i++) {
    if (ss[i] > 0) v += ss[i];
  }
  console.log(v);
  return rt;
};




/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/

/**
 * nifti
 * @type {*|{}}
 */
var nifti = nifti || {};
nifti.NIFTI1 = nifti.NIFTI1 || (( true) ? __webpack_require__(4) : undefined);
nifti.NIFTI2 = nifti.NIFTI2 || (( true) ? __webpack_require__(6) : undefined);
nifti.Utils = nifti.Utils || (( true) ? __webpack_require__(5) : undefined);

var pako = pako || (( true) ? __webpack_require__(7) : undefined);



/*** Static Methods ***/

/**
 * Returns true if this data represents a NIFTI-1 header.
 * @param {ArrayBuffer} data
 * @returns {boolean}
 */
nifti.isNIFTI1 = function (data) {
    var buf, mag1, mag2, mag3;

    if (data.byteLength < nifti.NIFTI1.STANDARD_HEADER_SIZE) {
        return false;
    }

    buf = new DataView(data);

    if (buf)

    mag1 = buf.getUint8(nifti.NIFTI1.MAGIC_NUMBER_LOCATION);
    mag2 = buf.getUint8(nifti.NIFTI1.MAGIC_NUMBER_LOCATION + 1);
    mag3 = buf.getUint8(nifti.NIFTI1.MAGIC_NUMBER_LOCATION + 2);

    return !!((mag1 === nifti.NIFTI1.MAGIC_NUMBER[0]) && (mag2 === nifti.NIFTI1.MAGIC_NUMBER[1]) &&
        (mag3 === nifti.NIFTI1.MAGIC_NUMBER[2]));
};


/**
 * Returns true if this data represents a NIFTI-2 header.
 * @param {ArrayBuffer} data
 * @returns {boolean}
 */
nifti.isNIFTI2 = function (data) {
    var buf, mag1, mag2, mag3;

    if (data.byteLength < nifti.NIFTI1.STANDARD_HEADER_SIZE) {
        return false;
    }

    buf = new DataView(data);
    mag1 = buf.getUint8(nifti.NIFTI2.MAGIC_NUMBER_LOCATION);
    mag2 = buf.getUint8(nifti.NIFTI2.MAGIC_NUMBER_LOCATION + 1);
    mag3 = buf.getUint8(nifti.NIFTI2.MAGIC_NUMBER_LOCATION + 2);

    return !!((mag1 === nifti.NIFTI2.MAGIC_NUMBER[0]) && (mag2 === nifti.NIFTI2.MAGIC_NUMBER[1]) &&
    (mag3 === nifti.NIFTI2.MAGIC_NUMBER[2]));
};



/**
 * Returns true if this data represents a NIFTI header.
 * @param {ArrayBuffer} data
 * @returns {boolean}
 */
nifti.isNIFTI = function (data) {
    return (nifti.isNIFTI1(data) || nifti.isNIFTI2(data));
};



/**
 * Returns true if this data is GZIP compressed.
 * @param {ArrayBuffer} data
 * @returns {boolean}
 */
nifti.isCompressed = function (data) {
    var buf, magicCookie1, magicCookie2;

    if (data) {
        buf = new DataView(data);

        magicCookie1 = buf.getUint8(0);
        magicCookie2 = buf.getUint8(1);

        if (magicCookie1 === nifti.Utils.GUNZIP_MAGIC_COOKIE1) {
            return true;
        }

        if (magicCookie2 === nifti.Utils.GUNZIP_MAGIC_COOKIE2) {
            return true;
        }
    }

    return false;
};



/**
 * Returns decompressed data.
 * @param {ArrayBuffer} data
 * @returns {ArrayBuffer}
 */
nifti.decompress = function (data) {
    return pako.inflate(data).buffer;
};



/**
 * Reads and returns the header object.
 * @param {ArrayBuffer} data
 * @returns {nifti.NIFTI1|nifti.NIFTI2|null}
 */
nifti.readHeader = function (data) {
    var header = null;

    if (nifti.isCompressed(data)) {
        data = nifti.decompress(data);
    }

    if (nifti.isNIFTI1(data)) {
        header = new nifti.NIFTI1();
    } else if (nifti.isNIFTI2(data)) {
        header = new nifti.NIFTI2();
    }

    if (header) {
        header.readHeader(data);
    } else {
        console.error("That file does not appear to be NIFTI!");
    }

    return header;
};



/**
 * Returns true if this header contains an extension.
 * @param {nifti.NIFTI1|nifti.NIFTI2} header
 * @returns {boolean}
 */
nifti.hasExtension = function (header) {
    return (header.extensionFlag[0] != 0);
};



/**
 * Returns the image data.
 * @param {nifti.NIFTI1|nifti.NIFTI2} header
 * @param {ArrayBuffer} data
 * @returns {ArrayBuffer}
 */
nifti.readImage = function (header, data) {
    var imageOffset = header.vox_offset,
        timeDim = 1,
        statDim = 1;

    if (header.dims[4]) {
        timeDim = header.dims[4];
    }

    if (header.dims[5]) {
        statDim = header.dims[5];
    }

    var imageSize = header.dims[1] * header.dims[2] * header.dims[3] * timeDim * statDim * (header.numBitsPerVoxel / 8);
    return data.slice(imageOffset, imageOffset + imageSize);
};



/**
 * Returns the extension data (including extension header).
 * @param {nifti.NIFTI1|nifti.NIFTI2} header
 * @param {ArrayBuffer} data
 * @returns {ArrayBuffer}
 */
nifti.readExtension = function (header, data) {
    var loc = header.getExtensionLocation(),
        size = header.extensionSize;

    return data.slice(loc, loc + size);
};



/**
 * Returns the extension data.
 * @param {nifti.NIFTI1|nifti.NIFTI2} header
 * @param {ArrayBuffer} data
 * @returns {ArrayBuffer}
 */
nifti.readExtensionData = function (header, data) {
    var loc = header.getExtensionLocation(),
        size = header.extensionSize;

    return data.slice(loc + 8, loc + size - 8);
};


/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = nifti;
}


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*jslint browser: true, node: true */
/*global */



/*** Imports ***/

var nifti = nifti || {};
nifti.Utils = nifti.Utils || (( true) ? __webpack_require__(5) : undefined);



/*** Constructor ***/

/**
 * The NIFTI1 constructor.
 * @constructor
 * @property {boolean} littleEndian
 * @property {number} dim_info
 * @property {number[]} dims - image dimensions
 * @property {number} intent_p1
 * @property {number} intent_p2
 * @property {number} intent_p3
 * @property {number} intent_code
 * @property {number} datatypeCode
 * @property {number} numBitsPerVoxel
 * @property {number} slice_start
 * @property {number} slice_end
 * @property {number} slice_code
 * @property {number[]} pixDims - voxel dimensions
 * @property {number} vox_offset
 * @property {number} scl_slope
 * @property {number} scl_inter
 * @property {number} xyzt_units
 * @property {number} cal_max
 * @property {number} cal_min
 * @property {number} slice_duration
 * @property {number} toffset
 * @property {string} description
 * @property {string} aux_file
 * @property {string} intent_name
 * @property {number} qform_code
 * @property {number} sform_code
 * @property {number} quatern_b
 * @property {number} quatern_c
 * @property {number} quatern_d
 * @property {number} quatern_x
 * @property {number} quatern_y
 * @property {number} quatern_z
 * @property {Array.<Array.<number>>} affine
 * @property {string} magic
 * @property {boolean} isHDR - if hdr/img format
 * @property {number[]} extensionFlag
 * @property {number} extensionSize
 * @property {number} extensionCode
 * @type {Function}
 */
nifti.NIFTI1 = nifti.NIFTI1 || function () {
    this.littleEndian = false;
    this.dim_info = 0;
    this.dims = [];
    this.intent_p1 = 0;
    this.intent_p2 = 0;
    this.intent_p3 = 0;
    this.intent_code = 0;
    this.datatypeCode = 0;
    this.numBitsPerVoxel = 0;
    this.slice_start = 0;
    this.slice_end = 0;
    this.slice_code = 0;
    this.pixDims = [];
    this.vox_offset = 0;
    this.scl_slope = 1;
    this.scl_inter = 0;
    this.xyzt_units = 0;
    this.cal_max = 0;
    this.cal_min = 0;
    this.slice_duration = 0;
    this.toffset = 0;
    this.description = "";
    this.aux_file = "";
    this.intent_name = "";
    this.qform_code = 0;
    this.sform_code = 0;
    this.quatern_b = 0;
    this.quatern_c = 0;
    this.quatern_d = 0;
    this.qoffset_x = 0;
    this.qoffset_y = 0;
    this.qoffset_z = 0;
    this.affine = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
    this.magic = 0;
    this.isHDR = false;
    this.extensionFlag = [0, 0, 0, 0];
    this.extensionSize = 0;
    this.extensionCode = 0;
};



/*** Static Pseudo-constants ***/

// datatype codes
nifti.NIFTI1.TYPE_NONE            = 0;
nifti.NIFTI1.TYPE_BINARY          = 1;
nifti.NIFTI1.TYPE_UINT8           = 2;
nifti.NIFTI1.TYPE_INT16           = 4;
nifti.NIFTI1.TYPE_INT32           = 8;
nifti.NIFTI1.TYPE_FLOAT32        = 16;
nifti.NIFTI1.TYPE_COMPLEX64      = 32;
nifti.NIFTI1.TYPE_FLOAT64        = 64;
nifti.NIFTI1.TYPE_RGB24         = 128;
nifti.NIFTI1.TYPE_INT8          = 256;
nifti.NIFTI1.TYPE_UINT16        = 512;
nifti.NIFTI1.TYPE_UINT32        = 768;
nifti.NIFTI1.TYPE_INT64        = 1024;
nifti.NIFTI1.TYPE_UINT64       = 1280;
nifti.NIFTI1.TYPE_FLOAT128     = 1536;
nifti.NIFTI1.TYPE_COMPLEX128   = 1792;
nifti.NIFTI1.TYPE_COMPLEX256   = 2048;

// transform codes
nifti.NIFTI1.XFORM_UNKNOWN        = 0;
nifti.NIFTI1.XFORM_SCANNER_ANAT   = 1;
nifti.NIFTI1.XFORM_ALIGNED_ANAT   = 2;
nifti.NIFTI1.XFORM_TALAIRACH      = 3;
nifti.NIFTI1.XFORM_MNI_152        = 4;

// unit codes
nifti.NIFTI1.SPATIAL_UNITS_MASK = 0x07;
nifti.NIFTI1.TEMPORAL_UNITS_MASK = 0x38;
nifti.NIFTI1.UNITS_UNKNOWN        = 0;
nifti.NIFTI1.UNITS_METER          = 1;
nifti.NIFTI1.UNITS_MM             = 2;
nifti.NIFTI1.UNITS_MICRON         = 3;
nifti.NIFTI1.UNITS_SEC            = 8;
nifti.NIFTI1.UNITS_MSEC          = 16;
nifti.NIFTI1.UNITS_USEC          = 24;
nifti.NIFTI1.UNITS_HZ            = 32;
nifti.NIFTI1.UNITS_PPM           = 40;
nifti.NIFTI1.UNITS_RADS          = 48;

// nifti1 codes
nifti.NIFTI1.MAGIC_COOKIE = 348;
nifti.NIFTI1.STANDARD_HEADER_SIZE = 348;
nifti.NIFTI1.MAGIC_NUMBER_LOCATION = 344;
nifti.NIFTI1.MAGIC_NUMBER = [0x6E, 0x2B, 0x31];  // n+1 (.nii)
nifti.NIFTI1.MAGIC_NUMBER2 = [0x6E, 0x69, 0x31];  // ni1 (.hdr/.img)
nifti.NIFTI1.EXTENSION_HEADER_SIZE = 8;


/*** Prototype Methods ***/

/**
 * Reads the header data.
 * @param {ArrayBuffer} data
 */
nifti.NIFTI1.prototype.readHeader = function (data) {
    var rawData = new DataView(data),
        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian),
        ctr,
        ctrOut,
        ctrIn,
        index;

    if (magicCookieVal !== nifti.NIFTI1.MAGIC_COOKIE) {  // try as little endian
        this.littleEndian = true;
        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian);
    }

    if (magicCookieVal !== nifti.NIFTI1.MAGIC_COOKIE) {
        throw new Error("This does not appear to be a NIFTI file!");
    }

    this.dim_info = nifti.Utils.getByteAt(rawData, 39);

    for (ctr = 0; ctr < 8; ctr += 1) {
        index = 40 + (ctr * 2);
        this.dims[ctr] = nifti.Utils.getShortAt(rawData, index, this.littleEndian);
    }

    this.intent_p1 = nifti.Utils.getFloatAt(rawData, 56, this.littleEndian);
    this.intent_p2 = nifti.Utils.getFloatAt(rawData, 60, this.littleEndian);
    this.intent_p3 = nifti.Utils.getFloatAt(rawData, 64, this.littleEndian);
    this.intent_code = nifti.Utils.getShortAt(rawData, 68, this.littleEndian);

    this.datatypeCode = nifti.Utils.getShortAt(rawData, 70, this.littleEndian);
    this.numBitsPerVoxel = nifti.Utils.getShortAt(rawData, 72, this.littleEndian);

    this.slice_start = nifti.Utils.getShortAt(rawData, 74, this.littleEndian);

    for (ctr = 0; ctr < 8; ctr += 1) {
        index = 76 + (ctr * 4);
        this.pixDims[ctr] = nifti.Utils.getFloatAt(rawData, index, this.littleEndian);
    }

    this.vox_offset = nifti.Utils.getFloatAt(rawData, 108, this.littleEndian);

    this.scl_slope = nifti.Utils.getFloatAt(rawData, 112, this.littleEndian);
    this.scl_inter = nifti.Utils.getFloatAt(rawData, 116, this.littleEndian);

    this.slice_end = nifti.Utils.getShortAt(rawData, 120, this.littleEndian);
    this.slice_code = nifti.Utils.getByteAt(rawData, 122);

    this.xyzt_units = nifti.Utils.getByteAt(rawData, 123);

    this.cal_max = nifti.Utils.getFloatAt(rawData, 124, this.littleEndian);
    this.cal_min = nifti.Utils.getFloatAt(rawData, 128, this.littleEndian);

    this.slice_duration = nifti.Utils.getFloatAt(rawData, 132, this.littleEndian);
    this.toffset = nifti.Utils.getFloatAt(rawData, 136, this.littleEndian);

    this.description = nifti.Utils.getStringAt(rawData, 148, 228);
    this.aux_file = nifti.Utils.getStringAt(rawData, 228, 252);

    this.qform_code = nifti.Utils.getShortAt(rawData, 252, this.littleEndian);
    this.sform_code = nifti.Utils.getShortAt(rawData, 254, this.littleEndian);

    this.quatern_b = nifti.Utils.getFloatAt(rawData, 256, this.littleEndian);
    this.quatern_c = nifti.Utils.getFloatAt(rawData, 260, this.littleEndian);
    this.quatern_d = nifti.Utils.getFloatAt(rawData, 264, this.littleEndian);
    this.qoffset_x = nifti.Utils.getFloatAt(rawData, 268, this.littleEndian);
    this.qoffset_y = nifti.Utils.getFloatAt(rawData, 272, this.littleEndian);
    this.qoffset_z = nifti.Utils.getFloatAt(rawData, 276, this.littleEndian);

    for (ctrOut = 0; ctrOut < 3; ctrOut += 1) {
        for (ctrIn = 0; ctrIn < 4; ctrIn += 1) {
            index = 280 + (((ctrOut * 4) + ctrIn) * 4);
            this.affine[ctrOut][ctrIn] = nifti.Utils.getFloatAt(rawData, index, this.littleEndian);
        }
    }

    this.affine[3][0] = 0;
    this.affine[3][1] = 0;
    this.affine[3][2] = 0;
    this.affine[3][3] = 1;

    this.intent_name = nifti.Utils.getStringAt(rawData, 328, 344);
    this.magic = nifti.Utils.getStringAt(rawData, 344, 348);

    this.isHDR = (this.magic === nifti.NIFTI1.MAGIC_NUMBER2);

    if (rawData.byteLength > nifti.NIFTI1.MAGIC_COOKIE) {
        this.extensionFlag[0] = nifti.Utils.getByteAt(rawData, 348);
        this.extensionFlag[1] = nifti.Utils.getByteAt(rawData, 348 + 1);
        this.extensionFlag[2] = nifti.Utils.getByteAt(rawData, 348 + 2);
        this.extensionFlag[3] = nifti.Utils.getByteAt(rawData, 348 + 3);

        if (this.extensionFlag[0]) {
            this.extensionSize = this.getExtensionSize(rawData);
            this.extensionCode = this.getExtensionCode(rawData);
        }
    }
};


/**
 * Returns a formatted string of header fields.
 * @returns {string}
 */
nifti.NIFTI1.prototype.toFormattedString = function () {
    var fmt = nifti.Utils.formatNumber,
        string = "";

    string += ("Dim Info = " + this.dim_info + "\n");

    string += ("Image Dimensions (1-8): " +
        this.dims[0] + ", " +
        this.dims[1] + ", " +
        this.dims[2] + ", " +
        this.dims[3] + ", " +
        this.dims[4] + ", " +
        this.dims[5] + ", " +
        this.dims[6] + ", " +
        this.dims[7] + "\n");

    string += ("Intent Parameters (1-3): " +
        this.intent_p1 + ", " +
        this.intent_p2 + ", " +
        this.intent_p3) + "\n";

    string += ("Intent Code = " + this.intent_code + "\n");
    string += ("Datatype = " + this.datatypeCode +  " (" + this.getDatatypeCodeString(this.datatypeCode) + ")\n");
    string += ("Bits Per Voxel = " + this.numBitsPerVoxel + "\n");
    string += ("Slice Start = " + this.slice_start + "\n");
    string += ("Voxel Dimensions (1-8): " +
        fmt(this.pixDims[0]) + ", " +
        fmt(this.pixDims[1]) + ", " +
        fmt(this.pixDims[2]) + ", " +
        fmt(this.pixDims[3]) + ", " +
        fmt(this.pixDims[4]) + ", " +
        fmt(this.pixDims[5]) + ", " +
        fmt(this.pixDims[6]) + ", " +
        fmt(this.pixDims[7]) + "\n");

    string += ("Image Offset = " + this.vox_offset + "\n");
    string += ("Data Scale:  Slope = " + fmt(this.scl_slope) + "  Intercept = " + fmt(this.scl_inter) + "\n");
    string += ("Slice End = " + this.slice_end + "\n");
    string += ("Slice Code = " + this.slice_code + "\n");
    string += ("Units Code = " + this.xyzt_units + " (" + this.getUnitsCodeString(nifti.NIFTI1.SPATIAL_UNITS_MASK & this.xyzt_units) + ", " + this.getUnitsCodeString(nifti.NIFTI1.TEMPORAL_UNITS_MASK & this.xyzt_units) + ")\n");
    string += ("Display Range:  Max = " + fmt(this.cal_max) + "  Min = " + fmt(this.cal_min) + "\n");
    string += ("Slice Duration = " + this.slice_duration + "\n");
    string += ("Time Axis Shift = " + this.toffset + "\n");
    string += ("Description: \"" + this.description + "\"\n");
    string += ("Auxiliary File: \"" + this.aux_file + "\"\n");
    string += ("Q-Form Code = " + this.qform_code + " (" + this.getTransformCodeString(this.qform_code) + ")\n");
    string += ("S-Form Code = " + this.sform_code + " (" + this.getTransformCodeString(this.sform_code) + ")\n");
    string += ("Quaternion Parameters:  " +
        "b = " + fmt(this.quatern_b) + "  " +
        "c = " + fmt(this.quatern_c) + "  " +
        "d = " + fmt(this.quatern_d) + "\n");

    string += ("Quaternion Offsets:  " +
        "x = " + this.qoffset_x + "  " +
        "y = " + this.qoffset_y + "  " +
        "z = " + this.qoffset_z + "\n");

    string += ("S-Form Parameters X: " +
        fmt(this.affine[0][0]) + ", " +
        fmt(this.affine[0][1]) + ", " +
        fmt(this.affine[0][2]) + ", " +
        fmt(this.affine[0][3]) + "\n");

    string += ("S-Form Parameters Y: " +
        fmt(this.affine[1][0]) + ", " +
        fmt(this.affine[1][1]) + ", " +
        fmt(this.affine[1][2]) + ", " +
        fmt(this.affine[1][3]) + "\n");

    string += ("S-Form Parameters Z: " +
        fmt(this.affine[2][0]) + ", " +
        fmt(this.affine[2][1]) + ", " +
        fmt(this.affine[2][2]) + ", " +
        fmt(this.affine[2][3]) + "\n");

    string += ("Intent Name: \"" + this.intent_name + "\"\n");

    if (this.extensionFlag[0]) {
        string += ("Extension: Size = " + this.extensionSize + "  Code = " + this.extensionCode + "\n");

    }

    return string;
};


/**
 * Returns a human-readable string of datatype.
 * @param {number} code
 * @returns {string}
 */
nifti.NIFTI1.prototype.getDatatypeCodeString = function (code) {
    if (code === nifti.NIFTI1.TYPE_UINT8) {
        return "1-Byte Unsigned Integer";
    } else if (code === nifti.NIFTI1.TYPE_INT16) {
        return "2-Byte Signed Integer";
    } else if (code === nifti.NIFTI1.TYPE_INT32) {
        return "4-Byte Signed Integer";
    } else if (code === nifti.NIFTI1.TYPE_FLOAT32) {
        return "4-Byte Float";
    } else if (code === nifti.NIFTI1.TYPE_FLOAT64) {
        return "8-Byte Float";
    } else if (code === nifti.NIFTI1.TYPE_RGB24) {
        return "RGB";
    } else if (code === nifti.NIFTI1.TYPE_INT8) {
        return "1-Byte Signed Integer";
    } else if (code === nifti.NIFTI1.TYPE_UINT16) {
        return "2-Byte Unsigned Integer";
    } else if (code === nifti.NIFTI1.TYPE_UINT32) {
        return "4-Byte Unsigned Integer";
    } else if (code === nifti.NIFTI1.TYPE_INT64) {
        return "8-Byte Signed Integer";
    } else if (code === nifti.NIFTI1.TYPE_UINT64) {
        return "8-Byte Unsigned Integer";
    } else {
        return "Unknown";
    }
};


/**
 * Returns a human-readable string of transform type.
 * @param {number} code
 * @returns {string}
 */
nifti.NIFTI1.prototype.getTransformCodeString = function (code) {
    if (code === nifti.NIFTI1.XFORM_SCANNER_ANAT) {
        return "Scanner";
    } else if (code === nifti.NIFTI1.XFORM_ALIGNED_ANAT) {
        return "Aligned";
    } else if (code === nifti.NIFTI1.XFORM_TALAIRACH) {
        return "Talairach";
    } else if (code === nifti.NIFTI1.XFORM_MNI_152) {
        return "MNI";
    } else {
        return "Unknown";
    }
};


/**
 * Returns a human-readable string of spatial and temporal units.
 * @param {number} code
 * @returns {string}
 */
nifti.NIFTI1.prototype.getUnitsCodeString = function (code) {
    if (code === nifti.NIFTI1.UNITS_METER) {
        return "Meters";
    } else if (code === nifti.NIFTI1.UNITS_MM) {
        return "Millimeters";
    } else if (code === nifti.NIFTI1.UNITS_MICRON) {
        return "Microns";
    } else if (code === nifti.NIFTI1.UNITS_SEC) {
        return "Seconds";
    } else if (code === nifti.NIFTI1.UNITS_MSEC) {
        return "Milliseconds";
    } else if (code === nifti.NIFTI1.UNITS_USEC) {
        return "Microseconds";
    } else if (code === nifti.NIFTI1.UNITS_HZ) {
        return "Hz";
    } else if (code === nifti.NIFTI1.UNITS_PPM) {
        return "PPM";
    } else if (code === nifti.NIFTI1.UNITS_RADS) {
        return "Rads";
    } else {
        return "Unknown";
    }
};


/**
 * Returns the qform matrix.
 * @returns {Array.<Array.<number>>}
 */
nifti.NIFTI1.prototype.getQformMat = function () {
    return this.convertNiftiQFormToNiftiSForm(this.quatern_b, this.quatern_c, this.quatern_d, this.qoffset_x,
        this.qoffset_y, this.qoffset_z, this.pixDims[1], this.pixDims[2], this.pixDims[3], this.pixDims[0]);
};



/**
 * Converts qform to an affine.  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)
 * @param {number} qb
 * @param {number} qc
 * @param {number} qd
 * @param {number} qx
 * @param {number} qy
 * @param {number} qz
 * @param {number} dx
 * @param {number} dy
 * @param {number} dz
 * @param {number} qfac
 * @returns {Array.<Array.<number>>}
 */
nifti.NIFTI1.prototype.convertNiftiQFormToNiftiSForm = function (qb, qc, qd, qx, qy, qz, dx, dy, dz,
                                                qfac) {
    var R = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
        a,
        b = qb,
        c = qc,
        d = qd,
        xd,
        yd,
        zd;

    // last row is always [ 0 0 0 1 ]
    R[3][0] = R[3][1] = R[3][2] = 0.0;
    R[3][3] = 1.0;

    // compute a parameter from b,c,d
    a = 1.0 - (b * b + c * c + d * d);
    if (a < 0.0000001) {                   /* special case */

        a = 1.0 / Math.sqrt(b * b + c * c + d * d);
        b *= a;
        c *= a;
        d *= a;        /* normalize (b,c,d) vector */
        a = 0.0;                        /* a = 0 ==> 180 degree rotation */
    } else {

        a = Math.sqrt(a);                     /* angle = 2*arccos(a) */
    }

    // load rotation matrix, including scaling factors for voxel sizes
    xd = (dx > 0.0) ? dx : 1.0;       /* make sure are positive */
    yd = (dy > 0.0) ? dy : 1.0;
    zd = (dz > 0.0) ? dz : 1.0;

    if (qfac < 0.0) {
        zd = -zd;         /* left handedness? */
    }

    R[0][0] =       (a * a + b * b - c * c - d * d) * xd;
    R[0][1] = 2.0 * (b * c - a * d) * yd;
    R[0][2] = 2.0 * (b * d + a * c) * zd;
    R[1][0] = 2.0 * (b * c + a * d) * xd;
    R[1][1] =       (a * a + c * c - b * b - d * d) * yd;
    R[1][2] = 2.0 * (c * d - a * b) * zd;
    R[2][0] = 2.0 * (b * d - a * c) * xd;
    R[2][1] = 2.0 * (c * d + a * b) * yd;
    R[2][2] =       (a * a + d * d - c * c - b * b) * zd;

    // load offsets
    R[0][3] = qx;
    R[1][3] = qy;
    R[2][3] = qz;

    return R;
};



/**
 * Converts sform to an orientation string (e.g., XYZ+--).  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)
 * @param {Array.<Array.<number>>} R
 * @returns {string}
 */
nifti.NIFTI1.prototype.convertNiftiSFormToNEMA = function (R) {
    var xi, xj, xk, yi, yj, yk, zi, zj, zk, val, detQ, detP, i, j, k, p, q, r, ibest, jbest, kbest, pbest, qbest, rbest,
        M, vbest, Q, P, iChar, jChar, kChar, iSense, jSense, kSense;
    k = 0;

    Q = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];
    P = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];

    //if( icod == NULL || jcod == NULL || kcod == NULL ) return ; /* bad */

    //*icod = *jcod = *kcod = 0 ; /* this.errorMessage returns, if sh*t happens */

    /* load column vectors for each (i,j,k) direction from matrix */

    /*-- i axis --*/ /*-- j axis --*/ /*-- k axis --*/

    xi = R[0][0];
    xj = R[0][1];
    xk = R[0][2];

    yi = R[1][0];
    yj = R[1][1];
    yk = R[1][2];

    zi = R[2][0];
    zj = R[2][1];
    zk = R[2][2];

    /* normalize column vectors to get unit vectors along each ijk-axis */

    /* normalize i axis */
    val = Math.sqrt(xi * xi + yi * yi + zi * zi);
    if (val === 0.0) {  /* stupid input */
        return null;
    }

    xi /= val;
    yi /= val;
    zi /= val;

    /* normalize j axis */
    val = Math.sqrt(xj * xj + yj * yj + zj * zj);
    if (val === 0.0) {  /* stupid input */
        return null;
    }

    xj /= val;
    yj /= val;
    zj /= val;

    /* orthogonalize j axis to i axis, if needed */
    val = xi * xj + yi * yj + zi * zj;    /* dot product between i and j */
    if (Math.abs(val) > 1.E-4) {
        xj -= val * xi;
        yj -= val * yi;
        zj -= val * zi;
        val = Math.sqrt(xj * xj + yj * yj + zj * zj);  /* must renormalize */
        if (val === 0.0) {              /* j was parallel to i? */
            return null;
        }
        xj /= val;
        yj /= val;
        zj /= val;
    }

    /* normalize k axis; if it is zero, make it the cross product i x j */
    val = Math.sqrt(xk * xk + yk * yk + zk * zk);
    if (val === 0.0) {
        xk = yi * zj - zi * yj;
        yk = zi * xj - zj * xi;
        zk = xi * yj - yi * xj;
    } else {
        xk /= val;
        yk /= val;
        zk /= val;
    }

    /* orthogonalize k to i */
    val = xi * xk + yi * yk + zi * zk;    /* dot product between i and k */
    if (Math.abs(val) > 1.E-4) {
        xk -= val * xi;
        yk -= val * yi;
        zk -= val * zi;
        val = Math.sqrt(xk * xk + yk * yk + zk * zk);
        if (val === 0.0) {    /* bad */
            return null;
        }
        xk /= val;
        yk /= val;
        zk /= val;
    }

    /* orthogonalize k to j */
    val = xj * xk + yj * yk + zj * zk;    /* dot product between j and k */
    if (Math.abs(val) > 1.e-4) {
        xk -= val * xj;
        yk -= val * yj;
        zk -= val * zj;
        val = Math.sqrt(xk * xk + yk * yk + zk * zk);
        if (val === 0.0) {     /* bad */
            return null;
        }
        xk /= val;
        yk /= val;
        zk /= val;
    }

    Q[0][0] = xi;
    Q[0][1] = xj;
    Q[0][2] = xk;
    Q[1][0] = yi;
    Q[1][1] = yj;
    Q[1][2] = yk;
    Q[2][0] = zi;
    Q[2][1] = zj;
    Q[2][2] = zk;

    /* at this point, Q is the rotation matrix from the (i,j,k) to (x,y,z) axes */

    detQ = this.nifti_mat33_determ(Q);
    if (detQ === 0.0) { /* shouldn't happen unless user is a DUFIS */
        return null;
    }

    /* Build and test all possible +1/-1 coordinate permutation matrices P;
     then find the P such that the rotation matrix M=PQ is closest to the
     identity, in the sense of M having the smallest total rotation angle. */

    /* Despite the formidable looking 6 nested loops, there are
     only 3*3*3*2*2*2 = 216 passes, which will run very quickly. */

    vbest = -666.0;
    ibest = pbest = qbest = rbest = 1;
    jbest = 2;
    kbest = 3;

    for (i = 1; i <= 3; i += 1) {     /* i = column number to use for row #1 */
        for (j = 1; j <= 3; j += 1) {    /* j = column number to use for row #2 */
            if (i !== j) {
                for (k = 1; k <= 3; k += 1) {  /* k = column number to use for row #3 */
                    if (!(i === k || j === k)) {
                        P[0][0] = P[0][1] = P[0][2] = P[1][0] = P[1][1] = P[1][2] = P[2][0] = P[2][1] = P[2][2] = 0.0;
                        for (p = -1; p <= 1; p += 2) {    /* p,q,r are -1 or +1      */
                            for (q = -1; q <= 1; q += 2) {   /* and go into rows #1,2,3 */
                                for (r = -1; r <= 1; r += 2) {
                                    P[0][i - 1] = p;
                                    P[1][j - 1] = q;
                                    P[2][k - 1] = r;
                                    detP = this.nifti_mat33_determ(P);           /* sign of permutation */
                                    if ((detP * detQ) > 0.0) {
                                        M = this.nifti_mat33_mul(P, Q);

                                        /* angle of M rotation = 2.0*acos(0.5*sqrt(1.0+trace(M)))       */
                                        /* we want largest trace(M) == smallest angle == M nearest to I */

                                        val = M[0][0] + M[1][1] + M[2][2]; /* trace */
                                        if (val > vbest) {
                                            vbest = val;
                                            ibest = i;
                                            jbest = j;
                                            kbest = k;
                                            pbest = p;
                                            qbest = q;
                                            rbest = r;
                                        }
                                    }  /* doesn't match sign of Q */
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    /* At this point ibest is 1 or 2 or 3; pbest is -1 or +1; etc.

     The matrix P that corresponds is the best permutation approximation
     to Q-inverse; that is, P (approximately) takes (x,y,z) coordinates
     to the (i,j,k) axes.

     For example, the first row of P (which contains pbest in column ibest)
     determines the way the i axis points relative to the anatomical
     (x,y,z) axes.  If ibest is 2, then the i axis is along the y axis,
     which is direction P2A (if pbest > 0) or A2P (if pbest < 0).

     So, using ibest and pbest, we can assign the output code for
     the i axis.  Mutatis mutandis for the j and k axes, of course. */

    iChar = jChar = kChar = iSense = jSense = kSense = 0;

    switch (ibest * pbest) {
        case 1: /*i = NIFTI_L2R*/
            iChar = 'X';
            iSense = '+';
            break;
        case -1: /*i = NIFTI_R2L*/
            iChar = 'X';
            iSense = '-';
            break;
        case 2: /*i = NIFTI_P2A*/
            iChar = 'Y';
            iSense = '+';
            break;
        case -2: /*i = NIFTI_A2P*/
            iChar = 'Y';
            iSense = '-';
            break;
        case 3: /*i = NIFTI_I2S*/
            iChar = 'Z';
            iSense = '+';
            break;
        case -3: /*i = NIFTI_S2I*/
            iChar = 'Z';
            iSense = '-';
            break;
    }

    switch (jbest * qbest) {
        case 1: /*j = NIFTI_L2R*/
            jChar = 'X';
            jSense = '+';
            break;
        case -1: /*j = NIFTI_R2L*/
            jChar = 'X';
            jSense = '-';
            break;
        case 2: /*j = NIFTI_P2A*/
            jChar = 'Y';
            jSense = '+';
            break;
        case -2: /*j = NIFTI_A2P*/
            jChar = 'Y';
            jSense = '-';
            break;
        case 3: /*j = NIFTI_I2S*/
            jChar = 'Z';
            jSense = '+';
            break;
        case -3: /*j = NIFTI_S2I*/
            jChar = 'Z';
            jSense = '-';
            break;
    }

    switch (kbest * rbest) {
        case 1: /*k = NIFTI_L2R*/
            kChar = 'X';
            kSense = '+';
            break;
        case -1: /*k = NIFTI_R2L*/
            kChar = 'X';
            kSense = '-';
            break;
        case 2: /*k = NIFTI_P2A*/
            kChar = 'Y';
            kSense = '+';
            break;
        case -2: /*k = NIFTI_A2P*/
            kChar = 'Y';
            kSense = '-';
            break;
        case 3: /*k = NIFTI_I2S*/
            kChar = 'Z';
            kSense = '+';
            break;
        case -3: /*k = NIFTI_S2I*/
            kChar = 'Z';
            kSense = '-';
            break;
    }

    return (iChar + jChar + kChar + iSense + jSense + kSense);
};



nifti.NIFTI1.prototype.nifti_mat33_mul = function (A, B) {
    var C = [[0, 0, 0], [0, 0, 0], [0, 0, 0]],
        i,
        j;

    for (i = 0; i < 3; i += 1) {
        for (j = 0; j < 3; j += 1) {
            C[i][j] =  A[i][0] * B[0][j]  + A[i][1] * B[1][j] + A[i][2] * B[2][j];
        }
    }

    return C;
};



nifti.NIFTI1.prototype.nifti_mat33_determ = function (R) {
    var r11, r12, r13, r21, r22, r23, r31, r32, r33;
    /*  INPUT MATRIX:  */
    r11 = R[0][0];
    r12 = R[0][1];
    r13 = R[0][2];
    r21 = R[1][0];
    r22 = R[1][1];
    r23 = R[1][2];
    r31 = R[2][0];
    r32 = R[2][1];
    r33 = R[2][2];

    return (r11 * r22 * r33 - r11 * r32 * r23 - r21 * r12 * r33 + r21 * r32 * r13 + r31 * r12 * r23 - r31 * r22 * r13);
};


/**
 * Returns the byte index of the extension.
 * @returns {number}
 */
nifti.NIFTI1.prototype.getExtensionLocation = function() {
    return nifti.NIFTI1.MAGIC_COOKIE + 4;
};


/**
 * Returns the extension size.
 * @param {DataView} data
 * @returns {number}
 */
nifti.NIFTI1.prototype.getExtensionSize = function(data) {
    return nifti.Utils.getIntAt(data, this.getExtensionLocation(), this.littleEndian);
};



/**
 * Returns the extension code.
 * @param {DataView} data
 * @returns {number}
 */
nifti.NIFTI1.prototype.getExtensionCode = function(data) {
    return nifti.Utils.getIntAt(data, this.getExtensionLocation() + 4, this.littleEndian);
};



/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = nifti.NIFTI1;
}


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/

var nifti = nifti || {};
nifti.Utils = nifti.Utils || {};



/*** Static Pseudo-constants ***/

nifti.Utils.crcTable = null;
nifti.Utils.GUNZIP_MAGIC_COOKIE1 = 31;
nifti.Utils.GUNZIP_MAGIC_COOKIE2 = 139;



/*** Static methods ***/

nifti.Utils.getStringAt = function (data, start, end) {
    var str = "", ctr, ch;

    for (ctr = start; ctr < end; ctr += 1) {
        ch = data.getUint8(ctr);

        if (ch !== 0) {
            str += String.fromCharCode(ch);
        }
    }

    return str;
};



nifti.Utils.getByteAt = function (data, start) {
    return data.getInt8(start);
};



nifti.Utils.getShortAt = function (data, start, littleEndian) {
    return data.getInt16(start, littleEndian);
};



nifti.Utils.getIntAt = function (data, start, littleEndian) {
    return data.getInt32(start, littleEndian);
};



nifti.Utils.getFloatAt = function (data, start, littleEndian) {
    return data.getFloat32(start, littleEndian);
};



nifti.Utils.getDoubleAt = function (data, start, littleEndian) {
    return data.getFloat64(start, littleEndian);
};



nifti.Utils.getLongAt = function (data, start, littleEndian) {
    var ctr, array = [], value = 0;

    for (ctr = 0; ctr < 8; ctr += 1) {
        array[ctr] = nifti.Utils.getByteAt(data, start + ctr, littleEndian);
    }

    for (ctr = array.length - 1; ctr >= 0; ctr--) {
        value = (value * 256) + array[ctr];
    }

    return value;
};



nifti.Utils.toArrayBuffer = function (buffer) {
    var ab, view, i;

    ab = new ArrayBuffer(buffer.length);
    view = new Uint8Array(ab);
    for (i = 0; i < buffer.length; i += 1) {
        view[i] = buffer[i];
    }
    return ab;
};



nifti.Utils.isString = function (obj) {
    return (typeof obj === "string" || obj instanceof String);
};


nifti.Utils.formatNumber = function (num, shortFormat) {
    var val = 0;

    if (nifti.Utils.isString(num)) {
        val = Number(num);
    } else {
        val = num;
    }

    if (shortFormat) {
        val = val.toPrecision(5);
    } else {
        val = val.toPrecision(7);
    }

    return parseFloat(val);
};



// http://stackoverflow.com/questions/18638900/javascript-crc32
nifti.Utils.makeCRCTable = function(){
    var c;
    var crcTable = [];
    for(var n =0; n < 256; n++){
        c = n;
        for(var k =0; k < 8; k++){
            c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
        }
        crcTable[n] = c;
    }
    return crcTable;
};



nifti.Utils.crc32 = function(dataView) {
    var crcTable = nifti.Utils.crcTable || (nifti.Utils.crcTable = nifti.Utils.makeCRCTable());
    var crc = 0 ^ (-1);

    for (var i = 0; i < dataView.byteLength; i++ ) {
        crc = (crc >>> 8) ^ crcTable[(crc ^ dataView.getUint8(i)) & 0xFF];
    }

    return (crc ^ (-1)) >>> 0;
};



/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = nifti.Utils;
}


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*jslint browser: true, node: true */
/*global */



/*** Imports ***/

var nifti = nifti || {};
nifti.Utils = nifti.Utils || (( true) ? __webpack_require__(5) : undefined);
nifti.NIFTI1 = nifti.NIFTI1 || (( true) ? __webpack_require__(4) : undefined);


/*** Constructor ***/

/**
 * The NIFTI2 constructor.
 * @constructor
 * @property {boolean} littleEndian
 * @property {number} dim_info
 * @property {number[]} dims - image dimensions
 * @property {number} intent_p1
 * @property {number} intent_p2
 * @property {number} intent_p3
 * @property {number} intent_code
 * @property {number} datatypeCode
 * @property {number} numBitsPerVoxel
 * @property {number} slice_start
 * @property {number} slice_end
 * @property {number} slice_code
 * @property {number[]} pixDims - voxel dimensions
 * @property {number} vox_offset
 * @property {number} scl_slope
 * @property {number} scl_inter
 * @property {number} xyzt_units
 * @property {number} cal_max
 * @property {number} cal_min
 * @property {number} slice_duration
 * @property {number} toffset
 * @property {string} description
 * @property {string} aux_file
 * @property {string} intent_name
 * @property {number} qform_code
 * @property {number} sform_code
 * @property {number} quatern_b
 * @property {number} quatern_c
 * @property {number} quatern_d
 * @property {number} quatern_x
 * @property {number} quatern_y
 * @property {number} quatern_z
 * @property {Array.<Array.<number>>} affine
 * @property {string} magic
 * @property {number[]} extensionFlag
 * @type {Function}
 */
nifti.NIFTI2 = nifti.NIFTI2 || function () {
    this.littleEndian = false;
    this.dim_info = 0;
    this.dims = [];
    this.intent_p1 = 0;
    this.intent_p2 = 0;
    this.intent_p3 = 0;
    this.intent_code = 0;
    this.datatypeCode = 0;
    this.numBitsPerVoxel = 0;
    this.slice_start = 0;
    this.slice_end = 0;
    this.slice_code = 0;
    this.pixDims = [];
    this.vox_offset = 0;
    this.scl_slope = 1;
    this.scl_inter = 0;
    this.xyzt_units = 0;
    this.cal_max = 0;
    this.cal_min = 0;
    this.slice_duration = 0;
    this.toffset = 0;
    this.description = "";
    this.aux_file = "";
    this.intent_name = "";
    this.qform_code = 0;
    this.sform_code = 0;
    this.quatern_b = 0;
    this.quatern_c = 0;
    this.quatern_d = 0;
    this.qoffset_x = 0;
    this.qoffset_y = 0;
    this.qoffset_z = 0;
    this.affine = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
    this.magic = 0;
    this.extensionFlag = [0, 0, 0, 0];
};



/*** Static Pseudo-constants ***/

nifti.NIFTI2.MAGIC_COOKIE = 540;
nifti.NIFTI2.MAGIC_NUMBER_LOCATION = 4;
nifti.NIFTI2.MAGIC_NUMBER = [0x6E, 0x2B, 0x32, 0, 0x0D, 0x0A, 0x1A, 0x0A];  // n+2\0



/*** Prototype Methods ***/

/**
 * Reads the header data.
 * @param {ArrayBuffer} data
 */
nifti.NIFTI2.prototype.readHeader = function (data) {
    var rawData = new DataView(data),
        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian),
        ctr,
        ctrOut,
        ctrIn,
        index,
        array;

    if (magicCookieVal !== nifti.NIFTI2.MAGIC_COOKIE) {  // try as little endian
        this.littleEndian = true;
        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian);
    }

    if (magicCookieVal !== nifti.NIFTI2.MAGIC_COOKIE) {
        throw new Error("This does not appear to be a NIFTI file!");
    }

    this.datatypeCode = nifti.Utils.getShortAt(rawData, 12, this.littleEndian);
    this.numBitsPerVoxel = nifti.Utils.getShortAt(rawData, 14, this.littleEndian);

    for (ctr = 0; ctr < 8; ctr += 1) {
        index = 16 + (ctr * 8);
        this.dims[ctr] = nifti.Utils.getLongAt(rawData, index, this.littleEndian);
    }

    this.intent_p1 = nifti.Utils.getDoubleAt(rawData, 80, this.littleEndian);
    this.intent_p2 = nifti.Utils.getDoubleAt(rawData, 88, this.littleEndian);
    this.intent_p3 = nifti.Utils.getDoubleAt(rawData, 96, this.littleEndian);

    for (ctr = 0; ctr < 8; ctr += 1) {
        index = 104 + (ctr * 8);
        this.pixDims[ctr] = nifti.Utils.getDoubleAt(rawData, index, this.littleEndian);
    }

    this.vox_offset = nifti.Utils.getLongAt(rawData, 168, this.littleEndian);

    this.scl_slope = nifti.Utils.getDoubleAt(rawData, 176, this.littleEndian);
    this.scl_inter = nifti.Utils.getDoubleAt(rawData, 184, this.littleEndian);

    this.cal_max = nifti.Utils.getDoubleAt(rawData, 192, this.littleEndian);
    this.cal_min = nifti.Utils.getDoubleAt(rawData, 200, this.littleEndian);

    this.slice_duration = nifti.Utils.getDoubleAt(rawData, 208, this.littleEndian);

    this.toffset = nifti.Utils.getDoubleAt(rawData, 216, this.littleEndian);

    this.slice_start = nifti.Utils.getLongAt(rawData, 224, this.littleEndian);
    this.slice_end = nifti.Utils.getLongAt(rawData, 232, this.littleEndian);

    this.description = nifti.Utils.getStringAt(rawData, 240, 240 + 80);
    this.aux_file = nifti.Utils.getStringAt(rawData, 320, 320 + 24);

    this.qform_code = nifti.Utils.getIntAt(rawData, 344, this.littleEndian);
    this.sform_code = nifti.Utils.getIntAt(rawData, 348, this.littleEndian);

    this.quatern_b = nifti.Utils.getDoubleAt(rawData, 352, this.littleEndian);
    this.quatern_c = nifti.Utils.getDoubleAt(rawData, 360, this.littleEndian);
    this.quatern_d = nifti.Utils.getDoubleAt(rawData, 368, this.littleEndian);
    this.qoffset_x = nifti.Utils.getDoubleAt(rawData, 376, this.littleEndian);
    this.qoffset_y = nifti.Utils.getDoubleAt(rawData, 384, this.littleEndian);
    this.qoffset_z = nifti.Utils.getDoubleAt(rawData, 392, this.littleEndian);

    for (ctrOut = 0; ctrOut < 3; ctrOut += 1) {
        for (ctrIn = 0; ctrIn < 4; ctrIn += 1) {
            index = 400 + (((ctrOut * 4) + ctrIn) * 8);
            this.affine[ctrOut][ctrIn] = nifti.Utils.getDoubleAt(rawData, index, this.littleEndian);
        }
    }

    this.affine[3][0] = 0;
    this.affine[3][1] = 0;
    this.affine[3][2] = 0;
    this.affine[3][3] = 1;

    this.slice_code = nifti.Utils.getIntAt(rawData, 496, this.littleEndian);
    this.xyzt_units = nifti.Utils.getIntAt(rawData, 500, this.littleEndian);
    this.intent_code = nifti.Utils.getIntAt(rawData, 504, this.littleEndian);
    this.intent_name = nifti.Utils.getStringAt(rawData, 508, 508 + 16);

    this.dim_info = nifti.Utils.getByteAt(rawData, 524);

    if (rawData.byteLength > nifti.NIFTI2.MAGIC_COOKIE) {
        this.extensionFlag[0] = nifti.Utils.getByteAt(rawData, 540);
        this.extensionFlag[1] = nifti.Utils.getByteAt(rawData, 540 + 1);
        this.extensionFlag[2] = nifti.Utils.getByteAt(rawData, 540 + 2);
        this.extensionFlag[3] = nifti.Utils.getByteAt(rawData, 540 + 3);

        if (this.extensionFlag[0]) {
            this.extensionSize = this.getExtensionSize(rawData);
            this.extensionCode = this.getExtensionCode(rawData);
        }
    }
};



/**
 * Returns a formatted string of header fields.
 * @returns {string}
 */
nifti.NIFTI2.prototype.toFormattedString = function () {
    var fmt = nifti.Utils.formatNumber,
        string = "";

    string += ("Datatype = " +  + this.datatypeCode + " (" + this.getDatatypeCodeString(this.datatypeCode) + ")\n");
    string += ("Bits Per Voxel = " + " = " + this.numBitsPerVoxel + "\n");
    string += ("Image Dimensions" + " (1-8): " +
        this.dims[0] + ", " +
        this.dims[1] + ", " +
        this.dims[2] + ", " +
        this.dims[3] + ", " +
        this.dims[4] + ", " +
        this.dims[5] + ", " +
        this.dims[6] + ", " +
        this.dims[7] + "\n");

    string += ("Intent Parameters (1-3): " +
        this.intent_p1 + ", " +
        this.intent_p2 + ", " +
        this.intent_p3) + "\n";

    string += ("Voxel Dimensions (1-8): " +
        fmt(this.pixDims[0]) + ", " +
        fmt(this.pixDims[1]) + ", " +
        fmt(this.pixDims[2]) + ", " +
        fmt(this.pixDims[3]) + ", " +
        fmt(this.pixDims[4]) + ", " +
        fmt(this.pixDims[5]) + ", " +
        fmt(this.pixDims[6]) + ", " +
        fmt(this.pixDims[7]) + "\n");

    string += ("Image Offset = " + this.vox_offset + "\n");
    string += ("Data Scale:  Slope = " + fmt(this.scl_slope) + "  Intercept = " + fmt(this.scl_inter) + "\n");
    string += ("Display Range:  Max = " + fmt(this.cal_max) + "  Min = " + fmt(this.cal_min) + "\n");
    string += ("Slice Duration = " + this.slice_duration + "\n");
    string += ("Time Axis Shift = " + this.toffset + "\n");
    string += ("Slice Start = " + this.slice_start + "\n");
    string += ("Slice End = " + this.slice_end + "\n");
    string += ("Description: \"" + this.description + "\"\n");
    string += ("Auxiliary File: \"" + this.aux_file + "\"\n");
    string += ("Q-Form Code = " + this.qform_code + " (" + this.getTransformCodeString(this.qform_code) + ")\n");
    string += ("S-Form Code = " + this.sform_code + " (" + this.getTransformCodeString(this.sform_code) + ")\n");
    string += ("Quaternion Parameters:  " +
    "b = " + fmt(this.quatern_b) + "  " +
    "c = " + fmt(this.quatern_c) + "  " +
    "d = " + fmt(this.quatern_d) + "\n");

    string += ("Quaternion Offsets:  " +
    "x = " + this.qoffset_x + "  " +
    "y = " + this.qoffset_y + "  " +
    "z = " + this.qoffset_z + "\n");

    string += ("S-Form Parameters X: " +
    fmt(this.affine[0][0]) + ", " +
    fmt(this.affine[0][1]) + ", " +
    fmt(this.affine[0][2]) + ", " +
    fmt(this.affine[0][3]) + "\n");

    string += ("S-Form Parameters Y: " +
    fmt(this.affine[1][0]) + ", " +
    fmt(this.affine[1][1]) + ", " +
    fmt(this.affine[1][2]) + ", " +
    fmt(this.affine[1][3]) + "\n");

    string += ("S-Form Parameters Z: " +
    fmt(this.affine[2][0]) + ", " +
    fmt(this.affine[2][1]) + ", " +
    fmt(this.affine[2][2]) + ", " +
    fmt(this.affine[2][3]) + "\n");

    string += ("Slice Code = " + this.slice_code + "\n");
    string += ("Units Code = " + this.xyzt_units + " (" + this.getUnitsCodeString(nifti.NIFTI1.SPATIAL_UNITS_MASK & this.xyzt_units) + ", " + this.getUnitsCodeString(nifti.NIFTI1.TEMPORAL_UNITS_MASK & this.xyzt_units) + ")\n");
    string += ("Intent Code = " + this.intent_code + "\n");
    string += ("Intent Name: \"" + this.intent_name + "\"\n");

    string += ("Dim Info = " + this.dim_info + "\n");

    return string;
};



/**
 * Returns the byte index of the extension.
 * @returns {number}
 */
nifti.NIFTI2.prototype.getExtensionLocation = function() {
    return nifti.NIFTI2.MAGIC_COOKIE + 4;
};



/**
 * Returns the extension size.
 * @param {DataView} data
 * @returns {number}
 */
nifti.NIFTI2.prototype.getExtensionSize = nifti.NIFTI1.prototype.getExtensionSize;



/**
 * Returns the extension code.
 * @param {DataView} data
 * @returns {number}
 */
nifti.NIFTI2.prototype.getExtensionCode = nifti.NIFTI1.prototype.getExtensionCode;



/**
 * Returns a human-readable string of datatype.
 * @param {number} code
 * @returns {string}
 */
nifti.NIFTI2.prototype.getDatatypeCodeString = nifti.NIFTI1.prototype.getDatatypeCodeString;



/**
 * Returns a human-readable string of transform type.
 * @param {number} code
 * @returns {string}
 */
nifti.NIFTI2.prototype.getTransformCodeString = nifti.NIFTI1.prototype.getTransformCodeString;



/**
 * Returns a human-readable string of spatial and temporal units.
 * @param {number} code
 * @returns {string}
 */
nifti.NIFTI2.prototype.getUnitsCodeString = nifti.NIFTI1.prototype.getUnitsCodeString;



/**
 * Returns the qform matrix.
 * @returns {Array.<Array.<number>>}
 */
nifti.NIFTI2.prototype.getQformMat = nifti.NIFTI1.prototype.getQformMat;



/**
 * Converts qform to an affine.  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)
 * @param {number} qb
 * @param {number} qc
 * @param {number} qd
 * @param {number} qx
 * @param {number} qy
 * @param {number} qz
 * @param {number} dx
 * @param {number} dy
 * @param {number} dz
 * @param {number} qfac
 * @returns {Array.<Array.<number>>}
 */
nifti.NIFTI2.prototype.convertNiftiQFormToNiftiSForm = nifti.NIFTI1.prototype.convertNiftiQFormToNiftiSForm;



/**
 * Converts sform to an orientation string (e.g., XYZ+--).  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)
 * @param {Array.<Array.<number>>} R
 * @returns {string}
 */
nifti.NIFTI2.prototype.convertNiftiSFormToNEMA = nifti.NIFTI1.prototype.convertNiftiSFormToNEMA;



nifti.NIFTI2.prototype.nifti_mat33_mul = nifti.NIFTI1.prototype.nifti_mat33_mul;



nifti.NIFTI2.prototype.nifti_mat33_determ = nifti.NIFTI1.prototype.nifti_mat33_determ;



/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = nifti.NIFTI2;
}


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Top level file is just a mixin of submodules & constants


var assign    = __webpack_require__(8).assign;

var deflate   = __webpack_require__(9);
var inflate   = __webpack_require__(17);
var constants = __webpack_require__(21);

var pako = {};

assign(pako, deflate, inflate, constants);

module.exports = pako;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');

function _has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var zlib_deflate = __webpack_require__(10);
var utils        = __webpack_require__(8);
var strings      = __webpack_require__(15);
var msg          = __webpack_require__(14);
var ZStream      = __webpack_require__(16);

var toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

var Z_NO_FLUSH      = 0;
var Z_FINISH        = 4;

var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_SYNC_FLUSH    = 2;

var Z_DEFAULT_COMPRESSION = -1;

var Z_DEFAULT_STRATEGY    = 0;

var Z_DEFLATED  = 8;

/* ===========================================================================*/


/**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **/

/* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overridden.
 **/

/**
 * Deflate.result -> Uint8Array|Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you
 * push a chunk with explicit flush (call [[Deflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **/

/**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **/


/**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/
function Deflate(options) {
  if (!(this instanceof Deflate)) return new Deflate(options);

  this.options = utils.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY,
    to: ''
  }, options || {});

  var opt = this.options;

  if (opt.raw && (opt.windowBits > 0)) {
    opt.windowBits = -opt.windowBits;
  }

  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {
    opt.windowBits += 16;
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm = new ZStream();
  this.strm.avail_out = 0;

  var status = zlib_deflate.deflateInit2(
    this.strm,
    opt.level,
    opt.method,
    opt.windowBits,
    opt.memLevel,
    opt.strategy
  );

  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }

  if (opt.header) {
    zlib_deflate.deflateSetHeader(this.strm, opt.header);
  }

  if (opt.dictionary) {
    var dict;
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      // If we need to compress text, change encoding to utf8.
      dict = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      dict = new Uint8Array(opt.dictionary);
    } else {
      dict = opt.dictionary;
    }

    status = zlib_deflate.deflateSetDictionary(this.strm, dict);

    if (status !== Z_OK) {
      throw new Error(msg[status]);
    }

    this._dict_set = true;
  }
}

/**
 * Deflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the compression context.
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * array format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Deflate.prototype.push = function (data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var status, _mode;

  if (this.ended) { return false; }

  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // If we need to compress text, change encoding to utf8.
    strm.input = strings.string2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }
    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */

    if (status !== Z_STREAM_END && status !== Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }
    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {
      if (this.options.to === 'string') {
        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));
      } else {
        this.onData(utils.shrinkBuf(strm.output, strm.next_out));
      }
    }
  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);

  // Finalize on the last chunk.
  if (_mode === Z_FINISH) {
    status = zlib_deflate.deflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === Z_SYNC_FLUSH) {
    this.onEnd(Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): output data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Deflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Deflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === Z_OK) {
    if (this.options.to === 'string') {
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * deflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate algorithm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 * - dictionary
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/
function deflate(input, options) {
  var deflator = new Deflate(options);

  deflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }

  return deflator.result;
}


/**
 * deflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function deflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return deflate(input, options);
}


/**
 * gzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/
function gzip(input, options) {
  options = options || {};
  options.gzip = true;
  return deflate(input, options);
}


exports.Deflate = Deflate;
exports.deflate = deflate;
exports.deflateRaw = deflateRaw;
exports.gzip = gzip;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils   = __webpack_require__(8);
var trees   = __webpack_require__(11);
var adler32 = __webpack_require__(12);
var crc32   = __webpack_require__(13);
var msg     = __webpack_require__(14);

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only(s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);
  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
        );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
function deflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var s;
  var str, n;
  var wrap;
  var avail;
  var next;
  var input;
  var tmpDict;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  s = strm.state;
  wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    tmpDict = new utils.Buf8(s.w_size);
    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  avail = strm.avail_in;
  next = strm.next_in;
  input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    str = s.strstart;
    n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
}


exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

/* eslint-disable space-unary-ops */

var utils = __webpack_require__(8);

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


var static_l_desc;
var static_d_desc;
var static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short(s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n * 2;
  var _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc ^= -1;

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// String encode/decode helpers



var utils = __webpack_require__(8);


// Quick check if we can use fast array to bin string conversion
//
// - apply(Array) can fail on Android 2.2
// - apply(Uint8Array) can fail on iOS 5.1 Safari
//
var STR_APPLY_OK = true;
var STR_APPLY_UIA_OK = true;

try { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }
try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }


// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
var _utf8len = new utils.Buf8(256);
for (var q = 0; q < 256; q++) {
  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);
}
_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start


// convert string to array (typed, when possible)
exports.string2buf = function (str) {
  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;

  // count binary size
  for (m_pos = 0; m_pos < str_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
  }

  // allocate buffer
  buf = new utils.Buf8(buf_len);

  // convert
  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    if (c < 0x80) {
      /* one byte */
      buf[i++] = c;
    } else if (c < 0x800) {
      /* two bytes */
      buf[i++] = 0xC0 | (c >>> 6);
      buf[i++] = 0x80 | (c & 0x3f);
    } else if (c < 0x10000) {
      /* three bytes */
      buf[i++] = 0xE0 | (c >>> 12);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    } else {
      /* four bytes */
      buf[i++] = 0xf0 | (c >>> 18);
      buf[i++] = 0x80 | (c >>> 12 & 0x3f);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    }
  }

  return buf;
};

// Helper (used in 2 places)
function buf2binstring(buf, len) {
  // On Chrome, the arguments in a function call that are allowed is `65534`.
  // If the length of the buffer is smaller than that, we can use this optimization,
  // otherwise we will take a slower path.
  if (len < 65534) {
    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {
      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));
    }
  }

  var result = '';
  for (var i = 0; i < len; i++) {
    result += String.fromCharCode(buf[i]);
  }
  return result;
}


// Convert byte array to binary string
exports.buf2binstring = function (buf) {
  return buf2binstring(buf, buf.length);
};


// Convert binary string (typed, when possible)
exports.binstring2buf = function (str) {
  var buf = new utils.Buf8(str.length);
  for (var i = 0, len = buf.length; i < len; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
};


// convert array to string
exports.buf2string = function (buf, max) {
  var i, out, c, c_len;
  var len = max || buf.length;

  // Reserve max possible length (2 words per char)
  // NB: by unknown reasons, Array is significantly faster for
  //     String.fromCharCode.apply than Uint16Array.
  var utf16buf = new Array(len * 2);

  for (out = 0, i = 0; i < len;) {
    c = buf[i++];
    // quick process ascii
    if (c < 0x80) { utf16buf[out++] = c; continue; }

    c_len = _utf8len[c];
    // skip 5 & 6 byte codes
    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }

    // apply mask on first byte
    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
    // join the rest
    while (c_len > 1 && i < len) {
      c = (c << 6) | (buf[i++] & 0x3f);
      c_len--;
    }

    // terminated by end of string?
    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }

    if (c < 0x10000) {
      utf16buf[out++] = c;
    } else {
      c -= 0x10000;
      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
      utf16buf[out++] = 0xdc00 | (c & 0x3ff);
    }
  }

  return buf2binstring(utf16buf, out);
};


// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
exports.utf8border = function (buf, max) {
  var pos;

  max = max || buf.length;
  if (max > buf.length) { max = buf.length; }

  // go back from last position, until start of sequence found
  pos = max - 1;
  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }

  // Very small and broken sequence,
  // return max, because we should return something anyway.
  if (pos < 0) { return max; }

  // If we came to start of buffer - that means buffer is too small,
  // return max too.
  if (pos === 0) { return max; }

  return (pos + _utf8len[buf[pos]] > max) ? pos : max;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var zlib_inflate = __webpack_require__(18);
var utils        = __webpack_require__(8);
var strings      = __webpack_require__(15);
var c            = __webpack_require__(21);
var msg          = __webpack_require__(14);
var ZStream      = __webpack_require__(16);
var GZheader     = __webpack_require__(22);

var toString = Object.prototype.toString;

/**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **/

/* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overridden.
 **/

/**
 * Inflate.result -> Uint8Array|Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you
 * push a chunk with explicit flush (call [[Inflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **/

/**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **/


/**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/
function Inflate(options) {
  if (!(this instanceof Inflate)) return new Inflate(options);

  this.options = utils.assign({
    chunkSize: 16384,
    windowBits: 0,
    to: ''
  }, options || {});

  var opt = this.options;

  // Force window size for `raw` data, if not set directly,
  // because we have no header for autodetect.
  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {
    opt.windowBits = -opt.windowBits;
    if (opt.windowBits === 0) { opt.windowBits = -15; }
  }

  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&
      !(options && options.windowBits)) {
    opt.windowBits += 32;
  }

  // Gzip header has no info about windows size, we can do autodetect only
  // for deflate. So, if window size not set, force it to max when gzip possible
  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {
    // bit 3 (16) -> gzipped data
    // bit 4 (32) -> autodetect gzip/deflate
    if ((opt.windowBits & 15) === 0) {
      opt.windowBits |= 15;
    }
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm   = new ZStream();
  this.strm.avail_out = 0;

  var status  = zlib_inflate.inflateInit2(
    this.strm,
    opt.windowBits
  );

  if (status !== c.Z_OK) {
    throw new Error(msg[status]);
  }

  this.header = new GZheader();

  zlib_inflate.inflateGetHeader(this.strm, this.header);

  // Setup dictionary
  if (opt.dictionary) {
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      opt.dictionary = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      opt.dictionary = new Uint8Array(opt.dictionary);
    }
    if (opt.raw) { //In raw mode we need to set the dictionary early
      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);
      if (status !== c.Z_OK) {
        throw new Error(msg[status]);
      }
    }
  }
}

/**
 * Inflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the decompression context.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Inflate.prototype.push = function (data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var dictionary = this.options.dictionary;
  var status, _mode;
  var next_out_utf8, tail, utf8str;

  // Flag to properly process Z_BUF_ERROR on testing inflate call
  // when we check that all output data was flushed.
  var allowBufError = false;

  if (this.ended) { return false; }
  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // Only binary strings can be decompressed on practice
    strm.input = strings.binstring2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */

    if (status === c.Z_NEED_DICT && dictionary) {
      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);
    }

    if (status === c.Z_BUF_ERROR && allowBufError === true) {
      status = c.Z_OK;
      allowBufError = false;
    }

    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }

    if (strm.next_out) {
      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {

        if (this.options.to === 'string') {

          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);

          tail = strm.next_out - next_out_utf8;
          utf8str = strings.buf2string(strm.output, next_out_utf8);

          // move tail
          strm.next_out = tail;
          strm.avail_out = chunkSize - tail;
          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }

          this.onData(utf8str);

        } else {
          this.onData(utils.shrinkBuf(strm.output, strm.next_out));
        }
      }
    }

    // When no more input data, we should check that internal inflate buffers
    // are flushed. The only way to do it when avail_out = 0 - run one more
    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.
    // Here we set flag to process this error properly.
    //
    // NOTE. Deflate does not return error in this case and does not needs such
    // logic.
    if (strm.avail_in === 0 && strm.avail_out === 0) {
      allowBufError = true;
    }

  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);

  if (status === c.Z_STREAM_END) {
    _mode = c.Z_FINISH;
  }

  // Finalize on the last chunk.
  if (_mode === c.Z_FINISH) {
    status = zlib_inflate.inflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === c.Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === c.Z_SYNC_FLUSH) {
    this.onEnd(c.Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): output data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Inflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Inflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === c.Z_OK) {
    if (this.options.to === 'string') {
      // Glue & convert here, until we teach pako to send
      // utf8 aligned strings to onData
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * inflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])
 *   , output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err)
 *   console.log(err);
 * }
 * ```
 **/
function inflate(input, options) {
  var inflator = new Inflate(options);

  inflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }

  return inflator.result;
}


/**
 * inflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function inflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return inflate(input, options);
}


/**
 * ungzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/


exports.Inflate = Inflate;
exports.inflate = inflate;
exports.inflateRaw = inflateRaw;
exports.ungzip  = inflate;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils         = __webpack_require__(8);
var adler32       = __webpack_require__(12);
var crc32         = __webpack_require__(13);
var inflate_fast  = __webpack_require__(19);
var inflate_table = __webpack_require__(20);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function zswap32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window, src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window, src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        state.flags = 0;           /* expect zlib header */
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        else if (len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }
        state.dmax = 1 << len;
        //Tracev((stderr, "inflate:   zlib header ok\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if (state.flags & 0x0200) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Array(state.head.extra_len);
              }
              utils.arraySet(
                state.head.extra,
                input,
                next,
                // extra field is limited to 65536 bytes
                // - no need for additional size check
                copy,
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if (state.flags & 0x0200) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          utils.arraySet(output, input, next, copy, put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inflate_fast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\n" :
          //        "inflate:         literal 0x%02x\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if (_out) {
            strm.adler = state.check =
                /*UPDATE(state.check, put - _out, _out);*/
                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}

function inflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var state;
  var dictid;
  var ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK;
}

exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  var s_window;               /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils = __webpack_require__(8);

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function GZheader() {
  /* true if compressed data believed to be text */
  this.text       = 0;
  /* modification time */
  this.time       = 0;
  /* extra flags (not used when writing a gzip file) */
  this.xflags     = 0;
  /* operating system */
  this.os         = 0;
  /* pointer to extra field or Z_NULL if none */
  this.extra      = null;
  /* extra field length (valid if extra != Z_NULL) */
  this.extra_len  = 0; // Actually, we don't need it in JS,
                       // but leave for few code modifications

  //
  // Setup limits is not necessary because in js we should not preallocate memory
  // for inflate use constant limit in 65536 bytes
  //

  /* space at extra (only when reading header) */
  // this.extra_max  = 0;
  /* pointer to zero-terminated file name or Z_NULL */
  this.name       = '';
  /* space at name (only when reading header) */
  // this.name_max   = 0;
  /* pointer to zero-terminated comment or Z_NULL */
  this.comment    = '';
  /* space at comment (only when reading header) */
  // this.comm_max   = 0;
  /* true if there was or will be a header crc */
  this.hcrc       = 0;
  /* true when done reading gzip header (not used when writing a gzip file) */
  this.done       = false;
}

module.exports = GZheader;


/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compress", function() { return compress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decompress", function() { return decompress; });
/* eslint-disable no-plusplus, prefer-destructuring */
const compress = buffer => {
  let maxValue = -100000;
  let minValue = 100000;
  const l = [];
  let count = 0;
  let value = 0;

  const newPair = newValue => {
    if (count === 0) {
      return;
    }
    l.push([count, value]);
    count = 1;
    value = newValue;
  };

  for (let i = 0; i < buffer.length; i++) {
    if (count === 0) {
      count++;
      value = buffer[i];
    } else if (value === buffer[i]) {
      if (count === 255) {
        newPair(value);
      } else {
        count++;
      }
    } else {
      newPair(buffer[i]);
    }
    if (maxValue < buffer[i]) {
      maxValue = buffer[i];
    }
    if (minValue > buffer[i]) {
      minValue = buffer[i];
    }
  }
  if (minValue < 0 || maxValue > 255) {
    console.log(minValue, maxValue);
    throw new Error('Only support mask value in [0, 255]');
  }
  newPair();
  console.log('pair count', l.length);
  const out = new Uint8Array(l.length * 2);
  for (let i = 0; i < l.length; i++) {
    out[i * 2] = l[i][0];
    out[i * 2 + 1] = l[i][1];
  }
  return out;
};

const decompress = (buffer, size, TypeArray = Uint8Array) => {
  const out = new TypeArray(size);
  let c = 0;
  for (let i = 0; i < buffer.length; i += 2) {
    const count = buffer[i];
    const value = buffer[i + 1];
    for (let j = 0; j < count; j++) {
      out[c++] = value;
    }
  }
  return out;
};




/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "writeImage", function() { return writeImage; });
/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pako__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cc_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var _cc_loader__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cc_loader__WEBPACK_IMPORTED_MODULE_1__);


// only support nifti1.
var DataType;

(function (DataType) {
  DataType[DataType["TYPE_BINARY"] = 1] = "TYPE_BINARY";
  DataType[DataType["TYPE_UINT8"] = 2] = "TYPE_UINT8";
  DataType[DataType["TYPE_INT16"] = 4] = "TYPE_INT16";
  DataType[DataType["TYPE_INT32"] = 8] = "TYPE_INT32";
  DataType[DataType["TYPE_FLOAT32"] = 16] = "TYPE_FLOAT32";
  DataType[DataType["TYPE_COMPLEX64"] = 32] = "TYPE_COMPLEX64";
  DataType[DataType["TYPE_FLOAT64"] = 64] = "TYPE_FLOAT64";
  DataType[DataType["TYPE_RGB24"] = 128] = "TYPE_RGB24";
  DataType[DataType["TYPE_INT8"] = 256] = "TYPE_INT8";
  DataType[DataType["TYPE_UINT16"] = 512] = "TYPE_UINT16";
  DataType[DataType["TYPE_UINT32"] = 768] = "TYPE_UINT32";
  DataType[DataType["TYPE_INT64"] = 1024] = "TYPE_INT64";
  DataType[DataType["TYPE_UINT64"] = 1280] = "TYPE_UINT64";
  DataType[DataType["TYPE_FLOAT128"] = 1536] = "TYPE_FLOAT128";
  DataType[DataType["TYPE_COMPLEX128"] = 1792] = "TYPE_COMPLEX128";
  DataType[DataType["TYPE_COMPLEX256"] = 2048] = "TYPE_COMPLEX256";
})(DataType || (DataType = {}));

var UnitCode;

(function (UnitCode) {
  UnitCode[UnitCode["UNITS_MM"] = 2] = "UNITS_MM";
})(UnitCode || (UnitCode = {}));

const MAGIC_COOKIE = 348;
const STANDARD_HEADER_SIZE = 348;
const MAGIC_NUMBER_LOCATION = 344;
const MAGIC_NUMBER = [0x6e, 0x2b, 0x31]; // n + 1

const descFromArray = array => {
  if (array instanceof Uint8Array) {
    return {
      code: DataType.TYPE_UINT8,
      bytesPerElement: 1
    };
  }

  if (array instanceof Int16Array) {
    return {
      code: DataType.TYPE_INT16,
      bytesPerElement: 2
    };
  }

  if (array instanceof Int32Array) {
    return {
      code: DataType.TYPE_INT32,
      bytesPerElement: 4
    };
  }

  if (array instanceof Float32Array) {
    return {
      code: DataType.TYPE_FLOAT32,
      bytesPerElement: 4
    };
  }

  if (array instanceof Float64Array) {
    return {
      code: DataType.TYPE_FLOAT64,
      bytesPerElement: 8
    };
  }

  if (array instanceof Int8Array) {
    return {
      code: DataType.TYPE_INT8,
      bytesPerElement: 1
    };
  }

  if (array instanceof Uint16Array) {
    return {
      code: DataType.TYPE_UINT16,
      bytesPerElement: 2
    };
  }

  if (array instanceof Uint32Array) {
    return {
      code: DataType.TYPE_UINT32,
      bytesPerElement: 4
    };
  }

  throw new Error('NotImplemented');
}; // nifti format: https://brainder.org/2012/09/23/the-nifti-file-format/


function writeHeader(ab, image, desc) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const niftiHeader = image.niftiHeader;
  const littleEndian = niftiHeader ? niftiHeader.littleEndian : true;
  const dataView = new DataView(ab);
  dataView.setInt32(0, MAGIC_COOKIE, littleEndian); // magic

  const dims = [3, image.info.size[0], image.info.size[1], image.info.size[2], 1, 1, 1, 1];

  if (niftiHeader) {
    dataView.setInt8(39, niftiHeader.dim_info);
  }

  dims.forEach((v, i) => dataView.setInt16(40 + i * 2, v, littleEndian)); // dims

  if (niftiHeader) {
    dataView.setFloat32(56, niftiHeader.intent_p1, littleEndian);
    dataView.setFloat32(60, niftiHeader.intent_p2, littleEndian);
    dataView.setFloat32(64, niftiHeader.intent_p3, littleEndian);
    dataView.setInt16(68, niftiHeader.intent_code, littleEndian);
  }

  dataView.setInt16(70, desc.code, littleEndian); // datatypeCode

  dataView.setInt16(72, desc.bytesPerElement * 8, littleEndian); // numBitsPerVoxel

  if (niftiHeader) {
    dataView.setInt16(74, niftiHeader.slice_start, littleEndian);
  }

  const pixelDims = [1, image.info.spacing[0], image.info.spacing[1], image.info.spacing[2], 0, 0, 0, 0];
  pixelDims.forEach((v, i) => dataView.setFloat32(76 + i * 4, v, littleEndian)); // pixDims

  dataView.setFloat32(108, STANDARD_HEADER_SIZE + 4, littleEndian); // vox_offset

  dataView.setFloat32(112, niftiHeader ? niftiHeader.scl_slope : 1, littleEndian); // scl_slope

  dataView.setFloat32(116, niftiHeader ? niftiHeader.scl_inter : 0, littleEndian); // scl_inter

  if (niftiHeader) {
    dataView.setInt16(120, niftiHeader.slice_end, littleEndian);
    dataView.setInt8(122, niftiHeader.slice_code);
  }

  dataView.setInt8(123, niftiHeader ? niftiHeader.xyzt_units : UnitCode.UNITS_MM); // xyzt_units

  if (niftiHeader) {
    dataView.setFloat32(124, niftiHeader.cal_max, littleEndian);
    dataView.setFloat32(128, niftiHeader.cal_min, littleEndian);
    dataView.setFloat32(132, niftiHeader.slice_duration, littleEndian);
    dataView.setFloat32(136, niftiHeader.toffset, littleEndian); // ignore description and aux_file
  }

  dataView.setInt16(252, niftiHeader ? niftiHeader.qform_code : 1, littleEndian); // qform_code

  dataView.setInt16(254, niftiHeader ? niftiHeader.sform_code : 1, littleEndian); // sform_code

  const transform = niftiHeader ? [niftiHeader.quatern_b, niftiHeader.quatern_c, niftiHeader.quatern_d, niftiHeader.qoffset_x, niftiHeader.qoffset_y, niftiHeader.qoffset_z] : [0, 0, 1, image.info.origin[0], image.info.origin[1], image.info.origin[2]]; // b, c, d, x, y, z

  transform.forEach((v, i) => dataView.setFloat32(256 + i * 4, v, littleEndian));

  if (niftiHeader) {
    // affine
    niftiHeader.affine[0].forEach((v, i) => dataView.setFloat32(280 + i * 4, v, littleEndian));
    niftiHeader.affine[1].forEach((v, i) => dataView.setFloat32(296 + i * 4, v, littleEndian));
    niftiHeader.affine[2].forEach((v, i) => dataView.setFloat32(312 + i * 4, v, littleEndian));
  }

  MAGIC_NUMBER.forEach((v, i) => dataView.setInt8(MAGIC_NUMBER_LOCATION + i, v));
}

async function writeContent(ab, image) {
  const layerSize = image.info.size[0] * image.info.size[1];
  let p = 0;

  for (let i = 0; i < image.info.size[2]; i++) {
    // eslint-disable-next-line no-await-in-loop
    const image2 = await image.getAxial(i);

    for (let j = 0; j < layerSize; j++) {
      // eslint-disable-next-line no-param-reassign
      ab[p++] = image2.pixel[j];
    }
  }
}

const createImg3 = (buffer, info, niftiHeader) => {
  const img3 = new _cc_loader__WEBPACK_IMPORTED_MODULE_1__["image"].Image3D(info, new _cc_loader__WEBPACK_IMPORTED_MODULE_1__["nifti"].NiftiCache(buffer, info), Uint8Array);
  img3.niftiHeader = niftiHeader;
  return img3;
};

async function writeImage(size, origin, spacing, niftiHeader, buffer, compressed) {
  // eslint-disable-next-line new-cap
  // const newbuffer = new Uint8Array(buffer.byteLength);
  // for (let i = 0; i < buffer.byteLength; i += 1) {
  //   newbuffer[i] = buffer[i];
  // }
  const creator = Uint8Array;
  const image = createImg3(buffer, {
    origin,
    spacing,
    size
  }, niftiHeader);
  const tmp = new creator(1);
  const desc = descFromArray(tmp);
  const {
    info
  } = image;
  const length = STANDARD_HEADER_SIZE + 4 + desc.bytesPerElement * info.size[0] * info.size[1] * info.size[2];
  const ab = new ArrayBuffer(length); // write header
  // write content

  writeHeader(ab, image, desc); // eslint-disable-next-line new-cap

  await writeContent(new creator(ab, STANDARD_HEADER_SIZE + 4), image);

  if (compressed) {
    return pako__WEBPACK_IMPORTED_MODULE_0___default.a.gzip(new Uint8Array(ab)).buffer;
  }

  return ab;
}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var _exportNames = {
  image: true,
  vtp: true,
  rle: true,
  worklist: true,
  dicom: true,
  nifti: true,
  centerline: true
};
exports.centerline = exports.nifti = exports.dicom = exports.worklist = exports.rle = exports.vtp = exports.image = void 0;

var image = _interopRequireWildcard(__webpack_require__(26));

exports.image = image;

var vtp = _interopRequireWildcard(__webpack_require__(698));

exports.vtp = vtp;

var rle = _interopRequireWildcard(__webpack_require__(709));

exports.rle = rle;

var worklist = _interopRequireWildcard(__webpack_require__(720));

exports.worklist = worklist;

var dicom = _interopRequireWildcard(__webpack_require__(964));

exports.dicom = dicom;

var nifti = _interopRequireWildcard(__webpack_require__(713));

exports.nifti = nifti;

var centerline = _interopRequireWildcard(__webpack_require__(992));

exports.centerline = centerline;

var _core = __webpack_require__(30);

Object.keys(_core).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _core[key];
});

var _api = __webpack_require__(996);

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _api[key];
});

var _url = __webpack_require__(998);

Object.keys(_url).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _url[key];
});

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _types = __webpack_require__(27);

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _types[key];
});

var _image = __webpack_require__(28);

Object.keys(_image).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _image[key];
});

var _image2 = __webpack_require__(29);

Object.keys(_image2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _image2[key];
});

var _imagecache = __webpack_require__(686);

Object.keys(_imagecache).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _imagecache[key];
});

var _image2dspaceinfo = __webpack_require__(685);

Object.keys(_image2dspaceinfo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _image2dspaceinfo[key];
});

var _image3dspaceinfo = __webpack_require__(684);

Object.keys(_image3dspaceinfo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _image3dspaceinfo[key];
});

var _source = __webpack_require__(691);

Object.keys(_source).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _source[key];
});

var _thickimage = __webpack_require__(697);

Object.keys(_thickimage).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _thickimage[key];
});

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Image3D = void 0;

var _image = __webpack_require__(29);

var _core = __webpack_require__(30);

var _image3dspaceinfo = __webpack_require__(684);

var _errors = __webpack_require__(673);

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Image is intensity based.
var Image3D = /*#__PURE__*/function (_Resource) {
  _inheritsLoose(Image3D, _Resource);

  function Image3D(info, cache, creator) {
    var _this;

    _this = _Resource.call(this, 'image3') || this;
    _this.cache = cache;
    _this.creator = creator;

    _defineProperty(_assertThisInitialized(_this), "bytesPerElement", 0);

    _defineProperty(_assertThisInitialized(_this), "info", void 0);

    _defineProperty(_assertThisInitialized(_this), "getSagittalSync", function (index) {
      if (!_this.isAllDataReady) {
        throw new Error('getSagittalSync, the cache is not ready.');
      }

      var width = _this.size[1];
      var height = _this.size[2]; // eslint-disable-next-line new-cap

      var pixelData = new _this.creator(width * height);

      for (var i = 0; i < height; i += 1) {
        var pixels = _this.cache.getSync(height - i - 1);

        for (var j = 0; j < width; j += 1) {
          var pixel = pixels[_this.size[0] * j + index];
          pixelData[width * i + j] = pixel;
        }
      }

      return _this.createImage2({
        spacing: [_this.spacing[1], _this.spacing[2]],
        size: [_this.size[1], _this.size[2]],
        origin: [_this.origin[1], _this.origin[2]]
      }, pixelData);
    });

    _defineProperty(_assertThisInitialized(_this), "getCoronalSync", function (index) {
      if (!_this.isAllDataReady) {
        throw new Error('getCoronalSync, the cache is not ready.');
      }

      var width = _this.size[0];
      var height = _this.size[2]; // eslint-disable-next-line new-cap

      var pixelData = new _this.creator(width * height);

      for (var i = 0; i < height; i += 1) {
        var pixels = _this.cache.getSync(height - i - 1);

        var begin = width * i;

        for (var j = 0; j < width; j += 1) {
          var pixel = pixels[index * width + j];
          pixelData[begin + j] = pixel;
        }
      }

      return _this.createImage2({
        spacing: [_this.spacing[0], _this.spacing[2]],
        size: [_this.size[0], _this.size[2]],
        origin: [_this.origin[0], _this.origin[2]]
      }, pixelData);
    });

    _defineProperty(_assertThisInitialized(_this), "getAxialSync", function (index) {
      var result = _this.cache.getSync(index);

      return _this.createImage2({
        spacing: [_this.spacing[0], _this.spacing[1]],
        size: [_this.size[0], _this.size[1]],
        origin: [_this.origin[0], _this.origin[1]]
      }, _this.convertBuffer(result, _this.size[0], _this.size[1]));
    });

    _defineProperty(_assertThisInitialized(_this), "getAxial", async function (index, priority) {
      if (priority === void 0) {
        priority = _core.Priority.Medium;
      }

      await _this.cache.getAsync(index, priority);
      return _this.getAxialSync(index);
    });

    _defineProperty(_assertThisInitialized(_this), "getSagittal", async function (index) {
      if (!_this.isAllDataReady) {
        await _this.force(_core.Priority.Medium);
      }

      return _this.getSagittalSync(index);
    });

    _defineProperty(_assertThisInitialized(_this), "getCoronal", async function (index) {
      if (!_this.isAllDataReady) {
        await _this.force(_core.Priority.Medium);
      }

      return _this.getCoronalSync(index);
    });

    _this.info = new _image3dspaceinfo.Image3DSpaceInfo(info.size, info.spacing, info.origin); // eslint-disable-next-line new-cap

    var tmp = new creator(1);
    _this.bytesPerElement = tmp.byteLength / tmp.length;
    return _this;
  } // eslint-disable-next-line class-methods-use-this


  var _proto = Image3D.prototype;

  _proto.createImage2 = function createImage2(imageInfo, pixel) {
    return new _image.Image2D(imageInfo, pixel);
  };

  _proto.getAxialInfo = function getAxialInfo() {
    return this.info.getAxialInfo();
  };

  _proto.getSagittalInfo = function getSagittalInfo() {
    return this.info.getSagittalInfo();
  };

  _proto.getCoronalInfo = function getCoronalInfo() {
    return this.info.getCoronalInfo();
  } // the T of array is not reliable.
  // TODO: 暂不考虑unsigned and signed区别
  ;

  _proto.convertBuffer = function convertBuffer(array, width, height) {
    var isSameSize = array.byteLength / array.length === this.bytesPerElement;

    if (isSameSize) {
      return array;
    } // eslint-disable-next-line new-cap


    var r = new this.creator(width * height);

    for (var i = 0; i < width * height; i += 1) {
      r[i] = array[i];
    }

    return r;
  };

  _proto.isInside = function isInside(index) {
    if (index[0] < 0 || index[0] >= this.size[0]) {
      return false;
    }

    if (index[1] < 0 || index[1] >= this.size[1]) {
      return false;
    }

    if (index[2] < 0 || index[2] >= this.size[2]) {
      return false;
    }

    return true;
  };

  _proto.getIntensity = async function getIntensity(index) {
    var layer = await this.cache.getAsync(index[2], _core.Priority.Medium);
    return layer[index[0] + index[1] * this.info.size[0]];
  };

  _proto.force = async function force(priority) {
    return this.cache.force(priority);
  };

  _proto.cancelLoading = function cancelLoading() {
    this.cache.cancelLoading();
  } // write related.
  ;

  _proto.getRawPixel = function getRawPixel() {
    return this.cache.getRawPixel();
  } // eslint-disable-next-line
  ;

  _proto.writeBuffer = function writeBuffer(start, size, buffer) {
    throw new _errors.NotImplemented();
  };

  _proto.writeDiff = function writeDiff(indexArray, diffArray) {
    this.cache.writeDiff(indexArray, diffArray);
  };

  _createClass(Image3D, [{
    key: "isAllDataReady",
    get: function get() {
      return this.cache.isReady();
    }
  }, {
    key: "size",
    get: function get() {
      return this.info.size;
    }
  }, {
    key: "origin",
    get: function get() {
      return this.info.origin;
    }
  }, {
    key: "spacing",
    get: function get() {
      return this.info.spacing;
    }
  }]);

  return Image3D;
}(_core.Resource);

exports.Image3D = Image3D;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Image2D = void 0;

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Image2D = /*#__PURE__*/function () {
  _createClass(Image2D, [{
    key: "pixel",
    get: function get() {
      return this.mPixel;
    }
  }]);

  function Image2D(info, pixel) {
    this.info = info;

    _defineProperty(this, "mPixel", void 0);

    this.mPixel = pixel;
  }

  _createClass(Image2D, [{
    key: "size",
    get: function get() {
      return this.info.size;
    }
  }, {
    key: "origin",
    get: function get() {
      return this.info.origin;
    }
  }, {
    key: "spacing",
    get: function get() {
      return this.info.spacing;
    }
  }]);

  return Image2D;
}();

exports.Image2D = Image2D;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _data = __webpack_require__(31);

Object.keys(_data).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _data[key];
});

var _types = __webpack_require__(674);

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _types[key];
});

var _anyresource = __webpack_require__(675);

Object.keys(_anyresource).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _anyresource[key];
});

var _fetchermgr = __webpack_require__(677);

Object.keys(_fetchermgr).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _fetchermgr[key];
});

var _parsedata = __webpack_require__(678);

Object.keys(_parsedata).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _parsedata[key];
});

var _resource = __webpack_require__(676);

Object.keys(_resource).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _resource[key];
});

var _resourcemgr = __webpack_require__(680);

Object.keys(_resourcemgr).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _resourcemgr[key];
});

var _resourcerep = __webpack_require__(681);

Object.keys(_resourcerep).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _resourcerep[key];
});

var _scheduler = __webpack_require__(682);

Object.keys(_scheduler).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _scheduler[key];
});

var _string = __webpack_require__(672);

Object.keys(_string).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _string[key];
});

var _dataresource = __webpack_require__(679);

Object.keys(_dataresource).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _dataresource[key];
});

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Data = exports.PayLoadType = exports.DataGetInvalid = exports.DataPayloadInvalid = void 0;

var _lodashEs = __webpack_require__(32);

var _string = __webpack_require__(672);

var _errors = __webpack_require__(673);

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var DataPayloadInvalid = /*#__PURE__*/function (_BaseError) {
  _inheritsLoose(DataPayloadInvalid, _BaseError);

  function DataPayloadInvalid(data) {
    var _this;

    _this = _BaseError.call(this, 'DataInvalid', "payload invalid. payload is not " + data.type) || this;
    _this.data = data;
    return _this;
  }

  return DataPayloadInvalid;
}(_errors.BaseError);

exports.DataPayloadInvalid = DataPayloadInvalid;

var DataGetInvalid = /*#__PURE__*/function (_BaseError2) {
  _inheritsLoose(DataGetInvalid, _BaseError2);

  function DataGetInvalid(message) {
    return _BaseError2.call(this, 'DataGetInvalid', message) || this;
  }

  return DataGetInvalid;
}(_errors.BaseError);

exports.DataGetInvalid = DataGetInvalid;
var PayLoadType;
exports.PayLoadType = PayLoadType;

(function (PayLoadType) {
  PayLoadType[PayLoadType["NO_CONTENT"] = 0] = "NO_CONTENT";
  PayLoadType[PayLoadType["PAGED_CONTENT"] = 1] = "PAGED_CONTENT";
  PayLoadType[PayLoadType["STRING"] = 2] = "STRING";
  PayLoadType[PayLoadType["JSON"] = 3] = "JSON";
  PayLoadType[PayLoadType["ARRAY_BUFFER"] = 4] = "ARRAY_BUFFER";
  PayLoadType[PayLoadType["TYPED_ARRAY"] = 5] = "TYPED_ARRAY";
  PayLoadType[PayLoadType["OTHERS"] = 6] = "OTHERS";
})(PayLoadType || (exports.PayLoadType = PayLoadType = {}));

var Data = /*#__PURE__*/function () {
  _createClass(Data, [{
    key: "type",
    get: function get() {
      return this.mType;
    }
  }]);

  function Data(type, payload) {
    this.payload = payload;

    _defineProperty(this, "mType", void 0);

    this.mType = type;
    this.checkData();
  }

  var _proto = Data.prototype;

  _proto.checkData = function checkData() {
    switch (this.type) {
      case PayLoadType.STRING:
        if (!(0, _lodashEs.isString)(this.payload)) {
          throw new DataPayloadInvalid(this);
        }

        break;

      case PayLoadType.ARRAY_BUFFER:
        if (!(0, _lodashEs.isArrayBuffer)(this.payload)) {
          throw new DataPayloadInvalid(this);
        }

        break;

      case PayLoadType.TYPED_ARRAY:
        if (!(0, _lodashEs.isTypedArray)(this.payload)) {
          throw new DataPayloadInvalid(this);
        }

        break;

      case PayLoadType.JSON:
        if (!this.payload || (0, _lodashEs.isString)(this.payload) || (0, _lodashEs.isArrayBuffer)(this.payload) || (0, _lodashEs.isTypedArray)(this.payload)) {
          throw new DataPayloadInvalid(this);
        }

        break;

      case PayLoadType.NO_CONTENT:
        if (this.payload !== undefined) {
          throw new DataPayloadInvalid(this);
        }

        break;

      case PayLoadType.PAGED_CONTENT:
        if (!(0, _lodashEs.isObjectLike)(this.payload) || !(this.payload.data instanceof Data) || !(0, _lodashEs.isNumber)(this.payload.more)) {
          throw new DataPayloadInvalid(this);
        }

        break;

      default:
        break;
    }
  };

  _proto.getTypedArray = function getTypedArray() {
    if (this.type !== PayLoadType.TYPED_ARRAY) {
      throw new DataGetInvalid('data: checkTypedArray, type must be TYPED_ARRAY');
    }

    return this.payload;
  };

  _proto.getArrayBuffer = function getArrayBuffer() {
    switch (this.type) {
      case PayLoadType.ARRAY_BUFFER:
        return this.payload;

      default:
        throw new DataGetInvalid('Data: getArrayBuffer, type must be ARRAY_BUFFER');
    }
  };

  _proto.getString = function getString() {
    if (this.type === PayLoadType.STRING) {
      return this.payload;
    }

    try {
      var arrayBuffer = new Uint8Array(this.getArrayBuffer());
      var isPadded = arrayBuffer[arrayBuffer.length - 1] === 0;
      return (0, _string.ab2str)(isPadded ? arrayBuffer.slice(0, -1).buffer : arrayBuffer.buffer);
    } catch (e) {
      throw new DataGetInvalid('Data: getString, failed. ');
    }
  };

  _proto.getJson = function getJson() {
    if (this.type === PayLoadType.JSON) {
      return this.payload;
    }

    return JSON.parse(this.getString());
  };

  _proto.getAny = function getAny() {
    return this.payload;
  };

  _proto.getArray = function getArray() {
    var l = this.payload;

    if (!(0, _lodashEs.isArray)(l)) {
      l = this.getJson();
    }

    if (!(0, _lodashEs.isArray)(l)) throw new DataGetInvalid('Data::GetArray. payload is not array.');
    return l;
  };

  return Data;
}();

exports.Data = Data;

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _add_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "add", function() { return _add_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _after_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "after", function() { return _after_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _ary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(53);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ary", function() { return _ary_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _assign_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(109);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assign", function() { return _assign_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _assignIn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(136);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assignIn", function() { return _assignIn_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _assignInWith_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(140);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assignInWith", function() { return _assignInWith_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _assignWith_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(141);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assignWith", function() { return _assignWith_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _at_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(142);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "at", function() { return _at_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _attempt_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(181);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "attempt", function() { return _attempt_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _before_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(185);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "before", function() { return _before_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _bind_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(186);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bind", function() { return _bind_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _bindAll_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(187);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindAll", function() { return _bindAll_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _bindKey_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(188);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindKey", function() { return _bindKey_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _camelCase_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(189);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "camelCase", function() { return _camelCase_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _capitalize_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(190);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "capitalize", function() { return _capitalize_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _castArray_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(208);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "castArray", function() { return _castArray_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _ceil_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(209);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return _ceil_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(211);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chain", function() { return _chain_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _chunk_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(212);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chunk", function() { return _chunk_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _clamp_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(213);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clamp", function() { return _clamp_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _clone_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(215);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return _clone_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _cloneDeep_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(252);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneDeep", function() { return _cloneDeep_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _cloneDeepWith_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(253);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneDeepWith", function() { return _cloneDeepWith_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _cloneWith_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(254);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneWith", function() { return _cloneWith_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _commit_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(255);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "commit", function() { return _commit_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _compact_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(256);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compact", function() { return _compact_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(257);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _concat_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _cond_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(258);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cond", function() { return _cond_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _conforms_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(284);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conforms", function() { return _conforms_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _conformsTo_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(287);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conformsTo", function() { return _conformsTo_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(94);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "constant", function() { return _constant_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _countBy_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(288);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "countBy", function() { return _countBy_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _create_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(297);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _create_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _curry_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(298);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curry", function() { return _curry_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _curryRight_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(299);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curryRight", function() { return _curryRight_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(300);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _debounce_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _deburr_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(201);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deburr", function() { return _deburr_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _defaultTo_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(302);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultTo", function() { return _defaultTo_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(303);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaults", function() { return _defaults_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _defaultsDeep_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(304);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultsDeep", function() { return _defaultsDeep_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _defer_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(313);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return _defer_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(315);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return _delay_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _difference_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(316);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "difference", function() { return _difference_js__WEBPACK_IMPORTED_MODULE_42__["default"]; });

/* harmony import */ var _differenceBy_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(319);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceBy", function() { return _differenceBy_js__WEBPACK_IMPORTED_MODULE_43__["default"]; });

/* harmony import */ var _differenceWith_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(321);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceWith", function() { return _differenceWith_js__WEBPACK_IMPORTED_MODULE_44__["default"]; });

/* harmony import */ var _divide_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(322);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return _divide_js__WEBPACK_IMPORTED_MODULE_45__["default"]; });

/* harmony import */ var _drop_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(323);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drop", function() { return _drop_js__WEBPACK_IMPORTED_MODULE_46__["default"]; });

/* harmony import */ var _dropRight_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(324);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dropRight", function() { return _dropRight_js__WEBPACK_IMPORTED_MODULE_47__["default"]; });

/* harmony import */ var _dropRightWhile_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(325);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dropRightWhile", function() { return _dropRightWhile_js__WEBPACK_IMPORTED_MODULE_48__["default"]; });

/* harmony import */ var _dropWhile_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(327);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dropWhile", function() { return _dropWhile_js__WEBPACK_IMPORTED_MODULE_49__["default"]; });

/* harmony import */ var _each_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(328);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "each", function() { return _each_js__WEBPACK_IMPORTED_MODULE_50__["default"]; });

/* harmony import */ var _eachRight_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(331);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachRight", function() { return _eachRight_js__WEBPACK_IMPORTED_MODULE_51__["default"]; });

/* harmony import */ var _endsWith_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(337);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endsWith", function() { return _endsWith_js__WEBPACK_IMPORTED_MODULE_52__["default"]; });

/* harmony import */ var _entries_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(338);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return _entries_js__WEBPACK_IMPORTED_MODULE_53__["default"]; });

/* harmony import */ var _entriesIn_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(343);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entriesIn", function() { return _entriesIn_js__WEBPACK_IMPORTED_MODULE_54__["default"]; });

/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(112);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eq", function() { return _eq_js__WEBPACK_IMPORTED_MODULE_55__["default"]; });

/* harmony import */ var _escape_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(345);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "escape", function() { return _escape_js__WEBPACK_IMPORTED_MODULE_56__["default"]; });

/* harmony import */ var _escapeRegExp_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(347);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "escapeRegExp", function() { return _escapeRegExp_js__WEBPACK_IMPORTED_MODULE_57__["default"]; });

/* harmony import */ var _every_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(348);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "every", function() { return _every_js__WEBPACK_IMPORTED_MODULE_58__["default"]; });

/* harmony import */ var _extend_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(351);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return _extend_js__WEBPACK_IMPORTED_MODULE_59__["default"]; });

/* harmony import */ var _extendWith_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(352);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extendWith", function() { return _extendWith_js__WEBPACK_IMPORTED_MODULE_60__["default"]; });

/* harmony import */ var _fill_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(353);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fill", function() { return _fill_js__WEBPACK_IMPORTED_MODULE_61__["default"]; });

/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(356);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _filter_js__WEBPACK_IMPORTED_MODULE_62__["default"]; });

/* harmony import */ var _find_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(358);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "find", function() { return _find_js__WEBPACK_IMPORTED_MODULE_63__["default"]; });

/* harmony import */ var _findIndex_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(360);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return _findIndex_js__WEBPACK_IMPORTED_MODULE_64__["default"]; });

/* harmony import */ var _findKey_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(361);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findKey", function() { return _findKey_js__WEBPACK_IMPORTED_MODULE_65__["default"]; });

/* harmony import */ var _findLast_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(363);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findLast", function() { return _findLast_js__WEBPACK_IMPORTED_MODULE_66__["default"]; });

/* harmony import */ var _findLastIndex_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(364);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findLastIndex", function() { return _findLastIndex_js__WEBPACK_IMPORTED_MODULE_67__["default"]; });

/* harmony import */ var _findLastKey_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(365);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findLastKey", function() { return _findLastKey_js__WEBPACK_IMPORTED_MODULE_68__["default"]; });

/* harmony import */ var _first_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(366);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "first", function() { return _first_js__WEBPACK_IMPORTED_MODULE_69__["default"]; });

/* harmony import */ var _flatMap_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(368);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return _flatMap_js__WEBPACK_IMPORTED_MODULE_70__["default"]; });

/* harmony import */ var _flatMapDeep_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(371);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMapDeep", function() { return _flatMapDeep_js__WEBPACK_IMPORTED_MODULE_71__["default"]; });

/* harmony import */ var _flatMapDepth_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(372);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMapDepth", function() { return _flatMapDepth_js__WEBPACK_IMPORTED_MODULE_72__["default"]; });

/* harmony import */ var _flatten_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(177);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return _flatten_js__WEBPACK_IMPORTED_MODULE_73__["default"]; });

/* harmony import */ var _flattenDeep_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(373);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flattenDeep", function() { return _flattenDeep_js__WEBPACK_IMPORTED_MODULE_74__["default"]; });

/* harmony import */ var _flattenDepth_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(374);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flattenDepth", function() { return _flattenDepth_js__WEBPACK_IMPORTED_MODULE_75__["default"]; });

/* harmony import */ var _flip_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(375);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flip", function() { return _flip_js__WEBPACK_IMPORTED_MODULE_76__["default"]; });

/* harmony import */ var _floor_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(376);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return _floor_js__WEBPACK_IMPORTED_MODULE_77__["default"]; });

/* harmony import */ var _flow_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(377);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flow", function() { return _flow_js__WEBPACK_IMPORTED_MODULE_78__["default"]; });

/* harmony import */ var _flowRight_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(379);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flowRight", function() { return _flowRight_js__WEBPACK_IMPORTED_MODULE_79__["default"]; });

/* harmony import */ var _forEach_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(329);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return _forEach_js__WEBPACK_IMPORTED_MODULE_80__["default"]; });

/* harmony import */ var _forEachRight_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(332);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEachRight", function() { return _forEachRight_js__WEBPACK_IMPORTED_MODULE_81__["default"]; });

/* harmony import */ var _forIn_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(380);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forIn", function() { return _forIn_js__WEBPACK_IMPORTED_MODULE_82__["default"]; });

/* harmony import */ var _forInRight_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(381);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forInRight", function() { return _forInRight_js__WEBPACK_IMPORTED_MODULE_83__["default"]; });

/* harmony import */ var _forOwn_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(382);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forOwn", function() { return _forOwn_js__WEBPACK_IMPORTED_MODULE_84__["default"]; });

/* harmony import */ var _forOwnRight_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(383);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forOwnRight", function() { return _forOwnRight_js__WEBPACK_IMPORTED_MODULE_85__["default"]; });

/* harmony import */ var _fromPairs_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(384);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromPairs", function() { return _fromPairs_js__WEBPACK_IMPORTED_MODULE_86__["default"]; });

/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(385);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "functions", function() { return _functions_js__WEBPACK_IMPORTED_MODULE_87__["default"]; });

/* harmony import */ var _functionsIn_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(387);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "functionsIn", function() { return _functionsIn_js__WEBPACK_IMPORTED_MODULE_88__["default"]; });

/* harmony import */ var _get_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(144);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "get", function() { return _get_js__WEBPACK_IMPORTED_MODULE_89__["default"]; });

/* harmony import */ var _groupBy_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(388);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return _groupBy_js__WEBPACK_IMPORTED_MODULE_90__["default"]; });

/* harmony import */ var _gt_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(389);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gt", function() { return _gt_js__WEBPACK_IMPORTED_MODULE_91__["default"]; });

/* harmony import */ var _gte_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(392);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gte", function() { return _gte_js__WEBPACK_IMPORTED_MODULE_92__["default"]; });

/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(393);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "has", function() { return _has_js__WEBPACK_IMPORTED_MODULE_93__["default"]; });

/* harmony import */ var _hasIn_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(278);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasIn", function() { return _hasIn_js__WEBPACK_IMPORTED_MODULE_94__["default"]; });

/* harmony import */ var _head_js__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(367);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "head", function() { return _head_js__WEBPACK_IMPORTED_MODULE_95__["default"]; });

/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(56);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _identity_js__WEBPACK_IMPORTED_MODULE_96__["default"]; });

/* harmony import */ var _inRange_js__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(395);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inRange", function() { return _inRange_js__WEBPACK_IMPORTED_MODULE_97__["default"]; });

/* harmony import */ var _includes_js__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(397);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "includes", function() { return _includes_js__WEBPACK_IMPORTED_MODULE_98__["default"]; });

/* harmony import */ var _indexOf_js__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(401);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexOf", function() { return _indexOf_js__WEBPACK_IMPORTED_MODULE_99__["default"]; });

/* harmony import */ var _initial_js__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(402);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "initial", function() { return _initial_js__WEBPACK_IMPORTED_MODULE_100__["default"]; });

/* harmony import */ var _intersection_js__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(403);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersection", function() { return _intersection_js__WEBPACK_IMPORTED_MODULE_101__["default"]; });

/* harmony import */ var _intersectionBy_js__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(406);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectionBy", function() { return _intersectionBy_js__WEBPACK_IMPORTED_MODULE_102__["default"]; });

/* harmony import */ var _intersectionWith_js__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(407);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectionWith", function() { return _intersectionWith_js__WEBPACK_IMPORTED_MODULE_103__["default"]; });

/* harmony import */ var _invert_js__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(408);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return _invert_js__WEBPACK_IMPORTED_MODULE_104__["default"]; });

/* harmony import */ var _invertBy_js__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(411);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invertBy", function() { return _invertBy_js__WEBPACK_IMPORTED_MODULE_105__["default"]; });

/* harmony import */ var _invoke_js__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(412);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invoke", function() { return _invoke_js__WEBPACK_IMPORTED_MODULE_106__["default"]; });

/* harmony import */ var _invokeMap_js__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(415);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invokeMap", function() { return _invokeMap_js__WEBPACK_IMPORTED_MODULE_107__["default"]; });

/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(124);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArguments", function() { return _isArguments_js__WEBPACK_IMPORTED_MODULE_108__["default"]; });

/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(47);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _isArray_js__WEBPACK_IMPORTED_MODULE_109__["default"]; });

/* harmony import */ var _isArrayBuffer_js__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(416);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayBuffer", function() { return _isArrayBuffer_js__WEBPACK_IMPORTED_MODULE_110__["default"]; });

/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(118);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return _isArrayLike_js__WEBPACK_IMPORTED_MODULE_111__["default"]; });

/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(309);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayLikeObject", function() { return _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_112__["default"]; });

/* harmony import */ var _isBoolean_js__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(418);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _isBoolean_js__WEBPACK_IMPORTED_MODULE_113__["default"]; });

/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(126);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBuffer", function() { return _isBuffer_js__WEBPACK_IMPORTED_MODULE_114__["default"]; });

/* harmony import */ var _isDate_js__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(419);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return _isDate_js__WEBPACK_IMPORTED_MODULE_115__["default"]; });

/* harmony import */ var _isElement_js__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(421);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isElement", function() { return _isElement_js__WEBPACK_IMPORTED_MODULE_116__["default"]; });

/* harmony import */ var _isEmpty_js__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(422);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return _isEmpty_js__WEBPACK_IMPORTED_MODULE_117__["default"]; });

/* harmony import */ var _isEqual_js__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(423);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEqual", function() { return _isEqual_js__WEBPACK_IMPORTED_MODULE_118__["default"]; });

/* harmony import */ var _isEqualWith_js__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(424);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEqualWith", function() { return _isEqualWith_js__WEBPACK_IMPORTED_MODULE_119__["default"]; });

/* harmony import */ var _isError_js__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(182);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isError", function() { return _isError_js__WEBPACK_IMPORTED_MODULE_120__["default"]; });

/* harmony import */ var _isFinite_js__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(425);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFinite", function() { return _isFinite_js__WEBPACK_IMPORTED_MODULE_121__["default"]; });

/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(61);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _isFunction_js__WEBPACK_IMPORTED_MODULE_122__["default"]; });

/* harmony import */ var _isInteger_js__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(426);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isInteger", function() { return _isInteger_js__WEBPACK_IMPORTED_MODULE_123__["default"]; });

/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(119);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isLength", function() { return _isLength_js__WEBPACK_IMPORTED_MODULE_124__["default"]; });

/* harmony import */ var _isMap_js__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(248);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMap", function() { return _isMap_js__WEBPACK_IMPORTED_MODULE_125__["default"]; });

/* harmony import */ var _isMatch_js__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(427);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatch", function() { return _isMatch_js__WEBPACK_IMPORTED_MODULE_126__["default"]; });

/* harmony import */ var _isMatchWith_js__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(428);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatchWith", function() { return _isMatchWith_js__WEBPACK_IMPORTED_MODULE_127__["default"]; });

/* harmony import */ var _isNaN_js__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(429);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaN", function() { return _isNaN_js__WEBPACK_IMPORTED_MODULE_128__["default"]; });

/* harmony import */ var _isNative_js__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(431);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNative", function() { return _isNative_js__WEBPACK_IMPORTED_MODULE_129__["default"]; });

/* harmony import */ var _isNil_js__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(433);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNil", function() { return _isNil_js__WEBPACK_IMPORTED_MODULE_130__["default"]; });

/* harmony import */ var _isNull_js__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(434);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return _isNull_js__WEBPACK_IMPORTED_MODULE_131__["default"]; });

/* harmony import */ var _isNumber_js__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(430);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _isNumber_js__WEBPACK_IMPORTED_MODULE_132__["default"]; });

/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(52);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _isObject_js__WEBPACK_IMPORTED_MODULE_133__["default"]; });

/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(44);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObjectLike", function() { return _isObjectLike_js__WEBPACK_IMPORTED_MODULE_134__["default"]; });

/* harmony import */ var _isPlainObject_js__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(183);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPlainObject", function() { return _isPlainObject_js__WEBPACK_IMPORTED_MODULE_135__["default"]; });

/* harmony import */ var _isRegExp_js__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(435);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return _isRegExp_js__WEBPACK_IMPORTED_MODULE_136__["default"]; });

/* harmony import */ var _isSafeInteger_js__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(437);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSafeInteger", function() { return _isSafeInteger_js__WEBPACK_IMPORTED_MODULE_137__["default"]; });

/* harmony import */ var _isSet_js__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(250);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSet", function() { return _isSet_js__WEBPACK_IMPORTED_MODULE_138__["default"]; });

/* harmony import */ var _isString_js__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(398);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _isString_js__WEBPACK_IMPORTED_MODULE_139__["default"]; });

/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(36);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSymbol", function() { return _isSymbol_js__WEBPACK_IMPORTED_MODULE_140__["default"]; });

/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(129);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTypedArray", function() { return _isTypedArray_js__WEBPACK_IMPORTED_MODULE_141__["default"]; });

/* harmony import */ var _isUndefined_js__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(438);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return _isUndefined_js__WEBPACK_IMPORTED_MODULE_142__["default"]; });

/* harmony import */ var _isWeakMap_js__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(439);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWeakMap", function() { return _isWeakMap_js__WEBPACK_IMPORTED_MODULE_143__["default"]; });

/* harmony import */ var _isWeakSet_js__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(440);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWeakSet", function() { return _isWeakSet_js__WEBPACK_IMPORTED_MODULE_144__["default"]; });

/* harmony import */ var _iteratee_js__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(441);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iteratee", function() { return _iteratee_js__WEBPACK_IMPORTED_MODULE_145__["default"]; });

/* harmony import */ var _join_js__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(442);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "join", function() { return _join_js__WEBPACK_IMPORTED_MODULE_146__["default"]; });

/* harmony import */ var _kebabCase_js__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(443);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kebabCase", function() { return _kebabCase_js__WEBPACK_IMPORTED_MODULE_147__["default"]; });

/* harmony import */ var _keyBy_js__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(444);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keyBy", function() { return _keyBy_js__WEBPACK_IMPORTED_MODULE_148__["default"]; });

/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(121);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return _keys_js__WEBPACK_IMPORTED_MODULE_149__["default"]; });

/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(137);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keysIn", function() { return _keysIn_js__WEBPACK_IMPORTED_MODULE_150__["default"]; });

/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(320);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "last", function() { return _last_js__WEBPACK_IMPORTED_MODULE_151__["default"]; });

/* harmony import */ var _lastIndexOf_js__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(445);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastIndexOf", function() { return _lastIndexOf_js__WEBPACK_IMPORTED_MODULE_152__["default"]; });

/* harmony import */ var _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(83);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lodash", function() { return _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_153__["default"]; });

/* harmony import */ var _lowerCase_js__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(447);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lowerCase", function() { return _lowerCase_js__WEBPACK_IMPORTED_MODULE_154__["default"]; });

/* harmony import */ var _lowerFirst_js__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(448);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lowerFirst", function() { return _lowerFirst_js__WEBPACK_IMPORTED_MODULE_155__["default"]; });

/* harmony import */ var _lt_js__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(449);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lt", function() { return _lt_js__WEBPACK_IMPORTED_MODULE_156__["default"]; });

/* harmony import */ var _lte_js__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(451);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lte", function() { return _lte_js__WEBPACK_IMPORTED_MODULE_157__["default"]; });

/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(369);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _map_js__WEBPACK_IMPORTED_MODULE_158__["default"]; });

/* harmony import */ var _mapKeys_js__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(452);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapKeys", function() { return _mapKeys_js__WEBPACK_IMPORTED_MODULE_159__["default"]; });

/* harmony import */ var _mapValues_js__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(453);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapValues", function() { return _mapValues_js__WEBPACK_IMPORTED_MODULE_160__["default"]; });

/* harmony import */ var _matches_js__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(454);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matches", function() { return _matches_js__WEBPACK_IMPORTED_MODULE_161__["default"]; });

/* harmony import */ var _matchesProperty_js__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(455);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matchesProperty", function() { return _matchesProperty_js__WEBPACK_IMPORTED_MODULE_162__["default"]; });

/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(456);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max_js__WEBPACK_IMPORTED_MODULE_163__["default"]; });

/* harmony import */ var _maxBy_js__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(458);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxBy", function() { return _maxBy_js__WEBPACK_IMPORTED_MODULE_164__["default"]; });

/* harmony import */ var _mean_js__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(459);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _mean_js__WEBPACK_IMPORTED_MODULE_165__["default"]; });

/* harmony import */ var _meanBy_js__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(462);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meanBy", function() { return _meanBy_js__WEBPACK_IMPORTED_MODULE_166__["default"]; });

/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(150);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "memoize", function() { return _memoize_js__WEBPACK_IMPORTED_MODULE_167__["default"]; });

/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(463);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _merge_js__WEBPACK_IMPORTED_MODULE_168__["default"]; });

/* harmony import */ var _mergeWith_js__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(312);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeWith", function() { return _mergeWith_js__WEBPACK_IMPORTED_MODULE_169__["default"]; });

/* harmony import */ var _method_js__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(464);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "method", function() { return _method_js__WEBPACK_IMPORTED_MODULE_170__["default"]; });

/* harmony import */ var _methodOf_js__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(465);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "methodOf", function() { return _methodOf_js__WEBPACK_IMPORTED_MODULE_171__["default"]; });

/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(466);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min_js__WEBPACK_IMPORTED_MODULE_172__["default"]; });

/* harmony import */ var _minBy_js__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(467);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minBy", function() { return _minBy_js__WEBPACK_IMPORTED_MODULE_173__["default"]; });

/* harmony import */ var _mixin_js__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(468);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mixin", function() { return _mixin_js__WEBPACK_IMPORTED_MODULE_174__["default"]; });

/* harmony import */ var _multiply_js__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(469);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return _multiply_js__WEBPACK_IMPORTED_MODULE_175__["default"]; });

/* harmony import */ var _negate_js__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(470);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return _negate_js__WEBPACK_IMPORTED_MODULE_176__["default"]; });

/* harmony import */ var _next_js__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(471);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "next", function() { return _next_js__WEBPACK_IMPORTED_MODULE_177__["default"]; });

/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(80);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return _noop_js__WEBPACK_IMPORTED_MODULE_178__["default"]; });

/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(301);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "now", function() { return _now_js__WEBPACK_IMPORTED_MODULE_179__["default"]; });

/* harmony import */ var _nth_js__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(474);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nth", function() { return _nth_js__WEBPACK_IMPORTED_MODULE_180__["default"]; });

/* harmony import */ var _nthArg_js__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(476);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthArg", function() { return _nthArg_js__WEBPACK_IMPORTED_MODULE_181__["default"]; });

/* harmony import */ var _omit_js__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(477);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "omit", function() { return _omit_js__WEBPACK_IMPORTED_MODULE_182__["default"]; });

/* harmony import */ var _omitBy_js__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(480);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "omitBy", function() { return _omitBy_js__WEBPACK_IMPORTED_MODULE_183__["default"]; });

/* harmony import */ var _once_js__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(484);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "once", function() { return _once_js__WEBPACK_IMPORTED_MODULE_184__["default"]; });

/* harmony import */ var _orderBy_js__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(485);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "orderBy", function() { return _orderBy_js__WEBPACK_IMPORTED_MODULE_185__["default"]; });

/* harmony import */ var _over_js__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(490);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "over", function() { return _over_js__WEBPACK_IMPORTED_MODULE_186__["default"]; });

/* harmony import */ var _overArgs_js__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(492);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "overArgs", function() { return _overArgs_js__WEBPACK_IMPORTED_MODULE_187__["default"]; });

/* harmony import */ var _overEvery_js__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(494);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "overEvery", function() { return _overEvery_js__WEBPACK_IMPORTED_MODULE_188__["default"]; });

/* harmony import */ var _overSome_js__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(495);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "overSome", function() { return _overSome_js__WEBPACK_IMPORTED_MODULE_189__["default"]; });

/* harmony import */ var _pad_js__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(496);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pad", function() { return _pad_js__WEBPACK_IMPORTED_MODULE_190__["default"]; });

/* harmony import */ var _padEnd_js__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(502);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "padEnd", function() { return _padEnd_js__WEBPACK_IMPORTED_MODULE_191__["default"]; });

/* harmony import */ var _padStart_js__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(503);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "padStart", function() { return _padStart_js__WEBPACK_IMPORTED_MODULE_192__["default"]; });

/* harmony import */ var _parseInt_js__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(504);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseInt", function() { return _parseInt_js__WEBPACK_IMPORTED_MODULE_193__["default"]; });

/* harmony import */ var _partial_js__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(505);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partial", function() { return _partial_js__WEBPACK_IMPORTED_MODULE_194__["default"]; });

/* harmony import */ var _partialRight_js__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(506);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partialRight", function() { return _partialRight_js__WEBPACK_IMPORTED_MODULE_195__["default"]; });

/* harmony import */ var _partition_js__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(507);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _partition_js__WEBPACK_IMPORTED_MODULE_196__["default"]; });

/* harmony import */ var _pick_js__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(508);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return _pick_js__WEBPACK_IMPORTED_MODULE_197__["default"]; });

/* harmony import */ var _pickBy_js__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(481);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pickBy", function() { return _pickBy_js__WEBPACK_IMPORTED_MODULE_198__["default"]; });

/* harmony import */ var _plant_js__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(510);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "plant", function() { return _plant_js__WEBPACK_IMPORTED_MODULE_199__["default"]; });

/* harmony import */ var _property_js__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(281);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "property", function() { return _property_js__WEBPACK_IMPORTED_MODULE_200__["default"]; });

/* harmony import */ var _propertyOf_js__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(511);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "propertyOf", function() { return _propertyOf_js__WEBPACK_IMPORTED_MODULE_201__["default"]; });

/* harmony import */ var _pull_js__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(512);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pull", function() { return _pull_js__WEBPACK_IMPORTED_MODULE_202__["default"]; });

/* harmony import */ var _pullAll_js__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(513);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pullAll", function() { return _pullAll_js__WEBPACK_IMPORTED_MODULE_203__["default"]; });

/* harmony import */ var _pullAllBy_js__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(516);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pullAllBy", function() { return _pullAllBy_js__WEBPACK_IMPORTED_MODULE_204__["default"]; });

/* harmony import */ var _pullAllWith_js__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(517);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pullAllWith", function() { return _pullAllWith_js__WEBPACK_IMPORTED_MODULE_205__["default"]; });

/* harmony import */ var _pullAt_js__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(518);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pullAt", function() { return _pullAt_js__WEBPACK_IMPORTED_MODULE_206__["default"]; });

/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(520);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "random", function() { return _random_js__WEBPACK_IMPORTED_MODULE_207__["default"]; });

/* harmony import */ var _range_js__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(522);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _range_js__WEBPACK_IMPORTED_MODULE_208__["default"]; });

/* harmony import */ var _rangeRight_js__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(525);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rangeRight", function() { return _rangeRight_js__WEBPACK_IMPORTED_MODULE_209__["default"]; });

/* harmony import */ var _rearg_js__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(526);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rearg", function() { return _rearg_js__WEBPACK_IMPORTED_MODULE_210__["default"]; });

/* harmony import */ var _reduce_js__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(527);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return _reduce_js__WEBPACK_IMPORTED_MODULE_211__["default"]; });

/* harmony import */ var _reduceRight_js__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(529);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduceRight", function() { return _reduceRight_js__WEBPACK_IMPORTED_MODULE_212__["default"]; });

/* harmony import */ var _reject_js__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(531);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reject", function() { return _reject_js__WEBPACK_IMPORTED_MODULE_213__["default"]; });

/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(532);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return _remove_js__WEBPACK_IMPORTED_MODULE_214__["default"]; });

/* harmony import */ var _repeat_js__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(533);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return _repeat_js__WEBPACK_IMPORTED_MODULE_215__["default"]; });

/* harmony import */ var _replace_js__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(534);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replace", function() { return _replace_js__WEBPACK_IMPORTED_MODULE_216__["default"]; });

/* harmony import */ var _rest_js__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(535);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rest", function() { return _rest_js__WEBPACK_IMPORTED_MODULE_217__["default"]; });

/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(536);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "result", function() { return _result_js__WEBPACK_IMPORTED_MODULE_218__["default"]; });

/* harmony import */ var _reverse_js__WEBPACK_IMPORTED_MODULE_219__ = __webpack_require__(537);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reverse", function() { return _reverse_js__WEBPACK_IMPORTED_MODULE_219__["default"]; });

/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_220__ = __webpack_require__(538);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "round", function() { return _round_js__WEBPACK_IMPORTED_MODULE_220__["default"]; });

/* harmony import */ var _sample_js__WEBPACK_IMPORTED_MODULE_221__ = __webpack_require__(539);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return _sample_js__WEBPACK_IMPORTED_MODULE_221__["default"]; });

/* harmony import */ var _sampleSize_js__WEBPACK_IMPORTED_MODULE_222__ = __webpack_require__(542);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sampleSize", function() { return _sampleSize_js__WEBPACK_IMPORTED_MODULE_222__["default"]; });

/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_223__ = __webpack_require__(546);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "set", function() { return _set_js__WEBPACK_IMPORTED_MODULE_223__["default"]; });

/* harmony import */ var _setWith_js__WEBPACK_IMPORTED_MODULE_224__ = __webpack_require__(547);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setWith", function() { return _setWith_js__WEBPACK_IMPORTED_MODULE_224__["default"]; });

/* harmony import */ var _shuffle_js__WEBPACK_IMPORTED_MODULE_225__ = __webpack_require__(548);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _shuffle_js__WEBPACK_IMPORTED_MODULE_225__["default"]; });

/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_226__ = __webpack_require__(551);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "size", function() { return _size_js__WEBPACK_IMPORTED_MODULE_226__["default"]; });

/* harmony import */ var _slice_js__WEBPACK_IMPORTED_MODULE_227__ = __webpack_require__(552);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return _slice_js__WEBPACK_IMPORTED_MODULE_227__["default"]; });

/* harmony import */ var _snakeCase_js__WEBPACK_IMPORTED_MODULE_228__ = __webpack_require__(553);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "snakeCase", function() { return _snakeCase_js__WEBPACK_IMPORTED_MODULE_228__["default"]; });

/* harmony import */ var _some_js__WEBPACK_IMPORTED_MODULE_229__ = __webpack_require__(554);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "some", function() { return _some_js__WEBPACK_IMPORTED_MODULE_229__["default"]; });

/* harmony import */ var _sortBy_js__WEBPACK_IMPORTED_MODULE_230__ = __webpack_require__(556);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortBy", function() { return _sortBy_js__WEBPACK_IMPORTED_MODULE_230__["default"]; });

/* harmony import */ var _sortedIndex_js__WEBPACK_IMPORTED_MODULE_231__ = __webpack_require__(557);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedIndex", function() { return _sortedIndex_js__WEBPACK_IMPORTED_MODULE_231__["default"]; });

/* harmony import */ var _sortedIndexBy_js__WEBPACK_IMPORTED_MODULE_232__ = __webpack_require__(560);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedIndexBy", function() { return _sortedIndexBy_js__WEBPACK_IMPORTED_MODULE_232__["default"]; });

/* harmony import */ var _sortedIndexOf_js__WEBPACK_IMPORTED_MODULE_233__ = __webpack_require__(561);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedIndexOf", function() { return _sortedIndexOf_js__WEBPACK_IMPORTED_MODULE_233__["default"]; });

/* harmony import */ var _sortedLastIndex_js__WEBPACK_IMPORTED_MODULE_234__ = __webpack_require__(562);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedLastIndex", function() { return _sortedLastIndex_js__WEBPACK_IMPORTED_MODULE_234__["default"]; });

/* harmony import */ var _sortedLastIndexBy_js__WEBPACK_IMPORTED_MODULE_235__ = __webpack_require__(563);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedLastIndexBy", function() { return _sortedLastIndexBy_js__WEBPACK_IMPORTED_MODULE_235__["default"]; });

/* harmony import */ var _sortedLastIndexOf_js__WEBPACK_IMPORTED_MODULE_236__ = __webpack_require__(564);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedLastIndexOf", function() { return _sortedLastIndexOf_js__WEBPACK_IMPORTED_MODULE_236__["default"]; });

/* harmony import */ var _sortedUniq_js__WEBPACK_IMPORTED_MODULE_237__ = __webpack_require__(565);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedUniq", function() { return _sortedUniq_js__WEBPACK_IMPORTED_MODULE_237__["default"]; });

/* harmony import */ var _sortedUniqBy_js__WEBPACK_IMPORTED_MODULE_238__ = __webpack_require__(567);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedUniqBy", function() { return _sortedUniqBy_js__WEBPACK_IMPORTED_MODULE_238__["default"]; });

/* harmony import */ var _split_js__WEBPACK_IMPORTED_MODULE_239__ = __webpack_require__(568);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "split", function() { return _split_js__WEBPACK_IMPORTED_MODULE_239__["default"]; });

/* harmony import */ var _spread_js__WEBPACK_IMPORTED_MODULE_240__ = __webpack_require__(569);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "spread", function() { return _spread_js__WEBPACK_IMPORTED_MODULE_240__["default"]; });

/* harmony import */ var _startCase_js__WEBPACK_IMPORTED_MODULE_241__ = __webpack_require__(570);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startCase", function() { return _startCase_js__WEBPACK_IMPORTED_MODULE_241__["default"]; });

/* harmony import */ var _startsWith_js__WEBPACK_IMPORTED_MODULE_242__ = __webpack_require__(571);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startsWith", function() { return _startsWith_js__WEBPACK_IMPORTED_MODULE_242__["default"]; });

/* harmony import */ var _stubArray_js__WEBPACK_IMPORTED_MODULE_243__ = __webpack_require__(229);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubArray", function() { return _stubArray_js__WEBPACK_IMPORTED_MODULE_243__["default"]; });

/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_244__ = __webpack_require__(128);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubFalse", function() { return _stubFalse_js__WEBPACK_IMPORTED_MODULE_244__["default"]; });

/* harmony import */ var _stubObject_js__WEBPACK_IMPORTED_MODULE_245__ = __webpack_require__(572);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubObject", function() { return _stubObject_js__WEBPACK_IMPORTED_MODULE_245__["default"]; });

/* harmony import */ var _stubString_js__WEBPACK_IMPORTED_MODULE_246__ = __webpack_require__(573);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubString", function() { return _stubString_js__WEBPACK_IMPORTED_MODULE_246__["default"]; });

/* harmony import */ var _stubTrue_js__WEBPACK_IMPORTED_MODULE_247__ = __webpack_require__(574);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubTrue", function() { return _stubTrue_js__WEBPACK_IMPORTED_MODULE_247__["default"]; });

/* harmony import */ var _subtract_js__WEBPACK_IMPORTED_MODULE_248__ = __webpack_require__(575);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return _subtract_js__WEBPACK_IMPORTED_MODULE_248__["default"]; });

/* harmony import */ var _sum_js__WEBPACK_IMPORTED_MODULE_249__ = __webpack_require__(576);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _sum_js__WEBPACK_IMPORTED_MODULE_249__["default"]; });

/* harmony import */ var _sumBy_js__WEBPACK_IMPORTED_MODULE_250__ = __webpack_require__(577);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sumBy", function() { return _sumBy_js__WEBPACK_IMPORTED_MODULE_250__["default"]; });

/* harmony import */ var _tail_js__WEBPACK_IMPORTED_MODULE_251__ = __webpack_require__(578);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tail", function() { return _tail_js__WEBPACK_IMPORTED_MODULE_251__["default"]; });

/* harmony import */ var _take_js__WEBPACK_IMPORTED_MODULE_252__ = __webpack_require__(579);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "take", function() { return _take_js__WEBPACK_IMPORTED_MODULE_252__["default"]; });

/* harmony import */ var _takeRight_js__WEBPACK_IMPORTED_MODULE_253__ = __webpack_require__(580);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeRight", function() { return _takeRight_js__WEBPACK_IMPORTED_MODULE_253__["default"]; });

/* harmony import */ var _takeRightWhile_js__WEBPACK_IMPORTED_MODULE_254__ = __webpack_require__(581);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeRightWhile", function() { return _takeRightWhile_js__WEBPACK_IMPORTED_MODULE_254__["default"]; });

/* harmony import */ var _takeWhile_js__WEBPACK_IMPORTED_MODULE_255__ = __webpack_require__(582);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return _takeWhile_js__WEBPACK_IMPORTED_MODULE_255__["default"]; });

/* harmony import */ var _tap_js__WEBPACK_IMPORTED_MODULE_256__ = __webpack_require__(583);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return _tap_js__WEBPACK_IMPORTED_MODULE_256__["default"]; });

/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_257__ = __webpack_require__(584);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "template", function() { return _template_js__WEBPACK_IMPORTED_MODULE_257__["default"]; });

/* harmony import */ var _templateSettings_js__WEBPACK_IMPORTED_MODULE_258__ = __webpack_require__(588);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "templateSettings", function() { return _templateSettings_js__WEBPACK_IMPORTED_MODULE_258__["default"]; });

/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_259__ = __webpack_require__(591);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return _throttle_js__WEBPACK_IMPORTED_MODULE_259__["default"]; });

/* harmony import */ var _thru_js__WEBPACK_IMPORTED_MODULE_260__ = __webpack_require__(592);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thru", function() { return _thru_js__WEBPACK_IMPORTED_MODULE_260__["default"]; });

/* harmony import */ var _times_js__WEBPACK_IMPORTED_MODULE_261__ = __webpack_require__(593);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "times", function() { return _times_js__WEBPACK_IMPORTED_MODULE_261__["default"]; });

/* harmony import */ var _toArray_js__WEBPACK_IMPORTED_MODULE_262__ = __webpack_require__(472);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return _toArray_js__WEBPACK_IMPORTED_MODULE_262__["default"]; });

/* harmony import */ var _toFinite_js__WEBPACK_IMPORTED_MODULE_263__ = __webpack_require__(50);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toFinite", function() { return _toFinite_js__WEBPACK_IMPORTED_MODULE_263__["default"]; });

/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_264__ = __webpack_require__(49);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toInteger", function() { return _toInteger_js__WEBPACK_IMPORTED_MODULE_264__["default"]; });

/* harmony import */ var _toIterator_js__WEBPACK_IMPORTED_MODULE_265__ = __webpack_require__(594);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toIterator", function() { return _toIterator_js__WEBPACK_IMPORTED_MODULE_265__["default"]; });

/* harmony import */ var _toJSON_js__WEBPACK_IMPORTED_MODULE_266__ = __webpack_require__(595);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toJSON", function() { return _toJSON_js__WEBPACK_IMPORTED_MODULE_266__["default"]; });

/* harmony import */ var _toLength_js__WEBPACK_IMPORTED_MODULE_267__ = __webpack_require__(355);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toLength", function() { return _toLength_js__WEBPACK_IMPORTED_MODULE_267__["default"]; });

/* harmony import */ var _toLower_js__WEBPACK_IMPORTED_MODULE_268__ = __webpack_require__(598);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toLower", function() { return _toLower_js__WEBPACK_IMPORTED_MODULE_268__["default"]; });

/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_269__ = __webpack_require__(51);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toNumber", function() { return _toNumber_js__WEBPACK_IMPORTED_MODULE_269__["default"]; });

/* harmony import */ var _toPairs_js__WEBPACK_IMPORTED_MODULE_270__ = __webpack_require__(339);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPairs", function() { return _toPairs_js__WEBPACK_IMPORTED_MODULE_270__["default"]; });

/* harmony import */ var _toPairsIn_js__WEBPACK_IMPORTED_MODULE_271__ = __webpack_require__(344);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPairsIn", function() { return _toPairsIn_js__WEBPACK_IMPORTED_MODULE_271__["default"]; });

/* harmony import */ var _toPath_js__WEBPACK_IMPORTED_MODULE_272__ = __webpack_require__(599);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPath", function() { return _toPath_js__WEBPACK_IMPORTED_MODULE_272__["default"]; });

/* harmony import */ var _toPlainObject_js__WEBPACK_IMPORTED_MODULE_273__ = __webpack_require__(311);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPlainObject", function() { return _toPlainObject_js__WEBPACK_IMPORTED_MODULE_273__["default"]; });

/* harmony import */ var _toSafeInteger_js__WEBPACK_IMPORTED_MODULE_274__ = __webpack_require__(600);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toSafeInteger", function() { return _toSafeInteger_js__WEBPACK_IMPORTED_MODULE_274__["default"]; });

/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_275__ = __webpack_require__(174);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toString", function() { return _toString_js__WEBPACK_IMPORTED_MODULE_275__["default"]; });

/* harmony import */ var _toUpper_js__WEBPACK_IMPORTED_MODULE_276__ = __webpack_require__(601);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toUpper", function() { return _toUpper_js__WEBPACK_IMPORTED_MODULE_276__["default"]; });

/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_277__ = __webpack_require__(602);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return _transform_js__WEBPACK_IMPORTED_MODULE_277__["default"]; });

/* harmony import */ var _trim_js__WEBPACK_IMPORTED_MODULE_278__ = __webpack_require__(603);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trim", function() { return _trim_js__WEBPACK_IMPORTED_MODULE_278__["default"]; });

/* harmony import */ var _trimEnd_js__WEBPACK_IMPORTED_MODULE_279__ = __webpack_require__(606);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trimEnd", function() { return _trimEnd_js__WEBPACK_IMPORTED_MODULE_279__["default"]; });

/* harmony import */ var _trimStart_js__WEBPACK_IMPORTED_MODULE_280__ = __webpack_require__(607);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trimStart", function() { return _trimStart_js__WEBPACK_IMPORTED_MODULE_280__["default"]; });

/* harmony import */ var _truncate_js__WEBPACK_IMPORTED_MODULE_281__ = __webpack_require__(608);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truncate", function() { return _truncate_js__WEBPACK_IMPORTED_MODULE_281__["default"]; });

/* harmony import */ var _unary_js__WEBPACK_IMPORTED_MODULE_282__ = __webpack_require__(609);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unary", function() { return _unary_js__WEBPACK_IMPORTED_MODULE_282__["default"]; });

/* harmony import */ var _unescape_js__WEBPACK_IMPORTED_MODULE_283__ = __webpack_require__(610);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unescape", function() { return _unescape_js__WEBPACK_IMPORTED_MODULE_283__["default"]; });

/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_284__ = __webpack_require__(612);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "union", function() { return _union_js__WEBPACK_IMPORTED_MODULE_284__["default"]; });

/* harmony import */ var _unionBy_js__WEBPACK_IMPORTED_MODULE_285__ = __webpack_require__(615);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unionBy", function() { return _unionBy_js__WEBPACK_IMPORTED_MODULE_285__["default"]; });

/* harmony import */ var _unionWith_js__WEBPACK_IMPORTED_MODULE_286__ = __webpack_require__(616);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unionWith", function() { return _unionWith_js__WEBPACK_IMPORTED_MODULE_286__["default"]; });

/* harmony import */ var _uniq_js__WEBPACK_IMPORTED_MODULE_287__ = __webpack_require__(617);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniq", function() { return _uniq_js__WEBPACK_IMPORTED_MODULE_287__["default"]; });

/* harmony import */ var _uniqBy_js__WEBPACK_IMPORTED_MODULE_288__ = __webpack_require__(618);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqBy", function() { return _uniqBy_js__WEBPACK_IMPORTED_MODULE_288__["default"]; });

/* harmony import */ var _uniqWith_js__WEBPACK_IMPORTED_MODULE_289__ = __webpack_require__(619);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqWith", function() { return _uniqWith_js__WEBPACK_IMPORTED_MODULE_289__["default"]; });

/* harmony import */ var _uniqueId_js__WEBPACK_IMPORTED_MODULE_290__ = __webpack_require__(620);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqueId", function() { return _uniqueId_js__WEBPACK_IMPORTED_MODULE_290__["default"]; });

/* harmony import */ var _unset_js__WEBPACK_IMPORTED_MODULE_291__ = __webpack_require__(621);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unset", function() { return _unset_js__WEBPACK_IMPORTED_MODULE_291__["default"]; });

/* harmony import */ var _unzip_js__WEBPACK_IMPORTED_MODULE_292__ = __webpack_require__(622);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unzip", function() { return _unzip_js__WEBPACK_IMPORTED_MODULE_292__["default"]; });

/* harmony import */ var _unzipWith_js__WEBPACK_IMPORTED_MODULE_293__ = __webpack_require__(623);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unzipWith", function() { return _unzipWith_js__WEBPACK_IMPORTED_MODULE_293__["default"]; });

/* harmony import */ var _update_js__WEBPACK_IMPORTED_MODULE_294__ = __webpack_require__(624);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "update", function() { return _update_js__WEBPACK_IMPORTED_MODULE_294__["default"]; });

/* harmony import */ var _updateWith_js__WEBPACK_IMPORTED_MODULE_295__ = __webpack_require__(626);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "updateWith", function() { return _updateWith_js__WEBPACK_IMPORTED_MODULE_295__["default"]; });

/* harmony import */ var _upperCase_js__WEBPACK_IMPORTED_MODULE_296__ = __webpack_require__(627);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "upperCase", function() { return _upperCase_js__WEBPACK_IMPORTED_MODULE_296__["default"]; });

/* harmony import */ var _upperFirst_js__WEBPACK_IMPORTED_MODULE_297__ = __webpack_require__(191);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "upperFirst", function() { return _upperFirst_js__WEBPACK_IMPORTED_MODULE_297__["default"]; });

/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_298__ = __webpack_require__(628);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "value", function() { return _value_js__WEBPACK_IMPORTED_MODULE_298__["default"]; });

/* harmony import */ var _valueOf_js__WEBPACK_IMPORTED_MODULE_299__ = __webpack_require__(629);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "valueOf", function() { return _valueOf_js__WEBPACK_IMPORTED_MODULE_299__["default"]; });

/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_300__ = __webpack_require__(399);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return _values_js__WEBPACK_IMPORTED_MODULE_300__["default"]; });

/* harmony import */ var _valuesIn_js__WEBPACK_IMPORTED_MODULE_301__ = __webpack_require__(630);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "valuesIn", function() { return _valuesIn_js__WEBPACK_IMPORTED_MODULE_301__["default"]; });

/* harmony import */ var _without_js__WEBPACK_IMPORTED_MODULE_302__ = __webpack_require__(631);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "without", function() { return _without_js__WEBPACK_IMPORTED_MODULE_302__["default"]; });

/* harmony import */ var _words_js__WEBPACK_IMPORTED_MODULE_303__ = __webpack_require__(204);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "words", function() { return _words_js__WEBPACK_IMPORTED_MODULE_303__["default"]; });

/* harmony import */ var _wrap_js__WEBPACK_IMPORTED_MODULE_304__ = __webpack_require__(632);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return _wrap_js__WEBPACK_IMPORTED_MODULE_304__["default"]; });

/* harmony import */ var _wrapperAt_js__WEBPACK_IMPORTED_MODULE_305__ = __webpack_require__(633);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperAt", function() { return _wrapperAt_js__WEBPACK_IMPORTED_MODULE_305__["default"]; });

/* harmony import */ var _wrapperChain_js__WEBPACK_IMPORTED_MODULE_306__ = __webpack_require__(634);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperChain", function() { return _wrapperChain_js__WEBPACK_IMPORTED_MODULE_306__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperCommit", function() { return _commit_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperLodash", function() { return _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_153__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperNext", function() { return _next_js__WEBPACK_IMPORTED_MODULE_177__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperPlant", function() { return _plant_js__WEBPACK_IMPORTED_MODULE_199__["default"]; });

/* harmony import */ var _wrapperReverse_js__WEBPACK_IMPORTED_MODULE_307__ = __webpack_require__(635);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperReverse", function() { return _wrapperReverse_js__WEBPACK_IMPORTED_MODULE_307__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperToIterator", function() { return _toIterator_js__WEBPACK_IMPORTED_MODULE_265__["default"]; });

/* harmony import */ var _wrapperValue_js__WEBPACK_IMPORTED_MODULE_308__ = __webpack_require__(596);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperValue", function() { return _wrapperValue_js__WEBPACK_IMPORTED_MODULE_308__["default"]; });

/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_309__ = __webpack_require__(636);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xor", function() { return _xor_js__WEBPACK_IMPORTED_MODULE_309__["default"]; });

/* harmony import */ var _xorBy_js__WEBPACK_IMPORTED_MODULE_310__ = __webpack_require__(638);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xorBy", function() { return _xorBy_js__WEBPACK_IMPORTED_MODULE_310__["default"]; });

/* harmony import */ var _xorWith_js__WEBPACK_IMPORTED_MODULE_311__ = __webpack_require__(639);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xorWith", function() { return _xorWith_js__WEBPACK_IMPORTED_MODULE_311__["default"]; });

/* harmony import */ var _zip_js__WEBPACK_IMPORTED_MODULE_312__ = __webpack_require__(640);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _zip_js__WEBPACK_IMPORTED_MODULE_312__["default"]; });

/* harmony import */ var _zipObject_js__WEBPACK_IMPORTED_MODULE_313__ = __webpack_require__(641);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipObject", function() { return _zipObject_js__WEBPACK_IMPORTED_MODULE_313__["default"]; });

/* harmony import */ var _zipObjectDeep_js__WEBPACK_IMPORTED_MODULE_314__ = __webpack_require__(643);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipObjectDeep", function() { return _zipObjectDeep_js__WEBPACK_IMPORTED_MODULE_314__["default"]; });

/* harmony import */ var _zipWith_js__WEBPACK_IMPORTED_MODULE_315__ = __webpack_require__(644);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipWith", function() { return _zipWith_js__WEBPACK_IMPORTED_MODULE_315__["default"]; });

/* harmony import */ var _lodash_default_js__WEBPACK_IMPORTED_MODULE_316__ = __webpack_require__(645);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _lodash_default_js__WEBPACK_IMPORTED_MODULE_316__["default"]; });

/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */




































































































































































































































































































































/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createMathOperation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34);


/**
 * Adds two numbers.
 *
 * @static
 * @memberOf _
 * @since 3.4.0
 * @category Math
 * @param {number} augend The first number in an addition.
 * @param {number} addend The second number in an addition.
 * @returns {number} Returns the total.
 * @example
 *
 * _.add(6, 4);
 * // => 10
 */
var add = Object(_createMathOperation_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(augend, addend) {
  return augend + addend;
}, 0);

/* harmony default export */ __webpack_exports__["default"] = (add);


/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseToNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45);



/**
 * Creates a function that performs a mathematical operation on two values.
 *
 * @private
 * @param {Function} operator The function to perform the operation.
 * @param {number} [defaultValue] The value used for `undefined` arguments.
 * @returns {Function} Returns the new mathematical operation function.
 */
function createMathOperation(operator, defaultValue) {
  return function(value, other) {
    var result;
    if (value === undefined && other === undefined) {
      return defaultValue;
    }
    if (value !== undefined) {
      result = value;
    }
    if (other !== undefined) {
      if (result === undefined) {
        return other;
      }
      if (typeof value == 'string' || typeof other == 'string') {
        value = Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value);
        other = Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(other);
      } else {
        value = Object(_baseToNumber_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
        other = Object(_baseToNumber_js__WEBPACK_IMPORTED_MODULE_0__["default"])(other);
      }
      result = operator(value, other);
    }
    return result;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createMathOperation);


/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36);


/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/**
 * The base implementation of `_.toNumber` which doesn't ensure correct
 * conversions of binary, hexadecimal, or octal string values.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 */
function baseToNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value)) {
    return NAN;
  }
  return +value;
}

/* harmony default export */ __webpack_exports__["default"] = (baseToNumber);


/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == symbolTag);
}

/* harmony default export */ __webpack_exports__["default"] = (isSymbol);


/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
/* harmony import */ var _getRawTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42);
/* harmony import */ var _objectToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(43);




/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"].toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? Object(_getRawTag_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value)
    : Object(_objectToString_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value);
}

/* harmony default export */ __webpack_exports__["default"] = (baseGetTag);


/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);


/** Built-in value references. */
var Symbol = _root_js__WEBPACK_IMPORTED_MODULE_0__["default"].Symbol;

/* harmony default export */ __webpack_exports__["default"] = (Symbol);


/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(40);


/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__["default"] || freeSelf || Function('return this')();

/* harmony default export */ __webpack_exports__["default"] = (root);


/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/* harmony default export */ __webpack_exports__["default"] = (freeGlobal);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(41)))

/***/ }),
/* 41 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"].toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (getRawTag);


/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

/* harmony default export */ __webpack_exports__["default"] = (objectToString);


/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/* harmony default export */ __webpack_exports__["default"] = (isObjectLike);


/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(36);





/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"].prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (Object(_isArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value, baseToString) + '';
  }
  if (Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseToString);


/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayMap);


/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/* harmony default export */ __webpack_exports__["default"] = (isArray);


/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(49);


/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * The opposite of `_.before`; this method creates a function that invokes
 * `func` once it's called `n` or more times.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {number} n The number of calls before `func` is invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var saves = ['profile', 'settings'];
 *
 * var done = _.after(saves.length, function() {
 *   console.log('done saving!');
 * });
 *
 * _.forEach(saves, function(type) {
 *   asyncSave({ 'type': type, 'complete': done });
 * });
 * // => Logs 'done saving!' after the two async saves have completed.
 */
function after(n, func) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_0__["default"])(n);
  return function() {
    if (--n < 1) {
      return func.apply(this, arguments);
    }
  };
}

/* harmony default export */ __webpack_exports__["default"] = (after);


/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toFinite_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50);


/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = Object(_toFinite_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

/* harmony default export */ __webpack_exports__["default"] = (toInteger);


/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51);


/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

/* harmony default export */ __webpack_exports__["default"] = (toFinite);


/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36);



/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value)) {
    return NAN;
  }
  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

/* harmony default export */ __webpack_exports__["default"] = (toNumber);


/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/* harmony default export */ __webpack_exports__["default"] = (isObject);


/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createWrap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54);


/** Used to compose bitmasks for function metadata. */
var WRAP_ARY_FLAG = 128;

/**
 * Creates a function that invokes `func`, with up to `n` arguments,
 * ignoring any additional arguments.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @param {number} [n=func.length] The arity cap.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.ary(parseInt, 1));
 * // => [6, 8, 10]
 */
function ary(func, n, guard) {
  n = guard ? undefined : n;
  n = (func && n == null) ? func.length : n;
  return Object(_createWrap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
}

/* harmony default export */ __webpack_exports__["default"] = (ary);


/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSetData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(55);
/* harmony import */ var _createBind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66);
/* harmony import */ var _createCurry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69);
/* harmony import */ var _createHybrid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71);
/* harmony import */ var _createPartial_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(107);
/* harmony import */ var _getData_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(79);
/* harmony import */ var _mergeData_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(108);
/* harmony import */ var _setData_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(87);
/* harmony import */ var _setWrapToString_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(89);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(49);











/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates a function that either curries or invokes `func` with optional
 * `this` binding and partially applied arguments.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags.
 *    1 - `_.bind`
 *    2 - `_.bindKey`
 *    4 - `_.curry` or `_.curryRight` of a bound function
 *    8 - `_.curry`
 *   16 - `_.curryRight`
 *   32 - `_.partial`
 *   64 - `_.partialRight`
 *  128 - `_.rearg`
 *  256 - `_.ary`
 *  512 - `_.flip`
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to be partially applied.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
  if (!isBindKey && typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
    partials = holders = undefined;
  }
  ary = ary === undefined ? ary : nativeMax(Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_9__["default"])(ary), 0);
  arity = arity === undefined ? arity : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_9__["default"])(arity);
  length -= holders ? holders.length : 0;

  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
    var partialsRight = partials,
        holdersRight = holders;

    partials = holders = undefined;
  }
  var data = isBindKey ? undefined : Object(_getData_js__WEBPACK_IMPORTED_MODULE_5__["default"])(func);

  var newData = [
    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
    argPos, ary, arity
  ];

  if (data) {
    Object(_mergeData_js__WEBPACK_IMPORTED_MODULE_6__["default"])(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === undefined
    ? (isBindKey ? 0 : func.length)
    : nativeMax(newData[9] - length, 0);

  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
    var result = Object(_createBind_js__WEBPACK_IMPORTED_MODULE_1__["default"])(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
    result = Object(_createCurry_js__WEBPACK_IMPORTED_MODULE_2__["default"])(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
    result = Object(_createPartial_js__WEBPACK_IMPORTED_MODULE_4__["default"])(func, bitmask, thisArg, partials);
  } else {
    result = _createHybrid_js__WEBPACK_IMPORTED_MODULE_3__["default"].apply(undefined, newData);
  }
  var setter = data ? _baseSetData_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _setData_js__WEBPACK_IMPORTED_MODULE_7__["default"];
  return Object(_setWrapToString_js__WEBPACK_IMPORTED_MODULE_8__["default"])(setter(result, newData), func, bitmask);
}

/* harmony default export */ __webpack_exports__["default"] = (createWrap);


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);
/* harmony import */ var _metaMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57);



/**
 * The base implementation of `setData` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var baseSetData = !_metaMap_js__WEBPACK_IMPORTED_MODULE_1__["default"] ? _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"] : function(func, data) {
  _metaMap_js__WEBPACK_IMPORTED_MODULE_1__["default"].set(func, data);
  return func;
};

/* harmony default export */ __webpack_exports__["default"] = (baseSetData);


/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/* harmony default export */ __webpack_exports__["default"] = (identity);


/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _WeakMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(58);


/** Used to store function metadata. */
var metaMap = _WeakMap_js__WEBPACK_IMPORTED_MODULE_0__["default"] && new _WeakMap_js__WEBPACK_IMPORTED_MODULE_0__["default"];

/* harmony default export */ __webpack_exports__["default"] = (metaMap);


/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);



/* Built-in method references that are verified to be native. */
var WeakMap = Object(_getNative_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_root_js__WEBPACK_IMPORTED_MODULE_1__["default"], 'WeakMap');

/* harmony default export */ __webpack_exports__["default"] = (WeakMap);


/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);
/* harmony import */ var _getValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(65);



/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = Object(_getValue_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, key);
  return Object(_baseIsNative_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) ? value : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (getNative);


/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(61);
/* harmony import */ var _isMasked_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52);
/* harmony import */ var _toSource_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(64);





/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value) || Object(_isMasked_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value)) {
    return false;
  }
  var pattern = Object(_isFunction_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) ? reIsNative : reIsHostCtor;
  return pattern.test(Object(_toSource_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value));
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsNative);


/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52);



/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/* harmony default export */ __webpack_exports__["default"] = (isFunction);


/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _coreJsData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63);


/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(_coreJsData_js__WEBPACK_IMPORTED_MODULE_0__["default"] && _coreJsData_js__WEBPACK_IMPORTED_MODULE_0__["default"].keys && _coreJsData_js__WEBPACK_IMPORTED_MODULE_0__["default"].keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/* harmony default export */ __webpack_exports__["default"] = (isMasked);


/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);


/** Used to detect overreaching core-js shims. */
var coreJsData = _root_js__WEBPACK_IMPORTED_MODULE_0__["default"]['__core-js_shared__'];

/* harmony default export */ __webpack_exports__["default"] = (coreJsData);


/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/* harmony default export */ __webpack_exports__["default"] = (toSource);


/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/* harmony default export */ __webpack_exports__["default"] = (getValue);


/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createCtor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);



/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the optional `this`
 * binding of `thisArg`.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = Object(_createCtor_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func);

  function wrapper() {
    var fn = (this && this !== _root_js__WEBPACK_IMPORTED_MODULE_1__["default"] && this instanceof wrapper) ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}

/* harmony default export */ __webpack_exports__["default"] = (createBind);


/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52);



/**
 * Creates a function that produces an instance of `Ctor` regardless of
 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
 *
 * @private
 * @param {Function} Ctor The constructor to wrap.
 * @returns {Function} Returns the new wrapped function.
 */
function createCtor(Ctor) {
  return function() {
    // Use a `switch` statement to work with class constructors. See
    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
    // for more details.
    var args = arguments;
    switch (args.length) {
      case 0: return new Ctor;
      case 1: return new Ctor(args[0]);
      case 2: return new Ctor(args[0], args[1]);
      case 3: return new Ctor(args[0], args[1], args[2]);
      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = Object(_baseCreate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Ctor.prototype),
        result = Ctor.apply(thisBinding, args);

    // Mimic the constructor's `return` behavior.
    // See https://es5.github.io/#x13.2.2 for more details.
    return Object(_isObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(result) ? result : thisBinding;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createCtor);


/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);


/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

/* harmony default export */ __webpack_exports__["default"] = (baseCreate);


/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _createCtor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67);
/* harmony import */ var _createHybrid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71);
/* harmony import */ var _createRecurry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75);
/* harmony import */ var _getHolder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(103);
/* harmony import */ var _replaceHolders_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(106);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(39);








/**
 * Creates a function that wraps `func` to enable currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {number} arity The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createCurry(func, bitmask, arity) {
  var Ctor = Object(_createCtor_js__WEBPACK_IMPORTED_MODULE_1__["default"])(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length,
        placeholder = Object(_getHolder_js__WEBPACK_IMPORTED_MODULE_4__["default"])(wrapper);

    while (index--) {
      args[index] = arguments[index];
    }
    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
      ? []
      : Object(_replaceHolders_js__WEBPACK_IMPORTED_MODULE_5__["default"])(args, placeholder);

    length -= holders.length;
    if (length < arity) {
      return Object(_createRecurry_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
        func, bitmask, _createHybrid_js__WEBPACK_IMPORTED_MODULE_2__["default"], wrapper.placeholder, undefined,
        args, holders, undefined, undefined, arity - length);
    }
    var fn = (this && this !== _root_js__WEBPACK_IMPORTED_MODULE_6__["default"] && this instanceof wrapper) ? Ctor : func;
    return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(fn, this, args);
  }
  return wrapper;
}

/* harmony default export */ __webpack_exports__["default"] = (createCurry);


/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/* harmony default export */ __webpack_exports__["default"] = (apply);


/***/ }),
/* 71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _composeArgs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(72);
/* harmony import */ var _composeArgsRight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(73);
/* harmony import */ var _countHolders_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74);
/* harmony import */ var _createCtor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(67);
/* harmony import */ var _createRecurry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75);
/* harmony import */ var _getHolder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(103);
/* harmony import */ var _reorder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(104);
/* harmony import */ var _replaceHolders_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(106);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(39);










/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_ARY_FLAG = 128,
    WRAP_FLIP_FLAG = 512;

/**
 * Creates a function that wraps `func` to invoke it with optional `this`
 * binding of `thisArg`, partial application, and currying.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [partialsRight] The arguments to append to those provided
 *  to the new function.
 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG,
      isBind = bitmask & WRAP_BIND_FLAG,
      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
      isFlip = bitmask & WRAP_FLIP_FLAG,
      Ctor = isBindKey ? undefined : Object(_createCtor_js__WEBPACK_IMPORTED_MODULE_3__["default"])(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length;

    while (index--) {
      args[index] = arguments[index];
    }
    if (isCurried) {
      var placeholder = Object(_getHolder_js__WEBPACK_IMPORTED_MODULE_5__["default"])(wrapper),
          holdersCount = Object(_countHolders_js__WEBPACK_IMPORTED_MODULE_2__["default"])(args, placeholder);
    }
    if (partials) {
      args = Object(_composeArgs_js__WEBPACK_IMPORTED_MODULE_0__["default"])(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = Object(_composeArgsRight_js__WEBPACK_IMPORTED_MODULE_1__["default"])(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = Object(_replaceHolders_js__WEBPACK_IMPORTED_MODULE_7__["default"])(args, placeholder);
      return Object(_createRecurry_js__WEBPACK_IMPORTED_MODULE_4__["default"])(
        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
        args, newHolders, argPos, ary, arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this,
        fn = isBindKey ? thisBinding[func] : func;

    length = args.length;
    if (argPos) {
      args = Object(_reorder_js__WEBPACK_IMPORTED_MODULE_6__["default"])(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary < length) {
      args.length = ary;
    }
    if (this && this !== _root_js__WEBPACK_IMPORTED_MODULE_8__["default"] && this instanceof wrapper) {
      fn = Ctor || Object(_createCtor_js__WEBPACK_IMPORTED_MODULE_3__["default"])(fn);
    }
    return fn.apply(thisBinding, args);
  }
  return wrapper;
}

/* harmony default export */ __webpack_exports__["default"] = (createHybrid);


/***/ }),
/* 72 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates an array that is the composition of partially applied arguments,
 * placeholders, and provided arguments into a single array of arguments.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to prepend to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersLength = holders.length,
      leftIndex = -1,
      leftLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(leftLength + rangeLength),
      isUncurried = !isCurried;

  while (++leftIndex < leftLength) {
    result[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result[leftIndex++] = args[argsIndex++];
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (composeArgs);


/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This function is like `composeArgs` except that the arguments composition
 * is tailored for `_.partialRight`.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to append to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersIndex = -1,
      holdersLength = holders.length,
      rightIndex = -1,
      rightLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(rangeLength + rightLength),
      isUncurried = !isCurried;

  while (++argsIndex < rangeLength) {
    result[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (composeArgsRight);


/***/ }),
/* 74 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Gets the number of `placeholder` occurrences in `array`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} placeholder The placeholder to search for.
 * @returns {number} Returns the placeholder count.
 */
function countHolders(array, placeholder) {
  var length = array.length,
      result = 0;

  while (length--) {
    if (array[length] === placeholder) {
      ++result;
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (countHolders);


/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isLaziable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76);
/* harmony import */ var _setData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87);
/* harmony import */ var _setWrapToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(89);




/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;

/**
 * Creates a function that wraps `func` to continue currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {Function} wrapFunc The function to create the `func` wrapper.
 * @param {*} placeholder The placeholder value.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG,
      newHolders = isCurry ? holders : undefined,
      newHoldersRight = isCurry ? undefined : holders,
      newPartials = isCurry ? partials : undefined,
      newPartialsRight = isCurry ? undefined : partials;

  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
  }
  var newData = [
    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
    newHoldersRight, argPos, ary, arity
  ];

  var result = wrapFunc.apply(undefined, newData);
  if (Object(_isLaziable_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func)) {
    Object(_setData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(result, newData);
  }
  result.placeholder = placeholder;
  return Object(_setWrapToString_js__WEBPACK_IMPORTED_MODULE_2__["default"])(result, func, bitmask);
}

/* harmony default export */ __webpack_exports__["default"] = (createRecurry);


/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _getData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79);
/* harmony import */ var _getFuncName_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81);
/* harmony import */ var _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(83);





/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable(func) {
  var funcName = Object(_getFuncName_js__WEBPACK_IMPORTED_MODULE_2__["default"])(func),
      other = _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_3__["default"][funcName];

  if (typeof other != 'function' || !(funcName in _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"].prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = Object(_getData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(other);
  return !!data && func === data[0];
}

/* harmony default export */ __webpack_exports__["default"] = (isLaziable);


/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68);
/* harmony import */ var _baseLodash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);



/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
 *
 * @private
 * @constructor
 * @param {*} value The value to wrap.
 */
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}

// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype = Object(_baseCreate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_baseLodash_js__WEBPACK_IMPORTED_MODULE_1__["default"].prototype);
LazyWrapper.prototype.constructor = LazyWrapper;

/* harmony default export */ __webpack_exports__["default"] = (LazyWrapper);


/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The function whose prototype chain sequence wrappers inherit from.
 *
 * @private
 */
function baseLodash() {
  // No operation performed.
}

/* harmony default export */ __webpack_exports__["default"] = (baseLodash);


/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _metaMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57);
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);



/**
 * Gets metadata for `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {*} Returns the metadata for `func`.
 */
var getData = !_metaMap_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? _noop_js__WEBPACK_IMPORTED_MODULE_1__["default"] : function(func) {
  return _metaMap_js__WEBPACK_IMPORTED_MODULE_0__["default"].get(func);
};

/* harmony default export */ __webpack_exports__["default"] = (getData);


/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

/* harmony default export */ __webpack_exports__["default"] = (noop);


/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _realNames_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82);


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the name of `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {string} Returns the function name.
 */
function getFuncName(func) {
  var result = (func.name + ''),
      array = _realNames_js__WEBPACK_IMPORTED_MODULE_0__["default"][result],
      length = hasOwnProperty.call(_realNames_js__WEBPACK_IMPORTED_MODULE_0__["default"], result) ? array.length : 0;

  while (length--) {
    var data = array[length],
        otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (getFuncName);


/***/ }),
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to lookup unminified function names. */
var realNames = {};

/* harmony default export */ __webpack_exports__["default"] = (realNames);


/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84);
/* harmony import */ var _baseLodash_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(44);
/* harmony import */ var _wrapperClone_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(85);







/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates a `lodash` object which wraps `value` to enable implicit method
 * chain sequences. Methods that operate on and return arrays, collections,
 * and functions can be chained together. Methods that retrieve a single value
 * or may return a primitive value will automatically end the chain sequence
 * and return the unwrapped value. Otherwise, the value must be unwrapped
 * with `_#value`.
 *
 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
 * enabled using `_.chain`.
 *
 * The execution of chained methods is lazy, that is, it's deferred until
 * `_#value` is implicitly or explicitly called.
 *
 * Lazy evaluation allows several methods to support shortcut fusion.
 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
 * the creation of intermediate arrays and can greatly reduce the number of
 * iteratee executions. Sections of a chain sequence qualify for shortcut
 * fusion if the section is applied to an array and iteratees accept only
 * one argument. The heuristic for whether a section qualifies for shortcut
 * fusion is subject to change.
 *
 * Chaining is supported in custom builds as long as the `_#value` method is
 * directly or indirectly included in the build.
 *
 * In addition to lodash methods, wrappers have `Array` and `String` methods.
 *
 * The wrapper `Array` methods are:
 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
 *
 * The wrapper `String` methods are:
 * `replace` and `split`
 *
 * The wrapper methods that support shortcut fusion are:
 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
 *
 * The chainable wrapper methods are:
 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
 * `zipObject`, `zipObjectDeep`, and `zipWith`
 *
 * The wrapper methods that are **not** chainable by default are:
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
 * `upperFirst`, `value`, and `words`
 *
 * @name _
 * @constructor
 * @category Seq
 * @param {*} value The value to wrap in a `lodash` instance.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2, 3]);
 *
 * // Returns an unwrapped value.
 * wrapped.reduce(_.add);
 * // => 6
 *
 * // Returns a wrapped value.
 * var squares = wrapped.map(square);
 *
 * _.isArray(squares);
 * // => false
 *
 * _.isArray(squares.value());
 * // => true
 */
function lodash(value) {
  if (Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_4__["default"])(value) && !Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value) && !(value instanceof _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"])) {
    if (value instanceof _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"]) {
      return value;
    }
    if (hasOwnProperty.call(value, '__wrapped__')) {
      return Object(_wrapperClone_js__WEBPACK_IMPORTED_MODULE_5__["default"])(value);
    }
  }
  return new _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"](value);
}

// Ensure wrappers are instances of `baseLodash`.
lodash.prototype = _baseLodash_js__WEBPACK_IMPORTED_MODULE_2__["default"].prototype;
lodash.prototype.constructor = lodash;

/* harmony default export */ __webpack_exports__["default"] = (lodash);


/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68);
/* harmony import */ var _baseLodash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);



/**
 * The base constructor for creating `lodash` wrapper objects.
 *
 * @private
 * @param {*} value The value to wrap.
 * @param {boolean} [chainAll] Enable explicit method chain sequences.
 */
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = undefined;
}

LodashWrapper.prototype = Object(_baseCreate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_baseLodash_js__WEBPACK_IMPORTED_MODULE_1__["default"].prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

/* harmony default export */ __webpack_exports__["default"] = (LodashWrapper);


/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86);




/**
 * Creates a clone of `wrapper`.
 *
 * @private
 * @param {Object} wrapper The wrapper to clone.
 * @returns {Object} Returns the cloned wrapper.
 */
function wrapperClone(wrapper) {
  if (wrapper instanceof _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    return wrapper.clone();
  }
  var result = new _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"](wrapper.__wrapped__, wrapper.__chain__);
  result.__actions__ = Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(wrapper.__actions__);
  result.__index__  = wrapper.__index__;
  result.__values__ = wrapper.__values__;
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (wrapperClone);


/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (copyArray);


/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSetData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(55);
/* harmony import */ var _shortOut_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88);



/**
 * Sets metadata for `func`.
 *
 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
 * period of time, it will trip its breaker and transition to an identity
 * function to avoid garbage collection pauses in V8. See
 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
 * for more details.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var setData = Object(_shortOut_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_baseSetData_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (setData);


/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (shortOut);


/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getWrapDetails_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90);
/* harmony import */ var _insertWrapDetails_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91);
/* harmony import */ var _setToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(92);
/* harmony import */ var _updateWrapDetails_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96);





/**
 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
 * with wrapper details in a comment at the top of the source body.
 *
 * @private
 * @param {Function} wrapper The function to modify.
 * @param {Function} reference The reference function.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Function} Returns `wrapper`.
 */
function setWrapToString(wrapper, reference, bitmask) {
  var source = (reference + '');
  return Object(_setToString_js__WEBPACK_IMPORTED_MODULE_2__["default"])(wrapper, Object(_insertWrapDetails_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source, Object(_updateWrapDetails_js__WEBPACK_IMPORTED_MODULE_3__["default"])(Object(_getWrapDetails_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source), bitmask)));
}

/* harmony default export */ __webpack_exports__["default"] = (setWrapToString);


/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to match wrap detail comments. */
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
    reSplitDetails = /,? & /;

/**
 * Extracts wrapper details from the `source` body comment.
 *
 * @private
 * @param {string} source The source to inspect.
 * @returns {Array} Returns the wrapper details.
 */
function getWrapDetails(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}

/* harmony default export */ __webpack_exports__["default"] = (getWrapDetails);


/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to match wrap detail comments. */
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;

/**
 * Inserts wrapper `details` in a comment at the top of the `source` body.
 *
 * @private
 * @param {string} source The source to modify.
 * @returns {Array} details The details to insert.
 * @returns {string} Returns the modified source.
 */
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
  details = details.join(length > 2 ? ', ' : ' ');
  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
}

/* harmony default export */ __webpack_exports__["default"] = (insertWrapDetails);


/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSetToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(93);
/* harmony import */ var _shortOut_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88);



/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = Object(_shortOut_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_baseSetToString_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (setToString);


/***/ }),
/* 93 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(94);
/* harmony import */ var _defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(95);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(56);




/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__["default"] ? _identity_js__WEBPACK_IMPORTED_MODULE_2__["default"] : function(func, string) {
  return Object(_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__["default"])(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(string),
    'writable': true
  });
};

/* harmony default export */ __webpack_exports__["default"] = (baseSetToString);


/***/ }),
/* 94 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (constant);


/***/ }),
/* 95 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59);


var defineProperty = (function() {
  try {
    var func = Object(_getNative_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

/* harmony default export */ __webpack_exports__["default"] = (defineProperty);


/***/ }),
/* 96 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97);
/* harmony import */ var _arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98);



/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256,
    WRAP_FLIP_FLAG = 512;

/** Used to associate wrap methods with their bit flags. */
var wrapFlags = [
  ['ary', WRAP_ARY_FLAG],
  ['bind', WRAP_BIND_FLAG],
  ['bindKey', WRAP_BIND_KEY_FLAG],
  ['curry', WRAP_CURRY_FLAG],
  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
  ['flip', WRAP_FLIP_FLAG],
  ['partial', WRAP_PARTIAL_FLAG],
  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
  ['rearg', WRAP_REARG_FLAG]
];

/**
 * Updates wrapper `details` based on `bitmask` flags.
 *
 * @private
 * @returns {Array} details The details to modify.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Array} Returns `details`.
 */
function updateWrapDetails(details, bitmask) {
  Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_0__["default"])(wrapFlags, function(pair) {
    var value = '_.' + pair[0];
    if ((bitmask & pair[1]) && !Object(_arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__["default"])(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}

/* harmony default export */ __webpack_exports__["default"] = (updateWrapDetails);


/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayEach);


/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99);


/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && Object(_baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, value, 0) > -1;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayIncludes);


/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFindIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(100);
/* harmony import */ var _baseIsNaN_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(101);
/* harmony import */ var _strictIndexOf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(102);




/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? Object(_strictIndexOf_js__WEBPACK_IMPORTED_MODULE_2__["default"])(array, value, fromIndex)
    : Object(_baseFindIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, _baseIsNaN_js__WEBPACK_IMPORTED_MODULE_1__["default"], fromIndex);
}

/* harmony default export */ __webpack_exports__["default"] = (baseIndexOf);


/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ __webpack_exports__["default"] = (baseFindIndex);


/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsNaN);


/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ __webpack_exports__["default"] = (strictIndexOf);


/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Gets the argument placeholder value for `func`.
 *
 * @private
 * @param {Function} func The function to inspect.
 * @returns {*} Returns the placeholder value.
 */
function getHolder(func) {
  var object = func;
  return object.placeholder;
}

/* harmony default export */ __webpack_exports__["default"] = (getHolder);


/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(105);



/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Reorder `array` according to the specified indexes where the element at
 * the first index is assigned as the first element, the element at
 * the second index is assigned as the second element, and so on.
 *
 * @private
 * @param {Array} array The array to reorder.
 * @param {Array} indexes The arranged array indexes.
 * @returns {Array} Returns `array`.
 */
function reorder(array, indexes) {
  var arrLength = array.length,
      length = nativeMin(indexes.length, arrLength),
      oldArray = Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array);

  while (length--) {
    var index = indexes[length];
    array[length] = Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_1__["default"])(index, arrLength) ? oldArray[index] : undefined;
  }
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (reorder);


/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/* harmony default export */ __webpack_exports__["default"] = (isIndex);


/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/**
 * Replaces all `placeholder` elements in `array` with an internal placeholder
 * and returns an array of their indexes.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {*} placeholder The placeholder to replace.
 * @returns {Array} Returns the new array of placeholder indexes.
 */
function replaceHolders(array, placeholder) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value === placeholder || value === PLACEHOLDER) {
      array[index] = PLACEHOLDER;
      result[resIndex++] = index;
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (replaceHolders);


/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _createCtor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(39);




/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the `this` binding
 * of `thisArg` and `partials` prepended to the arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} partials The arguments to prepend to those provided to
 *  the new function.
 * @returns {Function} Returns the new wrapped function.
 */
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = Object(_createCtor_js__WEBPACK_IMPORTED_MODULE_1__["default"])(func);

  function wrapper() {
    var argsIndex = -1,
        argsLength = arguments.length,
        leftIndex = -1,
        leftLength = partials.length,
        args = Array(leftLength + argsLength),
        fn = (this && this !== _root_js__WEBPACK_IMPORTED_MODULE_2__["default"] && this instanceof wrapper) ? Ctor : func;

    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(fn, isBind ? thisArg : this, args);
  }
  return wrapper;
}

/* harmony default export */ __webpack_exports__["default"] = (createPartial);


/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _composeArgs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(72);
/* harmony import */ var _composeArgsRight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(73);
/* harmony import */ var _replaceHolders_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(106);




/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Merges the function metadata of `source` into `data`.
 *
 * Merging metadata reduces the number of wrappers used to invoke a function.
 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
 * may be applied regardless of execution order. Methods like `_.ary` and
 * `_.rearg` modify function arguments, making the order in which they are
 * executed important, preventing the merging of metadata. However, we make
 * an exception for a safe combined case where curried functions have `_.ary`
 * and or `_.rearg` applied.
 *
 * @private
 * @param {Array} data The destination metadata.
 * @param {Array} source The source metadata.
 * @returns {Array} Returns `data`.
 */
function mergeData(data, source) {
  var bitmask = data[1],
      srcBitmask = source[1],
      newBitmask = bitmask | srcBitmask,
      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

  var isCombo =
    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

  // Exit early if metadata can't be merged.
  if (!(isCommon || isCombo)) {
    return data;
  }
  // Use source `thisArg` if available.
  if (srcBitmask & WRAP_BIND_FLAG) {
    data[2] = source[2];
    // Set when currying a bound function.
    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
  }
  // Compose partial arguments.
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? Object(_composeArgs_js__WEBPACK_IMPORTED_MODULE_0__["default"])(partials, value, source[4]) : value;
    data[4] = partials ? Object(_replaceHolders_js__WEBPACK_IMPORTED_MODULE_2__["default"])(data[3], PLACEHOLDER) : source[4];
  }
  // Compose partial right arguments.
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? Object(_composeArgsRight_js__WEBPACK_IMPORTED_MODULE_1__["default"])(partials, value, source[6]) : value;
    data[6] = partials ? Object(_replaceHolders_js__WEBPACK_IMPORTED_MODULE_2__["default"])(data[5], PLACEHOLDER) : source[6];
  }
  // Use source `argPos` if available.
  value = source[7];
  if (value) {
    data[7] = value;
  }
  // Use source `ary` if it's smaller.
  if (srcBitmask & WRAP_ARY_FLAG) {
    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
  }
  // Use source `arity` if one is not provided.
  if (data[9] == null) {
    data[9] = source[9];
  }
  // Use source `func` and merge bitmasks.
  data[0] = source[0];
  data[1] = newBitmask;

  return data;
}

/* harmony default export */ __webpack_exports__["default"] = (mergeData);


/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(110);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(113);
/* harmony import */ var _createAssigner_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(114);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(118);
/* harmony import */ var _isPrototype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(120);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(121);







/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = Object(_createAssigner_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function(object, source) {
  if (Object(_isPrototype_js__WEBPACK_IMPORTED_MODULE_4__["default"])(source) || Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_3__["default"])(source)) {
    Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source, Object(_keys_js__WEBPACK_IMPORTED_MODULE_5__["default"])(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      Object(_assignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, key, source[key]);
    }
  }
});

/* harmony default export */ __webpack_exports__["default"] = (assign);


/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(111);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(112);



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && Object(_eq_js__WEBPACK_IMPORTED_MODULE_1__["default"])(objValue, value)) ||
      (value === undefined && !(key in object))) {
    Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, key, value);
  }
}

/* harmony default export */ __webpack_exports__["default"] = (assignValue);


/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(95);


/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && _defineProperty_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    Object(_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

/* harmony default export */ __webpack_exports__["default"] = (baseAssignValue);


/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/* harmony default export */ __webpack_exports__["default"] = (eq);


/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(110);
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(111);



/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, key, newValue);
    } else {
      Object(_assignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, key, newValue);
    }
  }
  return object;
}

/* harmony default export */ __webpack_exports__["default"] = (copyObject);


/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(117);



/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__["default"])(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/* harmony default export */ __webpack_exports__["default"] = (createAssigner);


/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);
/* harmony import */ var _overRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(116);
/* harmony import */ var _setToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(92);




/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return Object(_setToString_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_overRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(func, start, _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"]), func + '');
}

/* harmony default export */ __webpack_exports__["default"] = (baseRest);


/***/ }),
/* 116 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, this, otherArgs);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (overRest);


/***/ }),
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(112);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(118);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(105);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52);





/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object) && Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_2__["default"])(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return Object(_eq_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object[index], value);
  }
  return false;
}

/* harmony default export */ __webpack_exports__["default"] = (isIterateeCall);


/***/ }),
/* 118 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(61);
/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(119);



/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && Object(_isLength_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value.length) && !Object(_isFunction_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
}

/* harmony default export */ __webpack_exports__["default"] = (isArrayLike);


/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/* harmony default export */ __webpack_exports__["default"] = (isLength);


/***/ }),
/* 120 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/* harmony default export */ __webpack_exports__["default"] = (isPrototype);


/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayLikeKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _baseKeys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(133);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(118);




/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object) ? Object(_arrayLikeKeys_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object) : Object(_baseKeys_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object);
}

/* harmony default export */ __webpack_exports__["default"] = (keys);


/***/ }),
/* 122 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseTimes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(123);
/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(124);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47);
/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(126);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(105);
/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(129);







/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value),
      isArg = !isArr && Object(_isArguments_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value),
      isBuff = !isArr && !isArg && Object(_isBuffer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value),
      isType = !isArr && !isArg && !isBuff && Object(_isTypedArray_js__WEBPACK_IMPORTED_MODULE_5__["default"])(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? Object(_baseTimes_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_4__["default"])(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayLikeKeys);


/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseTimes);


/***/ }),
/* 124 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsArguments_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(125);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = Object(_baseIsArguments_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function() { return arguments; }()) ? _baseIsArguments_js__WEBPACK_IMPORTED_MODULE_0__["default"] : function(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/* harmony default export */ __webpack_exports__["default"] = (isArguments);


/***/ }),
/* 125 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == argsTag;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsArguments);


/***/ }),
/* 126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);
/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(128);



/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__["default"].Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__["default"];

/* harmony default export */ __webpack_exports__["default"] = (isBuffer);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(127)(module)))

/***/ }),
/* 127 */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 128 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

/* harmony default export */ __webpack_exports__["default"] = (stubFalse);


/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsTypedArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(130);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(131);
/* harmony import */ var _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(132);




/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"] && _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"].isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_1__["default"])(nodeIsTypedArray) : _baseIsTypedArray_js__WEBPACK_IMPORTED_MODULE_0__["default"];

/* harmony default export */ __webpack_exports__["default"] = (isTypedArray);


/***/ }),
/* 130 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(119);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(44);




/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value) &&
    Object(_isLength_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value.length) && !!typedArrayTags[Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value)];
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsTypedArray);


/***/ }),
/* 131 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (baseUnary);


/***/ }),
/* 132 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(40);


/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__["default"].process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* harmony default export */ __webpack_exports__["default"] = (nodeUtil);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(127)(module)))

/***/ }),
/* 133 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isPrototype_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(120);
/* harmony import */ var _nativeKeys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(134);



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!Object(_isPrototype_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object)) {
    return Object(_nativeKeys_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseKeys);


/***/ }),
/* 134 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _overArg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(135);


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = Object(_overArg_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object.keys, Object);

/* harmony default export */ __webpack_exports__["default"] = (nativeKeys);


/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* harmony default export */ __webpack_exports__["default"] = (overArg);


/***/ }),
/* 136 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(113);
/* harmony import */ var _createAssigner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(114);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);




/**
 * This method is like `_.assign` except that it iterates over own and
 * inherited source properties.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias extend
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assign
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assignIn({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
 */
var assignIn = Object(_createAssigner_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(object, source) {
  Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source, Object(_keysIn_js__WEBPACK_IMPORTED_MODULE_2__["default"])(source), object);
});

/* harmony default export */ __webpack_exports__["default"] = (assignIn);


/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayLikeKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _baseKeysIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(138);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(118);




/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object) ? Object(_arrayLikeKeys_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, true) : Object(_baseKeysIn_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object);
}

/* harmony default export */ __webpack_exports__["default"] = (keysIn);


/***/ }),
/* 138 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _isPrototype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(120);
/* harmony import */ var _nativeKeysIn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(139);




/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object)) {
    return Object(_nativeKeysIn_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object);
  }
  var isProto = Object(_isPrototype_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseKeysIn);


/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (nativeKeysIn);


/***/ }),
/* 140 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(113);
/* harmony import */ var _createAssigner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(114);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);




/**
 * This method is like `_.assignIn` except that it accepts `customizer`
 * which is invoked to produce the assigned values. If `customizer` returns
 * `undefined`, assignment is handled by the method instead. The `customizer`
 * is invoked with five arguments: (objValue, srcValue, key, object, source).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias extendWith
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @see _.assignWith
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   return _.isUndefined(objValue) ? srcValue : objValue;
 * }
 *
 * var defaults = _.partialRight(_.assignInWith, customizer);
 *
 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var assignInWith = Object(_createAssigner_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(object, source, srcIndex, customizer) {
  Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source, Object(_keysIn_js__WEBPACK_IMPORTED_MODULE_2__["default"])(source), object, customizer);
});

/* harmony default export */ __webpack_exports__["default"] = (assignInWith);


/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(113);
/* harmony import */ var _createAssigner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(114);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(121);




/**
 * This method is like `_.assign` except that it accepts `customizer`
 * which is invoked to produce the assigned values. If `customizer` returns
 * `undefined`, assignment is handled by the method instead. The `customizer`
 * is invoked with five arguments: (objValue, srcValue, key, object, source).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @see _.assignInWith
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   return _.isUndefined(objValue) ? srcValue : objValue;
 * }
 *
 * var defaults = _.partialRight(_.assignWith, customizer);
 *
 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var assignWith = Object(_createAssigner_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(object, source, srcIndex, customizer) {
  Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source, Object(_keys_js__WEBPACK_IMPORTED_MODULE_2__["default"])(source), object, customizer);
});

/* harmony default export */ __webpack_exports__["default"] = (assignWith);


/***/ }),
/* 142 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseAt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(143);
/* harmony import */ var _flatRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(176);



/**
 * Creates an array of values corresponding to `paths` of `object`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Array} Returns the picked values.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
 *
 * _.at(object, ['a[0].b.c', 'a[1]']);
 * // => [3, 4]
 */
var at = Object(_flatRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_baseAt_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (at);


/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _get_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(144);


/**
 * The base implementation of `_.at` without support for individual paths.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {string[]} paths The property paths to pick.
 * @returns {Array} Returns the picked elements.
 */
function baseAt(object, paths) {
  var index = -1,
      length = paths.length,
      result = Array(length),
      skip = object == null;

  while (++index < length) {
    result[index] = skip ? undefined : Object(_get_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, paths[index]);
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseAt);


/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(145);


/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : Object(_baseGet_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path);
  return result === undefined ? defaultValue : result;
}

/* harmony default export */ __webpack_exports__["default"] = (get);


/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(146);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(175);



/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = Object(_castPath_js__WEBPACK_IMPORTED_MODULE_0__["default"])(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[Object(_toKey_js__WEBPACK_IMPORTED_MODULE_1__["default"])(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (baseGet);


/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(47);
/* harmony import */ var _isKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(147);
/* harmony import */ var _stringToPath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(148);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (Object(_isArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value)) {
    return value;
  }
  return Object(_isKey_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value, object) ? [value] : Object(_stringToPath_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value));
}

/* harmony default export */ __webpack_exports__["default"] = (castPath);


/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(47);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36);



/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (Object(_isArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/* harmony default export */ __webpack_exports__["default"] = (isKey);


/***/ }),
/* 148 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _memoizeCapped_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(149);


/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = Object(_memoizeCapped_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/* harmony default export */ __webpack_exports__["default"] = (stringToPath);


/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(150);


/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = Object(_memoize_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (memoizeCapped);


/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _MapCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(151);


/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || _MapCache_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = _MapCache_js__WEBPACK_IMPORTED_MODULE_0__["default"];

/* harmony default export */ __webpack_exports__["default"] = (memoize);


/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mapCacheClear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(152);
/* harmony import */ var _mapCacheDelete_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(168);
/* harmony import */ var _mapCacheGet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(171);
/* harmony import */ var _mapCacheHas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(172);
/* harmony import */ var _mapCacheSet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(173);






/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear_js__WEBPACK_IMPORTED_MODULE_0__["default"];
MapCache.prototype['delete'] = _mapCacheDelete_js__WEBPACK_IMPORTED_MODULE_1__["default"];
MapCache.prototype.get = _mapCacheGet_js__WEBPACK_IMPORTED_MODULE_2__["default"];
MapCache.prototype.has = _mapCacheHas_js__WEBPACK_IMPORTED_MODULE_3__["default"];
MapCache.prototype.set = _mapCacheSet_js__WEBPACK_IMPORTED_MODULE_4__["default"];

/* harmony default export */ __webpack_exports__["default"] = (MapCache);


/***/ }),
/* 152 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Hash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(153);
/* harmony import */ var _ListCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(160);
/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(167);




/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    'map': new (_Map_js__WEBPACK_IMPORTED_MODULE_2__["default"] || _ListCache_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
    'string': new _Hash_js__WEBPACK_IMPORTED_MODULE_0__["default"]
  };
}

/* harmony default export */ __webpack_exports__["default"] = (mapCacheClear);


/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hashClear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(154);
/* harmony import */ var _hashDelete_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(156);
/* harmony import */ var _hashGet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(157);
/* harmony import */ var _hashHas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(158);
/* harmony import */ var _hashSet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(159);






/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = _hashClear_js__WEBPACK_IMPORTED_MODULE_0__["default"];
Hash.prototype['delete'] = _hashDelete_js__WEBPACK_IMPORTED_MODULE_1__["default"];
Hash.prototype.get = _hashGet_js__WEBPACK_IMPORTED_MODULE_2__["default"];
Hash.prototype.has = _hashHas_js__WEBPACK_IMPORTED_MODULE_3__["default"];
Hash.prototype.set = _hashSet_js__WEBPACK_IMPORTED_MODULE_4__["default"];

/* harmony default export */ __webpack_exports__["default"] = (Hash);


/***/ }),
/* 154 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(155);


/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? Object(_nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(null) : {};
  this.size = 0;
}

/* harmony default export */ __webpack_exports__["default"] = (hashClear);


/***/ }),
/* 155 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59);


/* Built-in method references that are verified to be native. */
var nativeCreate = Object(_getNative_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object, 'create');

/* harmony default export */ __webpack_exports__["default"] = (nativeCreate);


/***/ }),
/* 156 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (hashDelete);


/***/ }),
/* 157 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(155);


/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (_nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (hashGet);


/***/ }),
/* 158 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(155);


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

/* harmony default export */ __webpack_exports__["default"] = (hashHas);


/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(155);


/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (_nativeCreate_js__WEBPACK_IMPORTED_MODULE_0__["default"] && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

/* harmony default export */ __webpack_exports__["default"] = (hashSet);


/***/ }),
/* 160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _listCacheClear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(161);
/* harmony import */ var _listCacheDelete_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(162);
/* harmony import */ var _listCacheGet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(164);
/* harmony import */ var _listCacheHas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(165);
/* harmony import */ var _listCacheSet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(166);






/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear_js__WEBPACK_IMPORTED_MODULE_0__["default"];
ListCache.prototype['delete'] = _listCacheDelete_js__WEBPACK_IMPORTED_MODULE_1__["default"];
ListCache.prototype.get = _listCacheGet_js__WEBPACK_IMPORTED_MODULE_2__["default"];
ListCache.prototype.has = _listCacheHas_js__WEBPACK_IMPORTED_MODULE_3__["default"];
ListCache.prototype.set = _listCacheSet_js__WEBPACK_IMPORTED_MODULE_4__["default"];

/* harmony default export */ __webpack_exports__["default"] = (ListCache);


/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/* harmony default export */ __webpack_exports__["default"] = (listCacheClear);


/***/ }),
/* 162 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(163);


/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = Object(_assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/* harmony default export */ __webpack_exports__["default"] = (listCacheDelete);


/***/ }),
/* 163 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(112);


/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (Object(_eq_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/* harmony default export */ __webpack_exports__["default"] = (assocIndexOf);


/***/ }),
/* 164 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(163);


/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = Object(_assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(data, key);

  return index < 0 ? undefined : data[index][1];
}

/* harmony default export */ __webpack_exports__["default"] = (listCacheGet);


/***/ }),
/* 165 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(163);


/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return Object(_assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this.__data__, key) > -1;
}

/* harmony default export */ __webpack_exports__["default"] = (listCacheHas);


/***/ }),
/* 166 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(163);


/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = Object(_assocIndexOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

/* harmony default export */ __webpack_exports__["default"] = (listCacheSet);


/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);



/* Built-in method references that are verified to be native. */
var Map = Object(_getNative_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_root_js__WEBPACK_IMPORTED_MODULE_1__["default"], 'Map');

/* harmony default export */ __webpack_exports__["default"] = (Map);


/***/ }),
/* 168 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getMapData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(169);


/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = Object(_getMapData_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (mapCacheDelete);


/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isKeyable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(170);


/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return Object(_isKeyable_js__WEBPACK_IMPORTED_MODULE_0__["default"])(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/* harmony default export */ __webpack_exports__["default"] = (getMapData);


/***/ }),
/* 170 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/* harmony default export */ __webpack_exports__["default"] = (isKeyable);


/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getMapData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(169);


/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return Object(_getMapData_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, key).get(key);
}

/* harmony default export */ __webpack_exports__["default"] = (mapCacheGet);


/***/ }),
/* 172 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getMapData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(169);


/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return Object(_getMapData_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, key).has(key);
}

/* harmony default export */ __webpack_exports__["default"] = (mapCacheHas);


/***/ }),
/* 173 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getMapData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(169);


/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = Object(_getMapData_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

/* harmony default export */ __webpack_exports__["default"] = (mapCacheSet);


/***/ }),
/* 174 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45);


/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
}

/* harmony default export */ __webpack_exports__["default"] = (toString);


/***/ }),
/* 175 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36);


/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/* harmony default export */ __webpack_exports__["default"] = (toKey);


/***/ }),
/* 176 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _flatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(177);
/* harmony import */ var _overRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(116);
/* harmony import */ var _setToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(92);




/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return Object(_setToString_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_overRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(func, undefined, _flatten_js__WEBPACK_IMPORTED_MODULE_0__["default"]), func + '');
}

/* harmony default export */ __webpack_exports__["default"] = (flatRest);


/***/ }),
/* 177 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);


/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, 1) : [];
}

/* harmony default export */ __webpack_exports__["default"] = (flatten);


/***/ }),
/* 178 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayPush_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(179);
/* harmony import */ var _isFlattenable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(180);



/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = _isFlattenable_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        Object(_arrayPush_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseFlatten);


/***/ }),
/* 179 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayPush);


/***/ }),
/* 180 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(124);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47);




/** Built-in value references. */
var spreadableSymbol = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"].isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return Object(_isArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value) || Object(_isArguments_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

/* harmony default export */ __webpack_exports__["default"] = (isFlattenable);


/***/ }),
/* 181 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony import */ var _isError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(182);




/**
 * Attempts to invoke `func`, returning either the result or the caught error
 * object. Any additional arguments are provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Function} func The function to attempt.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {*} Returns the `func` result or error object.
 * @example
 *
 * // Avoid throwing errors for invalid selectors.
 * var elements = _.attempt(function(selector) {
 *   return document.querySelectorAll(selector);
 * }, '>_>');
 *
 * if (_.isError(elements)) {
 *   elements = [];
 * }
 */
var attempt = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(func, args) {
  try {
    return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, undefined, args);
  } catch (e) {
    return Object(_isError_js__WEBPACK_IMPORTED_MODULE_2__["default"])(e) ? e : new Error(e);
  }
});

/* harmony default export */ __webpack_exports__["default"] = (attempt);


/***/ }),
/* 182 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);
/* harmony import */ var _isPlainObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(183);




/** `Object#toString` result references. */
var domExcTag = '[object DOMException]',
    errorTag = '[object Error]';

/**
 * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
 * `SyntaxError`, `TypeError`, or `URIError` object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
 * @example
 *
 * _.isError(new Error);
 * // => true
 *
 * _.isError(Error);
 * // => false
 */
function isError(value) {
  if (!Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value)) {
    return false;
  }
  var tag = Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
  return tag == errorTag || tag == domExcTag ||
    (typeof value.message == 'string' && typeof value.name == 'string' && !Object(_isPlainObject_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value));
}

/* harmony default export */ __webpack_exports__["default"] = (isError);


/***/ }),
/* 183 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _getPrototype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(184);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(44);




/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value) || Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) != objectTag) {
    return false;
  }
  var proto = Object(_getPrototype_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

/* harmony default export */ __webpack_exports__["default"] = (isPlainObject);


/***/ }),
/* 184 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _overArg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(135);


/** Built-in value references. */
var getPrototype = Object(_overArg_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object.getPrototypeOf, Object);

/* harmony default export */ __webpack_exports__["default"] = (getPrototype);


/***/ }),
/* 185 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(49);


/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that invokes `func`, with the `this` binding and arguments
 * of the created function, while it's called less than `n` times. Subsequent
 * calls to the created function return the result of the last `func` invocation.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {number} n The number of calls at which `func` is no longer invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * jQuery(element).on('click', _.before(5, addContactToList));
 * // => Allows adding up to 4 contacts to the list.
 */
function before(n, func) {
  var result;
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_0__["default"])(n);
  return function() {
    if (--n > 0) {
      result = func.apply(this, arguments);
    }
    if (n <= 1) {
      func = undefined;
    }
    return result;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (before);


/***/ }),
/* 186 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _createWrap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
/* harmony import */ var _getHolder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(103);
/* harmony import */ var _replaceHolders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(106);





/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_PARTIAL_FLAG = 32;

/**
 * Creates a function that invokes `func` with the `this` binding of `thisArg`
 * and `partials` prepended to the arguments it receives.
 *
 * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for partially applied arguments.
 *
 * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
 * property of bound functions.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to bind.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new bound function.
 * @example
 *
 * function greet(greeting, punctuation) {
 *   return greeting + ' ' + this.user + punctuation;
 * }
 *
 * var object = { 'user': 'fred' };
 *
 * var bound = _.bind(greet, object, 'hi');
 * bound('!');
 * // => 'hi fred!'
 *
 * // Bound with placeholders.
 * var bound = _.bind(greet, object, _, '!');
 * bound('hi');
 * // => 'hi fred!'
 */
var bind = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(func, thisArg, partials) {
  var bitmask = WRAP_BIND_FLAG;
  if (partials.length) {
    var holders = Object(_replaceHolders_js__WEBPACK_IMPORTED_MODULE_3__["default"])(partials, Object(_getHolder_js__WEBPACK_IMPORTED_MODULE_2__["default"])(bind));
    bitmask |= WRAP_PARTIAL_FLAG;
  }
  return Object(_createWrap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(func, bitmask, thisArg, partials, holders);
});

// Assign default placeholders.
bind.placeholder = {};

/* harmony default export */ __webpack_exports__["default"] = (bind);


/***/ }),
/* 187 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97);
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(111);
/* harmony import */ var _bind_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(186);
/* harmony import */ var _flatRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(176);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(175);






/**
 * Binds methods of an object to the object itself, overwriting the existing
 * method.
 *
 * **Note:** This method doesn't set the "length" property of bound functions.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {Object} object The object to bind and assign the bound methods to.
 * @param {...(string|string[])} methodNames The object method names to bind.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var view = {
 *   'label': 'docs',
 *   'click': function() {
 *     console.log('clicked ' + this.label);
 *   }
 * };
 *
 * _.bindAll(view, ['click']);
 * jQuery(element).on('click', view.click);
 * // => Logs 'clicked docs' when clicked.
 */
var bindAll = Object(_flatRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])(function(object, methodNames) {
  Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_0__["default"])(methodNames, function(key) {
    key = Object(_toKey_js__WEBPACK_IMPORTED_MODULE_4__["default"])(key);
    Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, key, Object(_bind_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object[key], object));
  });
  return object;
});

/* harmony default export */ __webpack_exports__["default"] = (bindAll);


/***/ }),
/* 188 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _createWrap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
/* harmony import */ var _getHolder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(103);
/* harmony import */ var _replaceHolders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(106);





/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_PARTIAL_FLAG = 32;

/**
 * Creates a function that invokes the method at `object[key]` with `partials`
 * prepended to the arguments it receives.
 *
 * This method differs from `_.bind` by allowing bound functions to reference
 * methods that may be redefined or don't yet exist. See
 * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
 * for more details.
 *
 * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Function
 * @param {Object} object The object to invoke the method on.
 * @param {string} key The key of the method.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new bound function.
 * @example
 *
 * var object = {
 *   'user': 'fred',
 *   'greet': function(greeting, punctuation) {
 *     return greeting + ' ' + this.user + punctuation;
 *   }
 * };
 *
 * var bound = _.bindKey(object, 'greet', 'hi');
 * bound('!');
 * // => 'hi fred!'
 *
 * object.greet = function(greeting, punctuation) {
 *   return greeting + 'ya ' + this.user + punctuation;
 * };
 *
 * bound('!');
 * // => 'hiya fred!'
 *
 * // Bound with placeholders.
 * var bound = _.bindKey(object, 'greet', _, '!');
 * bound('hi');
 * // => 'hiya fred!'
 */
var bindKey = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(object, key, partials) {
  var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
  if (partials.length) {
    var holders = Object(_replaceHolders_js__WEBPACK_IMPORTED_MODULE_3__["default"])(partials, Object(_getHolder_js__WEBPACK_IMPORTED_MODULE_2__["default"])(bindKey));
    bitmask |= WRAP_PARTIAL_FLAG;
  }
  return Object(_createWrap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(key, bitmask, object, partials, holders);
});

// Assign default placeholders.
bindKey.placeholder = {};

/* harmony default export */ __webpack_exports__["default"] = (bindKey);


/***/ }),
/* 189 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _capitalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(190);
/* harmony import */ var _createCompounder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(199);



/**
 * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the camel cased string.
 * @example
 *
 * _.camelCase('Foo Bar');
 * // => 'fooBar'
 *
 * _.camelCase('--foo-bar--');
 * // => 'fooBar'
 *
 * _.camelCase('__FOO_BAR__');
 * // => 'fooBar'
 */
var camelCase = Object(_createCompounder_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(result, word, index) {
  word = word.toLowerCase();
  return result + (index ? Object(_capitalize_js__WEBPACK_IMPORTED_MODULE_0__["default"])(word) : word);
});

/* harmony default export */ __webpack_exports__["default"] = (camelCase);


/***/ }),
/* 190 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);
/* harmony import */ var _upperFirst_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(191);



/**
 * Converts the first character of `string` to upper case and the remaining
 * to lower case.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('FRED');
 * // => 'Fred'
 */
function capitalize(string) {
  return Object(_upperFirst_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_toString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(string).toLowerCase());
}

/* harmony default export */ __webpack_exports__["default"] = (capitalize);


/***/ }),
/* 191 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createCaseFirst_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(192);


/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = Object(_createCaseFirst_js__WEBPACK_IMPORTED_MODULE_0__["default"])('toUpperCase');

/* harmony default export */ __webpack_exports__["default"] = (upperFirst);


/***/ }),
/* 192 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _castSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(193);
/* harmony import */ var _hasUnicode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(195);
/* harmony import */ var _stringToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(196);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function(string) {
    string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string);

    var strSymbols = Object(_hasUnicode_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string)
      ? Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(string)
      : undefined;

    var chr = strSymbols
      ? strSymbols[0]
      : string.charAt(0);

    var trailing = strSymbols
      ? Object(_castSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(strSymbols, 1).join('')
      : string.slice(1);

    return chr[methodName]() + trailing;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createCaseFirst);


/***/ }),
/* 193 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);


/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, start, end);
}

/* harmony default export */ __webpack_exports__["default"] = (castSlice);


/***/ }),
/* 194 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseSlice);


/***/ }),
/* 195 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

/* harmony default export */ __webpack_exports__["default"] = (hasUnicode);


/***/ }),
/* 196 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _asciiToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(197);
/* harmony import */ var _hasUnicode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(195);
/* harmony import */ var _unicodeToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(198);




/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return Object(_hasUnicode_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string)
    ? Object(_unicodeToArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(string)
    : Object(_asciiToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(string);
}

/* harmony default export */ __webpack_exports__["default"] = (stringToArray);


/***/ }),
/* 197 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

/* harmony default export */ __webpack_exports__["default"] = (asciiToArray);


/***/ }),
/* 198 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

/* harmony default export */ __webpack_exports__["default"] = (unicodeToArray);


/***/ }),
/* 199 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayReduce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(200);
/* harmony import */ var _deburr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(201);
/* harmony import */ var _words_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(204);




/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]";

/** Used to match apostrophes. */
var reApos = RegExp(rsApos, 'g');

/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */
function createCompounder(callback) {
  return function(string) {
    return Object(_arrayReduce_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_words_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_deburr_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string).replace(reApos, '')), callback, '');
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createCompounder);


/***/ }),
/* 200 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayReduce);


/***/ }),
/* 201 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _deburrLetter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(202);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(174);



/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;

/** Used to compose unicode capture groups. */
var rsCombo = '[' + rsComboRange + ']';

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(rsCombo, 'g');

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string);
  return string && string.replace(reLatin, _deburrLetter_js__WEBPACK_IMPORTED_MODULE_0__["default"]).replace(reComboMark, '');
}

/* harmony default export */ __webpack_exports__["default"] = (deburr);


/***/ }),
/* 202 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basePropertyOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(203);


/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 's'
};

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = Object(_basePropertyOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(deburredLetters);

/* harmony default export */ __webpack_exports__["default"] = (deburrLetter);


/***/ }),
/* 203 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

/* harmony default export */ __webpack_exports__["default"] = (basePropertyOf);


/***/ }),
/* 204 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _asciiWords_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(205);
/* harmony import */ var _hasUnicodeWord_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(206);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(174);
/* harmony import */ var _unicodeWords_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(207);





/**
 * Splits `string` into an array of its words.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {RegExp|string} [pattern] The pattern to match words.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the words of `string`.
 * @example
 *
 * _.words('fred, barney, & pebbles');
 * // => ['fred', 'barney', 'pebbles']
 *
 * _.words('fred, barney, & pebbles', /[^, ]+/g);
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(string, pattern, guard) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_2__["default"])(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return Object(_hasUnicodeWord_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string) ? Object(_unicodeWords_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string) : Object(_asciiWords_js__WEBPACK_IMPORTED_MODULE_0__["default"])(string);
  }
  return string.match(pattern) || [];
}

/* harmony default export */ __webpack_exports__["default"] = (words);


/***/ }),
/* 205 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to match words composed of alphanumeric characters. */
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

/**
 * Splits an ASCII `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

/* harmony default export */ __webpack_exports__["default"] = (asciiWords);


/***/ }),
/* 206 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to detect strings that need a more robust regexp to match words. */
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

/**
 * Checks if `string` contains a word composed of Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a word is found, else `false`.
 */
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

/* harmony default export */ __webpack_exports__["default"] = (hasUnicodeWord);


/***/ }),
/* 207 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]",
    rsBreak = '[' + rsBreakRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
    rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;

/** Used to match complex or compound words. */
var reUnicodeWord = RegExp([
  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
  rsUpper + '+' + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join('|'), 'g');

/**
 * Splits a Unicode `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}

/* harmony default export */ __webpack_exports__["default"] = (unicodeWords);


/***/ }),
/* 208 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(47);


/**
 * Casts `value` as an array if it's not one.
 *
 * @static
 * @memberOf _
 * @since 4.4.0
 * @category Lang
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast array.
 * @example
 *
 * _.castArray(1);
 * // => [1]
 *
 * _.castArray({ 'a': 1 });
 * // => [{ 'a': 1 }]
 *
 * _.castArray('abc');
 * // => ['abc']
 *
 * _.castArray(null);
 * // => [null]
 *
 * _.castArray(undefined);
 * // => [undefined]
 *
 * _.castArray();
 * // => []
 *
 * var array = [1, 2, 3];
 * console.log(_.castArray(array) === array);
 * // => true
 */
function castArray() {
  if (!arguments.length) {
    return [];
  }
  var value = arguments[0];
  return Object(_isArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) ? value : [value];
}

/* harmony default export */ __webpack_exports__["default"] = (castArray);


/***/ }),
/* 209 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createRound_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(210);


/**
 * Computes `number` rounded up to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round up.
 * @param {number} [precision=0] The precision to round up to.
 * @returns {number} Returns the rounded up number.
 * @example
 *
 * _.ceil(4.006);
 * // => 5
 *
 * _.ceil(6.004, 2);
 * // => 6.01
 *
 * _.ceil(6040, -2);
 * // => 6100
 */
var ceil = Object(_createRound_js__WEBPACK_IMPORTED_MODULE_0__["default"])('ceil');

/* harmony default export */ __webpack_exports__["default"] = (ceil);


/***/ }),
/* 210 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsFinite = _root_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFinite,
    nativeMin = Math.min;

/**
 * Creates a function like `_.round`.
 *
 * @private
 * @param {string} methodName The name of the `Math` method to use when rounding.
 * @returns {Function} Returns the new round function.
 */
function createRound(methodName) {
  var func = Math[methodName];
  return function(number, precision) {
    number = Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_2__["default"])(number);
    precision = precision == null ? 0 : nativeMin(Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(precision), 292);
    if (precision && nativeIsFinite(number)) {
      // Shift with exponential notation to avoid floating-point issues.
      // See [MDN](https://mdn.io/round#Examples) for more details.
      var pair = (Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(number) + 'e').split('e'),
          value = func(pair[0] + 'e' + (+pair[1] + precision));

      pair = (Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value) + 'e').split('e');
      return +(pair[0] + 'e' + (+pair[1] - precision));
    }
    return func(number);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createRound);


/***/ }),
/* 211 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(83);


/**
 * Creates a `lodash` wrapper instance that wraps `value` with explicit method
 * chain sequences enabled. The result of such sequences must be unwrapped
 * with `_#value`.
 *
 * @static
 * @memberOf _
 * @since 1.3.0
 * @category Seq
 * @param {*} value The value to wrap.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36 },
 *   { 'user': 'fred',    'age': 40 },
 *   { 'user': 'pebbles', 'age': 1 }
 * ];
 *
 * var youngest = _
 *   .chain(users)
 *   .sortBy('age')
 *   .map(function(o) {
 *     return o.user + ' is ' + o.age;
 *   })
 *   .head()
 *   .value();
 * // => 'pebbles is 1'
 */
function chain(value) {
  var result = Object(_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
  result.__chain__ = true;
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (chain);


/***/ }),
/* 212 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(117);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);




/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;

/**
 * Creates an array of elements split into groups the length of `size`.
 * If `array` can't be split evenly, the final chunk will be the remaining
 * elements.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to process.
 * @param {number} [size=1] The length of each chunk
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the new array of chunks.
 * @example
 *
 * _.chunk(['a', 'b', 'c', 'd'], 2);
 * // => [['a', 'b'], ['c', 'd']]
 *
 * _.chunk(['a', 'b', 'c', 'd'], 3);
 * // => [['a', 'b', 'c'], ['d']]
 */
function chunk(array, size, guard) {
  if ((guard ? Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, size, guard) : size === undefined)) {
    size = 1;
  } else {
    size = nativeMax(Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(size), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size < 1) {
    return [];
  }
  var index = 0,
      resIndex = 0,
      result = Array(nativeCeil(length / size));

  while (index < length) {
    result[resIndex++] = Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, index, (index += size));
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (chunk);


/***/ }),
/* 213 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(214);
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51);



/**
 * Clamps `number` within the inclusive `lower` and `upper` bounds.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Number
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 * @example
 *
 * _.clamp(-10, -5, 5);
 * // => -5
 *
 * _.clamp(10, -5, 5);
 * // => 5
 */
function clamp(number, lower, upper) {
  if (upper === undefined) {
    upper = lower;
    lower = undefined;
  }
  if (upper !== undefined) {
    upper = Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_1__["default"])(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== undefined) {
    lower = Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_1__["default"])(lower);
    lower = lower === lower ? lower : 0;
  }
  return Object(_baseClamp_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_1__["default"])(number), lower, upper);
}

/* harmony default export */ __webpack_exports__["default"] = (clamp);


/***/ }),
/* 214 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.clamp` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 */
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== undefined) {
      number = number <= upper ? number : upper;
    }
    if (lower !== undefined) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}

/* harmony default export */ __webpack_exports__["default"] = (baseClamp);


/***/ }),
/* 215 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(216);


/** Used to compose bitmasks for cloning. */
var CLONE_SYMBOLS_FLAG = 4;

/**
 * Creates a shallow clone of `value`.
 *
 * **Note:** This method is loosely based on the
 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
 * and supports cloning arrays, array buffers, booleans, date objects, maps,
 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
 * arrays. The own enumerable properties of `arguments` objects are cloned
 * as plain objects. An empty object is returned for uncloneable values such
 * as error objects, functions, DOM nodes, and WeakMaps.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to clone.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeep
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var shallow = _.clone(objects);
 * console.log(shallow[0] === objects[0]);
 * // => true
 */
function clone(value) {
  return Object(_baseClone_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, CLONE_SYMBOLS_FLAG);
}

/* harmony default export */ __webpack_exports__["default"] = (clone);


/***/ }),
/* 216 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Stack_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(217);
/* harmony import */ var _arrayEach_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97);
/* harmony import */ var _assignValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(110);
/* harmony import */ var _baseAssign_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(223);
/* harmony import */ var _baseAssignIn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(224);
/* harmony import */ var _cloneBuffer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(225);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(86);
/* harmony import */ var _copySymbols_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(226);
/* harmony import */ var _copySymbolsIn_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(230);
/* harmony import */ var _getAllKeys_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(232);
/* harmony import */ var _getAllKeysIn_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(234);
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(235);
/* harmony import */ var _initCloneArray_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(239);
/* harmony import */ var _initCloneByTag_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(240);
/* harmony import */ var _initCloneObject_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(247);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(47);
/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(126);
/* harmony import */ var _isMap_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(248);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(52);
/* harmony import */ var _isSet_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(250);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(121);






















/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_18__["default"])(value)) {
    return value;
  }
  var isArr = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_15__["default"])(value);
  if (isArr) {
    result = Object(_initCloneArray_js__WEBPACK_IMPORTED_MODULE_12__["default"])(value);
    if (!isDeep) {
      return Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_6__["default"])(value, result);
    }
  } else {
    var tag = Object(_getTag_js__WEBPACK_IMPORTED_MODULE_11__["default"])(value),
        isFunc = tag == funcTag || tag == genTag;

    if (Object(_isBuffer_js__WEBPACK_IMPORTED_MODULE_16__["default"])(value)) {
      return Object(_cloneBuffer_js__WEBPACK_IMPORTED_MODULE_5__["default"])(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : Object(_initCloneObject_js__WEBPACK_IMPORTED_MODULE_14__["default"])(value);
      if (!isDeep) {
        return isFlat
          ? Object(_copySymbolsIn_js__WEBPACK_IMPORTED_MODULE_8__["default"])(value, Object(_baseAssignIn_js__WEBPACK_IMPORTED_MODULE_4__["default"])(result, value))
          : Object(_copySymbols_js__WEBPACK_IMPORTED_MODULE_7__["default"])(value, Object(_baseAssign_js__WEBPACK_IMPORTED_MODULE_3__["default"])(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = Object(_initCloneByTag_js__WEBPACK_IMPORTED_MODULE_13__["default"])(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (Object(_isSet_js__WEBPACK_IMPORTED_MODULE_19__["default"])(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (Object(_isMap_js__WEBPACK_IMPORTED_MODULE_17__["default"])(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull
    ? (isFlat ? _getAllKeysIn_js__WEBPACK_IMPORTED_MODULE_10__["default"] : _getAllKeys_js__WEBPACK_IMPORTED_MODULE_9__["default"])
    : (isFlat ? keysIn : _keys_js__WEBPACK_IMPORTED_MODULE_20__["default"]);

  var props = isArr ? undefined : keysFunc(value);
  Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_1__["default"])(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    Object(_assignValue_js__WEBPACK_IMPORTED_MODULE_2__["default"])(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseClone);


/***/ }),
/* 217 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ListCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(160);
/* harmony import */ var _stackClear_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(218);
/* harmony import */ var _stackDelete_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(219);
/* harmony import */ var _stackGet_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(220);
/* harmony import */ var _stackHas_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(221);
/* harmony import */ var _stackSet_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(222);







/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new _ListCache_js__WEBPACK_IMPORTED_MODULE_0__["default"](entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = _stackClear_js__WEBPACK_IMPORTED_MODULE_1__["default"];
Stack.prototype['delete'] = _stackDelete_js__WEBPACK_IMPORTED_MODULE_2__["default"];
Stack.prototype.get = _stackGet_js__WEBPACK_IMPORTED_MODULE_3__["default"];
Stack.prototype.has = _stackHas_js__WEBPACK_IMPORTED_MODULE_4__["default"];
Stack.prototype.set = _stackSet_js__WEBPACK_IMPORTED_MODULE_5__["default"];

/* harmony default export */ __webpack_exports__["default"] = (Stack);


/***/ }),
/* 218 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ListCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(160);


/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new _ListCache_js__WEBPACK_IMPORTED_MODULE_0__["default"];
  this.size = 0;
}

/* harmony default export */ __webpack_exports__["default"] = (stackClear);


/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (stackDelete);


/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/* harmony default export */ __webpack_exports__["default"] = (stackGet);


/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/* harmony default export */ __webpack_exports__["default"] = (stackHas);


/***/ }),
/* 222 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ListCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(160);
/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(167);
/* harmony import */ var _MapCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(151);




/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof _ListCache_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    var pairs = data.__data__;
    if (!_Map_js__WEBPACK_IMPORTED_MODULE_1__["default"] || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new _MapCache_js__WEBPACK_IMPORTED_MODULE_2__["default"](pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

/* harmony default export */ __webpack_exports__["default"] = (stackSet);


/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(113);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);



/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source, Object(_keys_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source), object);
}

/* harmony default export */ __webpack_exports__["default"] = (baseAssign);


/***/ }),
/* 224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(113);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);



/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source, Object(_keysIn_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source), object);
}

/* harmony default export */ __webpack_exports__["default"] = (baseAssignIn);


/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);


/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__["default"].Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (cloneBuffer);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(127)(module)))

/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(113);
/* harmony import */ var _getSymbols_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(227);



/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source, Object(_getSymbols_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source), object);
}

/* harmony default export */ __webpack_exports__["default"] = (copySymbols);


/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _stubArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(229);



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? _stubArray_js__WEBPACK_IMPORTED_MODULE_1__["default"] : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return Object(_arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__["default"])(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (getSymbols);


/***/ }),
/* 228 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayFilter);


/***/ }),
/* 229 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/* harmony default export */ __webpack_exports__["default"] = (stubArray);


/***/ }),
/* 230 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(113);
/* harmony import */ var _getSymbolsIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(231);



/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source, Object(_getSymbolsIn_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source), object);
}

/* harmony default export */ __webpack_exports__["default"] = (copySymbolsIn);


/***/ }),
/* 231 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayPush_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(179);
/* harmony import */ var _getPrototype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(184);
/* harmony import */ var _getSymbols_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(227);
/* harmony import */ var _stubArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(229);





/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? _stubArray_js__WEBPACK_IMPORTED_MODULE_3__["default"] : function(object) {
  var result = [];
  while (object) {
    Object(_arrayPush_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result, Object(_getSymbols_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object));
    object = Object(_getPrototype_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object);
  }
  return result;
};

/* harmony default export */ __webpack_exports__["default"] = (getSymbolsIn);


/***/ }),
/* 232 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetAllKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(233);
/* harmony import */ var _getSymbols_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(227);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(121);




/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return Object(_baseGetAllKeys_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, _keys_js__WEBPACK_IMPORTED_MODULE_2__["default"], _getSymbols_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (getAllKeys);


/***/ }),
/* 233 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayPush_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(179);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47);



/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return Object(_isArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object) ? result : Object(_arrayPush_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result, symbolsFunc(object));
}

/* harmony default export */ __webpack_exports__["default"] = (baseGetAllKeys);


/***/ }),
/* 234 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetAllKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(233);
/* harmony import */ var _getSymbolsIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(231);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);




/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return Object(_baseGetAllKeys_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, _keysIn_js__WEBPACK_IMPORTED_MODULE_2__["default"], _getSymbolsIn_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (getAllKeysIn);


/***/ }),
/* 235 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DataView_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(236);
/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(167);
/* harmony import */ var _Promise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(237);
/* harmony import */ var _Set_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(238);
/* harmony import */ var _WeakMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(58);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(37);
/* harmony import */ var _toSource_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(64);








/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = Object(_toSource_js__WEBPACK_IMPORTED_MODULE_6__["default"])(_DataView_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
    mapCtorString = Object(_toSource_js__WEBPACK_IMPORTED_MODULE_6__["default"])(_Map_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
    promiseCtorString = Object(_toSource_js__WEBPACK_IMPORTED_MODULE_6__["default"])(_Promise_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
    setCtorString = Object(_toSource_js__WEBPACK_IMPORTED_MODULE_6__["default"])(_Set_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
    weakMapCtorString = Object(_toSource_js__WEBPACK_IMPORTED_MODULE_6__["default"])(_WeakMap_js__WEBPACK_IMPORTED_MODULE_4__["default"]);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = _baseGetTag_js__WEBPACK_IMPORTED_MODULE_5__["default"];

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((_DataView_js__WEBPACK_IMPORTED_MODULE_0__["default"] && getTag(new _DataView_js__WEBPACK_IMPORTED_MODULE_0__["default"](new ArrayBuffer(1))) != dataViewTag) ||
    (_Map_js__WEBPACK_IMPORTED_MODULE_1__["default"] && getTag(new _Map_js__WEBPACK_IMPORTED_MODULE_1__["default"]) != mapTag) ||
    (_Promise_js__WEBPACK_IMPORTED_MODULE_2__["default"] && getTag(_Promise_js__WEBPACK_IMPORTED_MODULE_2__["default"].resolve()) != promiseTag) ||
    (_Set_js__WEBPACK_IMPORTED_MODULE_3__["default"] && getTag(new _Set_js__WEBPACK_IMPORTED_MODULE_3__["default"]) != setTag) ||
    (_WeakMap_js__WEBPACK_IMPORTED_MODULE_4__["default"] && getTag(new _WeakMap_js__WEBPACK_IMPORTED_MODULE_4__["default"]) != weakMapTag)) {
  getTag = function(value) {
    var result = Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_5__["default"])(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? Object(_toSource_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (getTag);


/***/ }),
/* 236 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);



/* Built-in method references that are verified to be native. */
var DataView = Object(_getNative_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_root_js__WEBPACK_IMPORTED_MODULE_1__["default"], 'DataView');

/* harmony default export */ __webpack_exports__["default"] = (DataView);


/***/ }),
/* 237 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);



/* Built-in method references that are verified to be native. */
var Promise = Object(_getNative_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_root_js__WEBPACK_IMPORTED_MODULE_1__["default"], 'Promise');

/* harmony default export */ __webpack_exports__["default"] = (Promise);


/***/ }),
/* 238 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);



/* Built-in method references that are verified to be native. */
var Set = Object(_getNative_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_root_js__WEBPACK_IMPORTED_MODULE_1__["default"], 'Set');

/* harmony default export */ __webpack_exports__["default"] = (Set);


/***/ }),
/* 239 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (initCloneArray);


/***/ }),
/* 240 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cloneArrayBuffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(241);
/* harmony import */ var _cloneDataView_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(243);
/* harmony import */ var _cloneRegExp_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(244);
/* harmony import */ var _cloneSymbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(245);
/* harmony import */ var _cloneTypedArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(246);






/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return Object(_cloneArrayBuffer_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return Object(_cloneDataView_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return Object(_cloneTypedArray_js__WEBPACK_IMPORTED_MODULE_4__["default"])(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return Object(_cloneRegExp_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return Object(_cloneSymbol_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object);
  }
}

/* harmony default export */ __webpack_exports__["default"] = (initCloneByTag);


/***/ }),
/* 241 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Uint8Array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);


/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new _Uint8Array_js__WEBPACK_IMPORTED_MODULE_0__["default"](result).set(new _Uint8Array_js__WEBPACK_IMPORTED_MODULE_0__["default"](arrayBuffer));
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (cloneArrayBuffer);


/***/ }),
/* 242 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);


/** Built-in value references. */
var Uint8Array = _root_js__WEBPACK_IMPORTED_MODULE_0__["default"].Uint8Array;

/* harmony default export */ __webpack_exports__["default"] = (Uint8Array);


/***/ }),
/* 243 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cloneArrayBuffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(241);


/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? Object(_cloneArrayBuffer_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

/* harmony default export */ __webpack_exports__["default"] = (cloneDataView);


/***/ }),
/* 244 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (cloneRegExp);


/***/ }),
/* 245 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);


/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"].prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

/* harmony default export */ __webpack_exports__["default"] = (cloneSymbol);


/***/ }),
/* 246 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cloneArrayBuffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(241);


/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? Object(_cloneArrayBuffer_js__WEBPACK_IMPORTED_MODULE_0__["default"])(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/* harmony default export */ __webpack_exports__["default"] = (cloneTypedArray);


/***/ }),
/* 247 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseCreate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68);
/* harmony import */ var _getPrototype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(184);
/* harmony import */ var _isPrototype_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(120);




/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !Object(_isPrototype_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object))
    ? Object(_baseCreate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_getPrototype_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object))
    : {};
}

/* harmony default export */ __webpack_exports__["default"] = (initCloneObject);


/***/ }),
/* 248 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(249);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(131);
/* harmony import */ var _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(132);




/* Node.js helper references. */
var nodeIsMap = _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"] && _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"].isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_1__["default"])(nodeIsMap) : _baseIsMap_js__WEBPACK_IMPORTED_MODULE_0__["default"];

/* harmony default export */ __webpack_exports__["default"] = (isMap);


/***/ }),
/* 249 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(235);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_getTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == mapTag;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsMap);


/***/ }),
/* 250 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsSet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(251);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(131);
/* harmony import */ var _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(132);




/* Node.js helper references. */
var nodeIsSet = _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"] && _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"].isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_1__["default"])(nodeIsSet) : _baseIsSet_js__WEBPACK_IMPORTED_MODULE_0__["default"];

/* harmony default export */ __webpack_exports__["default"] = (isSet);


/***/ }),
/* 251 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(235);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_getTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == setTag;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsSet);


/***/ }),
/* 252 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(216);


/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return Object(_baseClone_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

/* harmony default export */ __webpack_exports__["default"] = (cloneDeep);


/***/ }),
/* 253 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(216);


/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.cloneWith` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @param {Function} [customizer] The function to customize cloning.
 * @returns {*} Returns the deep cloned value.
 * @see _.cloneWith
 * @example
 *
 * function customizer(value) {
 *   if (_.isElement(value)) {
 *     return value.cloneNode(true);
 *   }
 * }
 *
 * var el = _.cloneDeepWith(document.body, customizer);
 *
 * console.log(el === document.body);
 * // => false
 * console.log(el.nodeName);
 * // => 'BODY'
 * console.log(el.childNodes.length);
 * // => 20
 */
function cloneDeepWith(value, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return Object(_baseClone_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
}

/* harmony default export */ __webpack_exports__["default"] = (cloneDeepWith);


/***/ }),
/* 254 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(216);


/** Used to compose bitmasks for cloning. */
var CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it accepts `customizer` which
 * is invoked to produce the cloned value. If `customizer` returns `undefined`,
 * cloning is handled by the method instead. The `customizer` is invoked with
 * up to four arguments; (value [, index|key, object, stack]).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to clone.
 * @param {Function} [customizer] The function to customize cloning.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeepWith
 * @example
 *
 * function customizer(value) {
 *   if (_.isElement(value)) {
 *     return value.cloneNode(false);
 *   }
 * }
 *
 * var el = _.cloneWith(document.body, customizer);
 *
 * console.log(el === document.body);
 * // => false
 * console.log(el.nodeName);
 * // => 'BODY'
 * console.log(el.childNodes.length);
 * // => 0
 */
function cloneWith(value, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return Object(_baseClone_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, CLONE_SYMBOLS_FLAG, customizer);
}

/* harmony default export */ __webpack_exports__["default"] = (cloneWith);


/***/ }),
/* 255 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(84);


/**
 * Executes the chain sequence and returns the wrapped result.
 *
 * @name commit
 * @memberOf _
 * @since 3.2.0
 * @category Seq
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var array = [1, 2];
 * var wrapped = _(array).push(3);
 *
 * console.log(array);
 * // => [1, 2]
 *
 * wrapped = wrapped.commit();
 * console.log(array);
 * // => [1, 2, 3]
 *
 * wrapped.last();
 * // => 3
 *
 * console.log(array);
 * // => [1, 2, 3]
 */
function wrapperCommit() {
  return new _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"](this.value(), this.__chain__);
}

/* harmony default export */ __webpack_exports__["default"] = (wrapperCommit);


/***/ }),
/* 256 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Creates an array with all falsey values removed. The values `false`, `null`,
 * `0`, `""`, `undefined`, and `NaN` are falsey.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to compact.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.compact([0, 1, false, 2, '', 3]);
 * // => [1, 2, 3]
 */
function compact(array) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value) {
      result[resIndex++] = value;
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (compact);


/***/ }),
/* 257 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayPush_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(179);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);





/**
 * Creates a new array concatenating `array` with any additional arrays
 * and/or values.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to concatenate.
 * @param {...*} [values] The values to concatenate.
 * @returns {Array} Returns the new concatenated array.
 * @example
 *
 * var array = [1];
 * var other = _.concat(array, 2, [3], [[4]]);
 *
 * console.log(other);
 * // => [1, 2, 3, [4]]
 *
 * console.log(array);
 * // => [1]
 */
function concat() {
  var length = arguments.length;
  if (!length) {
    return [];
  }
  var args = Array(length - 1),
      array = arguments[0],
      index = length;

  while (index--) {
    args[index - 1] = arguments[index];
  }
  return Object(_arrayPush_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(array) ? Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(array) : [array], Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__["default"])(args, 1));
}

/* harmony default export */ __webpack_exports__["default"] = (concat);


/***/ }),
/* 258 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(115);





/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that iterates over `pairs` and invokes the corresponding
 * function of the first predicate to return truthy. The predicate-function
 * pairs are invoked with the `this` binding and arguments of the created
 * function.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {Array} pairs The predicate-function pairs.
 * @returns {Function} Returns the new composite function.
 * @example
 *
 * var func = _.cond([
 *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
 *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
 *   [_.stubTrue,                      _.constant('no match')]
 * ]);
 *
 * func({ 'a': 1, 'b': 2 });
 * // => 'matches A'
 *
 * func({ 'a': 0, 'b': 1 });
 * // => 'matches B'
 *
 * func({ 'a': '1', 'b': '2' });
 * // => 'no match'
 */
function cond(pairs) {
  var length = pairs == null ? 0 : pairs.length,
      toIteratee = _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"];

  pairs = !length ? [] : Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(pairs, function(pair) {
    if (typeof pair[1] != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    return [toIteratee(pair[0]), pair[1]];
  });

  return Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])(function(args) {
    var index = -1;
    while (++index < length) {
      var pair = pairs[index];
      if (Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(pair[0], this, args)) {
        return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(pair[1], this, args);
      }
    }
  });
}

/* harmony default export */ __webpack_exports__["default"] = (cond);


/***/ }),
/* 259 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseMatches_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(260);
/* harmony import */ var _baseMatchesProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(277);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(56);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);
/* harmony import */ var _property_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(281);






/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return _identity_js__WEBPACK_IMPORTED_MODULE_2__["default"];
  }
  if (typeof value == 'object') {
    return Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value)
      ? Object(_baseMatchesProperty_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value[0], value[1])
      : Object(_baseMatches_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
  }
  return Object(_property_js__WEBPACK_IMPORTED_MODULE_4__["default"])(value);
}

/* harmony default export */ __webpack_exports__["default"] = (baseIteratee);


/***/ }),
/* 260 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsMatch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(261);
/* harmony import */ var _getMatchData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(274);
/* harmony import */ var _matchesStrictComparable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(276);




/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = Object(_getMatchData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return Object(_matchesStrictComparable_js__WEBPACK_IMPORTED_MODULE_2__["default"])(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || Object(_baseIsMatch_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, source, matchData);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (baseMatches);


/***/ }),
/* 261 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Stack_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(217);
/* harmony import */ var _baseIsEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(262);



/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_0__["default"];
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? Object(_baseIsEqual_js__WEBPACK_IMPORTED_MODULE_1__["default"])(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsMatch);


/***/ }),
/* 262 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsEqualDeep_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(263);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && !Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(other))) {
    return value !== value && other !== other;
  }
  return Object(_baseIsEqualDeep_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, other, bitmask, customizer, baseIsEqual, stack);
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsEqual);


/***/ }),
/* 263 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Stack_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(217);
/* harmony import */ var _equalArrays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(264);
/* harmony import */ var _equalByTag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(270);
/* harmony import */ var _equalObjects_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(273);
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(235);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(47);
/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(126);
/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(129);









/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_5__["default"])(object),
      othIsArr = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_5__["default"])(other),
      objTag = objIsArr ? arrayTag : Object(_getTag_js__WEBPACK_IMPORTED_MODULE_4__["default"])(object),
      othTag = othIsArr ? arrayTag : Object(_getTag_js__WEBPACK_IMPORTED_MODULE_4__["default"])(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && Object(_isBuffer_js__WEBPACK_IMPORTED_MODULE_6__["default"])(object)) {
    if (!Object(_isBuffer_js__WEBPACK_IMPORTED_MODULE_6__["default"])(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
    return (objIsArr || Object(_isTypedArray_js__WEBPACK_IMPORTED_MODULE_7__["default"])(object))
      ? Object(_equalArrays_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, other, bitmask, customizer, equalFunc, stack)
      : Object(_equalByTag_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
  return Object(_equalObjects_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object, other, bitmask, customizer, equalFunc, stack);
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsEqualDeep);


/***/ }),
/* 264 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SetCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(265);
/* harmony import */ var _arraySome_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(268);
/* harmony import */ var _cacheHas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(269);




/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new _SetCache_js__WEBPACK_IMPORTED_MODULE_0__["default"] : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!Object(_arraySome_js__WEBPACK_IMPORTED_MODULE_1__["default"])(other, function(othValue, othIndex) {
            if (!Object(_cacheHas_js__WEBPACK_IMPORTED_MODULE_2__["default"])(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (equalArrays);


/***/ }),
/* 265 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _MapCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(151);
/* harmony import */ var _setCacheAdd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(266);
/* harmony import */ var _setCacheHas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(267);




/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new _MapCache_js__WEBPACK_IMPORTED_MODULE_0__["default"];
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd_js__WEBPACK_IMPORTED_MODULE_1__["default"];
SetCache.prototype.has = _setCacheHas_js__WEBPACK_IMPORTED_MODULE_2__["default"];

/* harmony default export */ __webpack_exports__["default"] = (SetCache);


/***/ }),
/* 266 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

/* harmony default export */ __webpack_exports__["default"] = (setCacheAdd);


/***/ }),
/* 267 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

/* harmony default export */ __webpack_exports__["default"] = (setCacheHas);


/***/ }),
/* 268 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

/* harmony default export */ __webpack_exports__["default"] = (arraySome);


/***/ }),
/* 269 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

/* harmony default export */ __webpack_exports__["default"] = (cacheHas);


/***/ }),
/* 270 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
/* harmony import */ var _Uint8Array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(242);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(112);
/* harmony import */ var _equalArrays_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(264);
/* harmony import */ var _mapToArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(271);
/* harmony import */ var _setToArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(272);







/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"].prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new _Uint8Array_js__WEBPACK_IMPORTED_MODULE_1__["default"](object), new _Uint8Array_js__WEBPACK_IMPORTED_MODULE_1__["default"](other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return Object(_eq_js__WEBPACK_IMPORTED_MODULE_2__["default"])(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = _mapToArray_js__WEBPACK_IMPORTED_MODULE_4__["default"];

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = _setToArray_js__WEBPACK_IMPORTED_MODULE_5__["default"]);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = Object(_equalArrays_js__WEBPACK_IMPORTED_MODULE_3__["default"])(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

/* harmony default export */ __webpack_exports__["default"] = (equalByTag);


/***/ }),
/* 271 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (mapToArray);


/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (setToArray);


/***/ }),
/* 273 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getAllKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(232);


/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = Object(_getAllKeys_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object),
      objLength = objProps.length,
      othProps = Object(_getAllKeys_js__WEBPACK_IMPORTED_MODULE_0__["default"])(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (equalObjects);


/***/ }),
/* 274 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isStrictComparable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(275);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);



/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = Object(_keys_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, Object(_isStrictComparable_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value)];
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (getMatchData);


/***/ }),
/* 275 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);


/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
}

/* harmony default export */ __webpack_exports__["default"] = (isStrictComparable);


/***/ }),
/* 276 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

/* harmony default export */ __webpack_exports__["default"] = (matchesStrictComparable);


/***/ }),
/* 277 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(262);
/* harmony import */ var _get_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(144);
/* harmony import */ var _hasIn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(278);
/* harmony import */ var _isKey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(147);
/* harmony import */ var _isStrictComparable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(275);
/* harmony import */ var _matchesStrictComparable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(276);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(175);








/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (Object(_isKey_js__WEBPACK_IMPORTED_MODULE_3__["default"])(path) && Object(_isStrictComparable_js__WEBPACK_IMPORTED_MODULE_4__["default"])(srcValue)) {
    return Object(_matchesStrictComparable_js__WEBPACK_IMPORTED_MODULE_5__["default"])(Object(_toKey_js__WEBPACK_IMPORTED_MODULE_6__["default"])(path), srcValue);
  }
  return function(object) {
    var objValue = Object(_get_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? Object(_hasIn_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object, path)
      : Object(_baseIsEqual_js__WEBPACK_IMPORTED_MODULE_0__["default"])(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (baseMatchesProperty);


/***/ }),
/* 278 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseHasIn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(279);
/* harmony import */ var _hasPath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(280);



/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && Object(_hasPath_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, path, _baseHasIn_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (hasIn);


/***/ }),
/* 279 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

/* harmony default export */ __webpack_exports__["default"] = (baseHasIn);


/***/ }),
/* 280 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(146);
/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(124);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(105);
/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(119);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(175);







/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = Object(_castPath_js__WEBPACK_IMPORTED_MODULE_0__["default"])(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = Object(_toKey_js__WEBPACK_IMPORTED_MODULE_5__["default"])(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && Object(_isLength_js__WEBPACK_IMPORTED_MODULE_4__["default"])(length) && Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_3__["default"])(key, length) &&
    (Object(_isArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object) || Object(_isArguments_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object));
}

/* harmony default export */ __webpack_exports__["default"] = (hasPath);


/***/ }),
/* 281 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(282);
/* harmony import */ var _basePropertyDeep_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(283);
/* harmony import */ var _isKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(147);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(175);





/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return Object(_isKey_js__WEBPACK_IMPORTED_MODULE_2__["default"])(path) ? Object(_baseProperty_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_toKey_js__WEBPACK_IMPORTED_MODULE_3__["default"])(path)) : Object(_basePropertyDeep_js__WEBPACK_IMPORTED_MODULE_1__["default"])(path);
}

/* harmony default export */ __webpack_exports__["default"] = (property);


/***/ }),
/* 282 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/* harmony default export */ __webpack_exports__["default"] = (baseProperty);


/***/ }),
/* 283 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(145);


/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return Object(_baseGet_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (basePropertyDeep);


/***/ }),
/* 284 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(216);
/* harmony import */ var _baseConforms_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(285);



/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that invokes the predicate properties of `source` with
 * the corresponding property values of a given object, returning `true` if
 * all predicates return truthy, else `false`.
 *
 * **Note:** The created function is equivalent to `_.conformsTo` with
 * `source` partially applied.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {Object} source The object of property predicates to conform to.
 * @returns {Function} Returns the new spec function.
 * @example
 *
 * var objects = [
 *   { 'a': 2, 'b': 1 },
 *   { 'a': 1, 'b': 2 }
 * ];
 *
 * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
 * // => [{ 'a': 1, 'b': 2 }]
 */
function conforms(source) {
  return Object(_baseConforms_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_baseClone_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source, CLONE_DEEP_FLAG));
}

/* harmony default export */ __webpack_exports__["default"] = (conforms);


/***/ }),
/* 285 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseConformsTo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(286);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);



/**
 * The base implementation of `_.conforms` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property predicates to conform to.
 * @returns {Function} Returns the new spec function.
 */
function baseConforms(source) {
  var props = Object(_keys_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source);
  return function(object) {
    return Object(_baseConformsTo_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, source, props);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (baseConforms);


/***/ }),
/* 286 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.conformsTo` which accepts `props` to check.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property predicates to conform to.
 * @returns {boolean} Returns `true` if `object` conforms, else `false`.
 */
function baseConformsTo(object, source, props) {
  var length = props.length;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (length--) {
    var key = props[length],
        predicate = source[key],
        value = object[key];

    if ((value === undefined && !(key in object)) || !predicate(value)) {
      return false;
    }
  }
  return true;
}

/* harmony default export */ __webpack_exports__["default"] = (baseConformsTo);


/***/ }),
/* 287 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseConformsTo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(286);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);



/**
 * Checks if `object` conforms to `source` by invoking the predicate
 * properties of `source` with the corresponding property values of `object`.
 *
 * **Note:** This method is equivalent to `_.conforms` when `source` is
 * partially applied.
 *
 * @static
 * @memberOf _
 * @since 4.14.0
 * @category Lang
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property predicates to conform to.
 * @returns {boolean} Returns `true` if `object` conforms, else `false`.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 *
 * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
 * // => true
 *
 * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
 * // => false
 */
function conformsTo(object, source) {
  return source == null || Object(_baseConformsTo_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, source, Object(_keys_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source));
}

/* harmony default export */ __webpack_exports__["default"] = (conformsTo);


/***/ }),
/* 288 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(111);
/* harmony import */ var _createAggregator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(289);



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The corresponding value of
 * each key is the number of times the key was returned by `iteratee`. The
 * iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * _.countBy([6.1, 4.2, 6.3], Math.floor);
 * // => { '4': 1, '6': 2 }
 *
 * // The `_.property` iteratee shorthand.
 * _.countBy(['one', 'two', 'three'], 'length');
 * // => { '3': 2, '5': 1 }
 */
var countBy = Object(_createAggregator_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(result, value, key) {
  if (hasOwnProperty.call(result, key)) {
    ++result[key];
  } else {
    Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result, key, 1);
  }
});

/* harmony default export */ __webpack_exports__["default"] = (countBy);


/***/ }),
/* 289 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayAggregator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(290);
/* harmony import */ var _baseAggregator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(291);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);





/**
 * Creates a function like `_.groupBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} [initializer] The accumulator object initializer.
 * @returns {Function} Returns the new aggregator function.
 */
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection) ? _arrayAggregator_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseAggregator_js__WEBPACK_IMPORTED_MODULE_1__["default"],
        accumulator = initializer ? initializer() : {};

    return func(collection, setter, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee, 2), accumulator);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createAggregator);


/***/ }),
/* 290 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `baseAggregator` for arrays.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function arrayAggregator(array, setter, iteratee, accumulator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee(value), array);
  }
  return accumulator;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayAggregator);


/***/ }),
/* 291 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(292);


/**
 * Aggregates elements of `collection` on `accumulator` with keys transformed
 * by `iteratee` and values set by `setter`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function baseAggregator(collection, setter, iteratee, accumulator) {
  Object(_baseEach_js__WEBPACK_IMPORTED_MODULE_0__["default"])(collection, function(value, key, collection) {
    setter(accumulator, value, iteratee(value), collection);
  });
  return accumulator;
}

/* harmony default export */ __webpack_exports__["default"] = (baseAggregator);


/***/ }),
/* 292 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseForOwn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(293);
/* harmony import */ var _createBaseEach_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(296);



/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = Object(_createBaseEach_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_baseForOwn_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (baseEach);


/***/ }),
/* 293 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(294);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);



/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && Object(_baseFor_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, iteratee, _keys_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (baseForOwn);


/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createBaseFor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(295);


/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = Object(_createBaseFor_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

/* harmony default export */ __webpack_exports__["default"] = (baseFor);


/***/ }),
/* 295 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createBaseFor);


/***/ }),
/* 296 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(118);


/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__["default"])(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createBaseEach);


/***/ }),
/* 297 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseAssign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(223);
/* harmony import */ var _baseCreate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(68);



/**
 * Creates an object that inherits from the `prototype` object. If a
 * `properties` object is given, its own enumerable string keyed properties
 * are assigned to the created object.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Object
 * @param {Object} prototype The object to inherit from.
 * @param {Object} [properties] The properties to assign to the object.
 * @returns {Object} Returns the new object.
 * @example
 *
 * function Shape() {
 *   this.x = 0;
 *   this.y = 0;
 * }
 *
 * function Circle() {
 *   Shape.call(this);
 * }
 *
 * Circle.prototype = _.create(Shape.prototype, {
 *   'constructor': Circle
 * });
 *
 * var circle = new Circle;
 * circle instanceof Circle;
 * // => true
 *
 * circle instanceof Shape;
 * // => true
 */
function create(prototype, properties) {
  var result = Object(_baseCreate_js__WEBPACK_IMPORTED_MODULE_1__["default"])(prototype);
  return properties == null ? result : Object(_baseAssign_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result, properties);
}

/* harmony default export */ __webpack_exports__["default"] = (create);


/***/ }),
/* 298 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createWrap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54);


/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8;

/**
 * Creates a function that accepts arguments of `func` and either invokes
 * `func` returning its result, if at least `arity` number of arguments have
 * been provided, or returns a function that accepts the remaining `func`
 * arguments, and so on. The arity of `func` may be specified if `func.length`
 * is not sufficient.
 *
 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curry(abc);
 *
 * curried(1)(2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(1)(_, 3)(2);
 * // => [1, 2, 3]
 */
function curry(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = Object(_createWrap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curry.placeholder;
  return result;
}

// Assign default placeholders.
curry.placeholder = {};

/* harmony default export */ __webpack_exports__["default"] = (curry);


/***/ }),
/* 299 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createWrap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54);


/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_RIGHT_FLAG = 16;

/**
 * This method is like `_.curry` except that arguments are applied to `func`
 * in the manner of `_.partialRight` instead of `_.partial`.
 *
 * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curryRight(abc);
 *
 * curried(3)(2)(1);
 * // => [1, 2, 3]
 *
 * curried(2, 3)(1);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(3)(1, _)(2);
 * // => [1, 2, 3]
 */
function curryRight(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = Object(_createWrap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curryRight.placeholder;
  return result;
}

// Assign default placeholders.
curryRight.placeholder = {};

/* harmony default export */ __webpack_exports__["default"] = (curryRight);


/***/ }),
/* 300 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(301);
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51);




/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_2__["default"])(wait) || 0;
  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])());
  }

  function debounced() {
    var time = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/* harmony default export */ __webpack_exports__["default"] = (debounce);


/***/ }),
/* 301 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);


/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return _root_js__WEBPACK_IMPORTED_MODULE_0__["default"].Date.now();
};

/* harmony default export */ __webpack_exports__["default"] = (now);


/***/ }),
/* 302 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks `value` to determine whether a default value should be returned in
 * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
 * or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.14.0
 * @category Util
 * @param {*} value The value to check.
 * @param {*} defaultValue The default value.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * _.defaultTo(1, 10);
 * // => 1
 *
 * _.defaultTo(undefined, 10);
 * // => 10
 */
function defaultTo(value, defaultValue) {
  return (value == null || value !== value) ? defaultValue : value;
}

/* harmony default export */ __webpack_exports__["default"] = (defaultTo);


/***/ }),
/* 303 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(112);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(117);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(137);





/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own and inherited enumerable string keyed properties of source
 * objects to the destination object for all destination properties that
 * resolve to `undefined`. Source objects are applied from left to right.
 * Once a property is set, additional values of the same property are ignored.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.defaultsDeep
 * @example
 *
 * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var defaults = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(object, sources) {
  object = Object(object);

  var index = -1;
  var length = sources.length;
  var guard = length > 2 ? sources[2] : undefined;

  if (guard && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_2__["default"])(sources[0], sources[1], guard)) {
    length = 1;
  }

  while (++index < length) {
    var source = sources[index];
    var props = Object(_keysIn_js__WEBPACK_IMPORTED_MODULE_3__["default"])(source);
    var propsIndex = -1;
    var propsLength = props.length;

    while (++propsIndex < propsLength) {
      var key = props[propsIndex];
      var value = object[key];

      if (value === undefined ||
          (Object(_eq_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        object[key] = source[key];
      }
    }
  }

  return object;
});

/* harmony default export */ __webpack_exports__["default"] = (defaults);


/***/ }),
/* 304 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony import */ var _customDefaultsMerge_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(305);
/* harmony import */ var _mergeWith_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(312);





/**
 * This method is like `_.defaults` except that it recursively assigns
 * default properties.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.defaults
 * @example
 *
 * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
 * // => { 'a': { 'b': 2, 'c': 3 } }
 */
var defaultsDeep = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(args) {
  args.push(undefined, _customDefaultsMerge_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
  return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_mergeWith_js__WEBPACK_IMPORTED_MODULE_3__["default"], undefined, args);
});

/* harmony default export */ __webpack_exports__["default"] = (defaultsDeep);


/***/ }),
/* 305 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseMerge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(306);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52);



/**
 * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
 * objects into destination objects that are passed thru.
 *
 * @private
 * @param {*} objValue The destination value.
 * @param {*} srcValue The source value.
 * @param {string} key The key of the property to merge.
 * @param {Object} object The parent object of `objValue`.
 * @param {Object} source The parent object of `srcValue`.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 * @returns {*} Returns the value to assign.
 */
function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(objValue) && Object(_isObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(srcValue)) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, objValue);
    Object(_baseMerge_js__WEBPACK_IMPORTED_MODULE_0__["default"])(objValue, srcValue, undefined, customDefaultsMerge, stack);
    stack['delete'](srcValue);
  }
  return objValue;
}

/* harmony default export */ __webpack_exports__["default"] = (customDefaultsMerge);


/***/ }),
/* 306 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Stack_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(217);
/* harmony import */ var _assignMergeValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(307);
/* harmony import */ var _baseFor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(294);
/* harmony import */ var _baseMergeDeep_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(308);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(52);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(137);
/* harmony import */ var _safeGet_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(310);








/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  Object(_baseFor_js__WEBPACK_IMPORTED_MODULE_2__["default"])(source, function(srcValue, key) {
    stack || (stack = new _Stack_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
    if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_4__["default"])(srcValue)) {
      Object(_baseMergeDeep_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(Object(_safeGet_js__WEBPACK_IMPORTED_MODULE_6__["default"])(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      Object(_assignMergeValue_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, key, newValue);
    }
  }, _keysIn_js__WEBPACK_IMPORTED_MODULE_5__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (baseMerge);


/***/ }),
/* 307 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(111);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(112);



/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !Object(_eq_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object[key], value)) ||
      (value === undefined && !(key in object))) {
    Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, key, value);
  }
}

/* harmony default export */ __webpack_exports__["default"] = (assignMergeValue);


/***/ }),
/* 308 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assignMergeValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(307);
/* harmony import */ var _cloneBuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(225);
/* harmony import */ var _cloneTypedArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(246);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86);
/* harmony import */ var _initCloneObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(247);
/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(124);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(47);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(309);
/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(126);
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(61);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(52);
/* harmony import */ var _isPlainObject_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(183);
/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(129);
/* harmony import */ var _safeGet_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(310);
/* harmony import */ var _toPlainObject_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(311);
















/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = Object(_safeGet_js__WEBPACK_IMPORTED_MODULE_13__["default"])(object, key),
      srcValue = Object(_safeGet_js__WEBPACK_IMPORTED_MODULE_13__["default"])(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    Object(_assignMergeValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_6__["default"])(srcValue),
        isBuff = !isArr && Object(_isBuffer_js__WEBPACK_IMPORTED_MODULE_8__["default"])(srcValue),
        isTyped = !isArr && !isBuff && Object(_isTypedArray_js__WEBPACK_IMPORTED_MODULE_12__["default"])(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (Object(_isArray_js__WEBPACK_IMPORTED_MODULE_6__["default"])(objValue)) {
        newValue = objValue;
      }
      else if (Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_7__["default"])(objValue)) {
        newValue = Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = Object(_cloneBuffer_js__WEBPACK_IMPORTED_MODULE_1__["default"])(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = Object(_cloneTypedArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (Object(_isPlainObject_js__WEBPACK_IMPORTED_MODULE_11__["default"])(srcValue) || Object(_isArguments_js__WEBPACK_IMPORTED_MODULE_5__["default"])(srcValue)) {
      newValue = objValue;
      if (Object(_isArguments_js__WEBPACK_IMPORTED_MODULE_5__["default"])(objValue)) {
        newValue = Object(_toPlainObject_js__WEBPACK_IMPORTED_MODULE_14__["default"])(objValue);
      }
      else if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_10__["default"])(objValue) || Object(_isFunction_js__WEBPACK_IMPORTED_MODULE_9__["default"])(objValue)) {
        newValue = Object(_initCloneObject_js__WEBPACK_IMPORTED_MODULE_4__["default"])(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  Object(_assignMergeValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, key, newValue);
}

/* harmony default export */ __webpack_exports__["default"] = (baseMergeDeep);


/***/ }),
/* 309 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(118);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
}

/* harmony default export */ __webpack_exports__["default"] = (isArrayLikeObject);


/***/ }),
/* 310 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

/* harmony default export */ __webpack_exports__["default"] = (safeGet);


/***/ }),
/* 311 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(113);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);



/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, Object(_keysIn_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value));
}

/* harmony default export */ __webpack_exports__["default"] = (toPlainObject);


/***/ }),
/* 312 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseMerge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(306);
/* harmony import */ var _createAssigner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(114);



/**
 * This method is like `_.merge` except that it accepts `customizer` which
 * is invoked to produce the merged values of the destination and source
 * properties. If `customizer` returns `undefined`, merging is handled by the
 * method instead. The `customizer` is invoked with six arguments:
 * (objValue, srcValue, key, object, source, stack).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} customizer The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   if (_.isArray(objValue)) {
 *     return objValue.concat(srcValue);
 *   }
 * }
 *
 * var object = { 'a': [1], 'b': [2] };
 * var other = { 'a': [3], 'b': [4] };
 *
 * _.mergeWith(object, other, customizer);
 * // => { 'a': [1, 3], 'b': [2, 4] }
 */
var mergeWith = Object(_createAssigner_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(object, source, srcIndex, customizer) {
  Object(_baseMerge_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, source, srcIndex, customizer);
});

/* harmony default export */ __webpack_exports__["default"] = (mergeWith);


/***/ }),
/* 313 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseDelay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(314);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);



/**
 * Defers invoking the `func` until the current call stack has cleared. Any
 * additional arguments are provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to defer.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {number} Returns the timer id.
 * @example
 *
 * _.defer(function(text) {
 *   console.log(text);
 * }, 'deferred');
 * // => Logs 'deferred' after one millisecond.
 */
var defer = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(func, args) {
  return Object(_baseDelay_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, 1, args);
});

/* harmony default export */ __webpack_exports__["default"] = (defer);


/***/ }),
/* 314 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * The base implementation of `_.delay` and `_.defer` which accepts `args`
 * to provide to `func`.
 *
 * @private
 * @param {Function} func The function to delay.
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {Array} args The arguments to provide to `func`.
 * @returns {number|Object} Returns the timer id or timeout object.
 */
function baseDelay(func, wait, args) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  return setTimeout(function() { func.apply(undefined, args); }, wait);
}

/* harmony default export */ __webpack_exports__["default"] = (baseDelay);


/***/ }),
/* 315 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseDelay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(314);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51);




/**
 * Invokes `func` after `wait` milliseconds. Any additional arguments are
 * provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to delay.
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {number} Returns the timer id.
 * @example
 *
 * _.delay(function(text) {
 *   console.log(text);
 * }, 1000, 'later');
 * // => Logs 'later' after one second.
 */
var delay = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(func, wait, args) {
  return Object(_baseDelay_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_2__["default"])(wait) || 0, args);
});

/* harmony default export */ __webpack_exports__["default"] = (delay);


/***/ }),
/* 316 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseDifference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(317);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(115);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(309);





/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function(array, values) {
  return Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"])(array)
    ? Object(_baseDifference_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, 1, _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"], true))
    : [];
});

/* harmony default export */ __webpack_exports__["default"] = (difference);


/***/ }),
/* 317 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SetCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(265);
/* harmony import */ var _arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98);
/* harmony import */ var _arrayIncludesWith_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(318);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(46);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(131);
/* harmony import */ var _cacheHas_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(269);







/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__["default"],
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_3__["default"])(values, Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_4__["default"])(iteratee));
  }
  if (comparator) {
    includes = _arrayIncludesWith_js__WEBPACK_IMPORTED_MODULE_2__["default"];
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = _cacheHas_js__WEBPACK_IMPORTED_MODULE_5__["default"];
    isCommon = false;
    values = new _SetCache_js__WEBPACK_IMPORTED_MODULE_0__["default"](values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseDifference);


/***/ }),
/* 318 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayIncludesWith);


/***/ }),
/* 319 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseDifference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(317);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(115);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(309);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(320);







/**
 * This method is like `_.difference` except that it accepts `iteratee` which
 * is invoked for each element of `array` and `values` to generate the criterion
 * by which they're compared. The order and references of result values are
 * determined by the first array. The iteratee is invoked with one argument:
 * (value).
 *
 * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
 * // => [{ 'x': 2 }]
 */
var differenceBy = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])(function(array, values) {
  var iteratee = Object(_last_js__WEBPACK_IMPORTED_MODULE_5__["default"])(values);
  if (Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__["default"])(iteratee)) {
    iteratee = undefined;
  }
  return Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__["default"])(array)
    ? Object(_baseDifference_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, 1, _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__["default"], true), Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee, 2))
    : [];
});

/* harmony default export */ __webpack_exports__["default"] = (differenceBy);


/***/ }),
/* 320 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (last);


/***/ }),
/* 321 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseDifference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(317);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(115);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(309);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(320);






/**
 * This method is like `_.difference` except that it accepts `comparator`
 * which is invoked to compare elements of `array` to `values`. The order and
 * references of result values are determined by the first array. The comparator
 * is invoked with two arguments: (arrVal, othVal).
 *
 * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 *
 * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
 * // => [{ 'x': 2, 'y': 1 }]
 */
var differenceWith = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function(array, values) {
  var comparator = Object(_last_js__WEBPACK_IMPORTED_MODULE_4__["default"])(values);
  if (Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"])(comparator)) {
    comparator = undefined;
  }
  return Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"])(array)
    ? Object(_baseDifference_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, 1, _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"], true), undefined, comparator)
    : [];
});

/* harmony default export */ __webpack_exports__["default"] = (differenceWith);


/***/ }),
/* 322 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createMathOperation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34);


/**
 * Divide two numbers.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Math
 * @param {number} dividend The first number in a division.
 * @param {number} divisor The second number in a division.
 * @returns {number} Returns the quotient.
 * @example
 *
 * _.divide(6, 4);
 * // => 1.5
 */
var divide = Object(_createMathOperation_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(dividend, divisor) {
  return dividend / divisor;
}, 1);

/* harmony default export */ __webpack_exports__["default"] = (divide);


/***/ }),
/* 323 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/**
 * Creates a slice of `array` with `n` elements dropped from the beginning.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to drop.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.drop([1, 2, 3]);
 * // => [2, 3]
 *
 * _.drop([1, 2, 3], 2);
 * // => [3]
 *
 * _.drop([1, 2, 3], 5);
 * // => []
 *
 * _.drop([1, 2, 3], 0);
 * // => [1, 2, 3]
 */
function drop(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(n);
  return Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, n < 0 ? 0 : n, length);
}

/* harmony default export */ __webpack_exports__["default"] = (drop);


/***/ }),
/* 324 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/**
 * Creates a slice of `array` with `n` elements dropped from the end.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to drop.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.dropRight([1, 2, 3]);
 * // => [1, 2]
 *
 * _.dropRight([1, 2, 3], 2);
 * // => [1]
 *
 * _.dropRight([1, 2, 3], 5);
 * // => []
 *
 * _.dropRight([1, 2, 3], 0);
 * // => [1, 2, 3]
 */
function dropRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(n);
  n = length - n;
  return Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, 0, n < 0 ? 0 : n);
}

/* harmony default export */ __webpack_exports__["default"] = (dropRight);


/***/ }),
/* 325 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseWhile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(326);



/**
 * Creates a slice of `array` excluding elements dropped from the end.
 * Elements are dropped until `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.dropRightWhile(users, function(o) { return !o.active; });
 * // => objects for ['barney']
 *
 * // The `_.matches` iteratee shorthand.
 * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
 * // => objects for ['barney', 'fred']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.dropRightWhile(users, ['active', false]);
 * // => objects for ['barney']
 *
 * // The `_.property` iteratee shorthand.
 * _.dropRightWhile(users, 'active');
 * // => objects for ['barney', 'fred', 'pebbles']
 */
function dropRightWhile(array, predicate) {
  return (array && array.length)
    ? Object(_baseWhile_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(predicate, 3), true, true)
    : [];
}

/* harmony default export */ __webpack_exports__["default"] = (dropRightWhile);


/***/ }),
/* 326 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);


/**
 * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
 * without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to query.
 * @param {Function} predicate The function invoked per iteration.
 * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the slice of `array`.
 */
function baseWhile(array, predicate, isDrop, fromRight) {
  var length = array.length,
      index = fromRight ? length : -1;

  while ((fromRight ? index-- : ++index < length) &&
    predicate(array[index], index, array)) {}

  return isDrop
    ? Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
    : Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
}

/* harmony default export */ __webpack_exports__["default"] = (baseWhile);


/***/ }),
/* 327 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseWhile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(326);



/**
 * Creates a slice of `array` excluding elements dropped from the beginning.
 * Elements are dropped until `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.dropWhile(users, function(o) { return !o.active; });
 * // => objects for ['pebbles']
 *
 * // The `_.matches` iteratee shorthand.
 * _.dropWhile(users, { 'user': 'barney', 'active': false });
 * // => objects for ['fred', 'pebbles']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.dropWhile(users, ['active', false]);
 * // => objects for ['pebbles']
 *
 * // The `_.property` iteratee shorthand.
 * _.dropWhile(users, 'active');
 * // => objects for ['barney', 'fred', 'pebbles']
 */
function dropWhile(array, predicate) {
  return (array && array.length)
    ? Object(_baseWhile_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(predicate, 3), true)
    : [];
}

/* harmony default export */ __webpack_exports__["default"] = (dropWhile);


/***/ }),
/* 328 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _forEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(329);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _forEach_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 329 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97);
/* harmony import */ var _baseEach_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(292);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(330);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);





/**
 * Iterates over elements of `collection` and invokes `iteratee` for each element.
 * The iteratee is invoked with three arguments: (value, index|key, collection).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length"
 * property are iterated like arrays. To avoid this behavior use `_.forIn`
 * or `_.forOwn` for object iteration.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias each
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEachRight
 * @example
 *
 * _.forEach([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `1` then `2`.
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forEach(collection, iteratee) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection) ? _arrayEach_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseEach_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  return func(collection, Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee));
}

/* harmony default export */ __webpack_exports__["default"] = (forEach);


/***/ }),
/* 330 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);


/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"];
}

/* harmony default export */ __webpack_exports__["default"] = (castFunction);


/***/ }),
/* 331 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _forEachRight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(332);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _forEachRight_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 332 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayEachRight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(333);
/* harmony import */ var _baseEachRight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(334);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(330);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);





/**
 * This method is like `_.forEach` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @alias eachRight
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEach
 * @example
 *
 * _.forEachRight([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `2` then `1`.
 */
function forEachRight(collection, iteratee) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection) ? _arrayEachRight_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseEachRight_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  return func(collection, Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee));
}

/* harmony default export */ __webpack_exports__["default"] = (forEachRight);


/***/ }),
/* 333 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.forEachRight` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEachRight(array, iteratee) {
  var length = array == null ? 0 : array.length;

  while (length--) {
    if (iteratee(array[length], length, array) === false) {
      break;
    }
  }
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayEachRight);


/***/ }),
/* 334 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseForOwnRight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(335);
/* harmony import */ var _createBaseEach_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(296);



/**
 * The base implementation of `_.forEachRight` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEachRight = Object(_createBaseEach_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_baseForOwnRight_js__WEBPACK_IMPORTED_MODULE_0__["default"], true);

/* harmony default export */ __webpack_exports__["default"] = (baseEachRight);


/***/ }),
/* 335 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseForRight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(336);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);



/**
 * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwnRight(object, iteratee) {
  return object && Object(_baseForRight_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, iteratee, _keys_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (baseForOwnRight);


/***/ }),
/* 336 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createBaseFor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(295);


/**
 * This function is like `baseFor` except that it iterates over properties
 * in the opposite order.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseForRight = Object(_createBaseFor_js__WEBPACK_IMPORTED_MODULE_0__["default"])(true);

/* harmony default export */ __webpack_exports__["default"] = (baseForRight);


/***/ }),
/* 337 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(214);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/**
 * Checks if `string` ends with the given target string.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {string} [target] The string to search for.
 * @param {number} [position=string.length] The position to search up to.
 * @returns {boolean} Returns `true` if `string` ends with `target`,
 *  else `false`.
 * @example
 *
 * _.endsWith('abc', 'c');
 * // => true
 *
 * _.endsWith('abc', 'b');
 * // => false
 *
 * _.endsWith('abc', 'b', 2);
 * // => true
 */
function endsWith(string, target, position) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string);
  target = Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(target);

  var length = string.length;
  position = position === undefined
    ? length
    : Object(_baseClamp_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(position), 0, length);

  var end = position;
  position -= target.length;
  return position >= 0 && string.slice(position, end) == target;
}

/* harmony default export */ __webpack_exports__["default"] = (endsWith);


/***/ }),
/* 338 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toPairs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(339);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _toPairs_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 339 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createToPairs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(340);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);



/**
 * Creates an array of own enumerable string keyed-value pairs for `object`
 * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
 * entries are returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias entries
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the key-value pairs.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.toPairs(new Foo);
 * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
 */
var toPairs = Object(_createToPairs_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_keys_js__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (toPairs);


/***/ }),
/* 340 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseToPairs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(341);
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(235);
/* harmony import */ var _mapToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(271);
/* harmony import */ var _setToPairs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(342);





/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/**
 * Creates a `_.toPairs` or `_.toPairsIn` function.
 *
 * @private
 * @param {Function} keysFunc The function to get the keys of a given object.
 * @returns {Function} Returns the new pairs function.
 */
function createToPairs(keysFunc) {
  return function(object) {
    var tag = Object(_getTag_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object);
    if (tag == mapTag) {
      return Object(_mapToArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object);
    }
    if (tag == setTag) {
      return Object(_setToPairs_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object);
    }
    return Object(_baseToPairs_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, keysFunc(object));
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createToPairs);


/***/ }),
/* 341 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);


/**
 * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
 * of key-value pairs for `object` corresponding to the property names of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the key-value pairs.
 */
function baseToPairs(object, props) {
  return Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(props, function(key) {
    return [key, object[key]];
  });
}

/* harmony default export */ __webpack_exports__["default"] = (baseToPairs);


/***/ }),
/* 342 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Converts `set` to its value-value pairs.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the value-value pairs.
 */
function setToPairs(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = [value, value];
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (setToPairs);


/***/ }),
/* 343 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toPairsIn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(344);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _toPairsIn_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 344 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createToPairs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(340);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);



/**
 * Creates an array of own and inherited enumerable string keyed-value pairs
 * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
 * or set, its entries are returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias entriesIn
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the key-value pairs.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.toPairsIn(new Foo);
 * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
 */
var toPairsIn = Object(_createToPairs_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_keysIn_js__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (toPairsIn);


/***/ }),
/* 345 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _escapeHtmlChar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(346);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(174);



/** Used to match HTML entities and HTML characters. */
var reUnescapedHtml = /[&<>"']/g,
    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

/**
 * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
 * corresponding HTML entities.
 *
 * **Note:** No other characters are escaped. To escape additional
 * characters use a third-party library like [_he_](https://mths.be/he).
 *
 * Though the ">" character is escaped for symmetry, characters like
 * ">" and "/" don't need escaping in HTML and have no special meaning
 * unless they're part of a tag or unquoted attribute value. See
 * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
 * (under "semi-related fun fact") for more details.
 *
 * When working with HTML you should always
 * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
 * XSS vectors.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escape('fred, barney, & pebbles');
 * // => 'fred, barney, &amp; pebbles'
 */
function escape(string) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string);
  return (string && reHasUnescapedHtml.test(string))
    ? string.replace(reUnescapedHtml, _escapeHtmlChar_js__WEBPACK_IMPORTED_MODULE_0__["default"])
    : string;
}

/* harmony default export */ __webpack_exports__["default"] = (escape);


/***/ }),
/* 346 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basePropertyOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(203);


/** Used to map characters to HTML entities. */
var htmlEscapes = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;'
};

/**
 * Used by `_.escape` to convert characters to HTML entities.
 *
 * @private
 * @param {string} chr The matched character to escape.
 * @returns {string} Returns the escaped character.
 */
var escapeHtmlChar = Object(_basePropertyOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(htmlEscapes);

/* harmony default export */ __webpack_exports__["default"] = (escapeHtmlChar);


/***/ }),
/* 347 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);


/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
    reHasRegExpChar = RegExp(reRegExpChar.source);

/**
 * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
 * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escapeRegExp('[lodash](https://lodash.com/)');
 * // => '\[lodash\]\(https://lodash\.com/\)'
 */
function escapeRegExp(string) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(string);
  return (string && reHasRegExpChar.test(string))
    ? string.replace(reRegExpChar, '\\$&')
    : string;
}

/* harmony default export */ __webpack_exports__["default"] = (escapeRegExp);


/***/ }),
/* 348 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayEvery_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(349);
/* harmony import */ var _baseEvery_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(350);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(117);






/**
 * Checks if `predicate` returns truthy for **all** elements of `collection`.
 * Iteration is stopped once `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * **Note:** This method returns `true` for
 * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
 * elements of empty collections.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 * @example
 *
 * _.every([true, 1, null, 'yes'], Boolean);
 * // => false
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.every(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.every(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.every(users, 'active');
 * // => false
 */
function every(collection, predicate, guard) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection) ? _arrayEvery_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseEvery_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  if (guard && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_4__["default"])(collection, predicate, guard)) {
    predicate = undefined;
  }
  return func(collection, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(predicate, 3));
}

/* harmony default export */ __webpack_exports__["default"] = (every);


/***/ }),
/* 349 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.every` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 */
function arrayEvery(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (!predicate(array[index], index, array)) {
      return false;
    }
  }
  return true;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayEvery);


/***/ }),
/* 350 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(292);


/**
 * The base implementation of `_.every` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`
 */
function baseEvery(collection, predicate) {
  var result = true;
  Object(_baseEach_js__WEBPACK_IMPORTED_MODULE_0__["default"])(collection, function(value, index, collection) {
    result = !!predicate(value, index, collection);
    return result;
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseEvery);


/***/ }),
/* 351 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assignIn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(136);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _assignIn_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 352 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assignInWith_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(140);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _assignInWith_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 353 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(117);



/**
 * Fills elements of `array` with `value` from `start` up to, but not
 * including, `end`.
 *
 * **Note:** This method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Array
 * @param {Array} array The array to fill.
 * @param {*} value The value to fill `array` with.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _.fill(array, 'a');
 * console.log(array);
 * // => ['a', 'a', 'a']
 *
 * _.fill(Array(3), 2);
 * // => [2, 2, 2]
 *
 * _.fill([4, 6, 8, 10], '*', 1, 3);
 * // => [4, '*', '*', 10]
 */
function fill(array, value, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (start && typeof start != 'number' && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, value, start)) {
    start = 0;
    end = length;
  }
  return Object(_baseFill_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, value, start, end);
}

/* harmony default export */ __webpack_exports__["default"] = (fill);


/***/ }),
/* 354 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(49);
/* harmony import */ var _toLength_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(355);



/**
 * The base implementation of `_.fill` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to fill.
 * @param {*} value The value to fill `array` with.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns `array`.
 */
function baseFill(array, value, start, end) {
  var length = array.length;

  start = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_0__["default"])(start);
  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = (end === undefined || end > length) ? length : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_0__["default"])(end);
  if (end < 0) {
    end += length;
  }
  end = start > end ? 0 : Object(_toLength_js__WEBPACK_IMPORTED_MODULE_1__["default"])(end);
  while (start < end) {
    array[start++] = value;
  }
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (baseFill);


/***/ }),
/* 355 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(214);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Converts `value` to an integer suitable for use as the length of an
 * array-like object.
 *
 * **Note:** This method is based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toLength(3.2);
 * // => 3
 *
 * _.toLength(Number.MIN_VALUE);
 * // => 0
 *
 * _.toLength(Infinity);
 * // => 4294967295
 *
 * _.toLength('3.2');
 * // => 3
 */
function toLength(value) {
  return value ? Object(_baseClamp_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value), 0, MAX_ARRAY_LENGTH) : 0;
}

/* harmony default export */ __webpack_exports__["default"] = (toLength);


/***/ }),
/* 356 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _baseFilter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(357);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);





/**
 * Iterates over elements of `collection`, returning an array of all elements
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * **Note:** Unlike `_.remove`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.reject
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * _.filter(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, { 'age': 36, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.filter(users, 'active');
 * // => objects for ['barney']
 */
function filter(collection, predicate) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection) ? _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseFilter_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  return func(collection, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(predicate, 3));
}

/* harmony default export */ __webpack_exports__["default"] = (filter);


/***/ }),
/* 357 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(292);


/**
 * The base implementation of `_.filter` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function baseFilter(collection, predicate) {
  var result = [];
  Object(_baseEach_js__WEBPACK_IMPORTED_MODULE_0__["default"])(collection, function(value, index, collection) {
    if (predicate(value, index, collection)) {
      result.push(value);
    }
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseFilter);


/***/ }),
/* 358 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createFind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(359);
/* harmony import */ var _findIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(360);



/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */
var find = Object(_createFind_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_findIndex_js__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (find);


/***/ }),
/* 359 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(118);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(121);




/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection)) {
      var iteratee = Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(predicate, 3);
      collection = Object(_keys_js__WEBPACK_IMPORTED_MODULE_2__["default"])(collection);
      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createFind);


/***/ }),
/* 360 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFindIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(100);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);




/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fromIndex);
  if (index < 0) {
    index = nativeMax(length + index, 0);
  }
  return Object(_baseFindIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"])(predicate, 3), index);
}

/* harmony default export */ __webpack_exports__["default"] = (findIndex);


/***/ }),
/* 361 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFindKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(362);
/* harmony import */ var _baseForOwn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(293);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);




/**
 * This method is like `_.find` except that it returns the key of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {string|undefined} Returns the key of the matched element,
 *  else `undefined`.
 * @example
 *
 * var users = {
 *   'barney':  { 'age': 36, 'active': true },
 *   'fred':    { 'age': 40, 'active': false },
 *   'pebbles': { 'age': 1,  'active': true }
 * };
 *
 * _.findKey(users, function(o) { return o.age < 40; });
 * // => 'barney' (iteration order is not guaranteed)
 *
 * // The `_.matches` iteratee shorthand.
 * _.findKey(users, { 'age': 1, 'active': true });
 * // => 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findKey(users, ['active', false]);
 * // => 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.findKey(users, 'active');
 * // => 'barney'
 */
function findKey(object, predicate) {
  return Object(_baseFindKey_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(predicate, 3), _baseForOwn_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (findKey);


/***/ }),
/* 362 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of methods like `_.findKey` and `_.findLastKey`,
 * without support for iteratee shorthands, which iterates over `collection`
 * using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the found element or its key, else `undefined`.
 */
function baseFindKey(collection, predicate, eachFunc) {
  var result;
  eachFunc(collection, function(value, key, collection) {
    if (predicate(value, key, collection)) {
      result = key;
      return false;
    }
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseFindKey);


/***/ }),
/* 363 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createFind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(359);
/* harmony import */ var _findLastIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(364);



/**
 * This method is like `_.find` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=collection.length-1] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * _.findLast([1, 2, 3, 4], function(n) {
 *   return n % 2 == 1;
 * });
 * // => 3
 */
var findLast = Object(_createFind_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_findLastIndex_js__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (findLast);


/***/ }),
/* 364 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFindIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(100);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);




/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * This method is like `_.findIndex` except that it iterates over elements
 * of `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
 * // => 2
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastIndex(users, { 'user': 'barney', 'active': true });
 * // => 0
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastIndex(users, ['active', false]);
 * // => 2
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastIndex(users, 'active');
 * // => 0
 */
function findLastIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length - 1;
  if (fromIndex !== undefined) {
    index = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fromIndex);
    index = fromIndex < 0
      ? nativeMax(length + index, 0)
      : nativeMin(index, length - 1);
  }
  return Object(_baseFindIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"])(predicate, 3), index, true);
}

/* harmony default export */ __webpack_exports__["default"] = (findLastIndex);


/***/ }),
/* 365 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFindKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(362);
/* harmony import */ var _baseForOwnRight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(335);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);




/**
 * This method is like `_.findKey` except that it iterates over elements of
 * a collection in the opposite order.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {string|undefined} Returns the key of the matched element,
 *  else `undefined`.
 * @example
 *
 * var users = {
 *   'barney':  { 'age': 36, 'active': true },
 *   'fred':    { 'age': 40, 'active': false },
 *   'pebbles': { 'age': 1,  'active': true }
 * };
 *
 * _.findLastKey(users, function(o) { return o.age < 40; });
 * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastKey(users, { 'age': 36, 'active': true });
 * // => 'barney'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastKey(users, ['active', false]);
 * // => 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastKey(users, 'active');
 * // => 'pebbles'
 */
function findLastKey(object, predicate) {
  return Object(_baseFindKey_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(predicate, 3), _baseForOwnRight_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (findLastKey);


/***/ }),
/* 366 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _head_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(367);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _head_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 367 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Gets the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias first
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the first element of `array`.
 * @example
 *
 * _.head([1, 2, 3]);
 * // => 1
 *
 * _.head([]);
 * // => undefined
 */
function head(array) {
  return (array && array.length) ? array[0] : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (head);


/***/ }),
/* 368 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(369);



/**
 * Creates a flattened array of values by running each element in `collection`
 * thru `iteratee` and flattening the mapped results. The iteratee is invoked
 * with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [n, n];
 * }
 *
 * _.flatMap([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */
function flatMap(collection, iteratee) {
  return Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_map_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection, iteratee), 1);
}

/* harmony default export */ __webpack_exports__["default"] = (flatMap);


/***/ }),
/* 369 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _baseMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(370);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);





/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection) ? _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseMap_js__WEBPACK_IMPORTED_MODULE_2__["default"];
  return func(collection, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratee, 3));
}

/* harmony default export */ __webpack_exports__["default"] = (map);


/***/ }),
/* 370 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(292);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(118);



/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection) ? Array(collection.length) : [];

  Object(_baseEach_js__WEBPACK_IMPORTED_MODULE_0__["default"])(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseMap);


/***/ }),
/* 371 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(369);



/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * This method is like `_.flatMap` except that it recursively flattens the
 * mapped results.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [[[n, n]]];
 * }
 *
 * _.flatMapDeep([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */
function flatMapDeep(collection, iteratee) {
  return Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_map_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection, iteratee), INFINITY);
}

/* harmony default export */ __webpack_exports__["default"] = (flatMapDeep);


/***/ }),
/* 372 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(369);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);




/**
 * This method is like `_.flatMap` except that it recursively flattens the
 * mapped results up to `depth` times.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {number} [depth=1] The maximum recursion depth.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [[[n, n]]];
 * }
 *
 * _.flatMapDepth([1, 2], duplicate, 2);
 * // => [[1, 1], [2, 2]]
 */
function flatMapDepth(collection, iteratee, depth) {
  depth = depth === undefined ? 1 : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(depth);
  return Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_map_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection, iteratee), depth);
}

/* harmony default export */ __webpack_exports__["default"] = (flatMapDepth);


/***/ }),
/* 373 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);


/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Recursively flattens `array`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flattenDeep([1, [2, [3, [4]], 5]]);
 * // => [1, 2, 3, 4, 5]
 */
function flattenDeep(array) {
  var length = array == null ? 0 : array.length;
  return length ? Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, INFINITY) : [];
}

/* harmony default export */ __webpack_exports__["default"] = (flattenDeep);


/***/ }),
/* 374 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/**
 * Recursively flatten `array` up to `depth` times.
 *
 * @static
 * @memberOf _
 * @since 4.4.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @param {number} [depth=1] The maximum recursion depth.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * var array = [1, [2, [3, [4]], 5]];
 *
 * _.flattenDepth(array, 1);
 * // => [1, 2, [3, [4]], 5]
 *
 * _.flattenDepth(array, 2);
 * // => [1, 2, 3, [4], 5]
 */
function flattenDepth(array, depth) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  depth = depth === undefined ? 1 : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(depth);
  return Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, depth);
}

/* harmony default export */ __webpack_exports__["default"] = (flattenDepth);


/***/ }),
/* 375 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createWrap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54);


/** Used to compose bitmasks for function metadata. */
var WRAP_FLIP_FLAG = 512;

/**
 * Creates a function that invokes `func` with arguments reversed.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to flip arguments for.
 * @returns {Function} Returns the new flipped function.
 * @example
 *
 * var flipped = _.flip(function() {
 *   return _.toArray(arguments);
 * });
 *
 * flipped('a', 'b', 'c', 'd');
 * // => ['d', 'c', 'b', 'a']
 */
function flip(func) {
  return Object(_createWrap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, WRAP_FLIP_FLAG);
}

/* harmony default export */ __webpack_exports__["default"] = (flip);


/***/ }),
/* 376 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createRound_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(210);


/**
 * Computes `number` rounded down to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round down.
 * @param {number} [precision=0] The precision to round down to.
 * @returns {number} Returns the rounded down number.
 * @example
 *
 * _.floor(4.006);
 * // => 4
 *
 * _.floor(0.046, 2);
 * // => 0.04
 *
 * _.floor(4060, -2);
 * // => 4000
 */
var floor = Object(_createRound_js__WEBPACK_IMPORTED_MODULE_0__["default"])('floor');

/* harmony default export */ __webpack_exports__["default"] = (floor);


/***/ }),
/* 377 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createFlow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(378);


/**
 * Creates a function that returns the result of invoking the given functions
 * with the `this` binding of the created function, where each successive
 * invocation is supplied the return value of the previous.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flowRight
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flow([_.add, square]);
 * addSquare(1, 2);
 * // => 9
 */
var flow = Object(_createFlow_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

/* harmony default export */ __webpack_exports__["default"] = (flow);


/***/ }),
/* 378 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(84);
/* harmony import */ var _flatRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(176);
/* harmony import */ var _getData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79);
/* harmony import */ var _getFuncName_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(47);
/* harmony import */ var _isLaziable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(76);







/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;

/**
 * Creates a `_.flow` or `_.flowRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new flow function.
 */
function createFlow(fromRight) {
  return Object(_flatRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(funcs) {
    var length = funcs.length,
        index = length,
        prereq = _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.thru;

    if (fromRight) {
      funcs.reverse();
    }
    while (index--) {
      var func = funcs[index];
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (prereq && !wrapper && Object(_getFuncName_js__WEBPACK_IMPORTED_MODULE_3__["default"])(func) == 'wrapper') {
        var wrapper = new _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"]([], true);
      }
    }
    index = wrapper ? index : length;
    while (++index < length) {
      func = funcs[index];

      var funcName = Object(_getFuncName_js__WEBPACK_IMPORTED_MODULE_3__["default"])(func),
          data = funcName == 'wrapper' ? Object(_getData_js__WEBPACK_IMPORTED_MODULE_2__["default"])(func) : undefined;

      if (data && Object(_isLaziable_js__WEBPACK_IMPORTED_MODULE_5__["default"])(data[0]) &&
            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
            !data[4].length && data[9] == 1
          ) {
        wrapper = wrapper[Object(_getFuncName_js__WEBPACK_IMPORTED_MODULE_3__["default"])(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = (func.length == 1 && Object(_isLaziable_js__WEBPACK_IMPORTED_MODULE_5__["default"])(func))
          ? wrapper[funcName]()
          : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments,
          value = args[0];

      if (wrapper && args.length == 1 && Object(_isArray_js__WEBPACK_IMPORTED_MODULE_4__["default"])(value)) {
        return wrapper.plant(value).value();
      }
      var index = 0,
          result = length ? funcs[index].apply(this, args) : value;

      while (++index < length) {
        result = funcs[index].call(this, result);
      }
      return result;
    };
  });
}

/* harmony default export */ __webpack_exports__["default"] = (createFlow);


/***/ }),
/* 379 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createFlow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(378);


/**
 * This method is like `_.flow` except that it creates a function that
 * invokes the given functions from right to left.
 *
 * @static
 * @since 3.0.0
 * @memberOf _
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flow
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flowRight([square, _.add]);
 * addSquare(1, 2);
 * // => 9
 */
var flowRight = Object(_createFlow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(true);

/* harmony default export */ __webpack_exports__["default"] = (flowRight);


/***/ }),
/* 380 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(294);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);




/**
 * Iterates over own and inherited enumerable string keyed properties of an
 * object and invokes `iteratee` for each property. The iteratee is invoked
 * with three arguments: (value, key, object). Iteratee functions may exit
 * iteration early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 0.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forInRight
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forIn(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
 */
function forIn(object, iteratee) {
  return object == null
    ? object
    : Object(_baseFor_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratee), _keysIn_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (forIn);


/***/ }),
/* 381 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseForRight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(336);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);




/**
 * This method is like `_.forIn` except that it iterates over properties of
 * `object` in the opposite order.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forInRight(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
 */
function forInRight(object, iteratee) {
  return object == null
    ? object
    : Object(_baseForRight_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratee), _keysIn_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (forInRight);


/***/ }),
/* 382 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseForOwn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(293);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);



/**
 * Iterates over own enumerable string keyed properties of an object and
 * invokes `iteratee` for each property. The iteratee is invoked with three
 * arguments: (value, key, object). Iteratee functions may exit iteration
 * early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 0.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forOwnRight
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forOwn(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forOwn(object, iteratee) {
  return object && Object(_baseForOwn_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratee));
}

/* harmony default export */ __webpack_exports__["default"] = (forOwn);


/***/ }),
/* 383 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseForOwnRight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(335);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);



/**
 * This method is like `_.forOwn` except that it iterates over properties of
 * `object` in the opposite order.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forOwn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forOwnRight(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
 */
function forOwnRight(object, iteratee) {
  return object && Object(_baseForOwnRight_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratee));
}

/* harmony default export */ __webpack_exports__["default"] = (forOwnRight);


/***/ }),
/* 384 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The inverse of `_.toPairs`; this method returns an object composed
 * from key-value `pairs`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} pairs The key-value pairs.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.fromPairs([['a', 1], ['b', 2]]);
 * // => { 'a': 1, 'b': 2 }
 */
function fromPairs(pairs) {
  var index = -1,
      length = pairs == null ? 0 : pairs.length,
      result = {};

  while (++index < length) {
    var pair = pairs[index];
    result[pair[0]] = pair[1];
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (fromPairs);


/***/ }),
/* 385 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFunctions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(386);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);



/**
 * Creates an array of function property names from own enumerable properties
 * of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to inspect.
 * @returns {Array} Returns the function names.
 * @see _.functionsIn
 * @example
 *
 * function Foo() {
 *   this.a = _.constant('a');
 *   this.b = _.constant('b');
 * }
 *
 * Foo.prototype.c = _.constant('c');
 *
 * _.functions(new Foo);
 * // => ['a', 'b']
 */
function functions(object) {
  return object == null ? [] : Object(_baseFunctions_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_keys_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object));
}

/* harmony default export */ __webpack_exports__["default"] = (functions);


/***/ }),
/* 386 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(61);



/**
 * The base implementation of `_.functions` which creates an array of
 * `object` function property names filtered from `props`.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Array} props The property names to filter.
 * @returns {Array} Returns the function names.
 */
function baseFunctions(object, props) {
  return Object(_arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__["default"])(props, function(key) {
    return Object(_isFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object[key]);
  });
}

/* harmony default export */ __webpack_exports__["default"] = (baseFunctions);


/***/ }),
/* 387 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFunctions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(386);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);



/**
 * Creates an array of function property names from own and inherited
 * enumerable properties of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @returns {Array} Returns the function names.
 * @see _.functions
 * @example
 *
 * function Foo() {
 *   this.a = _.constant('a');
 *   this.b = _.constant('b');
 * }
 *
 * Foo.prototype.c = _.constant('c');
 *
 * _.functionsIn(new Foo);
 * // => ['a', 'b', 'c']
 */
function functionsIn(object) {
  return object == null ? [] : Object(_baseFunctions_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_keysIn_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object));
}

/* harmony default export */ __webpack_exports__["default"] = (functionsIn);


/***/ }),
/* 388 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(111);
/* harmony import */ var _createAggregator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(289);



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The order of grouped values
 * is determined by the order they occur in `collection`. The corresponding
 * value of each key is an array of elements responsible for generating the
 * key. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * _.groupBy([6.1, 4.2, 6.3], Math.floor);
 * // => { '4': [4.2], '6': [6.1, 6.3] }
 *
 * // The `_.property` iteratee shorthand.
 * _.groupBy(['one', 'two', 'three'], 'length');
 * // => { '3': ['one', 'two'], '5': ['three'] }
 */
var groupBy = Object(_createAggregator_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(result, value, key) {
  if (hasOwnProperty.call(result, key)) {
    result[key].push(value);
  } else {
    Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result, key, [value]);
  }
});

/* harmony default export */ __webpack_exports__["default"] = (groupBy);


/***/ }),
/* 389 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(390);
/* harmony import */ var _createRelationalOperation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(391);



/**
 * Checks if `value` is greater than `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 * @see _.lt
 * @example
 *
 * _.gt(3, 1);
 * // => true
 *
 * _.gt(3, 3);
 * // => false
 *
 * _.gt(1, 3);
 * // => false
 */
var gt = Object(_createRelationalOperation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_baseGt_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (gt);


/***/ }),
/* 390 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.gt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 */
function baseGt(value, other) {
  return value > other;
}

/* harmony default export */ __webpack_exports__["default"] = (baseGt);


/***/ }),
/* 391 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51);


/**
 * Creates a function that performs a relational operation on two values.
 *
 * @private
 * @param {Function} operator The function to perform the operation.
 * @returns {Function} Returns the new relational operation function.
 */
function createRelationalOperation(operator) {
  return function(value, other) {
    if (!(typeof value == 'string' && typeof other == 'string')) {
      value = Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
      other = Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_0__["default"])(other);
    }
    return operator(value, other);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createRelationalOperation);


/***/ }),
/* 392 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createRelationalOperation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(391);


/**
 * Checks if `value` is greater than or equal to `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than or equal to
 *  `other`, else `false`.
 * @see _.lte
 * @example
 *
 * _.gte(3, 1);
 * // => true
 *
 * _.gte(3, 3);
 * // => true
 *
 * _.gte(1, 3);
 * // => false
 */
var gte = Object(_createRelationalOperation_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(value, other) {
  return value >= other;
});

/* harmony default export */ __webpack_exports__["default"] = (gte);


/***/ }),
/* 393 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseHas_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(394);
/* harmony import */ var _hasPath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(280);



/**
 * Checks if `path` is a direct property of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = { 'a': { 'b': 2 } };
 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.has(object, 'a');
 * // => true
 *
 * _.has(object, 'a.b');
 * // => true
 *
 * _.has(object, ['a', 'b']);
 * // => true
 *
 * _.has(other, 'a');
 * // => false
 */
function has(object, path) {
  return object != null && Object(_hasPath_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, path, _baseHas_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (has);


/***/ }),
/* 394 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.has` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHas(object, key) {
  return object != null && hasOwnProperty.call(object, key);
}

/* harmony default export */ __webpack_exports__["default"] = (baseHas);


/***/ }),
/* 395 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseInRange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(396);
/* harmony import */ var _toFinite_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50);
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51);




/**
 * Checks if `n` is between `start` and up to, but not including, `end`. If
 * `end` is not specified, it's set to `start` with `start` then set to `0`.
 * If `start` is greater than `end` the params are swapped to support
 * negative ranges.
 *
 * @static
 * @memberOf _
 * @since 3.3.0
 * @category Number
 * @param {number} number The number to check.
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 * @see _.range, _.rangeRight
 * @example
 *
 * _.inRange(3, 2, 4);
 * // => true
 *
 * _.inRange(4, 8);
 * // => true
 *
 * _.inRange(4, 2);
 * // => false
 *
 * _.inRange(2, 2);
 * // => false
 *
 * _.inRange(1.2, 2);
 * // => true
 *
 * _.inRange(5.2, 4);
 * // => false
 *
 * _.inRange(-3, -2, -6);
 * // => true
 */
function inRange(number, start, end) {
  start = Object(_toFinite_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start);
  if (end === undefined) {
    end = start;
    start = 0;
  } else {
    end = Object(_toFinite_js__WEBPACK_IMPORTED_MODULE_1__["default"])(end);
  }
  number = Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_2__["default"])(number);
  return Object(_baseInRange_js__WEBPACK_IMPORTED_MODULE_0__["default"])(number, start, end);
}

/* harmony default export */ __webpack_exports__["default"] = (inRange);


/***/ }),
/* 396 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * The base implementation of `_.inRange` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to check.
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 */
function baseInRange(number, start, end) {
  return number >= nativeMin(start, end) && number < nativeMax(start, end);
}

/* harmony default export */ __webpack_exports__["default"] = (baseInRange);


/***/ }),
/* 397 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(118);
/* harmony import */ var _isString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(398);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49);
/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(399);






/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Checks if `value` is in `collection`. If `collection` is a string, it's
 * checked for a substring of `value`, otherwise
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * is used for equality comparisons. If `fromIndex` is negative, it's used as
 * the offset from the end of `collection`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=0] The index to search from.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
 * @returns {boolean} Returns `true` if `value` is found, else `false`.
 * @example
 *
 * _.includes([1, 2, 3], 1);
 * // => true
 *
 * _.includes([1, 2, 3], 1, 2);
 * // => false
 *
 * _.includes({ 'a': 1, 'b': 2 }, 1);
 * // => true
 *
 * _.includes('abcd', 'bc');
 * // => true
 */
function includes(collection, value, fromIndex, guard) {
  collection = Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection) ? collection : Object(_values_js__WEBPACK_IMPORTED_MODULE_4__["default"])(collection);
  fromIndex = (fromIndex && !guard) ? Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_3__["default"])(fromIndex) : 0;

  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = nativeMax(length + fromIndex, 0);
  }
  return Object(_isString_js__WEBPACK_IMPORTED_MODULE_2__["default"])(collection)
    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
    : (!!length && Object(_baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(collection, value, fromIndex) > -1);
}

/* harmony default export */ __webpack_exports__["default"] = (includes);


/***/ }),
/* 398 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(44);




/** `Object#toString` result references. */
var stringTag = '[object String]';

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' ||
    (!Object(_isArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == stringTag);
}

/* harmony default export */ __webpack_exports__["default"] = (isString);


/***/ }),
/* 399 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseValues_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(400);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);



/**
 * Creates an array of the own enumerable string keyed property values of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property values.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.values(new Foo);
 * // => [1, 2] (iteration order is not guaranteed)
 *
 * _.values('hi');
 * // => ['h', 'i']
 */
function values(object) {
  return object == null ? [] : Object(_baseValues_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_keys_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object));
}

/* harmony default export */ __webpack_exports__["default"] = (values);


/***/ }),
/* 400 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);


/**
 * The base implementation of `_.values` and `_.valuesIn` which creates an
 * array of `object` property values corresponding to the property names
 * of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the array of property values.
 */
function baseValues(object, props) {
  return Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(props, function(key) {
    return object[key];
  });
}

/* harmony default export */ __webpack_exports__["default"] = (baseValues);


/***/ }),
/* 401 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Gets the index at which the first occurrence of `value` is found in `array`
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. If `fromIndex` is negative, it's used as the
 * offset from the end of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.indexOf([1, 2, 1, 2], 2);
 * // => 1
 *
 * // Search from the `fromIndex`.
 * _.indexOf([1, 2, 1, 2], 2, 2);
 * // => 3
 */
function indexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fromIndex);
  if (index < 0) {
    index = nativeMax(length + index, 0);
  }
  return Object(_baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, value, index);
}

/* harmony default export */ __webpack_exports__["default"] = (indexOf);


/***/ }),
/* 402 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);


/**
 * Gets all but the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.initial([1, 2, 3]);
 * // => [1, 2]
 */
function initial(array) {
  var length = array == null ? 0 : array.length;
  return length ? Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, 0, -1) : [];
}

/* harmony default export */ __webpack_exports__["default"] = (initial);


/***/ }),
/* 403 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _baseIntersection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(404);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(115);
/* harmony import */ var _castArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(405);





/**
 * Creates an array of unique values that are included in all given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersection([2, 1], [2, 3]);
 * // => [2]
 */
var intersection = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function(arrays) {
  var mapped = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arrays, _castArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"]);
  return (mapped.length && mapped[0] === arrays[0])
    ? Object(_baseIntersection_js__WEBPACK_IMPORTED_MODULE_1__["default"])(mapped)
    : [];
});

/* harmony default export */ __webpack_exports__["default"] = (intersection);


/***/ }),
/* 404 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SetCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(265);
/* harmony import */ var _arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98);
/* harmony import */ var _arrayIncludesWith_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(318);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(46);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(131);
/* harmony import */ var _cacheHas_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(269);







/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * The base implementation of methods like `_.intersection`, without support
 * for iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of shared values.
 */
function baseIntersection(arrays, iteratee, comparator) {
  var includes = comparator ? _arrayIncludesWith_js__WEBPACK_IMPORTED_MODULE_2__["default"] : _arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__["default"],
      length = arrays[0].length,
      othLength = arrays.length,
      othIndex = othLength,
      caches = Array(othLength),
      maxLength = Infinity,
      result = [];

  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee) {
      array = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_3__["default"])(array, Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_4__["default"])(iteratee));
    }
    maxLength = nativeMin(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
      ? new _SetCache_js__WEBPACK_IMPORTED_MODULE_0__["default"](othIndex && array)
      : undefined;
  }
  array = arrays[0];

  var index = -1,
      seen = caches[0];

  outer:
  while (++index < length && result.length < maxLength) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (!(seen
          ? Object(_cacheHas_js__WEBPACK_IMPORTED_MODULE_5__["default"])(seen, computed)
          : includes(result, computed, comparator)
        )) {
      othIndex = othLength;
      while (--othIndex) {
        var cache = caches[othIndex];
        if (!(cache
              ? Object(_cacheHas_js__WEBPACK_IMPORTED_MODULE_5__["default"])(cache, computed)
              : includes(arrays[othIndex], computed, comparator))
            ) {
          continue outer;
        }
      }
      if (seen) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIntersection);


/***/ }),
/* 405 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(309);


/**
 * Casts `value` to an empty array if it's not an array like object.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array|Object} Returns the cast array-like object.
 */
function castArrayLikeObject(value) {
  return Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) ? value : [];
}

/* harmony default export */ __webpack_exports__["default"] = (castArrayLikeObject);


/***/ }),
/* 406 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _baseIntersection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(404);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(115);
/* harmony import */ var _castArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(405);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(320);







/**
 * This method is like `_.intersection` except that it accepts `iteratee`
 * which is invoked for each element of each `arrays` to generate the criterion
 * by which they're compared. The order and references of result values are
 * determined by the first array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [2.1]
 *
 * // The `_.property` iteratee shorthand.
 * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }]
 */
var intersectionBy = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])(function(arrays) {
  var iteratee = Object(_last_js__WEBPACK_IMPORTED_MODULE_5__["default"])(arrays),
      mapped = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arrays, _castArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__["default"]);

  if (iteratee === Object(_last_js__WEBPACK_IMPORTED_MODULE_5__["default"])(mapped)) {
    iteratee = undefined;
  } else {
    mapped.pop();
  }
  return (mapped.length && mapped[0] === arrays[0])
    ? Object(_baseIntersection_js__WEBPACK_IMPORTED_MODULE_1__["default"])(mapped, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee, 2))
    : [];
});

/* harmony default export */ __webpack_exports__["default"] = (intersectionBy);


/***/ }),
/* 407 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _baseIntersection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(404);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(115);
/* harmony import */ var _castArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(405);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(320);






/**
 * This method is like `_.intersection` except that it accepts `comparator`
 * which is invoked to compare elements of `arrays`. The order and references
 * of result values are determined by the first array. The comparator is
 * invoked with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.intersectionWith(objects, others, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }]
 */
var intersectionWith = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function(arrays) {
  var comparator = Object(_last_js__WEBPACK_IMPORTED_MODULE_4__["default"])(arrays),
      mapped = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arrays, _castArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"]);

  comparator = typeof comparator == 'function' ? comparator : undefined;
  if (comparator) {
    mapped.pop();
  }
  return (mapped.length && mapped[0] === arrays[0])
    ? Object(_baseIntersection_js__WEBPACK_IMPORTED_MODULE_1__["default"])(mapped, undefined, comparator)
    : [];
});

/* harmony default export */ __webpack_exports__["default"] = (intersectionWith);


/***/ }),
/* 408 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(94);
/* harmony import */ var _createInverter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(409);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(56);




/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Creates an object composed of the inverted keys and values of `object`.
 * If `object` contains duplicate values, subsequent values overwrite
 * property assignments of previous values.
 *
 * @static
 * @memberOf _
 * @since 0.7.0
 * @category Object
 * @param {Object} object The object to invert.
 * @returns {Object} Returns the new inverted object.
 * @example
 *
 * var object = { 'a': 1, 'b': 2, 'c': 1 };
 *
 * _.invert(object);
 * // => { '1': 'c', '2': 'b' }
 */
var invert = Object(_createInverter_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(result, value, key) {
  if (value != null &&
      typeof value.toString != 'function') {
    value = nativeObjectToString.call(value);
  }

  result[value] = key;
}, Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_identity_js__WEBPACK_IMPORTED_MODULE_2__["default"]));

/* harmony default export */ __webpack_exports__["default"] = (invert);


/***/ }),
/* 409 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseInverter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(410);


/**
 * Creates a function like `_.invertBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} toIteratee The function to resolve iteratees.
 * @returns {Function} Returns the new inverter function.
 */
function createInverter(setter, toIteratee) {
  return function(object, iteratee) {
    return Object(_baseInverter_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, setter, toIteratee(iteratee), {});
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createInverter);


/***/ }),
/* 410 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseForOwn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(293);


/**
 * The base implementation of `_.invert` and `_.invertBy` which inverts
 * `object` with values transformed by `iteratee` and set by `setter`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform values.
 * @param {Object} accumulator The initial inverted object.
 * @returns {Function} Returns `accumulator`.
 */
function baseInverter(object, setter, iteratee, accumulator) {
  Object(_baseForOwn_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, function(value, key, object) {
    setter(accumulator, iteratee(value), key, object);
  });
  return accumulator;
}

/* harmony default export */ __webpack_exports__["default"] = (baseInverter);


/***/ }),
/* 411 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _createInverter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(409);



/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * This method is like `_.invert` except that the inverted object is generated
 * from the results of running each element of `object` thru `iteratee`. The
 * corresponding inverted value of each inverted key is an array of keys
 * responsible for generating the inverted value. The iteratee is invoked
 * with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.1.0
 * @category Object
 * @param {Object} object The object to invert.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Object} Returns the new inverted object.
 * @example
 *
 * var object = { 'a': 1, 'b': 2, 'c': 1 };
 *
 * _.invertBy(object);
 * // => { '1': ['a', 'c'], '2': ['b'] }
 *
 * _.invertBy(object, function(value) {
 *   return 'group' + value;
 * });
 * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
 */
var invertBy = Object(_createInverter_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(result, value, key) {
  if (value != null &&
      typeof value.toString != 'function') {
    value = nativeObjectToString.call(value);
  }

  if (hasOwnProperty.call(result, value)) {
    result[value].push(key);
  } else {
    result[value] = [key];
  }
}, _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (invertBy);


/***/ }),
/* 412 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseInvoke_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(413);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);



/**
 * Invokes the method at `path` of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the method to invoke.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {*} Returns the result of the invoked method.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
 *
 * _.invoke(object, 'a[0].b.c.slice', 1, 3);
 * // => [2, 3]
 */
var invoke = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_baseInvoke_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (invoke);


/***/ }),
/* 413 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(146);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(320);
/* harmony import */ var _parent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(414);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(175);






/**
 * The base implementation of `_.invoke` without support for individual
 * method arguments.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the method to invoke.
 * @param {Array} args The arguments to invoke the method with.
 * @returns {*} Returns the result of the invoked method.
 */
function baseInvoke(object, path, args) {
  path = Object(_castPath_js__WEBPACK_IMPORTED_MODULE_1__["default"])(path, object);
  object = Object(_parent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object, path);
  var func = object == null ? object : object[Object(_toKey_js__WEBPACK_IMPORTED_MODULE_4__["default"])(Object(_last_js__WEBPACK_IMPORTED_MODULE_2__["default"])(path))];
  return func == null ? undefined : Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, object, args);
}

/* harmony default export */ __webpack_exports__["default"] = (baseInvoke);


/***/ }),
/* 414 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(145);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(194);



/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : Object(_baseGet_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_1__["default"])(path, 0, -1));
}

/* harmony default export */ __webpack_exports__["default"] = (parent);


/***/ }),
/* 415 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _baseEach_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(292);
/* harmony import */ var _baseInvoke_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(413);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(115);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(118);






/**
 * Invokes the method at `path` of each element in `collection`, returning
 * an array of the results of each invoked method. Any additional arguments
 * are provided to each invoked method. If `path` is a function, it's invoked
 * for, and `this` bound to, each element in `collection`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Array|Function|string} path The path of the method to invoke or
 *  the function invoked per iteration.
 * @param {...*} [args] The arguments to invoke each method with.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
 * // => [[1, 5, 7], [1, 2, 3]]
 *
 * _.invokeMap([123, 456], String.prototype.split, '');
 * // => [['1', '2', '3'], ['4', '5', '6']]
 */
var invokeMap = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])(function(collection, path, args) {
  var index = -1,
      isFunc = typeof path == 'function',
      result = Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_4__["default"])(collection) ? Array(collection.length) : [];

  Object(_baseEach_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection, function(value) {
    result[++index] = isFunc ? Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(path, value, args) : Object(_baseInvoke_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value, path, args);
  });
  return result;
});

/* harmony default export */ __webpack_exports__["default"] = (invokeMap);


/***/ }),
/* 416 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsArrayBuffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(417);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(131);
/* harmony import */ var _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(132);




/* Node.js helper references. */
var nodeIsArrayBuffer = _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"] && _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"].isArrayBuffer;

/**
 * Checks if `value` is classified as an `ArrayBuffer` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
 * @example
 *
 * _.isArrayBuffer(new ArrayBuffer(2));
 * // => true
 *
 * _.isArrayBuffer(new Array(2));
 * // => false
 */
var isArrayBuffer = nodeIsArrayBuffer ? Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_1__["default"])(nodeIsArrayBuffer) : _baseIsArrayBuffer_js__WEBPACK_IMPORTED_MODULE_0__["default"];

/* harmony default export */ __webpack_exports__["default"] = (isArrayBuffer);


/***/ }),
/* 417 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



var arrayBufferTag = '[object ArrayBuffer]';

/**
 * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
 */
function baseIsArrayBuffer(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == arrayBufferTag;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsArrayBuffer);


/***/ }),
/* 418 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var boolTag = '[object Boolean]';

/**
 * Checks if `value` is classified as a boolean primitive or object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
 * @example
 *
 * _.isBoolean(false);
 * // => true
 *
 * _.isBoolean(null);
 * // => false
 */
function isBoolean(value) {
  return value === true || value === false ||
    (Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == boolTag);
}

/* harmony default export */ __webpack_exports__["default"] = (isBoolean);


/***/ }),
/* 419 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(420);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(131);
/* harmony import */ var _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(132);




/* Node.js helper references. */
var nodeIsDate = _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"] && _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"].isDate;

/**
 * Checks if `value` is classified as a `Date` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
 * @example
 *
 * _.isDate(new Date);
 * // => true
 *
 * _.isDate('Mon April 23 2012');
 * // => false
 */
var isDate = nodeIsDate ? Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_1__["default"])(nodeIsDate) : _baseIsDate_js__WEBPACK_IMPORTED_MODULE_0__["default"];

/* harmony default export */ __webpack_exports__["default"] = (isDate);


/***/ }),
/* 420 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var dateTag = '[object Date]';

/**
 * The base implementation of `_.isDate` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
 */
function baseIsDate(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == dateTag;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsDate);


/***/ }),
/* 421 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(44);
/* harmony import */ var _isPlainObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(183);



/**
 * Checks if `value` is likely a DOM element.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
 * @example
 *
 * _.isElement(document.body);
 * // => true
 *
 * _.isElement('<body>');
 * // => false
 */
function isElement(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) && value.nodeType === 1 && !Object(_isPlainObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value);
}

/* harmony default export */ __webpack_exports__["default"] = (isElement);


/***/ }),
/* 422 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(133);
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(235);
/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(124);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(118);
/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(126);
/* harmony import */ var _isPrototype_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(120);
/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(129);









/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_4__["default"])(value) &&
      (Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        Object(_isBuffer_js__WEBPACK_IMPORTED_MODULE_5__["default"])(value) || Object(_isTypedArray_js__WEBPACK_IMPORTED_MODULE_7__["default"])(value) || Object(_isArguments_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value))) {
    return !value.length;
  }
  var tag = Object(_getTag_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (Object(_isPrototype_js__WEBPACK_IMPORTED_MODULE_6__["default"])(value)) {
    return !Object(_baseKeys_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

/* harmony default export */ __webpack_exports__["default"] = (isEmpty);


/***/ }),
/* 423 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(262);


/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return Object(_baseIsEqual_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, other);
}

/* harmony default export */ __webpack_exports__["default"] = (isEqual);


/***/ }),
/* 424 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(262);


/**
 * This method is like `_.isEqual` except that it accepts `customizer` which
 * is invoked to compare values. If `customizer` returns `undefined`, comparisons
 * are handled by the method instead. The `customizer` is invoked with up to
 * six arguments: (objValue, othValue [, index|key, object, other, stack]).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * function isGreeting(value) {
 *   return /^h(?:i|ello)$/.test(value);
 * }
 *
 * function customizer(objValue, othValue) {
 *   if (isGreeting(objValue) && isGreeting(othValue)) {
 *     return true;
 *   }
 * }
 *
 * var array = ['hello', 'goodbye'];
 * var other = ['hi', 'goodbye'];
 *
 * _.isEqualWith(array, other, customizer);
 * // => true
 */
function isEqualWith(value, other, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  var result = customizer ? customizer(value, other) : undefined;
  return result === undefined ? Object(_baseIsEqual_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, other, undefined, customizer) : !!result;
}

/* harmony default export */ __webpack_exports__["default"] = (isEqualWith);


/***/ }),
/* 425 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsFinite = _root_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFinite;

/**
 * Checks if `value` is a finite primitive number.
 *
 * **Note:** This method is based on
 * [`Number.isFinite`](https://mdn.io/Number/isFinite).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
 * @example
 *
 * _.isFinite(3);
 * // => true
 *
 * _.isFinite(Number.MIN_VALUE);
 * // => true
 *
 * _.isFinite(Infinity);
 * // => false
 *
 * _.isFinite('3');
 * // => false
 */
function isFinite(value) {
  return typeof value == 'number' && nativeIsFinite(value);
}

/* harmony default export */ __webpack_exports__["default"] = (isFinite);


/***/ }),
/* 426 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(49);


/**
 * Checks if `value` is an integer.
 *
 * **Note:** This method is based on
 * [`Number.isInteger`](https://mdn.io/Number/isInteger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
 * @example
 *
 * _.isInteger(3);
 * // => true
 *
 * _.isInteger(Number.MIN_VALUE);
 * // => false
 *
 * _.isInteger(Infinity);
 * // => false
 *
 * _.isInteger('3');
 * // => false
 */
function isInteger(value) {
  return typeof value == 'number' && value == Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
}

/* harmony default export */ __webpack_exports__["default"] = (isInteger);


/***/ }),
/* 427 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsMatch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(261);
/* harmony import */ var _getMatchData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(274);



/**
 * Performs a partial deep comparison between `object` and `source` to
 * determine if `object` contains equivalent property values.
 *
 * **Note:** This method is equivalent to `_.matches` when `source` is
 * partially applied.
 *
 * Partial comparisons will match empty array and empty object `source`
 * values against any array or object value, respectively. See `_.isEqual`
 * for a list of supported value comparisons.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 *
 * _.isMatch(object, { 'b': 2 });
 * // => true
 *
 * _.isMatch(object, { 'b': 1 });
 * // => false
 */
function isMatch(object, source) {
  return object === source || Object(_baseIsMatch_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, source, Object(_getMatchData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source));
}

/* harmony default export */ __webpack_exports__["default"] = (isMatch);


/***/ }),
/* 428 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsMatch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(261);
/* harmony import */ var _getMatchData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(274);



/**
 * This method is like `_.isMatch` except that it accepts `customizer` which
 * is invoked to compare values. If `customizer` returns `undefined`, comparisons
 * are handled by the method instead. The `customizer` is invoked with five
 * arguments: (objValue, srcValue, index|key, object, source).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 * @example
 *
 * function isGreeting(value) {
 *   return /^h(?:i|ello)$/.test(value);
 * }
 *
 * function customizer(objValue, srcValue) {
 *   if (isGreeting(objValue) && isGreeting(srcValue)) {
 *     return true;
 *   }
 * }
 *
 * var object = { 'greeting': 'hello' };
 * var source = { 'greeting': 'hi' };
 *
 * _.isMatchWith(object, source, customizer);
 * // => true
 */
function isMatchWith(object, source, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return Object(_baseIsMatch_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, source, Object(_getMatchData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(source), customizer);
}

/* harmony default export */ __webpack_exports__["default"] = (isMatchWith);


/***/ }),
/* 429 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(430);


/**
 * Checks if `value` is `NaN`.
 *
 * **Note:** This method is based on
 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
 * `undefined` and other non-number values.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 * @example
 *
 * _.isNaN(NaN);
 * // => true
 *
 * _.isNaN(new Number(NaN));
 * // => true
 *
 * isNaN(undefined);
 * // => true
 *
 * _.isNaN(undefined);
 * // => false
 */
function isNaN(value) {
  // An `NaN` primitive is the only value that is not equal to itself.
  // Perform the `toStringTag` check first to avoid errors with some
  // ActiveX objects in IE.
  return Object(_isNumber_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) && value != +value;
}

/* harmony default export */ __webpack_exports__["default"] = (isNaN);


/***/ }),
/* 430 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var numberTag = '[object Number]';

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */
function isNumber(value) {
  return typeof value == 'number' ||
    (Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == numberTag);
}

/* harmony default export */ __webpack_exports__["default"] = (isNumber);


/***/ }),
/* 431 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsNative_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);
/* harmony import */ var _isMaskable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(432);



/** Error message constants. */
var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.';

/**
 * Checks if `value` is a pristine native function.
 *
 * **Note:** This method can't reliably detect native functions in the presence
 * of the core-js package because core-js circumvents this kind of detection.
 * Despite multiple requests, the core-js maintainer has made it clear: any
 * attempt to fix the detection will be obstructed. As a result, we're left
 * with little choice but to throw an error. Unfortunately, this also affects
 * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
 * which rely on core-js.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 * @example
 *
 * _.isNative(Array.prototype.push);
 * // => true
 *
 * _.isNative(_);
 * // => false
 */
function isNative(value) {
  if (Object(_isMaskable_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value)) {
    throw new Error(CORE_ERROR_TEXT);
  }
  return Object(_baseIsNative_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);
}

/* harmony default export */ __webpack_exports__["default"] = (isNative);


/***/ }),
/* 432 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _coreJsData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63);
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(61);
/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(128);




/**
 * Checks if `func` is capable of being masked.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
 */
var isMaskable = _coreJsData_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? _isFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"] : _stubFalse_js__WEBPACK_IMPORTED_MODULE_2__["default"];

/* harmony default export */ __webpack_exports__["default"] = (isMaskable);


/***/ }),
/* 433 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if `value` is `null` or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
 * @example
 *
 * _.isNil(null);
 * // => true
 *
 * _.isNil(void 0);
 * // => true
 *
 * _.isNil(NaN);
 * // => false
 */
function isNil(value) {
  return value == null;
}

/* harmony default export */ __webpack_exports__["default"] = (isNil);


/***/ }),
/* 434 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if `value` is `null`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
 * @example
 *
 * _.isNull(null);
 * // => true
 *
 * _.isNull(void 0);
 * // => false
 */
function isNull(value) {
  return value === null;
}

/* harmony default export */ __webpack_exports__["default"] = (isNull);


/***/ }),
/* 435 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIsRegExp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(436);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(131);
/* harmony import */ var _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(132);




/* Node.js helper references. */
var nodeIsRegExp = _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"] && _nodeUtil_js__WEBPACK_IMPORTED_MODULE_2__["default"].isRegExp;

/**
 * Checks if `value` is classified as a `RegExp` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 * @example
 *
 * _.isRegExp(/abc/);
 * // => true
 *
 * _.isRegExp('/abc/');
 * // => false
 */
var isRegExp = nodeIsRegExp ? Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_1__["default"])(nodeIsRegExp) : _baseIsRegExp_js__WEBPACK_IMPORTED_MODULE_0__["default"];

/* harmony default export */ __webpack_exports__["default"] = (isRegExp);


/***/ }),
/* 436 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var regexpTag = '[object RegExp]';

/**
 * The base implementation of `_.isRegExp` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 */
function baseIsRegExp(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == regexpTag;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIsRegExp);


/***/ }),
/* 437 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isInteger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(426);


/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
 * double precision number which isn't the result of a rounded unsafe integer.
 *
 * **Note:** This method is based on
 * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
 * @example
 *
 * _.isSafeInteger(3);
 * // => true
 *
 * _.isSafeInteger(Number.MIN_VALUE);
 * // => false
 *
 * _.isSafeInteger(Infinity);
 * // => false
 *
 * _.isSafeInteger('3');
 * // => false
 */
function isSafeInteger(value) {
  return Object(_isInteger_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
}

/* harmony default export */ __webpack_exports__["default"] = (isSafeInteger);


/***/ }),
/* 438 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (isUndefined);


/***/ }),
/* 439 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(235);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var weakMapTag = '[object WeakMap]';

/**
 * Checks if `value` is classified as a `WeakMap` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
 * @example
 *
 * _.isWeakMap(new WeakMap);
 * // => true
 *
 * _.isWeakMap(new Map);
 * // => false
 */
function isWeakMap(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_getTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == weakMapTag;
}

/* harmony default export */ __webpack_exports__["default"] = (isWeakMap);


/***/ }),
/* 440 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);



/** `Object#toString` result references. */
var weakSetTag = '[object WeakSet]';

/**
 * Checks if `value` is classified as a `WeakSet` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
 * @example
 *
 * _.isWeakSet(new WeakSet);
 * // => true
 *
 * _.isWeakSet(new Set);
 * // => false
 */
function isWeakSet(value) {
  return Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) == weakSetTag;
}

/* harmony default export */ __webpack_exports__["default"] = (isWeakSet);


/***/ }),
/* 441 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(216);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);



/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that invokes `func` with the arguments of the created
 * function. If `func` is a property name, the created function returns the
 * property value for a given element. If `func` is an array or object, the
 * created function returns `true` for elements that contain the equivalent
 * source properties, otherwise it returns `false`.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Util
 * @param {*} [func=_.identity] The value to convert to a callback.
 * @returns {Function} Returns the callback.
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
 * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, _.iteratee(['user', 'fred']));
 * // => [{ 'user': 'fred', 'age': 40 }]
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, _.iteratee('user'));
 * // => ['barney', 'fred']
 *
 * // Create custom iteratee shorthands.
 * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
 *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
 *     return func.test(string);
 *   };
 * });
 *
 * _.filter(['abc', 'def'], /ef/);
 * // => ['def']
 */
function iteratee(func) {
  return Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"])(typeof func == 'function' ? func : Object(_baseClone_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, CLONE_DEEP_FLAG));
}

/* harmony default export */ __webpack_exports__["default"] = (iteratee);


/***/ }),
/* 442 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used for built-in method references. */
var arrayProto = Array.prototype;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeJoin = arrayProto.join;

/**
 * Converts all elements in `array` into a string separated by `separator`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to convert.
 * @param {string} [separator=','] The element separator.
 * @returns {string} Returns the joined string.
 * @example
 *
 * _.join(['a', 'b', 'c'], '~');
 * // => 'a~b~c'
 */
function join(array, separator) {
  return array == null ? '' : nativeJoin.call(array, separator);
}

/* harmony default export */ __webpack_exports__["default"] = (join);


/***/ }),
/* 443 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createCompounder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(199);


/**
 * Converts `string` to
 * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the kebab cased string.
 * @example
 *
 * _.kebabCase('Foo Bar');
 * // => 'foo-bar'
 *
 * _.kebabCase('fooBar');
 * // => 'foo-bar'
 *
 * _.kebabCase('__FOO_BAR__');
 * // => 'foo-bar'
 */
var kebabCase = Object(_createCompounder_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(result, word, index) {
  return result + (index ? '-' : '') + word.toLowerCase();
});

/* harmony default export */ __webpack_exports__["default"] = (kebabCase);


/***/ }),
/* 444 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(111);
/* harmony import */ var _createAggregator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(289);



/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The corresponding value of
 * each key is the last element responsible for generating the key. The
 * iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * var array = [
 *   { 'dir': 'left', 'code': 97 },
 *   { 'dir': 'right', 'code': 100 }
 * ];
 *
 * _.keyBy(array, function(o) {
 *   return String.fromCharCode(o.code);
 * });
 * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
 *
 * _.keyBy(array, 'dir');
 * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
 */
var keyBy = Object(_createAggregator_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(result, value, key) {
  Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result, key, value);
});

/* harmony default export */ __webpack_exports__["default"] = (keyBy);


/***/ }),
/* 445 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFindIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(100);
/* harmony import */ var _baseIsNaN_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(101);
/* harmony import */ var _strictLastIndexOf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(446);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49);





/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * This method is like `_.indexOf` except that it iterates over elements of
 * `array` from right to left.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.lastIndexOf([1, 2, 1, 2], 2);
 * // => 3
 *
 * // Search from the `fromIndex`.
 * _.lastIndexOf([1, 2, 1, 2], 2, 2);
 * // => 1
 */
function lastIndexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length;
  if (fromIndex !== undefined) {
    index = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_3__["default"])(fromIndex);
    index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
  }
  return value === value
    ? Object(_strictLastIndexOf_js__WEBPACK_IMPORTED_MODULE_2__["default"])(array, value, index)
    : Object(_baseFindIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, _baseIsNaN_js__WEBPACK_IMPORTED_MODULE_1__["default"], index, true);
}

/* harmony default export */ __webpack_exports__["default"] = (lastIndexOf);


/***/ }),
/* 446 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.lastIndexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictLastIndexOf(array, value, fromIndex) {
  var index = fromIndex + 1;
  while (index--) {
    if (array[index] === value) {
      return index;
    }
  }
  return index;
}

/* harmony default export */ __webpack_exports__["default"] = (strictLastIndexOf);


/***/ }),
/* 447 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createCompounder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(199);


/**
 * Converts `string`, as space separated words, to lower case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the lower cased string.
 * @example
 *
 * _.lowerCase('--Foo-Bar--');
 * // => 'foo bar'
 *
 * _.lowerCase('fooBar');
 * // => 'foo bar'
 *
 * _.lowerCase('__FOO_BAR__');
 * // => 'foo bar'
 */
var lowerCase = Object(_createCompounder_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(result, word, index) {
  return result + (index ? ' ' : '') + word.toLowerCase();
});

/* harmony default export */ __webpack_exports__["default"] = (lowerCase);


/***/ }),
/* 448 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createCaseFirst_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(192);


/**
 * Converts the first character of `string` to lower case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.lowerFirst('Fred');
 * // => 'fred'
 *
 * _.lowerFirst('FRED');
 * // => 'fRED'
 */
var lowerFirst = Object(_createCaseFirst_js__WEBPACK_IMPORTED_MODULE_0__["default"])('toLowerCase');

/* harmony default export */ __webpack_exports__["default"] = (lowerFirst);


/***/ }),
/* 449 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseLt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(450);
/* harmony import */ var _createRelationalOperation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(391);



/**
 * Checks if `value` is less than `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 * @see _.gt
 * @example
 *
 * _.lt(1, 3);
 * // => true
 *
 * _.lt(3, 3);
 * // => false
 *
 * _.lt(3, 1);
 * // => false
 */
var lt = Object(_createRelationalOperation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_baseLt_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (lt);


/***/ }),
/* 450 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.lt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 */
function baseLt(value, other) {
  return value < other;
}

/* harmony default export */ __webpack_exports__["default"] = (baseLt);


/***/ }),
/* 451 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createRelationalOperation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(391);


/**
 * Checks if `value` is less than or equal to `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than or equal to
 *  `other`, else `false`.
 * @see _.gte
 * @example
 *
 * _.lte(1, 3);
 * // => true
 *
 * _.lte(3, 3);
 * // => true
 *
 * _.lte(3, 1);
 * // => false
 */
var lte = Object(_createRelationalOperation_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(value, other) {
  return value <= other;
});

/* harmony default export */ __webpack_exports__["default"] = (lte);


/***/ }),
/* 452 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(111);
/* harmony import */ var _baseForOwn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(293);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);




/**
 * The opposite of `_.mapValues`; this method creates an object with the
 * same values as `object` and keys generated by running each own enumerable
 * string keyed property of `object` thru `iteratee`. The iteratee is invoked
 * with three arguments: (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapValues
 * @example
 *
 * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
 *   return key + value;
 * });
 * // => { 'a1': 1, 'b2': 2 }
 */
function mapKeys(object, iteratee) {
  var result = {};
  iteratee = Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee, 3);

  Object(_baseForOwn_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, function(value, key, object) {
    Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result, iteratee(value, key, object), value);
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (mapKeys);


/***/ }),
/* 453 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(111);
/* harmony import */ var _baseForOwn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(293);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);




/**
 * Creates an object with the same keys as `object` and values generated
 * by running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapKeys
 * @example
 *
 * var users = {
 *   'fred':    { 'user': 'fred',    'age': 40 },
 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
 * };
 *
 * _.mapValues(users, function(o) { return o.age; });
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 *
 * // The `_.property` iteratee shorthand.
 * _.mapValues(users, 'age');
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 */
function mapValues(object, iteratee) {
  var result = {};
  iteratee = Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee, 3);

  Object(_baseForOwn_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, function(value, key, object) {
    Object(_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result, key, iteratee(value, key, object));
  });
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (mapValues);


/***/ }),
/* 454 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(216);
/* harmony import */ var _baseMatches_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(260);



/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that performs a partial deep comparison between a given
 * object and `source`, returning `true` if the given object has equivalent
 * property values, else `false`.
 *
 * **Note:** The created function is equivalent to `_.isMatch` with `source`
 * partially applied.
 *
 * Partial comparisons will match empty array and empty object `source`
 * values against any array or object value, respectively. See `_.isEqual`
 * for a list of supported value comparisons.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 * @example
 *
 * var objects = [
 *   { 'a': 1, 'b': 2, 'c': 3 },
 *   { 'a': 4, 'b': 5, 'c': 6 }
 * ];
 *
 * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
 * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
 */
function matches(source) {
  return Object(_baseMatches_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_baseClone_js__WEBPACK_IMPORTED_MODULE_0__["default"])(source, CLONE_DEEP_FLAG));
}

/* harmony default export */ __webpack_exports__["default"] = (matches);


/***/ }),
/* 455 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(216);
/* harmony import */ var _baseMatchesProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(277);



/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that performs a partial deep comparison between the
 * value at `path` of a given object to `srcValue`, returning `true` if the
 * object value is equivalent, else `false`.
 *
 * **Note:** Partial comparisons will match empty array and empty object
 * `srcValue` values against any array or object value, respectively. See
 * `_.isEqual` for a list of supported value comparisons.
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 * @example
 *
 * var objects = [
 *   { 'a': 1, 'b': 2, 'c': 3 },
 *   { 'a': 4, 'b': 5, 'c': 6 }
 * ];
 *
 * _.find(objects, _.matchesProperty('a', 4));
 * // => { 'a': 4, 'b': 5, 'c': 6 }
 */
function matchesProperty(path, srcValue) {
  return Object(_baseMatchesProperty_js__WEBPACK_IMPORTED_MODULE_1__["default"])(path, Object(_baseClone_js__WEBPACK_IMPORTED_MODULE_0__["default"])(srcValue, CLONE_DEEP_FLAG));
}

/* harmony default export */ __webpack_exports__["default"] = (matchesProperty);


/***/ }),
/* 456 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(457);
/* harmony import */ var _baseGt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(390);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(56);




/**
 * Computes the maximum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * _.max([4, 2, 8, 6]);
 * // => 8
 *
 * _.max([]);
 * // => undefined
 */
function max(array) {
  return (array && array.length)
    ? Object(_baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, _identity_js__WEBPACK_IMPORTED_MODULE_2__["default"], _baseGt_js__WEBPACK_IMPORTED_MODULE_1__["default"])
    : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (max);


/***/ }),
/* 457 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36);


/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */
function baseExtremum(array, iteratee, comparator) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    var value = array[index],
        current = iteratee(value);

    if (current != null && (computed === undefined
          ? (current === current && !Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__["default"])(current))
          : comparator(current, computed)
        )) {
      var computed = current,
          result = value;
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseExtremum);


/***/ }),
/* 458 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(457);
/* harmony import */ var _baseGt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(390);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);




/**
 * This method is like `_.max` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * the value is ranked. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * _.maxBy(objects, function(o) { return o.n; });
 * // => { 'n': 2 }
 *
 * // The `_.property` iteratee shorthand.
 * _.maxBy(objects, 'n');
 * // => { 'n': 2 }
 */
function maxBy(array, iteratee) {
  return (array && array.length)
    ? Object(_baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee, 2), _baseGt_js__WEBPACK_IMPORTED_MODULE_1__["default"])
    : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (maxBy);


/***/ }),
/* 459 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseMean_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(460);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56);



/**
 * Computes the mean of the values in `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {number} Returns the mean.
 * @example
 *
 * _.mean([4, 2, 8, 6]);
 * // => 5
 */
function mean(array) {
  return Object(_baseMean_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (mean);


/***/ }),
/* 460 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(461);


/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/**
 * The base implementation of `_.mean` and `_.meanBy` without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {number} Returns the mean.
 */
function baseMean(array, iteratee) {
  var length = array == null ? 0 : array.length;
  return length ? (Object(_baseSum_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, iteratee) / length) : NAN;
}

/* harmony default export */ __webpack_exports__["default"] = (baseMean);


/***/ }),
/* 461 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.sum` and `_.sumBy` without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {number} Returns the sum.
 */
function baseSum(array, iteratee) {
  var result,
      index = -1,
      length = array.length;

  while (++index < length) {
    var current = iteratee(array[index]);
    if (current !== undefined) {
      result = result === undefined ? current : (result + current);
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseSum);


/***/ }),
/* 462 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseMean_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(460);



/**
 * This method is like `_.mean` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the value to be averaged.
 * The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the mean.
 * @example
 *
 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
 *
 * _.meanBy(objects, function(o) { return o.n; });
 * // => 5
 *
 * // The `_.property` iteratee shorthand.
 * _.meanBy(objects, 'n');
 * // => 5
 */
function meanBy(array, iteratee) {
  return Object(_baseMean_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratee, 2));
}

/* harmony default export */ __webpack_exports__["default"] = (meanBy);


/***/ }),
/* 463 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseMerge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(306);
/* harmony import */ var _createAssigner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(114);



/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = Object(_createAssigner_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(object, source, srcIndex) {
  Object(_baseMerge_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, source, srcIndex);
});

/* harmony default export */ __webpack_exports__["default"] = (merge);


/***/ }),
/* 464 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseInvoke_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(413);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);



/**
 * Creates a function that invokes the method at `path` of a given object.
 * Any additional arguments are provided to the invoked method.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Util
 * @param {Array|string} path The path of the method to invoke.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {Function} Returns the new invoker function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': _.constant(2) } },
 *   { 'a': { 'b': _.constant(1) } }
 * ];
 *
 * _.map(objects, _.method('a.b'));
 * // => [2, 1]
 *
 * _.map(objects, _.method(['a', 'b']));
 * // => [2, 1]
 */
var method = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(path, args) {
  return function(object) {
    return Object(_baseInvoke_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path, args);
  };
});

/* harmony default export */ __webpack_exports__["default"] = (method);


/***/ }),
/* 465 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseInvoke_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(413);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);



/**
 * The opposite of `_.method`; this method creates a function that invokes
 * the method at a given path of `object`. Any additional arguments are
 * provided to the invoked method.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Util
 * @param {Object} object The object to query.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {Function} Returns the new invoker function.
 * @example
 *
 * var array = _.times(3, _.constant),
 *     object = { 'a': array, 'b': array, 'c': array };
 *
 * _.map(['a[2]', 'c[0]'], _.methodOf(object));
 * // => [2, 0]
 *
 * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
 * // => [2, 0]
 */
var methodOf = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(object, args) {
  return function(path) {
    return Object(_baseInvoke_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path, args);
  };
});

/* harmony default export */ __webpack_exports__["default"] = (methodOf);


/***/ }),
/* 466 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(457);
/* harmony import */ var _baseLt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(450);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(56);




/**
 * Computes the minimum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * _.min([4, 2, 8, 6]);
 * // => 2
 *
 * _.min([]);
 * // => undefined
 */
function min(array) {
  return (array && array.length)
    ? Object(_baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, _identity_js__WEBPACK_IMPORTED_MODULE_2__["default"], _baseLt_js__WEBPACK_IMPORTED_MODULE_1__["default"])
    : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (min);


/***/ }),
/* 467 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(457);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _baseLt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(450);




/**
 * This method is like `_.min` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * the value is ranked. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * _.minBy(objects, function(o) { return o.n; });
 * // => { 'n': 1 }
 *
 * // The `_.property` iteratee shorthand.
 * _.minBy(objects, 'n');
 * // => { 'n': 1 }
 */
function minBy(array, iteratee) {
  return (array && array.length)
    ? Object(_baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratee, 2), _baseLt_js__WEBPACK_IMPORTED_MODULE_2__["default"])
    : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (minBy);


/***/ }),
/* 468 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97);
/* harmony import */ var _arrayPush_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(179);
/* harmony import */ var _baseFunctions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(386);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86);
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(61);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(52);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(121);








/**
 * Adds all own enumerable string keyed function properties of a source
 * object to the destination object. If `object` is a function, then methods
 * are added to its prototype as well.
 *
 * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
 * avoid conflicts caused by modifying the original.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {Function|Object} [object=lodash] The destination object.
 * @param {Object} source The object of functions to add.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
 * @returns {Function|Object} Returns `object`.
 * @example
 *
 * function vowels(string) {
 *   return _.filter(string, function(v) {
 *     return /[aeiou]/i.test(v);
 *   });
 * }
 *
 * _.mixin({ 'vowels': vowels });
 * _.vowels('fred');
 * // => ['e']
 *
 * _('fred').vowels().value();
 * // => ['e']
 *
 * _.mixin({ 'vowels': vowels }, { 'chain': false });
 * _('fred').vowels();
 * // => ['e']
 */
function mixin(object, source, options) {
  var props = Object(_keys_js__WEBPACK_IMPORTED_MODULE_6__["default"])(source),
      methodNames = Object(_baseFunctions_js__WEBPACK_IMPORTED_MODULE_2__["default"])(source, props);

  var chain = !(Object(_isObject_js__WEBPACK_IMPORTED_MODULE_5__["default"])(options) && 'chain' in options) || !!options.chain,
      isFunc = Object(_isFunction_js__WEBPACK_IMPORTED_MODULE_4__["default"])(object);

  Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_0__["default"])(methodNames, function(methodName) {
    var func = source[methodName];
    object[methodName] = func;
    if (isFunc) {
      object.prototype[methodName] = function() {
        var chainAll = this.__chain__;
        if (chain || chainAll) {
          var result = object(this.__wrapped__),
              actions = result.__actions__ = Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(this.__actions__);

          actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
          result.__chain__ = chainAll;
          return result;
        }
        return func.apply(object, Object(_arrayPush_js__WEBPACK_IMPORTED_MODULE_1__["default"])([this.value()], arguments));
      };
    }
  });

  return object;
}

/* harmony default export */ __webpack_exports__["default"] = (mixin);


/***/ }),
/* 469 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createMathOperation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34);


/**
 * Multiply two numbers.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Math
 * @param {number} multiplier The first number in a multiplication.
 * @param {number} multiplicand The second number in a multiplication.
 * @returns {number} Returns the product.
 * @example
 *
 * _.multiply(6, 4);
 * // => 24
 */
var multiply = Object(_createMathOperation_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(multiplier, multiplicand) {
  return multiplier * multiplicand;
}, 1);

/* harmony default export */ __webpack_exports__["default"] = (multiply);


/***/ }),
/* 470 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that negates the result of the predicate `func`. The
 * `func` predicate is invoked with the `this` binding and arguments of the
 * created function.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} predicate The predicate to negate.
 * @returns {Function} Returns the new negated function.
 * @example
 *
 * function isEven(n) {
 *   return n % 2 == 0;
 * }
 *
 * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
 * // => [1, 3, 5]
 */
function negate(predicate) {
  if (typeof predicate != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0: return !predicate.call(this);
      case 1: return !predicate.call(this, args[0]);
      case 2: return !predicate.call(this, args[0], args[1]);
      case 3: return !predicate.call(this, args[0], args[1], args[2]);
    }
    return !predicate.apply(this, args);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (negate);


/***/ }),
/* 471 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(472);


/**
 * Gets the next value on a wrapped object following the
 * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
 *
 * @name next
 * @memberOf _
 * @since 4.0.0
 * @category Seq
 * @returns {Object} Returns the next iterator value.
 * @example
 *
 * var wrapped = _([1, 2]);
 *
 * wrapped.next();
 * // => { 'done': false, 'value': 1 }
 *
 * wrapped.next();
 * // => { 'done': false, 'value': 2 }
 *
 * wrapped.next();
 * // => { 'done': true, 'value': undefined }
 */
function wrapperNext() {
  if (this.__values__ === undefined) {
    this.__values__ = Object(_toArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this.value());
  }
  var done = this.__index__ >= this.__values__.length,
      value = done ? undefined : this.__values__[this.__index__++];

  return { 'done': done, 'value': value };
}

/* harmony default export */ __webpack_exports__["default"] = (wrapperNext);


/***/ }),
/* 472 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86);
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(235);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(118);
/* harmony import */ var _isString_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(398);
/* harmony import */ var _iteratorToArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(473);
/* harmony import */ var _mapToArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(271);
/* harmony import */ var _setToArray_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(272);
/* harmony import */ var _stringToArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(196);
/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(399);











/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Built-in value references. */
var symIterator = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__["default"].iterator : undefined;

/**
 * Converts `value` to an array.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Array} Returns the converted array.
 * @example
 *
 * _.toArray({ 'a': 1, 'b': 2 });
 * // => [1, 2]
 *
 * _.toArray('abc');
 * // => ['a', 'b', 'c']
 *
 * _.toArray(1);
 * // => []
 *
 * _.toArray(null);
 * // => []
 */
function toArray(value) {
  if (!value) {
    return [];
  }
  if (Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value)) {
    return Object(_isString_js__WEBPACK_IMPORTED_MODULE_4__["default"])(value) ? Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_8__["default"])(value) : Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value);
  }
  if (symIterator && value[symIterator]) {
    return Object(_iteratorToArray_js__WEBPACK_IMPORTED_MODULE_5__["default"])(value[symIterator]());
  }
  var tag = Object(_getTag_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value),
      func = tag == mapTag ? _mapToArray_js__WEBPACK_IMPORTED_MODULE_6__["default"] : (tag == setTag ? _setToArray_js__WEBPACK_IMPORTED_MODULE_7__["default"] : _values_js__WEBPACK_IMPORTED_MODULE_9__["default"]);

  return func(value);
}

/* harmony default export */ __webpack_exports__["default"] = (toArray);


/***/ }),
/* 473 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Converts `iterator` to an array.
 *
 * @private
 * @param {Object} iterator The iterator to convert.
 * @returns {Array} Returns the converted array.
 */
function iteratorToArray(iterator) {
  var data,
      result = [];

  while (!(data = iterator.next()).done) {
    result.push(data.value);
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (iteratorToArray);


/***/ }),
/* 474 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseNth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(475);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/**
 * Gets the element at index `n` of `array`. If `n` is negative, the nth
 * element from the end is returned.
 *
 * @static
 * @memberOf _
 * @since 4.11.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=0] The index of the element to return.
 * @returns {*} Returns the nth element of `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'd'];
 *
 * _.nth(array, 1);
 * // => 'b'
 *
 * _.nth(array, -2);
 * // => 'c';
 */
function nth(array, n) {
  return (array && array.length) ? Object(_baseNth_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(n)) : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (nth);


/***/ }),
/* 475 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(105);


/**
 * The base implementation of `_.nth` which doesn't coerce arguments.
 *
 * @private
 * @param {Array} array The array to query.
 * @param {number} n The index of the element to return.
 * @returns {*} Returns the nth element of `array`.
 */
function baseNth(array, n) {
  var length = array.length;
  if (!length) {
    return;
  }
  n += n < 0 ? length : 0;
  return Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(n, length) ? array[n] : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (baseNth);


/***/ }),
/* 476 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseNth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(475);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);




/**
 * Creates a function that gets the argument at index `n`. If `n` is negative,
 * the nth argument from the end is returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {number} [n=0] The index of the argument to return.
 * @returns {Function} Returns the new pass-thru function.
 * @example
 *
 * var func = _.nthArg(1);
 * func('a', 'b', 'c', 'd');
 * // => 'b'
 *
 * var func = _.nthArg(-2);
 * func('a', 'b', 'c', 'd');
 * // => 'c'
 */
function nthArg(n) {
  n = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(n);
  return Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(args) {
    return Object(_baseNth_js__WEBPACK_IMPORTED_MODULE_0__["default"])(args, n);
  });
}

/* harmony default export */ __webpack_exports__["default"] = (nthArg);


/***/ }),
/* 477 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(216);
/* harmony import */ var _baseUnset_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(478);
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(146);
/* harmony import */ var _copyObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(113);
/* harmony import */ var _customOmitClone_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(479);
/* harmony import */ var _flatRest_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(176);
/* harmony import */ var _getAllKeysIn_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(234);









/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = Object(_flatRest_js__WEBPACK_IMPORTED_MODULE_6__["default"])(function(object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(paths, function(path) {
    path = Object(_castPath_js__WEBPACK_IMPORTED_MODULE_3__["default"])(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  Object(_copyObject_js__WEBPACK_IMPORTED_MODULE_4__["default"])(object, Object(_getAllKeysIn_js__WEBPACK_IMPORTED_MODULE_7__["default"])(object), result);
  if (isDeep) {
    result = Object(_baseClone_js__WEBPACK_IMPORTED_MODULE_1__["default"])(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, _customOmitClone_js__WEBPACK_IMPORTED_MODULE_5__["default"]);
  }
  var length = paths.length;
  while (length--) {
    Object(_baseUnset_js__WEBPACK_IMPORTED_MODULE_2__["default"])(result, paths[length]);
  }
  return result;
});

/* harmony default export */ __webpack_exports__["default"] = (omit);


/***/ }),
/* 478 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(146);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(320);
/* harmony import */ var _parent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(414);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(175);





/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = Object(_castPath_js__WEBPACK_IMPORTED_MODULE_0__["default"])(path, object);
  object = Object(_parent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object, path);
  return object == null || delete object[Object(_toKey_js__WEBPACK_IMPORTED_MODULE_3__["default"])(Object(_last_js__WEBPACK_IMPORTED_MODULE_1__["default"])(path))];
}

/* harmony default export */ __webpack_exports__["default"] = (baseUnset);


/***/ }),
/* 479 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isPlainObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(183);


/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return Object(_isPlainObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) ? undefined : value;
}

/* harmony default export */ __webpack_exports__["default"] = (customOmitClone);


/***/ }),
/* 480 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _negate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(470);
/* harmony import */ var _pickBy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(481);




/**
 * The opposite of `_.pickBy`; this method creates an object composed of
 * the own and inherited enumerable string keyed properties of `object` that
 * `predicate` doesn't return truthy for. The predicate is invoked with two
 * arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omitBy(object, _.isNumber);
 * // => { 'b': '2' }
 */
function omitBy(object, predicate) {
  return Object(_pickBy_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object, Object(_negate_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(predicate)));
}

/* harmony default export */ __webpack_exports__["default"] = (omitBy);


/***/ }),
/* 481 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _basePickBy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(482);
/* harmony import */ var _getAllKeysIn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(234);





/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_getAllKeysIn_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object), function(prop) {
    return [prop];
  });
  predicate = Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"])(predicate);
  return Object(_basePickBy_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}

/* harmony default export */ __webpack_exports__["default"] = (pickBy);


/***/ }),
/* 482 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(145);
/* harmony import */ var _baseSet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(483);
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(146);




/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = Object(_baseGet_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path);

    if (predicate(value, path)) {
      Object(_baseSet_js__WEBPACK_IMPORTED_MODULE_1__["default"])(result, Object(_castPath_js__WEBPACK_IMPORTED_MODULE_2__["default"])(path, object), value);
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (basePickBy);


/***/ }),
/* 483 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(110);
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(146);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(105);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(175);






/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!Object(_isObject_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object)) {
    return object;
  }
  path = Object(_castPath_js__WEBPACK_IMPORTED_MODULE_1__["default"])(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = Object(_toKey_js__WEBPACK_IMPORTED_MODULE_4__["default"])(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = Object(_isObject_js__WEBPACK_IMPORTED_MODULE_3__["default"])(objValue)
          ? objValue
          : (Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_2__["default"])(path[index + 1]) ? [] : {});
      }
    }
    Object(_assignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

/* harmony default export */ __webpack_exports__["default"] = (baseSet);


/***/ }),
/* 484 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _before_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(185);


/**
 * Creates a function that is restricted to invoking `func` once. Repeat calls
 * to the function return the value of the first invocation. The `func` is
 * invoked with the `this` binding and arguments of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var initialize = _.once(createApplication);
 * initialize();
 * initialize();
 * // => `createApplication` is invoked once
 */
function once(func) {
  return Object(_before_js__WEBPACK_IMPORTED_MODULE_0__["default"])(2, func);
}

/* harmony default export */ __webpack_exports__["default"] = (once);


/***/ }),
/* 485 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseOrderBy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(486);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47);



/**
 * This method is like `_.sortBy` except that it allows specifying the sort
 * orders of the iteratees to sort by. If `orders` is unspecified, all values
 * are sorted in ascending order. Otherwise, specify an order of "desc" for
 * descending or "asc" for ascending sort order of corresponding values.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @param {string[]} [orders] The sort orders of `iteratees`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 34 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 36 }
 * ];
 *
 * // Sort by `user` in ascending order and by `age` in descending order.
 * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 */
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!Object(_isArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? undefined : orders;
  if (!Object(_isArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return Object(_baseOrderBy_js__WEBPACK_IMPORTED_MODULE_0__["default"])(collection, iteratees, orders);
}

/* harmony default export */ __webpack_exports__["default"] = (orderBy);


/***/ }),
/* 486 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _baseMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(370);
/* harmony import */ var _baseSortBy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(487);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(131);
/* harmony import */ var _compareMultiple_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(488);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(56);








/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  var index = -1;
  iteratees = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratees.length ? iteratees : [_identity_js__WEBPACK_IMPORTED_MODULE_6__["default"]], Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_4__["default"])(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"]));

  var result = Object(_baseMap_js__WEBPACK_IMPORTED_MODULE_2__["default"])(collection, function(value, key, collection) {
    var criteria = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { 'criteria': criteria, 'index': ++index, 'value': value };
  });

  return Object(_baseSortBy_js__WEBPACK_IMPORTED_MODULE_3__["default"])(result, function(object, other) {
    return Object(_compareMultiple_js__WEBPACK_IMPORTED_MODULE_5__["default"])(object, other, orders);
  });
}

/* harmony default export */ __webpack_exports__["default"] = (baseOrderBy);


/***/ }),
/* 487 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;

  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (baseSortBy);


/***/ }),
/* 488 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _compareAscending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(489);


/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = Object(_compareAscending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index - other.index;
}

/* harmony default export */ __webpack_exports__["default"] = (compareMultiple);


/***/ }),
/* 489 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36);


/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value);

    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__["default"])(other);

    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
        (valIsNull && othIsDefined && othIsReflexive) ||
        (!valIsDefined && othIsReflexive) ||
        !valIsReflexive) {
      return 1;
    }
    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
        (othIsNull && valIsDefined && valIsReflexive) ||
        (!othIsDefined && valIsReflexive) ||
        !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}

/* harmony default export */ __webpack_exports__["default"] = (compareAscending);


/***/ }),
/* 490 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _createOver_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(491);



/**
 * Creates a function that invokes `iteratees` with the arguments it receives
 * and returns their results.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to invoke.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var func = _.over([Math.max, Math.min]);
 *
 * func(1, 2, 3, 4);
 * // => [4, 1]
 */
var over = Object(_createOver_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (over);


/***/ }),
/* 491 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(115);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(131);
/* harmony import */ var _flatRest_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(176);







/**
 * Creates a function like `_.over`.
 *
 * @private
 * @param {Function} arrayFunc The function to iterate over iteratees.
 * @returns {Function} Returns the new over function.
 */
function createOver(arrayFunc) {
  return Object(_flatRest_js__WEBPACK_IMPORTED_MODULE_5__["default"])(function(iteratees) {
    iteratees = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratees, Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_4__["default"])(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"]));
    return Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])(function(args) {
      var thisArg = this;
      return arrayFunc(iteratees, function(iteratee) {
        return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratee, thisArg, args);
      });
    });
  });
}

/* harmony default export */ __webpack_exports__["default"] = (createOver);


/***/ }),
/* 492 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(178);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(259);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(115);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(131);
/* harmony import */ var _castRest_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(493);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(47);









/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Creates a function that invokes `func` with its arguments transformed.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Function
 * @param {Function} func The function to wrap.
 * @param {...(Function|Function[])} [transforms=[_.identity]]
 *  The argument transforms.
 * @returns {Function} Returns the new function.
 * @example
 *
 * function doubled(n) {
 *   return n * 2;
 * }
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var func = _.overArgs(function(x, y) {
 *   return [x, y];
 * }, [square, doubled]);
 *
 * func(9, 3);
 * // => [81, 6]
 *
 * func(10, 5);
 * // => [100, 10]
 */
var overArgs = Object(_castRest_js__WEBPACK_IMPORTED_MODULE_6__["default"])(function(func, transforms) {
  transforms = (transforms.length == 1 && Object(_isArray_js__WEBPACK_IMPORTED_MODULE_7__["default"])(transforms[0]))
    ? Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(transforms[0], Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_5__["default"])(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_3__["default"]))
    : Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_2__["default"])(transforms, 1), Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_5__["default"])(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_3__["default"]));

  var funcsLength = transforms.length;
  return Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_4__["default"])(function(args) {
    var index = -1,
        length = nativeMin(args.length, funcsLength);

    while (++index < length) {
      args[index] = transforms[index].call(this, args[index]);
    }
    return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, this, args);
  });
});

/* harmony default export */ __webpack_exports__["default"] = (overArgs);


/***/ }),
/* 493 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);


/**
 * A `baseRest` alias which can be replaced with `identity` by module
 * replacement plugins.
 *
 * @private
 * @type {Function}
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
var castRest = _baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"];

/* harmony default export */ __webpack_exports__["default"] = (castRest);


/***/ }),
/* 494 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayEvery_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(349);
/* harmony import */ var _createOver_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(491);



/**
 * Creates a function that checks if **all** of the `predicates` return
 * truthy when invoked with the arguments it receives.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {...(Function|Function[])} [predicates=[_.identity]]
 *  The predicates to check.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var func = _.overEvery([Boolean, isFinite]);
 *
 * func('1');
 * // => true
 *
 * func(null);
 * // => false
 *
 * func(NaN);
 * // => false
 */
var overEvery = Object(_createOver_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_arrayEvery_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (overEvery);


/***/ }),
/* 495 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arraySome_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _createOver_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(491);



/**
 * Creates a function that checks if **any** of the `predicates` return
 * truthy when invoked with the arguments it receives.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {...(Function|Function[])} [predicates=[_.identity]]
 *  The predicates to check.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var func = _.overSome([Boolean, isFinite]);
 *
 * func('1');
 * // => true
 *
 * func(null);
 * // => true
 *
 * func(NaN);
 * // => false
 */
var overSome = Object(_createOver_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_arraySome_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (overSome);


/***/ }),
/* 496 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createPadding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(497);
/* harmony import */ var _stringSize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(499);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeFloor = Math.floor;

/**
 * Pads `string` on the left and right sides if it's shorter than `length`.
 * Padding characters are truncated if they can't be evenly divided by `length`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to pad.
 * @param {number} [length=0] The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padded string.
 * @example
 *
 * _.pad('abc', 8);
 * // => '  abc   '
 *
 * _.pad('abc', 8, '_-');
 * // => '_-abc_-_'
 *
 * _.pad('abc', 3);
 * // => 'abc'
 */
function pad(string, length, chars) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string);
  length = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(length);

  var strLength = length ? Object(_stringSize_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string) : 0;
  if (!length || strLength >= length) {
    return string;
  }
  var mid = (length - strLength) / 2;
  return (
    Object(_createPadding_js__WEBPACK_IMPORTED_MODULE_0__["default"])(nativeFloor(mid), chars) +
    string +
    Object(_createPadding_js__WEBPACK_IMPORTED_MODULE_0__["default"])(nativeCeil(mid), chars)
  );
}

/* harmony default export */ __webpack_exports__["default"] = (pad);


/***/ }),
/* 497 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRepeat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(498);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45);
/* harmony import */ var _castSlice_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(193);
/* harmony import */ var _hasUnicode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(195);
/* harmony import */ var _stringSize_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(499);
/* harmony import */ var _stringToArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(196);







/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil;

/**
 * Creates the padding for `string` based on `length`. The `chars` string
 * is truncated if the number of characters exceeds `length`.
 *
 * @private
 * @param {number} length The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padding for `string`.
 */
function createPadding(length, chars) {
  chars = chars === undefined ? ' ' : Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(chars);

  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? Object(_baseRepeat_js__WEBPACK_IMPORTED_MODULE_0__["default"])(chars, length) : chars;
  }
  var result = Object(_baseRepeat_js__WEBPACK_IMPORTED_MODULE_0__["default"])(chars, nativeCeil(length / Object(_stringSize_js__WEBPACK_IMPORTED_MODULE_4__["default"])(chars)));
  return Object(_hasUnicode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(chars)
    ? Object(_castSlice_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_5__["default"])(result), 0, length).join('')
    : result.slice(0, length);
}

/* harmony default export */ __webpack_exports__["default"] = (createPadding);


/***/ }),
/* 498 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeFloor = Math.floor;

/**
 * The base implementation of `_.repeat` which doesn't coerce arguments.
 *
 * @private
 * @param {string} string The string to repeat.
 * @param {number} n The number of times to repeat the string.
 * @returns {string} Returns the repeated string.
 */
function baseRepeat(string, n) {
  var result = '';
  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
    return result;
  }
  // Leverage the exponentiation by squaring algorithm for a faster repeat.
  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
  do {
    if (n % 2) {
      result += string;
    }
    n = nativeFloor(n / 2);
    if (n) {
      string += string;
    }
  } while (n);

  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseRepeat);


/***/ }),
/* 499 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _asciiSize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(500);
/* harmony import */ var _hasUnicode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(195);
/* harmony import */ var _unicodeSize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(501);




/**
 * Gets the number of symbols in `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the string size.
 */
function stringSize(string) {
  return Object(_hasUnicode_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string)
    ? Object(_unicodeSize_js__WEBPACK_IMPORTED_MODULE_2__["default"])(string)
    : Object(_asciiSize_js__WEBPACK_IMPORTED_MODULE_0__["default"])(string);
}

/* harmony default export */ __webpack_exports__["default"] = (stringSize);


/***/ }),
/* 500 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(282);


/**
 * Gets the size of an ASCII `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
var asciiSize = Object(_baseProperty_js__WEBPACK_IMPORTED_MODULE_0__["default"])('length');

/* harmony default export */ __webpack_exports__["default"] = (asciiSize);


/***/ }),
/* 501 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Gets the size of a Unicode `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
function unicodeSize(string) {
  var result = reUnicode.lastIndex = 0;
  while (reUnicode.test(string)) {
    ++result;
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (unicodeSize);


/***/ }),
/* 502 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createPadding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(497);
/* harmony import */ var _stringSize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(499);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/**
 * Pads `string` on the right side if it's shorter than `length`. Padding
 * characters are truncated if they exceed `length`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to pad.
 * @param {number} [length=0] The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padded string.
 * @example
 *
 * _.padEnd('abc', 6);
 * // => 'abc   '
 *
 * _.padEnd('abc', 6, '_-');
 * // => 'abc_-_'
 *
 * _.padEnd('abc', 3);
 * // => 'abc'
 */
function padEnd(string, length, chars) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string);
  length = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(length);

  var strLength = length ? Object(_stringSize_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string) : 0;
  return (length && strLength < length)
    ? (string + Object(_createPadding_js__WEBPACK_IMPORTED_MODULE_0__["default"])(length - strLength, chars))
    : string;
}

/* harmony default export */ __webpack_exports__["default"] = (padEnd);


/***/ }),
/* 503 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createPadding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(497);
/* harmony import */ var _stringSize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(499);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/**
 * Pads `string` on the left side if it's shorter than `length`. Padding
 * characters are truncated if they exceed `length`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to pad.
 * @param {number} [length=0] The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padded string.
 * @example
 *
 * _.padStart('abc', 6);
 * // => '   abc'
 *
 * _.padStart('abc', 6, '_-');
 * // => '_-_abc'
 *
 * _.padStart('abc', 3);
 * // => 'abc'
 */
function padStart(string, length, chars) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string);
  length = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(length);

  var strLength = length ? Object(_stringSize_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string) : 0;
  return (length && strLength < length)
    ? (Object(_createPadding_js__WEBPACK_IMPORTED_MODULE_0__["default"])(length - strLength, chars) + string)
    : string;
}

/* harmony default export */ __webpack_exports__["default"] = (padStart);


/***/ }),
/* 504 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(174);



/** Used to match leading and trailing whitespace. */
var reTrimStart = /^\s+/;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeParseInt = _root_js__WEBPACK_IMPORTED_MODULE_0__["default"].parseInt;

/**
 * Converts `string` to an integer of the specified radix. If `radix` is
 * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
 * hexadecimal, in which case a `radix` of `16` is used.
 *
 * **Note:** This method aligns with the
 * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category String
 * @param {string} string The string to convert.
 * @param {number} [radix=10] The radix to interpret `value` by.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.parseInt('08');
 * // => 8
 *
 * _.map(['6', '08', '10'], _.parseInt);
 * // => [6, 8, 10]
 */
function parseInt(string, radix, guard) {
  if (guard || radix == null) {
    radix = 0;
  } else if (radix) {
    radix = +radix;
  }
  return nativeParseInt(Object(_toString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string).replace(reTrimStart, ''), radix || 0);
}

/* harmony default export */ __webpack_exports__["default"] = (parseInt);


/***/ }),
/* 505 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _createWrap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
/* harmony import */ var _getHolder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(103);
/* harmony import */ var _replaceHolders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(106);





/** Used to compose bitmasks for function metadata. */
var WRAP_PARTIAL_FLAG = 32;

/**
 * Creates a function that invokes `func` with `partials` prepended to the
 * arguments it receives. This method is like `_.bind` except it does **not**
 * alter the `this` binding.
 *
 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * **Note:** This method doesn't set the "length" property of partially
 * applied functions.
 *
 * @static
 * @memberOf _
 * @since 0.2.0
 * @category Function
 * @param {Function} func The function to partially apply arguments to.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new partially applied function.
 * @example
 *
 * function greet(greeting, name) {
 *   return greeting + ' ' + name;
 * }
 *
 * var sayHelloTo = _.partial(greet, 'hello');
 * sayHelloTo('fred');
 * // => 'hello fred'
 *
 * // Partially applied with placeholders.
 * var greetFred = _.partial(greet, _, 'fred');
 * greetFred('hi');
 * // => 'hi fred'
 */
var partial = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(func, partials) {
  var holders = Object(_replaceHolders_js__WEBPACK_IMPORTED_MODULE_3__["default"])(partials, Object(_getHolder_js__WEBPACK_IMPORTED_MODULE_2__["default"])(partial));
  return Object(_createWrap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
});

// Assign default placeholders.
partial.placeholder = {};

/* harmony default export */ __webpack_exports__["default"] = (partial);


/***/ }),
/* 506 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _createWrap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);
/* harmony import */ var _getHolder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(103);
/* harmony import */ var _replaceHolders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(106);





/** Used to compose bitmasks for function metadata. */
var WRAP_PARTIAL_RIGHT_FLAG = 64;

/**
 * This method is like `_.partial` except that partially applied arguments
 * are appended to the arguments it receives.
 *
 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * **Note:** This method doesn't set the "length" property of partially
 * applied functions.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Function
 * @param {Function} func The function to partially apply arguments to.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new partially applied function.
 * @example
 *
 * function greet(greeting, name) {
 *   return greeting + ' ' + name;
 * }
 *
 * var greetFred = _.partialRight(greet, 'fred');
 * greetFred('hi');
 * // => 'hi fred'
 *
 * // Partially applied with placeholders.
 * var sayHelloTo = _.partialRight(greet, 'hello', _);
 * sayHelloTo('fred');
 * // => 'hello fred'
 */
var partialRight = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(func, partials) {
  var holders = Object(_replaceHolders_js__WEBPACK_IMPORTED_MODULE_3__["default"])(partials, Object(_getHolder_js__WEBPACK_IMPORTED_MODULE_2__["default"])(partialRight));
  return Object(_createWrap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
});

// Assign default placeholders.
partialRight.placeholder = {};

/* harmony default export */ __webpack_exports__["default"] = (partialRight);


/***/ }),
/* 507 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createAggregator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(289);


/**
 * Creates an array of elements split into two groups, the first of which
 * contains elements `predicate` returns truthy for, the second of which
 * contains elements `predicate` returns falsey for. The predicate is
 * invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of grouped elements.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': false },
 *   { 'user': 'fred',    'age': 40, 'active': true },
 *   { 'user': 'pebbles', 'age': 1,  'active': false }
 * ];
 *
 * _.partition(users, function(o) { return o.active; });
 * // => objects for [['fred'], ['barney', 'pebbles']]
 *
 * // The `_.matches` iteratee shorthand.
 * _.partition(users, { 'age': 1, 'active': false });
 * // => objects for [['pebbles'], ['barney', 'fred']]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.partition(users, ['active', false]);
 * // => objects for [['barney', 'pebbles'], ['fred']]
 *
 * // The `_.property` iteratee shorthand.
 * _.partition(users, 'active');
 * // => objects for [['fred'], ['barney', 'pebbles']]
 */
var partition = Object(_createAggregator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(result, value, key) {
  result[key ? 0 : 1].push(value);
}, function() { return [[], []]; });

/* harmony default export */ __webpack_exports__["default"] = (partition);


/***/ }),
/* 508 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basePick_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(509);
/* harmony import */ var _flatRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(176);



/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = Object(_flatRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(object, paths) {
  return object == null ? {} : Object(_basePick_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, paths);
});

/* harmony default export */ __webpack_exports__["default"] = (pick);


/***/ }),
/* 509 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basePickBy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(482);
/* harmony import */ var _hasIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(278);



/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return Object(_basePickBy_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, paths, function(value, path) {
    return Object(_hasIn_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, path);
  });
}

/* harmony default export */ __webpack_exports__["default"] = (basePick);


/***/ }),
/* 510 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseLodash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78);
/* harmony import */ var _wrapperClone_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85);



/**
 * Creates a clone of the chain sequence planting `value` as the wrapped value.
 *
 * @name plant
 * @memberOf _
 * @since 3.2.0
 * @category Seq
 * @param {*} value The value to plant.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2]).map(square);
 * var other = wrapped.plant([3, 4]);
 *
 * other.value();
 * // => [9, 16]
 *
 * wrapped.value();
 * // => [1, 4]
 */
function wrapperPlant(value) {
  var result,
      parent = this;

  while (parent instanceof _baseLodash_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    var clone = Object(_wrapperClone_js__WEBPACK_IMPORTED_MODULE_1__["default"])(parent);
    clone.__index__ = 0;
    clone.__values__ = undefined;
    if (result) {
      previous.__wrapped__ = clone;
    } else {
      result = clone;
    }
    var previous = clone;
    parent = parent.__wrapped__;
  }
  previous.__wrapped__ = value;
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (wrapperPlant);


/***/ }),
/* 511 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(145);


/**
 * The opposite of `_.property`; this method creates a function that returns
 * the value at a given path of `object`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var array = [0, 1, 2],
 *     object = { 'a': array, 'b': array, 'c': array };
 *
 * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
 * // => [2, 0]
 *
 * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
 * // => [2, 0]
 */
function propertyOf(object) {
  return function(path) {
    return object == null ? undefined : Object(_baseGet_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (propertyOf);


/***/ }),
/* 512 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _pullAll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(513);



/**
 * Removes all given values from `array` using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
 * to remove elements from an array by predicate.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {...*} [values] The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pull(array, 'a', 'c');
 * console.log(array);
 * // => ['b', 'b']
 */
var pull = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_pullAll_js__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (pull);


/***/ }),
/* 513 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basePullAll_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(514);


/**
 * This method is like `_.pull` except that it accepts an array of values to remove.
 *
 * **Note:** Unlike `_.difference`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pullAll(array, ['a', 'c']);
 * console.log(array);
 * // => ['b', 'b']
 */
function pullAll(array, values) {
  return (array && array.length && values && values.length)
    ? Object(_basePullAll_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, values)
    : array;
}

/* harmony default export */ __webpack_exports__["default"] = (pullAll);


/***/ }),
/* 514 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _baseIndexOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(99);
/* harmony import */ var _baseIndexOfWith_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(515);
/* harmony import */ var _baseUnary_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(131);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86);






/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * The base implementation of `_.pullAllBy` without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns `array`.
 */
function basePullAll(array, values, iteratee, comparator) {
  var indexOf = comparator ? _baseIndexOfWith_js__WEBPACK_IMPORTED_MODULE_2__["default"] : _baseIndexOf_js__WEBPACK_IMPORTED_MODULE_1__["default"],
      index = -1,
      length = values.length,
      seen = array;

  if (array === values) {
    values = Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_4__["default"])(values);
  }
  if (iteratee) {
    seen = Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, Object(_baseUnary_js__WEBPACK_IMPORTED_MODULE_3__["default"])(iteratee));
  }
  while (++index < length) {
    var fromIndex = 0,
        value = values[index],
        computed = iteratee ? iteratee(value) : value;

    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
      if (seen !== array) {
        splice.call(seen, fromIndex, 1);
      }
      splice.call(array, fromIndex, 1);
    }
  }
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (basePullAll);


/***/ }),
/* 515 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This function is like `baseIndexOf` except that it accepts a comparator.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOfWith(array, value, fromIndex, comparator) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (comparator(array[index], value)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ __webpack_exports__["default"] = (baseIndexOfWith);


/***/ }),
/* 516 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _basePullAll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(514);



/**
 * This method is like `_.pullAll` except that it accepts `iteratee` which is
 * invoked for each element of `array` and `values` to generate the criterion
 * by which they're compared. The iteratee is invoked with one argument: (value).
 *
 * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
 *
 * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
 * console.log(array);
 * // => [{ 'x': 2 }]
 */
function pullAllBy(array, values, iteratee) {
  return (array && array.length && values && values.length)
    ? Object(_basePullAll_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, values, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratee, 2))
    : array;
}

/* harmony default export */ __webpack_exports__["default"] = (pullAllBy);


/***/ }),
/* 517 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basePullAll_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(514);


/**
 * This method is like `_.pullAll` except that it accepts `comparator` which
 * is invoked to compare elements of `array` to `values`. The comparator is
 * invoked with two arguments: (arrVal, othVal).
 *
 * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
 *
 * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
 * console.log(array);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
 */
function pullAllWith(array, values, comparator) {
  return (array && array.length && values && values.length)
    ? Object(_basePullAll_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, values, undefined, comparator)
    : array;
}

/* harmony default export */ __webpack_exports__["default"] = (pullAllWith);


/***/ }),
/* 518 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _baseAt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(143);
/* harmony import */ var _basePullAt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(519);
/* harmony import */ var _compareAscending_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(489);
/* harmony import */ var _flatRest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(176);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(105);







/**
 * Removes elements from `array` corresponding to `indexes` and returns an
 * array of removed elements.
 *
 * **Note:** Unlike `_.at`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {...(number|number[])} [indexes] The indexes of elements to remove.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = ['a', 'b', 'c', 'd'];
 * var pulled = _.pullAt(array, [1, 3]);
 *
 * console.log(array);
 * // => ['a', 'c']
 *
 * console.log(pulled);
 * // => ['b', 'd']
 */
var pullAt = Object(_flatRest_js__WEBPACK_IMPORTED_MODULE_4__["default"])(function(array, indexes) {
  var length = array == null ? 0 : array.length,
      result = Object(_baseAt_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, indexes);

  Object(_basePullAt_js__WEBPACK_IMPORTED_MODULE_2__["default"])(array, Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(indexes, function(index) {
    return Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_5__["default"])(index, length) ? +index : index;
  }).sort(_compareAscending_js__WEBPACK_IMPORTED_MODULE_3__["default"]));

  return result;
});

/* harmony default export */ __webpack_exports__["default"] = (pullAt);


/***/ }),
/* 519 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseUnset_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(478);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(105);



/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * The base implementation of `_.pullAt` without support for individual
 * indexes or capturing the removed elements.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {number[]} indexes The indexes of elements to remove.
 * @returns {Array} Returns `array`.
 */
function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0,
      lastIndex = length - 1;

  while (length--) {
    var index = indexes[length];
    if (length == lastIndex || index !== previous) {
      var previous = index;
      if (Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_1__["default"])(index)) {
        splice.call(array, index, 1);
      } else {
        Object(_baseUnset_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, index);
      }
    }
  }
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (basePullAt);


/***/ }),
/* 520 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRandom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(521);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(117);
/* harmony import */ var _toFinite_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50);




/** Built-in method references without a dependency on `root`. */
var freeParseFloat = parseFloat;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min,
    nativeRandom = Math.random;

/**
 * Produces a random number between the inclusive `lower` and `upper` bounds.
 * If only one argument is provided a number between `0` and the given number
 * is returned. If `floating` is `true`, or either `lower` or `upper` are
 * floats, a floating-point number is returned instead of an integer.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @memberOf _
 * @since 0.7.0
 * @category Number
 * @param {number} [lower=0] The lower bound.
 * @param {number} [upper=1] The upper bound.
 * @param {boolean} [floating] Specify returning a floating-point number.
 * @returns {number} Returns the random number.
 * @example
 *
 * _.random(0, 5);
 * // => an integer between 0 and 5
 *
 * _.random(5);
 * // => also an integer between 0 and 5
 *
 * _.random(5, true);
 * // => a floating-point number between 0 and 5
 *
 * _.random(1.2, 5.2);
 * // => a floating-point number between 1.2 and 5.2
 */
function random(lower, upper, floating) {
  if (floating && typeof floating != 'boolean' && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__["default"])(lower, upper, floating)) {
    upper = floating = undefined;
  }
  if (floating === undefined) {
    if (typeof upper == 'boolean') {
      floating = upper;
      upper = undefined;
    }
    else if (typeof lower == 'boolean') {
      floating = lower;
      lower = undefined;
    }
  }
  if (lower === undefined && upper === undefined) {
    lower = 0;
    upper = 1;
  }
  else {
    lower = Object(_toFinite_js__WEBPACK_IMPORTED_MODULE_2__["default"])(lower);
    if (upper === undefined) {
      upper = lower;
      lower = 0;
    } else {
      upper = Object(_toFinite_js__WEBPACK_IMPORTED_MODULE_2__["default"])(upper);
    }
  }
  if (lower > upper) {
    var temp = lower;
    lower = upper;
    upper = temp;
  }
  if (floating || lower % 1 || upper % 1) {
    var rand = nativeRandom();
    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
  }
  return Object(_baseRandom_js__WEBPACK_IMPORTED_MODULE_0__["default"])(lower, upper);
}

/* harmony default export */ __webpack_exports__["default"] = (random);


/***/ }),
/* 521 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeFloor = Math.floor,
    nativeRandom = Math.random;

/**
 * The base implementation of `_.random` without support for returning
 * floating-point numbers.
 *
 * @private
 * @param {number} lower The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the random number.
 */
function baseRandom(lower, upper) {
  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
}

/* harmony default export */ __webpack_exports__["default"] = (baseRandom);


/***/ }),
/* 522 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createRange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(523);


/**
 * Creates an array of numbers (positive and/or negative) progressing from
 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
 * `start` is specified without an `end` or `step`. If `end` is not specified,
 * it's set to `start` with `start` then set to `0`.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.rangeRight
 * @example
 *
 * _.range(4);
 * // => [0, 1, 2, 3]
 *
 * _.range(-4);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 5);
 * // => [1, 2, 3, 4]
 *
 * _.range(0, 20, 5);
 * // => [0, 5, 10, 15]
 *
 * _.range(0, -4, -1);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.range(0);
 * // => []
 */
var range = Object(_createRange_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

/* harmony default export */ __webpack_exports__["default"] = (range);


/***/ }),
/* 523 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(524);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(117);
/* harmony import */ var _toFinite_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50);




/**
 * Creates a `_.range` or `_.rangeRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new range function.
 */
function createRange(fromRight) {
  return function(start, end, step) {
    if (step && typeof step != 'number' && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start, end, step)) {
      end = step = undefined;
    }
    // Ensure the sign of `-0` is preserved.
    start = Object(_toFinite_js__WEBPACK_IMPORTED_MODULE_2__["default"])(start);
    if (end === undefined) {
      end = start;
      start = 0;
    } else {
      end = Object(_toFinite_js__WEBPACK_IMPORTED_MODULE_2__["default"])(end);
    }
    step = step === undefined ? (start < end ? 1 : -1) : Object(_toFinite_js__WEBPACK_IMPORTED_MODULE_2__["default"])(step);
    return Object(_baseRange_js__WEBPACK_IMPORTED_MODULE_0__["default"])(start, end, step, fromRight);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (createRange);


/***/ }),
/* 524 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;

/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */
function baseRange(start, end, step, fromRight) {
  var index = -1,
      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
      result = Array(length);

  while (length--) {
    result[fromRight ? length : ++index] = start;
    start += step;
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseRange);


/***/ }),
/* 525 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createRange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(523);


/**
 * This method is like `_.range` except that it populates values in
 * descending order.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.range
 * @example
 *
 * _.rangeRight(4);
 * // => [3, 2, 1, 0]
 *
 * _.rangeRight(-4);
 * // => [-3, -2, -1, 0]
 *
 * _.rangeRight(1, 5);
 * // => [4, 3, 2, 1]
 *
 * _.rangeRight(0, 20, 5);
 * // => [15, 10, 5, 0]
 *
 * _.rangeRight(0, -4, -1);
 * // => [-3, -2, -1, 0]
 *
 * _.rangeRight(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.rangeRight(0);
 * // => []
 */
var rangeRight = Object(_createRange_js__WEBPACK_IMPORTED_MODULE_0__["default"])(true);

/* harmony default export */ __webpack_exports__["default"] = (rangeRight);


/***/ }),
/* 526 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createWrap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54);
/* harmony import */ var _flatRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(176);



/** Used to compose bitmasks for function metadata. */
var WRAP_REARG_FLAG = 256;

/**
 * Creates a function that invokes `func` with arguments arranged according
 * to the specified `indexes` where the argument value at the first index is
 * provided as the first argument, the argument value at the second index is
 * provided as the second argument, and so on.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to rearrange arguments for.
 * @param {...(number|number[])} indexes The arranged argument indexes.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var rearged = _.rearg(function(a, b, c) {
 *   return [a, b, c];
 * }, [2, 0, 1]);
 *
 * rearged('b', 'c', 'a')
 * // => ['a', 'b', 'c']
 */
var rearg = Object(_flatRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(func, indexes) {
  return Object(_createWrap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
});

/* harmony default export */ __webpack_exports__["default"] = (rearg);


/***/ }),
/* 527 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayReduce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(200);
/* harmony import */ var _baseEach_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(292);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _baseReduce_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(528);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(47);






/**
 * Reduces `collection` to a value which is the accumulated result of running
 * each element in `collection` thru `iteratee`, where each successive
 * invocation is supplied the return value of the previous. If `accumulator`
 * is not given, the first element of `collection` is used as the initial
 * value. The iteratee is invoked with four arguments:
 * (accumulator, value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.reduce`, `_.reduceRight`, and `_.transform`.
 *
 * The guarded methods are:
 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
 * and `sortBy`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduceRight
 * @example
 *
 * _.reduce([1, 2], function(sum, n) {
 *   return sum + n;
 * }, 0);
 * // => 3
 *
 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 *   return result;
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
 */
function reduce(collection, iteratee, accumulator) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_4__["default"])(collection) ? _arrayReduce_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseReduce_js__WEBPACK_IMPORTED_MODULE_3__["default"],
      initAccum = arguments.length < 3;

  return func(collection, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee, 4), accumulator, initAccum, _baseEach_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (reduce);


/***/ }),
/* 528 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * The base implementation of `_.reduce` and `_.reduceRight`, without support
 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} accumulator The initial value.
 * @param {boolean} initAccum Specify using the first or last element of
 *  `collection` as the initial value.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the accumulated value.
 */
function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index, collection) {
    accumulator = initAccum
      ? (initAccum = false, value)
      : iteratee(accumulator, value, index, collection);
  });
  return accumulator;
}

/* harmony default export */ __webpack_exports__["default"] = (baseReduce);


/***/ }),
/* 529 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayReduceRight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(530);
/* harmony import */ var _baseEachRight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(334);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _baseReduce_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(528);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(47);






/**
 * This method is like `_.reduce` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduce
 * @example
 *
 * var array = [[0, 1], [2, 3], [4, 5]];
 *
 * _.reduceRight(array, function(flattened, other) {
 *   return flattened.concat(other);
 * }, []);
 * // => [4, 5, 2, 3, 0, 1]
 */
function reduceRight(collection, iteratee, accumulator) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_4__["default"])(collection) ? _arrayReduceRight_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseReduce_js__WEBPACK_IMPORTED_MODULE_3__["default"],
      initAccum = arguments.length < 3;

  return func(collection, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(iteratee, 4), accumulator, initAccum, _baseEachRight_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (reduceRight);


/***/ }),
/* 530 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A specialized version of `_.reduceRight` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the last element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduceRight(array, iteratee, accumulator, initAccum) {
  var length = array == null ? 0 : array.length;
  if (initAccum && length) {
    accumulator = array[--length];
  }
  while (length--) {
    accumulator = iteratee(accumulator, array[length], length, array);
  }
  return accumulator;
}

/* harmony default export */ __webpack_exports__["default"] = (arrayReduceRight);


/***/ }),
/* 531 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _baseFilter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(357);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(259);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);
/* harmony import */ var _negate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(470);






/**
 * The opposite of `_.filter`; this method returns the elements of `collection`
 * that `predicate` does **not** return truthy for.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.filter
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': true }
 * ];
 *
 * _.reject(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.reject(users, { 'age': 40, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.reject(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.reject(users, 'active');
 * // => objects for ['barney']
 */
function reject(collection, predicate) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection) ? _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseFilter_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  return func(collection, Object(_negate_js__WEBPACK_IMPORTED_MODULE_4__["default"])(Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_2__["default"])(predicate, 3)));
}

/* harmony default export */ __webpack_exports__["default"] = (reject);


/***/ }),
/* 532 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _basePullAt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(519);



/**
 * Removes all elements from `array` that `predicate` returns truthy for
 * and returns an array of the removed elements. The predicate is invoked
 * with three arguments: (value, index, array).
 *
 * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
 * to pull elements from an array by value.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = [1, 2, 3, 4];
 * var evens = _.remove(array, function(n) {
 *   return n % 2 == 0;
 * });
 *
 * console.log(array);
 * // => [1, 3]
 *
 * console.log(evens);
 * // => [2, 4]
 */
function remove(array, predicate) {
  var result = [];
  if (!(array && array.length)) {
    return result;
  }
  var index = -1,
      indexes = [],
      length = array.length;

  predicate = Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(predicate, 3);
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result.push(value);
      indexes.push(index);
    }
  }
  Object(_basePullAt_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, indexes);
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (remove);


/***/ }),
/* 533 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRepeat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(498);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(117);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/**
 * Repeats the given string `n` times.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to repeat.
 * @param {number} [n=1] The number of times to repeat the string.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the repeated string.
 * @example
 *
 * _.repeat('*', 3);
 * // => '***'
 *
 * _.repeat('abc', 2);
 * // => 'abcabc'
 *
 * _.repeat('abc', 0);
 * // => ''
 */
function repeat(string, n, guard) {
  if ((guard ? Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__["default"])(string, n, guard) : n === undefined)) {
    n = 1;
  } else {
    n = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(n);
  }
  return Object(_baseRepeat_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string), n);
}

/* harmony default export */ __webpack_exports__["default"] = (repeat);


/***/ }),
/* 534 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);


/**
 * Replaces matches for `pattern` in `string` with `replacement`.
 *
 * **Note:** This method is based on
 * [`String#replace`](https://mdn.io/String/replace).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to modify.
 * @param {RegExp|string} pattern The pattern to replace.
 * @param {Function|string} replacement The match replacement.
 * @returns {string} Returns the modified string.
 * @example
 *
 * _.replace('Hi Fred', 'Fred', 'Barney');
 * // => 'Hi Barney'
 */
function replace() {
  var args = arguments,
      string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(args[0]);

  return args.length < 3 ? string : string.replace(args[1], args[2]);
}

/* harmony default export */ __webpack_exports__["default"] = (replace);


/***/ }),
/* 535 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that invokes `func` with the `this` binding of the
 * created function and arguments from `start` and beyond provided as
 * an array.
 *
 * **Note:** This method is based on the
 * [rest parameter](https://mdn.io/rest_parameters).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.rest(function(what, names) {
 *   return what + ' ' + _.initial(names).join(', ') +
 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
 * });
 *
 * say('hello', 'fred', 'barney', 'pebbles');
 * // => 'hello fred, barney, & pebbles'
 */
function rest(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  start = start === undefined ? start : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start);
  return Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, start);
}

/* harmony default export */ __webpack_exports__["default"] = (rest);


/***/ }),
/* 536 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _castPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(146);
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(61);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(175);




/**
 * This method is like `_.get` except that if the resolved value is a
 * function it's invoked with the `this` binding of its parent object and
 * its result is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to resolve.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
 *
 * _.result(object, 'a[0].b.c1');
 * // => 3
 *
 * _.result(object, 'a[0].b.c2');
 * // => 4
 *
 * _.result(object, 'a[0].b.c3', 'default');
 * // => 'default'
 *
 * _.result(object, 'a[0].b.c3', _.constant('default'));
 * // => 'default'
 */
function result(object, path, defaultValue) {
  path = Object(_castPath_js__WEBPACK_IMPORTED_MODULE_0__["default"])(path, object);

  var index = -1,
      length = path.length;

  // Ensure the loop is entered when path is empty.
  if (!length) {
    length = 1;
    object = undefined;
  }
  while (++index < length) {
    var value = object == null ? undefined : object[Object(_toKey_js__WEBPACK_IMPORTED_MODULE_2__["default"])(path[index])];
    if (value === undefined) {
      index = length;
      value = defaultValue;
    }
    object = Object(_isFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value) ? value.call(object) : value;
  }
  return object;
}

/* harmony default export */ __webpack_exports__["default"] = (result);


/***/ }),
/* 537 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used for built-in method references. */
var arrayProto = Array.prototype;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeReverse = arrayProto.reverse;

/**
 * Reverses `array` so that the first element becomes the last, the second
 * element becomes the second to last, and so on.
 *
 * **Note:** This method mutates `array` and is based on
 * [`Array#reverse`](https://mdn.io/Array/reverse).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _.reverse(array);
 * // => [3, 2, 1]
 *
 * console.log(array);
 * // => [3, 2, 1]
 */
function reverse(array) {
  return array == null ? array : nativeReverse.call(array);
}

/* harmony default export */ __webpack_exports__["default"] = (reverse);


/***/ }),
/* 538 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createRound_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(210);


/**
 * Computes `number` rounded to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round.
 * @param {number} [precision=0] The precision to round to.
 * @returns {number} Returns the rounded number.
 * @example
 *
 * _.round(4.006);
 * // => 4
 *
 * _.round(4.006, 2);
 * // => 4.01
 *
 * _.round(4060, -2);
 * // => 4100
 */
var round = Object(_createRound_js__WEBPACK_IMPORTED_MODULE_0__["default"])('round');

/* harmony default export */ __webpack_exports__["default"] = (round);


/***/ }),
/* 539 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arraySample_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(540);
/* harmony import */ var _baseSample_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(541);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47);




/**
 * Gets a random element from `collection`.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to sample.
 * @returns {*} Returns the random element.
 * @example
 *
 * _.sample([1, 2, 3, 4]);
 * // => 2
 */
function sample(collection) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(collection) ? _arraySample_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseSample_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  return func(collection);
}

/* harmony default export */ __webpack_exports__["default"] = (sample);


/***/ }),
/* 540 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRandom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(521);


/**
 * A specialized version of `_.sample` for arrays.
 *
 * @private
 * @param {Array} array The array to sample.
 * @returns {*} Returns the random element.
 */
function arraySample(array) {
  var length = array.length;
  return length ? array[Object(_baseRandom_js__WEBPACK_IMPORTED_MODULE_0__["default"])(0, length - 1)] : undefined;
}

/* harmony default export */ __webpack_exports__["default"] = (arraySample);


/***/ }),
/* 541 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arraySample_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(540);
/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(399);



/**
 * The base implementation of `_.sample`.
 *
 * @private
 * @param {Array|Object} collection The collection to sample.
 * @returns {*} Returns the random element.
 */
function baseSample(collection) {
  return Object(_arraySample_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_values_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection));
}

/* harmony default export */ __webpack_exports__["default"] = (baseSample);


/***/ }),
/* 542 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arraySampleSize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(543);
/* harmony import */ var _baseSampleSize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(545);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(117);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(49);






/**
 * Gets `n` random elements at unique keys from `collection` up to the
 * size of `collection`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to sample.
 * @param {number} [n=1] The number of elements to sample.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the random elements.
 * @example
 *
 * _.sampleSize([1, 2, 3], 2);
 * // => [3, 1]
 *
 * _.sampleSize([1, 2, 3], 4);
 * // => [2, 3, 1]
 */
function sampleSize(collection, n, guard) {
  if ((guard ? Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection, n, guard) : n === undefined)) {
    n = 1;
  } else {
    n = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_4__["default"])(n);
  }
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(collection) ? _arraySampleSize_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseSampleSize_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  return func(collection, n);
}

/* harmony default export */ __webpack_exports__["default"] = (sampleSize);


/***/ }),
/* 543 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(214);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86);
/* harmony import */ var _shuffleSelf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(544);




/**
 * A specialized version of `_.sampleSize` for arrays.
 *
 * @private
 * @param {Array} array The array to sample.
 * @param {number} n The number of elements to sample.
 * @returns {Array} Returns the random elements.
 */
function arraySampleSize(array, n) {
  return Object(_shuffleSelf_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array), Object(_baseClamp_js__WEBPACK_IMPORTED_MODULE_0__["default"])(n, 0, array.length));
}

/* harmony default export */ __webpack_exports__["default"] = (arraySampleSize);


/***/ }),
/* 544 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRandom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(521);


/**
 * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
 *
 * @private
 * @param {Array} array The array to shuffle.
 * @param {number} [size=array.length] The size of `array`.
 * @returns {Array} Returns `array`.
 */
function shuffleSelf(array, size) {
  var index = -1,
      length = array.length,
      lastIndex = length - 1;

  size = size === undefined ? length : size;
  while (++index < size) {
    var rand = Object(_baseRandom_js__WEBPACK_IMPORTED_MODULE_0__["default"])(index, lastIndex),
        value = array[rand];

    array[rand] = array[index];
    array[index] = value;
  }
  array.length = size;
  return array;
}

/* harmony default export */ __webpack_exports__["default"] = (shuffleSelf);


/***/ }),
/* 545 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(214);
/* harmony import */ var _shuffleSelf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(544);
/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(399);




/**
 * The base implementation of `_.sampleSize` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to sample.
 * @param {number} n The number of elements to sample.
 * @returns {Array} Returns the random elements.
 */
function baseSampleSize(collection, n) {
  var array = Object(_values_js__WEBPACK_IMPORTED_MODULE_2__["default"])(collection);
  return Object(_shuffleSelf_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseClamp_js__WEBPACK_IMPORTED_MODULE_0__["default"])(n, 0, array.length));
}

/* harmony default export */ __webpack_exports__["default"] = (baseSampleSize);


/***/ }),
/* 546 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(483);


/**
 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
 * it's created. Arrays are created for missing index properties while objects
 * are created for all other missing properties. Use `_.setWith` to customize
 * `path` creation.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.set(object, 'a[0].b.c', 4);
 * console.log(object.a[0].b.c);
 * // => 4
 *
 * _.set(object, ['x', '0', 'y', 'z'], 5);
 * console.log(object.x[0].y.z);
 * // => 5
 */
function set(object, path, value) {
  return object == null ? object : Object(_baseSet_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path, value);
}

/* harmony default export */ __webpack_exports__["default"] = (set);


/***/ }),
/* 547 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(483);


/**
 * This method is like `_.set` except that it accepts `customizer` which is
 * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
 * path creation is handled by the method instead. The `customizer` is invoked
 * with three arguments: (nsValue, key, nsObject).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {};
 *
 * _.setWith(object, '[0][1]', 'a', Object);
 * // => { '0': { '1': 'a' } }
 */
function setWith(object, path, value, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return object == null ? object : Object(_baseSet_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path, value, customizer);
}

/* harmony default export */ __webpack_exports__["default"] = (setWith);


/***/ }),
/* 548 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayShuffle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(549);
/* harmony import */ var _baseShuffle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(550);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47);




/**
 * Creates an array of shuffled values, using a version of the
 * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to shuffle.
 * @returns {Array} Returns the new shuffled array.
 * @example
 *
 * _.shuffle([1, 2, 3, 4]);
 * // => [4, 1, 3, 2]
 */
function shuffle(collection) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(collection) ? _arrayShuffle_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseShuffle_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  return func(collection);
}

/* harmony default export */ __webpack_exports__["default"] = (shuffle);


/***/ }),
/* 549 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86);
/* harmony import */ var _shuffleSelf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(544);



/**
 * A specialized version of `_.shuffle` for arrays.
 *
 * @private
 * @param {Array} array The array to shuffle.
 * @returns {Array} Returns the new shuffled array.
 */
function arrayShuffle(array) {
  return Object(_shuffleSelf_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array));
}

/* harmony default export */ __webpack_exports__["default"] = (arrayShuffle);


/***/ }),
/* 550 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _shuffleSelf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(544);
/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(399);



/**
 * The base implementation of `_.shuffle`.
 *
 * @private
 * @param {Array|Object} collection The collection to shuffle.
 * @returns {Array} Returns the new shuffled array.
 */
function baseShuffle(collection) {
  return Object(_shuffleSelf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_values_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection));
}

/* harmony default export */ __webpack_exports__["default"] = (baseShuffle);


/***/ }),
/* 551 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseKeys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(133);
/* harmony import */ var _getTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(235);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(118);
/* harmony import */ var _isString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(398);
/* harmony import */ var _stringSize_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(499);






/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/**
 * Gets the size of `collection` by returning its length for array-like
 * values or the number of own enumerable string keyed properties for objects.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @returns {number} Returns the collection size.
 * @example
 *
 * _.size([1, 2, 3]);
 * // => 3
 *
 * _.size({ 'a': 1, 'b': 2 });
 * // => 2
 *
 * _.size('pebbles');
 * // => 7
 */
function size(collection) {
  if (collection == null) {
    return 0;
  }
  if (Object(_isArrayLike_js__WEBPACK_IMPORTED_MODULE_2__["default"])(collection)) {
    return Object(_isString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection) ? Object(_stringSize_js__WEBPACK_IMPORTED_MODULE_4__["default"])(collection) : collection.length;
  }
  var tag = Object(_getTag_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection);
  if (tag == mapTag || tag == setTag) {
    return collection.size;
  }
  return Object(_baseKeys_js__WEBPACK_IMPORTED_MODULE_0__["default"])(collection).length;
}

/* harmony default export */ __webpack_exports__["default"] = (size);


/***/ }),
/* 552 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(117);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);




/**
 * Creates a slice of `array` from `start` up to, but not including, `end`.
 *
 * **Note:** This method is used instead of
 * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
 * returned.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function slice(array, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (end && typeof end != 'number' && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, start, end)) {
    start = 0;
    end = length;
  }
  else {
    start = start == null ? 0 : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(start);
    end = end === undefined ? length : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(end);
  }
  return Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, start, end);
}

/* harmony default export */ __webpack_exports__["default"] = (slice);


/***/ }),
/* 553 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createCompounder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(199);


/**
 * Converts `string` to
 * [snake case](https://en.wikipedia.org/wiki/Snake_case).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the snake cased string.
 * @example
 *
 * _.snakeCase('Foo Bar');
 * // => 'foo_bar'
 *
 * _.snakeCase('fooBar');
 * // => 'foo_bar'
 *
 * _.snakeCase('--FOO-BAR--');
 * // => 'foo_bar'
 */
var snakeCase = Object(_createCompounder_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(result, word, index) {
  return result + (index ? '_' : '') + word.toLowerCase();
});

/* harmony default export */ __webpack_exports__["default"] = (snakeCase);


/***/ }),
/* 554 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arraySome_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(268);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _baseSome_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(555);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(117);






/**
 * Checks if `predicate` returns truthy for **any** element of `collection`.
 * Iteration is stopped once `predicate` returns truthy. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 * @example
 *
 * _.some([null, 0, 'yes', false], Boolean);
 * // => true
 *
 * var users = [
 *   { 'user': 'barney', 'active': true },
 *   { 'user': 'fred',   'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.some(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.some(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.some(users, 'active');
 * // => true
 */
function some(collection, predicate, guard) {
  var func = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection) ? _arraySome_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseSome_js__WEBPACK_IMPORTED_MODULE_2__["default"];
  if (guard && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_4__["default"])(collection, predicate, guard)) {
    predicate = undefined;
  }
  return func(collection, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"])(predicate, 3));
}

/* harmony default export */ __webpack_exports__["default"] = (some);


/***/ }),
/* 555 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(292);


/**
 * The base implementation of `_.some` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function baseSome(collection, predicate) {
  var result;

  Object(_baseEach_js__WEBPACK_IMPORTED_MODULE_0__["default"])(collection, function(value, index, collection) {
    result = predicate(value, index, collection);
    return !result;
  });
  return !!result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseSome);


/***/ }),
/* 556 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _baseOrderBy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(486);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(115);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(117);





/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
 */
var sortBy = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_3__["default"])(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_3__["default"])(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return Object(_baseOrderBy_js__WEBPACK_IMPORTED_MODULE_1__["default"])(collection, Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratees, 1), []);
});

/* harmony default export */ __webpack_exports__["default"] = (sortBy);


/***/ }),
/* 557 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSortedIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(558);


/**
 * Uses a binary search to determine the lowest index at which `value`
 * should be inserted into `array` in order to maintain its sort order.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * _.sortedIndex([30, 50], 40);
 * // => 1
 */
function sortedIndex(array, value) {
  return Object(_baseSortedIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, value);
}

/* harmony default export */ __webpack_exports__["default"] = (sortedIndex);


/***/ }),
/* 558 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSortedIndexBy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(559);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(36);




/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295,
    HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

/**
 * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
 * performs a binary search of `array` to determine the index at which `value`
 * should be inserted into `array` in order to maintain its sort order.
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */
function baseSortedIndex(array, value, retHighest) {
  var low = 0,
      high = array == null ? low : array.length;

  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
    while (low < high) {
      var mid = (low + high) >>> 1,
          computed = array[mid];

      if (computed !== null && !Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_2__["default"])(computed) &&
          (retHighest ? (computed <= value) : (computed < value))) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }
    return high;
  }
  return Object(_baseSortedIndexBy_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, value, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], retHighest);
}

/* harmony default export */ __webpack_exports__["default"] = (baseSortedIndex);


/***/ }),
/* 559 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36);


/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295,
    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeFloor = Math.floor,
    nativeMin = Math.min;

/**
 * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
 * which invokes `iteratee` for `value` and each element of `array` to compute
 * their sort ranking. The iteratee is invoked with one argument; (value).
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} iteratee The iteratee invoked per element.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */
function baseSortedIndexBy(array, value, iteratee, retHighest) {
  value = iteratee(value);

  var low = 0,
      high = array == null ? 0 : array.length,
      valIsNaN = value !== value,
      valIsNull = value === null,
      valIsSymbol = Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value),
      valIsUndefined = value === undefined;

  while (low < high) {
    var mid = nativeFloor((low + high) / 2),
        computed = iteratee(array[mid]),
        othIsDefined = computed !== undefined,
        othIsNull = computed === null,
        othIsReflexive = computed === computed,
        othIsSymbol = Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__["default"])(computed);

    if (valIsNaN) {
      var setLow = retHighest || othIsReflexive;
    } else if (valIsUndefined) {
      setLow = othIsReflexive && (retHighest || othIsDefined);
    } else if (valIsNull) {
      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
    } else if (valIsSymbol) {
      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
    } else if (othIsNull || othIsSymbol) {
      setLow = false;
    } else {
      setLow = retHighest ? (computed <= value) : (computed < value);
    }
    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }
  return nativeMin(high, MAX_ARRAY_INDEX);
}

/* harmony default export */ __webpack_exports__["default"] = (baseSortedIndexBy);


/***/ }),
/* 560 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseSortedIndexBy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(559);



/**
 * This method is like `_.sortedIndex` except that it accepts `iteratee`
 * which is invoked for `value` and each element of `array` to compute their
 * sort ranking. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * var objects = [{ 'x': 4 }, { 'x': 5 }];
 *
 * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
 * // => 0
 */
function sortedIndexBy(array, value, iteratee) {
  return Object(_baseSortedIndexBy_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, value, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratee, 2));
}

/* harmony default export */ __webpack_exports__["default"] = (sortedIndexBy);


/***/ }),
/* 561 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSortedIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(558);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(112);



/**
 * This method is like `_.indexOf` except that it performs a binary
 * search on a sorted `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
 * // => 1
 */
function sortedIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index = Object(_baseSortedIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, value);
    if (index < length && Object(_eq_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array[index], value)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ __webpack_exports__["default"] = (sortedIndexOf);


/***/ }),
/* 562 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSortedIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(558);


/**
 * This method is like `_.sortedIndex` except that it returns the highest
 * index at which `value` should be inserted into `array` in order to
 * maintain its sort order.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
 * // => 4
 */
function sortedLastIndex(array, value) {
  return Object(_baseSortedIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, value, true);
}

/* harmony default export */ __webpack_exports__["default"] = (sortedLastIndex);


/***/ }),
/* 563 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseSortedIndexBy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(559);



/**
 * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
 * which is invoked for `value` and each element of `array` to compute their
 * sort ranking. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * var objects = [{ 'x': 4 }, { 'x': 5 }];
 *
 * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
 * // => 1
 *
 * // The `_.property` iteratee shorthand.
 * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
 * // => 1
 */
function sortedLastIndexBy(array, value, iteratee) {
  return Object(_baseSortedIndexBy_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, value, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratee, 2), true);
}

/* harmony default export */ __webpack_exports__["default"] = (sortedLastIndexBy);


/***/ }),
/* 564 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSortedIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(558);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(112);



/**
 * This method is like `_.lastIndexOf` except that it performs a binary
 * search on a sorted `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
 * // => 3
 */
function sortedLastIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index = Object(_baseSortedIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, value, true) - 1;
    if (Object(_eq_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array[index], value)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ __webpack_exports__["default"] = (sortedLastIndexOf);


/***/ }),
/* 565 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSortedUniq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(566);


/**
 * This method is like `_.uniq` except that it's designed and optimized
 * for sorted arrays.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.sortedUniq([1, 1, 2]);
 * // => [1, 2]
 */
function sortedUniq(array) {
  return (array && array.length)
    ? Object(_baseSortedUniq_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array)
    : [];
}

/* harmony default export */ __webpack_exports__["default"] = (sortedUniq);


/***/ }),
/* 566 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(112);


/**
 * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseSortedUniq(array, iteratee) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    if (!index || !Object(_eq_js__WEBPACK_IMPORTED_MODULE_0__["default"])(computed, seen)) {
      var seen = computed;
      result[resIndex++] = value === 0 ? 0 : value;
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseSortedUniq);


/***/ }),
/* 567 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseSortedUniq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(566);



/**
 * This method is like `_.uniqBy` except that it's designed and optimized
 * for sorted arrays.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
 * // => [1.1, 2.3]
 */
function sortedUniqBy(array, iteratee) {
  return (array && array.length)
    ? Object(_baseSortedUniq_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratee, 2))
    : [];
}

/* harmony default export */ __webpack_exports__["default"] = (sortedUniqBy);


/***/ }),
/* 568 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45);
/* harmony import */ var _castSlice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(193);
/* harmony import */ var _hasUnicode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(195);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(117);
/* harmony import */ var _isRegExp_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(435);
/* harmony import */ var _stringToArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(196);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(174);








/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Splits `string` by `separator`.
 *
 * **Note:** This method is based on
 * [`String#split`](https://mdn.io/String/split).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to split.
 * @param {RegExp|string} separator The separator pattern to split by.
 * @param {number} [limit] The length to truncate results to.
 * @returns {Array} Returns the string segments.
 * @example
 *
 * _.split('a-b-c', '-', 2);
 * // => ['a', 'b']
 */
function split(string, separator, limit) {
  if (limit && typeof limit != 'number' && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string, separator, limit)) {
    separator = limit = undefined;
  }
  limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
  if (!limit) {
    return [];
  }
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_6__["default"])(string);
  if (string && (
        typeof separator == 'string' ||
        (separator != null && !Object(_isRegExp_js__WEBPACK_IMPORTED_MODULE_4__["default"])(separator))
      )) {
    separator = Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(separator);
    if (!separator && Object(_hasUnicode_js__WEBPACK_IMPORTED_MODULE_2__["default"])(string)) {
      return Object(_castSlice_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_5__["default"])(string), 0, limit);
    }
  }
  return string.split(separator, limit);
}

/* harmony default export */ __webpack_exports__["default"] = (split);


/***/ }),
/* 569 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _arrayPush_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(179);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(115);
/* harmony import */ var _castSlice_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(193);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(49);






/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates a function that invokes `func` with the `this` binding of the
 * create function and an array of arguments much like
 * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
 *
 * **Note:** This method is based on the
 * [spread operator](https://mdn.io/spread_operator).
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Function
 * @param {Function} func The function to spread arguments over.
 * @param {number} [start=0] The start position of the spread.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.spread(function(who, what) {
 *   return who + ' says ' + what;
 * });
 *
 * say(['fred', 'hello']);
 * // => 'fred says hello'
 *
 * var numbers = Promise.all([
 *   Promise.resolve(40),
 *   Promise.resolve(36)
 * ]);
 *
 * numbers.then(_.spread(function(x, y) {
 *   return x + y;
 * }));
 * // => a Promise of 76
 */
function spread(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  start = start == null ? 0 : nativeMax(Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_4__["default"])(start), 0);
  return Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function(args) {
    var array = args[start],
        otherArgs = Object(_castSlice_js__WEBPACK_IMPORTED_MODULE_3__["default"])(args, 0, start);

    if (array) {
      Object(_arrayPush_js__WEBPACK_IMPORTED_MODULE_1__["default"])(otherArgs, array);
    }
    return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, this, otherArgs);
  });
}

/* harmony default export */ __webpack_exports__["default"] = (spread);


/***/ }),
/* 570 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createCompounder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(199);
/* harmony import */ var _upperFirst_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(191);



/**
 * Converts `string` to
 * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
 *
 * @static
 * @memberOf _
 * @since 3.1.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the start cased string.
 * @example
 *
 * _.startCase('--foo-bar--');
 * // => 'Foo Bar'
 *
 * _.startCase('fooBar');
 * // => 'Foo Bar'
 *
 * _.startCase('__FOO_BAR__');
 * // => 'FOO BAR'
 */
var startCase = Object(_createCompounder_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(result, word, index) {
  return result + (index ? ' ' : '') + Object(_upperFirst_js__WEBPACK_IMPORTED_MODULE_1__["default"])(word);
});

/* harmony default export */ __webpack_exports__["default"] = (startCase);


/***/ }),
/* 571 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(214);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/**
 * Checks if `string` starts with the given target string.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {string} [target] The string to search for.
 * @param {number} [position=0] The position to search from.
 * @returns {boolean} Returns `true` if `string` starts with `target`,
 *  else `false`.
 * @example
 *
 * _.startsWith('abc', 'a');
 * // => true
 *
 * _.startsWith('abc', 'b');
 * // => false
 *
 * _.startsWith('abc', 'b', 1);
 * // => true
 */
function startsWith(string, target, position) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string);
  position = position == null
    ? 0
    : Object(_baseClamp_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(position), 0, string.length);

  target = Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_1__["default"])(target);
  return string.slice(position, position + target.length) == target;
}

/* harmony default export */ __webpack_exports__["default"] = (startsWith);


/***/ }),
/* 572 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This method returns a new empty object.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Object} Returns the new empty object.
 * @example
 *
 * var objects = _.times(2, _.stubObject);
 *
 * console.log(objects);
 * // => [{}, {}]
 *
 * console.log(objects[0] === objects[1]);
 * // => false
 */
function stubObject() {
  return {};
}

/* harmony default export */ __webpack_exports__["default"] = (stubObject);


/***/ }),
/* 573 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This method returns an empty string.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {string} Returns the empty string.
 * @example
 *
 * _.times(2, _.stubString);
 * // => ['', '']
 */
function stubString() {
  return '';
}

/* harmony default export */ __webpack_exports__["default"] = (stubString);


/***/ }),
/* 574 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This method returns `true`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `true`.
 * @example
 *
 * _.times(2, _.stubTrue);
 * // => [true, true]
 */
function stubTrue() {
  return true;
}

/* harmony default export */ __webpack_exports__["default"] = (stubTrue);


/***/ }),
/* 575 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createMathOperation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34);


/**
 * Subtract two numbers.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {number} minuend The first number in a subtraction.
 * @param {number} subtrahend The second number in a subtraction.
 * @returns {number} Returns the difference.
 * @example
 *
 * _.subtract(6, 4);
 * // => 2
 */
var subtract = Object(_createMathOperation_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(minuend, subtrahend) {
  return minuend - subtrahend;
}, 0);

/* harmony default export */ __webpack_exports__["default"] = (subtract);


/***/ }),
/* 576 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(461);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56);



/**
 * Computes the sum of the values in `array`.
 *
 * @static
 * @memberOf _
 * @since 3.4.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {number} Returns the sum.
 * @example
 *
 * _.sum([4, 2, 8, 6]);
 * // => 20
 */
function sum(array) {
  return (array && array.length)
    ? Object(_baseSum_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"])
    : 0;
}

/* harmony default export */ __webpack_exports__["default"] = (sum);


/***/ }),
/* 577 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseSum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(461);



/**
 * This method is like `_.sum` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the value to be summed.
 * The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the sum.
 * @example
 *
 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
 *
 * _.sumBy(objects, function(o) { return o.n; });
 * // => 20
 *
 * // The `_.property` iteratee shorthand.
 * _.sumBy(objects, 'n');
 * // => 20
 */
function sumBy(array, iteratee) {
  return (array && array.length)
    ? Object(_baseSum_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratee, 2))
    : 0;
}

/* harmony default export */ __webpack_exports__["default"] = (sumBy);


/***/ }),
/* 578 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);


/**
 * Gets all but the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.tail([1, 2, 3]);
 * // => [2, 3]
 */
function tail(array) {
  var length = array == null ? 0 : array.length;
  return length ? Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, 1, length) : [];
}

/* harmony default export */ __webpack_exports__["default"] = (tail);


/***/ }),
/* 579 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/**
 * Creates a slice of `array` with `n` elements taken from the beginning.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to take.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.take([1, 2, 3]);
 * // => [1]
 *
 * _.take([1, 2, 3], 2);
 * // => [1, 2]
 *
 * _.take([1, 2, 3], 5);
 * // => [1, 2, 3]
 *
 * _.take([1, 2, 3], 0);
 * // => []
 */
function take(array, n, guard) {
  if (!(array && array.length)) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(n);
  return Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, 0, n < 0 ? 0 : n);
}

/* harmony default export */ __webpack_exports__["default"] = (take);


/***/ }),
/* 580 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(194);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/**
 * Creates a slice of `array` with `n` elements taken from the end.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to take.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.takeRight([1, 2, 3]);
 * // => [3]
 *
 * _.takeRight([1, 2, 3], 2);
 * // => [2, 3]
 *
 * _.takeRight([1, 2, 3], 5);
 * // => [1, 2, 3]
 *
 * _.takeRight([1, 2, 3], 0);
 * // => []
 */
function takeRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(n);
  n = length - n;
  return Object(_baseSlice_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, n < 0 ? 0 : n, length);
}

/* harmony default export */ __webpack_exports__["default"] = (takeRight);


/***/ }),
/* 581 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseWhile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(326);



/**
 * Creates a slice of `array` with elements taken from the end. Elements are
 * taken until `predicate` returns falsey. The predicate is invoked with
 * three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.takeRightWhile(users, function(o) { return !o.active; });
 * // => objects for ['fred', 'pebbles']
 *
 * // The `_.matches` iteratee shorthand.
 * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
 * // => objects for ['pebbles']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.takeRightWhile(users, ['active', false]);
 * // => objects for ['fred', 'pebbles']
 *
 * // The `_.property` iteratee shorthand.
 * _.takeRightWhile(users, 'active');
 * // => []
 */
function takeRightWhile(array, predicate) {
  return (array && array.length)
    ? Object(_baseWhile_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(predicate, 3), false, true)
    : [];
}

/* harmony default export */ __webpack_exports__["default"] = (takeRightWhile);


/***/ }),
/* 582 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseWhile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(326);



/**
 * Creates a slice of `array` with elements taken from the beginning. Elements
 * are taken until `predicate` returns falsey. The predicate is invoked with
 * three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.takeWhile(users, function(o) { return !o.active; });
 * // => objects for ['barney', 'fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.takeWhile(users, { 'user': 'barney', 'active': false });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.takeWhile(users, ['active', false]);
 * // => objects for ['barney', 'fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.takeWhile(users, 'active');
 * // => []
 */
function takeWhile(array, predicate) {
  return (array && array.length)
    ? Object(_baseWhile_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(predicate, 3))
    : [];
}

/* harmony default export */ __webpack_exports__["default"] = (takeWhile);


/***/ }),
/* 583 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This method invokes `interceptor` and returns `value`. The interceptor
 * is invoked with one argument; (value). The purpose of this method is to
 * "tap into" a method chain sequence in order to modify intermediate results.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Seq
 * @param {*} value The value to provide to `interceptor`.
 * @param {Function} interceptor The function to invoke.
 * @returns {*} Returns `value`.
 * @example
 *
 * _([1, 2, 3])
 *  .tap(function(array) {
 *    // Mutate input array.
 *    array.pop();
 *  })
 *  .reverse()
 *  .value();
 * // => [2, 1]
 */
function tap(value, interceptor) {
  interceptor(value);
  return value;
}

/* harmony default export */ __webpack_exports__["default"] = (tap);


/***/ }),
/* 584 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assignInWith_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(140);
/* harmony import */ var _attempt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(181);
/* harmony import */ var _baseValues_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(400);
/* harmony import */ var _customDefaultsAssignIn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(585);
/* harmony import */ var _escapeStringChar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(586);
/* harmony import */ var _isError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(182);
/* harmony import */ var _isIterateeCall_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(117);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(121);
/* harmony import */ var _reInterpolate_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(587);
/* harmony import */ var _templateSettings_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(588);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(174);












/** Used to match empty string literals in compiled template source. */
var reEmptyStringLeading = /\b__p \+= '';/g,
    reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
    reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

/**
 * Used to match
 * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
 */
var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

/** Used to ensure capturing order of template delimiters. */
var reNoMatch = /($^)/;

/** Used to match unescaped characters in compiled string literals. */
var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates a compiled template function that can interpolate data properties
 * in "interpolate" delimiters, HTML-escape interpolated data properties in
 * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
 * properties may be accessed as free variables in the template. If a setting
 * object is given, it takes precedence over `_.templateSettings` values.
 *
 * **Note:** In the development build `_.template` utilizes
 * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
 * for easier debugging.
 *
 * For more information on precompiling templates see
 * [lodash's custom builds documentation](https://lodash.com/custom-builds).
 *
 * For more information on Chrome extension sandboxes see
 * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category String
 * @param {string} [string=''] The template string.
 * @param {Object} [options={}] The options object.
 * @param {RegExp} [options.escape=_.templateSettings.escape]
 *  The HTML "escape" delimiter.
 * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
 *  The "evaluate" delimiter.
 * @param {Object} [options.imports=_.templateSettings.imports]
 *  An object to import into the template as free variables.
 * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
 *  The "interpolate" delimiter.
 * @param {string} [options.sourceURL='templateSources[n]']
 *  The sourceURL of the compiled template.
 * @param {string} [options.variable='obj']
 *  The data object variable name.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the compiled template function.
 * @example
 *
 * // Use the "interpolate" delimiter to create a compiled template.
 * var compiled = _.template('hello <%= user %>!');
 * compiled({ 'user': 'fred' });
 * // => 'hello fred!'
 *
 * // Use the HTML "escape" delimiter to escape data property values.
 * var compiled = _.template('<b><%- value %></b>');
 * compiled({ 'value': '<script>' });
 * // => '<b>&lt;script&gt;</b>'
 *
 * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
 * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
 * compiled({ 'users': ['fred', 'barney'] });
 * // => '<li>fred</li><li>barney</li>'
 *
 * // Use the internal `print` function in "evaluate" delimiters.
 * var compiled = _.template('<% print("hello " + user); %>!');
 * compiled({ 'user': 'barney' });
 * // => 'hello barney!'
 *
 * // Use the ES template literal delimiter as an "interpolate" delimiter.
 * // Disable support by replacing the "interpolate" delimiter.
 * var compiled = _.template('hello ${ user }!');
 * compiled({ 'user': 'pebbles' });
 * // => 'hello pebbles!'
 *
 * // Use backslashes to treat delimiters as plain text.
 * var compiled = _.template('<%= "\\<%- value %\\>" %>');
 * compiled({ 'value': 'ignored' });
 * // => '<%- value %>'
 *
 * // Use the `imports` option to import `jQuery` as `jq`.
 * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
 * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
 * compiled({ 'users': ['fred', 'barney'] });
 * // => '<li>fred</li><li>barney</li>'
 *
 * // Use the `sourceURL` option to specify a custom sourceURL for the template.
 * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
 * compiled(data);
 * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
 *
 * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
 * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
 * compiled.source;
 * // => function(data) {
 * //   var __t, __p = '';
 * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
 * //   return __p;
 * // }
 *
 * // Use custom template delimiters.
 * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
 * var compiled = _.template('hello {{ user }}!');
 * compiled({ 'user': 'mustache' });
 * // => 'hello mustache!'
 *
 * // Use the `source` property to inline compiled templates for meaningful
 * // line numbers in error messages and stack traces.
 * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
 *   var JST = {\
 *     "main": ' + _.template(mainText).source + '\
 *   };\
 * ');
 */
function template(string, options, guard) {
  // Based on John Resig's `tmpl` implementation
  // (http://ejohn.org/blog/javascript-micro-templating/)
  // and Laura Doktorova's doT.js (https://github.com/olado/doT).
  var settings = _templateSettings_js__WEBPACK_IMPORTED_MODULE_9__["default"].imports._.templateSettings || _templateSettings_js__WEBPACK_IMPORTED_MODULE_9__["default"];

  if (guard && Object(_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_6__["default"])(string, options, guard)) {
    options = undefined;
  }
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_10__["default"])(string);
  options = Object(_assignInWith_js__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, settings, _customDefaultsAssignIn_js__WEBPACK_IMPORTED_MODULE_3__["default"]);

  var imports = Object(_assignInWith_js__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options.imports, settings.imports, _customDefaultsAssignIn_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
      importsKeys = Object(_keys_js__WEBPACK_IMPORTED_MODULE_7__["default"])(imports),
      importsValues = Object(_baseValues_js__WEBPACK_IMPORTED_MODULE_2__["default"])(imports, importsKeys);

  var isEscaping,
      isEvaluating,
      index = 0,
      interpolate = options.interpolate || reNoMatch,
      source = "__p += '";

  // Compile the regexp to match each delimiter.
  var reDelimiters = RegExp(
    (options.escape || reNoMatch).source + '|' +
    interpolate.source + '|' +
    (interpolate === _reInterpolate_js__WEBPACK_IMPORTED_MODULE_8__["default"] ? reEsTemplate : reNoMatch).source + '|' +
    (options.evaluate || reNoMatch).source + '|$'
  , 'g');

  // Use a sourceURL for easier debugging.
  // The sourceURL gets injected into the source that's eval-ed, so be careful
  // with lookup (in case of e.g. prototype pollution), and strip newlines if any.
  // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.
  var sourceURL = hasOwnProperty.call(options, 'sourceURL')
    ? ('//# sourceURL=' +
       (options.sourceURL + '').replace(/[\r\n]/g, ' ') +
       '\n')
    : '';

  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
    interpolateValue || (interpolateValue = esTemplateValue);

    // Escape characters that can't be included in string literals.
    source += string.slice(index, offset).replace(reUnescapedString, _escapeStringChar_js__WEBPACK_IMPORTED_MODULE_4__["default"]);

    // Replace delimiters with snippets.
    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }
    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }
    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }
    index = offset + match.length;

    // The JS engine embedded in Adobe products needs `match` returned in
    // order to produce the correct `offset` value.
    return match;
  });

  source += "';\n";

  // If `variable` is not specified wrap a with-statement around the generated
  // code to add the data object to the top of the scope chain.
  // Like with sourceURL, we take care to not check the option's prototype,
  // as this configuration is a code injection vector.
  var variable = hasOwnProperty.call(options, 'variable') && options.variable;
  if (!variable) {
    source = 'with (obj) {\n' + source + '\n}\n';
  }
  // Cleanup code by stripping empty strings.
  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
    .replace(reEmptyStringMiddle, '$1')
    .replace(reEmptyStringTrailing, '$1;');

  // Frame code as the function body.
  source = 'function(' + (variable || 'obj') + ') {\n' +
    (variable
      ? ''
      : 'obj || (obj = {});\n'
    ) +
    "var __t, __p = ''" +
    (isEscaping
       ? ', __e = _.escape'
       : ''
    ) +
    (isEvaluating
      ? ', __j = Array.prototype.join;\n' +
        "function print() { __p += __j.call(arguments, '') }\n"
      : ';\n'
    ) +
    source +
    'return __p\n}';

  var result = Object(_attempt_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function() {
    return Function(importsKeys, sourceURL + 'return ' + source)
      .apply(undefined, importsValues);
  });

  // Provide the compiled function's source by its `toString` method or
  // the `source` property as a convenience for inlining compiled templates.
  result.source = source;
  if (Object(_isError_js__WEBPACK_IMPORTED_MODULE_5__["default"])(result)) {
    throw result;
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (template);


/***/ }),
/* 585 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(112);


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
 * of source objects to the destination object for all destination properties
 * that resolve to `undefined`.
 *
 * @private
 * @param {*} objValue The destination value.
 * @param {*} srcValue The source value.
 * @param {string} key The key of the property to assign.
 * @param {Object} object The parent object of `objValue`.
 * @returns {*} Returns the value to assign.
 */
function customDefaultsAssignIn(objValue, srcValue, key, object) {
  if (objValue === undefined ||
      (Object(_eq_js__WEBPACK_IMPORTED_MODULE_0__["default"])(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
    return srcValue;
  }
  return objValue;
}

/* harmony default export */ __webpack_exports__["default"] = (customDefaultsAssignIn);


/***/ }),
/* 586 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to escape characters for inclusion in compiled string literals. */
var stringEscapes = {
  '\\': '\\',
  "'": "'",
  '\n': 'n',
  '\r': 'r',
  '\u2028': 'u2028',
  '\u2029': 'u2029'
};

/**
 * Used by `_.template` to escape characters for inclusion in compiled string literals.
 *
 * @private
 * @param {string} chr The matched character to escape.
 * @returns {string} Returns the escaped character.
 */
function escapeStringChar(chr) {
  return '\\' + stringEscapes[chr];
}

/* harmony default export */ __webpack_exports__["default"] = (escapeStringChar);


/***/ }),
/* 587 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to match template delimiters. */
var reInterpolate = /<%=([\s\S]+?)%>/g;

/* harmony default export */ __webpack_exports__["default"] = (reInterpolate);


/***/ }),
/* 588 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _escape_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(345);
/* harmony import */ var _reEscape_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(589);
/* harmony import */ var _reEvaluate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(590);
/* harmony import */ var _reInterpolate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(587);





/**
 * By default, the template delimiters used by lodash are like those in
 * embedded Ruby (ERB) as well as ES2015 template strings. Change the
 * following template settings to use alternative delimiters.
 *
 * @static
 * @memberOf _
 * @type {Object}
 */
var templateSettings = {

  /**
   * Used to detect `data` property values to be HTML-escaped.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  'escape': _reEscape_js__WEBPACK_IMPORTED_MODULE_1__["default"],

  /**
   * Used to detect code to be evaluated.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  'evaluate': _reEvaluate_js__WEBPACK_IMPORTED_MODULE_2__["default"],

  /**
   * Used to detect `data` property values to inject.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  'interpolate': _reInterpolate_js__WEBPACK_IMPORTED_MODULE_3__["default"],

  /**
   * Used to reference the data object in the template text.
   *
   * @memberOf _.templateSettings
   * @type {string}
   */
  'variable': '',

  /**
   * Used to import variables into the compiled template.
   *
   * @memberOf _.templateSettings
   * @type {Object}
   */
  'imports': {

    /**
     * A reference to the `lodash` function.
     *
     * @memberOf _.templateSettings.imports
     * @type {Function}
     */
    '_': { 'escape': _escape_js__WEBPACK_IMPORTED_MODULE_0__["default"] }
  }
};

/* harmony default export */ __webpack_exports__["default"] = (templateSettings);


/***/ }),
/* 589 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to match template delimiters. */
var reEscape = /<%-([\s\S]+?)%>/g;

/* harmony default export */ __webpack_exports__["default"] = (reEscape);


/***/ }),
/* 590 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** Used to match template delimiters. */
var reEvaluate = /<%([\s\S]+?)%>/g;

/* harmony default export */ __webpack_exports__["default"] = (reEvaluate);


/***/ }),
/* 591 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(300);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52);



/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return Object(_debounce_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

/* harmony default export */ __webpack_exports__["default"] = (throttle);


/***/ }),
/* 592 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This method is like `_.tap` except that it returns the result of `interceptor`.
 * The purpose of this method is to "pass thru" values replacing intermediate
 * results in a method chain sequence.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Seq
 * @param {*} value The value to provide to `interceptor`.
 * @param {Function} interceptor The function to invoke.
 * @returns {*} Returns the result of `interceptor`.
 * @example
 *
 * _('  abc  ')
 *  .chain()
 *  .trim()
 *  .thru(function(value) {
 *    return [value];
 *  })
 *  .value();
 * // => ['abc']
 */
function thru(value, interceptor) {
  return interceptor(value);
}

/* harmony default export */ __webpack_exports__["default"] = (thru);


/***/ }),
/* 593 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseTimes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(123);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);




/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Invokes the iteratee `n` times, returning an array of the results of
 * each invocation. The iteratee is invoked with one argument; (index).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.times(3, String);
 * // => ['0', '1', '2']
 *
 *  _.times(4, _.constant(0));
 * // => [0, 0, 0, 0]
 */
function times(n, iteratee) {
  n = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_2__["default"])(n);
  if (n < 1 || n > MAX_SAFE_INTEGER) {
    return [];
  }
  var index = MAX_ARRAY_LENGTH,
      length = nativeMin(n, MAX_ARRAY_LENGTH);

  iteratee = Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratee);
  n -= MAX_ARRAY_LENGTH;

  var result = Object(_baseTimes_js__WEBPACK_IMPORTED_MODULE_0__["default"])(length, iteratee);
  while (++index < n) {
    iteratee(index);
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (times);


/***/ }),
/* 594 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Enables the wrapper to be iterable.
 *
 * @name Symbol.iterator
 * @memberOf _
 * @since 4.0.0
 * @category Seq
 * @returns {Object} Returns the wrapper object.
 * @example
 *
 * var wrapped = _([1, 2]);
 *
 * wrapped[Symbol.iterator]() === wrapped;
 * // => true
 *
 * Array.from(wrapped);
 * // => [1, 2]
 */
function wrapperToIterator() {
  return this;
}

/* harmony default export */ __webpack_exports__["default"] = (wrapperToIterator);


/***/ }),
/* 595 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wrapperValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(596);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _wrapperValue_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 596 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseWrapperValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(597);


/**
 * Executes the chain sequence to resolve the unwrapped value.
 *
 * @name value
 * @memberOf _
 * @since 0.1.0
 * @alias toJSON, valueOf
 * @category Seq
 * @returns {*} Returns the resolved unwrapped value.
 * @example
 *
 * _([1, 2, 3]).value();
 * // => [1, 2, 3]
 */
function wrapperValue() {
  return Object(_baseWrapperValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this.__wrapped__, this.__actions__);
}

/* harmony default export */ __webpack_exports__["default"] = (wrapperValue);


/***/ }),
/* 597 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _arrayPush_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(179);
/* harmony import */ var _arrayReduce_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(200);




/**
 * The base implementation of `wrapperValue` which returns the result of
 * performing a sequence of actions on the unwrapped `value`, where each
 * successive action is supplied the return value of the previous.
 *
 * @private
 * @param {*} value The unwrapped value.
 * @param {Array} actions Actions to perform to resolve the unwrapped value.
 * @returns {*} Returns the resolved value.
 */
function baseWrapperValue(value, actions) {
  var result = value;
  if (result instanceof _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    result = result.value();
  }
  return Object(_arrayReduce_js__WEBPACK_IMPORTED_MODULE_2__["default"])(actions, function(result, action) {
    return action.func.apply(action.thisArg, Object(_arrayPush_js__WEBPACK_IMPORTED_MODULE_1__["default"])([result], action.args));
  }, result);
}

/* harmony default export */ __webpack_exports__["default"] = (baseWrapperValue);


/***/ }),
/* 598 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);


/**
 * Converts `string`, as a whole, to lower case just like
 * [String#toLowerCase](https://mdn.io/toLowerCase).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the lower cased string.
 * @example
 *
 * _.toLower('--Foo-Bar--');
 * // => '--foo-bar--'
 *
 * _.toLower('fooBar');
 * // => 'foobar'
 *
 * _.toLower('__FOO_BAR__');
 * // => '__foo_bar__'
 */
function toLower(value) {
  return Object(_toString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value).toLowerCase();
}

/* harmony default export */ __webpack_exports__["default"] = (toLower);


/***/ }),
/* 599 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(36);
/* harmony import */ var _stringToPath_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(148);
/* harmony import */ var _toKey_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(175);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(174);








/**
 * Converts `value` to a property path array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {*} value The value to convert.
 * @returns {Array} Returns the new property path array.
 * @example
 *
 * _.toPath('a.b.c');
 * // => ['a', 'b', 'c']
 *
 * _.toPath('a[0].b.c');
 * // => ['a', '0', 'b', 'c']
 */
function toPath(value) {
  if (Object(_isArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(value)) {
    return Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, _toKey_js__WEBPACK_IMPORTED_MODULE_5__["default"]);
  }
  return Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_3__["default"])(value) ? [value] : Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_stringToPath_js__WEBPACK_IMPORTED_MODULE_4__["default"])(Object(_toString_js__WEBPACK_IMPORTED_MODULE_6__["default"])(value)));
}

/* harmony default export */ __webpack_exports__["default"] = (toPath);


/***/ }),
/* 600 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseClamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(214);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);



/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Converts `value` to a safe integer. A safe integer can be compared and
 * represented correctly.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toSafeInteger(3.2);
 * // => 3
 *
 * _.toSafeInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toSafeInteger(Infinity);
 * // => 9007199254740991
 *
 * _.toSafeInteger('3.2');
 * // => 3
 */
function toSafeInteger(value) {
  return value
    ? Object(_baseClamp_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_1__["default"])(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
    : (value === 0 ? value : 0);
}

/* harmony default export */ __webpack_exports__["default"] = (toSafeInteger);


/***/ }),
/* 601 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);


/**
 * Converts `string`, as a whole, to upper case just like
 * [String#toUpperCase](https://mdn.io/toUpperCase).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the upper cased string.
 * @example
 *
 * _.toUpper('--foo-bar--');
 * // => '--FOO-BAR--'
 *
 * _.toUpper('fooBar');
 * // => 'FOOBAR'
 *
 * _.toUpper('__foo_bar__');
 * // => '__FOO_BAR__'
 */
function toUpper(value) {
  return Object(_toString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value).toUpperCase();
}

/* harmony default export */ __webpack_exports__["default"] = (toUpper);


/***/ }),
/* 602 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayEach_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97);
/* harmony import */ var _baseCreate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(68);
/* harmony import */ var _baseForOwn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(293);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(259);
/* harmony import */ var _getPrototype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(184);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(47);
/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(126);
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(61);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(52);
/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(129);











/**
 * An alternative to `_.reduce`; this method transforms `object` to a new
 * `accumulator` object which is the result of running each of its own
 * enumerable string keyed properties thru `iteratee`, with each invocation
 * potentially mutating the `accumulator` object. If `accumulator` is not
 * provided, a new object with the same `[[Prototype]]` will be used. The
 * iteratee is invoked with four arguments: (accumulator, value, key, object).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 1.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The custom accumulator value.
 * @returns {*} Returns the accumulated value.
 * @example
 *
 * _.transform([2, 3, 4], function(result, n) {
 *   result.push(n *= n);
 *   return n % 2 == 0;
 * }, []);
 * // => [4, 9]
 *
 * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] }
 */
function transform(object, iteratee, accumulator) {
  var isArr = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_5__["default"])(object),
      isArrLike = isArr || Object(_isBuffer_js__WEBPACK_IMPORTED_MODULE_6__["default"])(object) || Object(_isTypedArray_js__WEBPACK_IMPORTED_MODULE_9__["default"])(object);

  iteratee = Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_3__["default"])(iteratee, 4);
  if (accumulator == null) {
    var Ctor = object && object.constructor;
    if (isArrLike) {
      accumulator = isArr ? new Ctor : [];
    }
    else if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_8__["default"])(object)) {
      accumulator = Object(_isFunction_js__WEBPACK_IMPORTED_MODULE_7__["default"])(Ctor) ? Object(_baseCreate_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_getPrototype_js__WEBPACK_IMPORTED_MODULE_4__["default"])(object)) : {};
    }
    else {
      accumulator = {};
    }
  }
  (isArrLike ? _arrayEach_js__WEBPACK_IMPORTED_MODULE_0__["default"] : _baseForOwn_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object, function(value, index, object) {
    return iteratee(accumulator, value, index, object);
  });
  return accumulator;
}

/* harmony default export */ __webpack_exports__["default"] = (transform);


/***/ }),
/* 603 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45);
/* harmony import */ var _castSlice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(193);
/* harmony import */ var _charsEndIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(604);
/* harmony import */ var _charsStartIndex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(605);
/* harmony import */ var _stringToArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(196);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(174);







/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/**
 * Removes leading and trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trim('  abc  ');
 * // => 'abc'
 *
 * _.trim('-_-abc-_-', '_-');
 * // => 'abc'
 *
 * _.map(['  foo  ', '  bar  '], _.trim);
 * // => ['foo', 'bar']
 */
function trim(string, chars, guard) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_5__["default"])(string);
  if (string && (guard || chars === undefined)) {
    return string.replace(reTrim, '');
  }
  if (!string || !(chars = Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(chars))) {
    return string;
  }
  var strSymbols = Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_4__["default"])(string),
      chrSymbols = Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_4__["default"])(chars),
      start = Object(_charsStartIndex_js__WEBPACK_IMPORTED_MODULE_3__["default"])(strSymbols, chrSymbols),
      end = Object(_charsEndIndex_js__WEBPACK_IMPORTED_MODULE_2__["default"])(strSymbols, chrSymbols) + 1;

  return Object(_castSlice_js__WEBPACK_IMPORTED_MODULE_1__["default"])(strSymbols, start, end).join('');
}

/* harmony default export */ __webpack_exports__["default"] = (trim);


/***/ }),
/* 604 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99);


/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the last unmatched string symbol.
 */
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;

  while (index-- && Object(_baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

/* harmony default export */ __webpack_exports__["default"] = (charsEndIndex);


/***/ }),
/* 605 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99);


/**
 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the first unmatched string symbol.
 */
function charsStartIndex(strSymbols, chrSymbols) {
  var index = -1,
      length = strSymbols.length;

  while (++index < length && Object(_baseIndexOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

/* harmony default export */ __webpack_exports__["default"] = (charsStartIndex);


/***/ }),
/* 606 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45);
/* harmony import */ var _castSlice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(193);
/* harmony import */ var _charsEndIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(604);
/* harmony import */ var _stringToArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(196);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(174);






/** Used to match leading and trailing whitespace. */
var reTrimEnd = /\s+$/;

/**
 * Removes trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trimEnd('  abc  ');
 * // => '  abc'
 *
 * _.trimEnd('-_-abc-_-', '_-');
 * // => '-_-abc'
 */
function trimEnd(string, chars, guard) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_4__["default"])(string);
  if (string && (guard || chars === undefined)) {
    return string.replace(reTrimEnd, '');
  }
  if (!string || !(chars = Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(chars))) {
    return string;
  }
  var strSymbols = Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string),
      end = Object(_charsEndIndex_js__WEBPACK_IMPORTED_MODULE_2__["default"])(strSymbols, Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(chars)) + 1;

  return Object(_castSlice_js__WEBPACK_IMPORTED_MODULE_1__["default"])(strSymbols, 0, end).join('');
}

/* harmony default export */ __webpack_exports__["default"] = (trimEnd);


/***/ }),
/* 607 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45);
/* harmony import */ var _castSlice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(193);
/* harmony import */ var _charsStartIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(605);
/* harmony import */ var _stringToArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(196);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(174);






/** Used to match leading and trailing whitespace. */
var reTrimStart = /^\s+/;

/**
 * Removes leading whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trimStart('  abc  ');
 * // => 'abc  '
 *
 * _.trimStart('-_-abc-_-', '_-');
 * // => 'abc-_-'
 */
function trimStart(string, chars, guard) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_4__["default"])(string);
  if (string && (guard || chars === undefined)) {
    return string.replace(reTrimStart, '');
  }
  if (!string || !(chars = Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(chars))) {
    return string;
  }
  var strSymbols = Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(string),
      start = Object(_charsStartIndex_js__WEBPACK_IMPORTED_MODULE_2__["default"])(strSymbols, Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_3__["default"])(chars));

  return Object(_castSlice_js__WEBPACK_IMPORTED_MODULE_1__["default"])(strSymbols, start).join('');
}

/* harmony default export */ __webpack_exports__["default"] = (trimStart);


/***/ }),
/* 608 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45);
/* harmony import */ var _castSlice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(193);
/* harmony import */ var _hasUnicode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(195);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52);
/* harmony import */ var _isRegExp_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(435);
/* harmony import */ var _stringSize_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(499);
/* harmony import */ var _stringToArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(196);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(49);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(174);










/** Used as default options for `_.truncate`. */
var DEFAULT_TRUNC_LENGTH = 30,
    DEFAULT_TRUNC_OMISSION = '...';

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Truncates `string` if it's longer than the given maximum string length.
 * The last characters of the truncated string are replaced with the omission
 * string which defaults to "...".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to truncate.
 * @param {Object} [options={}] The options object.
 * @param {number} [options.length=30] The maximum string length.
 * @param {string} [options.omission='...'] The string to indicate text is omitted.
 * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
 * @returns {string} Returns the truncated string.
 * @example
 *
 * _.truncate('hi-diddly-ho there, neighborino');
 * // => 'hi-diddly-ho there, neighbo...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'length': 24,
 *   'separator': ' '
 * });
 * // => 'hi-diddly-ho there,...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'length': 24,
 *   'separator': /,? +/
 * });
 * // => 'hi-diddly-ho there...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'omission': ' [...]'
 * });
 * // => 'hi-diddly-ho there, neig [...]'
 */
function truncate(string, options) {
  var length = DEFAULT_TRUNC_LENGTH,
      omission = DEFAULT_TRUNC_OMISSION;

  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options)) {
    var separator = 'separator' in options ? options.separator : separator;
    length = 'length' in options ? Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options.length) : length;
    omission = 'omission' in options ? Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.omission) : omission;
  }
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_8__["default"])(string);

  var strLength = string.length;
  if (Object(_hasUnicode_js__WEBPACK_IMPORTED_MODULE_2__["default"])(string)) {
    var strSymbols = Object(_stringToArray_js__WEBPACK_IMPORTED_MODULE_6__["default"])(string);
    strLength = strSymbols.length;
  }
  if (length >= strLength) {
    return string;
  }
  var end = length - Object(_stringSize_js__WEBPACK_IMPORTED_MODULE_5__["default"])(omission);
  if (end < 1) {
    return omission;
  }
  var result = strSymbols
    ? Object(_castSlice_js__WEBPACK_IMPORTED_MODULE_1__["default"])(strSymbols, 0, end).join('')
    : string.slice(0, end);

  if (separator === undefined) {
    return result + omission;
  }
  if (strSymbols) {
    end += (result.length - end);
  }
  if (Object(_isRegExp_js__WEBPACK_IMPORTED_MODULE_4__["default"])(separator)) {
    if (string.slice(end).search(separator)) {
      var match,
          substring = result;

      if (!separator.global) {
        separator = RegExp(separator.source, Object(_toString_js__WEBPACK_IMPORTED_MODULE_8__["default"])(reFlags.exec(separator)) + 'g');
      }
      separator.lastIndex = 0;
      while ((match = separator.exec(substring))) {
        var newEnd = match.index;
      }
      result = result.slice(0, newEnd === undefined ? end : newEnd);
    }
  } else if (string.indexOf(Object(_baseToString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(separator), end) != end) {
    var index = result.lastIndexOf(separator);
    if (index > -1) {
      result = result.slice(0, index);
    }
  }
  return result + omission;
}

/* harmony default export */ __webpack_exports__["default"] = (truncate);


/***/ }),
/* 609 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(53);


/**
 * Creates a function that accepts up to one argument, ignoring any
 * additional arguments.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.unary(parseInt));
 * // => [6, 8, 10]
 */
function unary(func) {
  return Object(_ary_js__WEBPACK_IMPORTED_MODULE_0__["default"])(func, 1);
}

/* harmony default export */ __webpack_exports__["default"] = (unary);


/***/ }),
/* 610 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);
/* harmony import */ var _unescapeHtmlChar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(611);



/** Used to match HTML entities and HTML characters. */
var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
    reHasEscapedHtml = RegExp(reEscapedHtml.source);

/**
 * The inverse of `_.escape`; this method converts the HTML entities
 * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
 * their corresponding characters.
 *
 * **Note:** No other HTML entities are unescaped. To unescape additional
 * HTML entities use a third-party library like [_he_](https://mths.be/he).
 *
 * @static
 * @memberOf _
 * @since 0.6.0
 * @category String
 * @param {string} [string=''] The string to unescape.
 * @returns {string} Returns the unescaped string.
 * @example
 *
 * _.unescape('fred, barney, &amp; pebbles');
 * // => 'fred, barney, & pebbles'
 */
function unescape(string) {
  string = Object(_toString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(string);
  return (string && reHasEscapedHtml.test(string))
    ? string.replace(reEscapedHtml, _unescapeHtmlChar_js__WEBPACK_IMPORTED_MODULE_1__["default"])
    : string;
}

/* harmony default export */ __webpack_exports__["default"] = (unescape);


/***/ }),
/* 611 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basePropertyOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(203);


/** Used to map HTML entities to characters. */
var htmlUnescapes = {
  '&amp;': '&',
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&#39;': "'"
};

/**
 * Used by `_.unescape` to convert HTML entities to characters.
 *
 * @private
 * @param {string} chr The matched character to unescape.
 * @returns {string} Returns the unescaped character.
 */
var unescapeHtmlChar = Object(_basePropertyOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(htmlUnescapes);

/* harmony default export */ __webpack_exports__["default"] = (unescapeHtmlChar);


/***/ }),
/* 612 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony import */ var _baseUniq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(613);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(309);





/**
 * Creates an array of unique values, in order, from all given arrays using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.union([2], [1, 2]);
 * // => [2, 1]
 */
var union = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(arrays) {
  return Object(_baseUniq_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arrays, 1, _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"], true));
});

/* harmony default export */ __webpack_exports__["default"] = (union);


/***/ }),
/* 613 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SetCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(265);
/* harmony import */ var _arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98);
/* harmony import */ var _arrayIncludesWith_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(318);
/* harmony import */ var _cacheHas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(269);
/* harmony import */ var _createSet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(614);
/* harmony import */ var _setToArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(272);







/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes_js__WEBPACK_IMPORTED_MODULE_1__["default"],
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = _arrayIncludesWith_js__WEBPACK_IMPORTED_MODULE_2__["default"];
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : Object(_createSet_js__WEBPACK_IMPORTED_MODULE_4__["default"])(array);
    if (set) {
      return Object(_setToArray_js__WEBPACK_IMPORTED_MODULE_5__["default"])(set);
    }
    isCommon = false;
    includes = _cacheHas_js__WEBPACK_IMPORTED_MODULE_3__["default"];
    seen = new _SetCache_js__WEBPACK_IMPORTED_MODULE_0__["default"];
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseUniq);


/***/ }),
/* 614 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Set_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(238);
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _setToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(272);




/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(_Set_js__WEBPACK_IMPORTED_MODULE_0__["default"] && (1 / Object(_setToArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(new _Set_js__WEBPACK_IMPORTED_MODULE_0__["default"]([,-0]))[1]) == INFINITY) ? _noop_js__WEBPACK_IMPORTED_MODULE_1__["default"] : function(values) {
  return new _Set_js__WEBPACK_IMPORTED_MODULE_0__["default"](values);
};

/* harmony default export */ __webpack_exports__["default"] = (createSet);


/***/ }),
/* 615 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(115);
/* harmony import */ var _baseUniq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(613);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(309);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(320);







/**
 * This method is like `_.union` except that it accepts `iteratee` which is
 * invoked for each element of each `arrays` to generate the criterion by
 * which uniqueness is computed. Result values are chosen from the first
 * array in which the value occurs. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.unionBy([2.1], [1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
var unionBy = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function(arrays) {
  var iteratee = Object(_last_js__WEBPACK_IMPORTED_MODULE_5__["default"])(arrays);
  if (Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__["default"])(iteratee)) {
    iteratee = undefined;
  }
  return Object(_baseUniq_js__WEBPACK_IMPORTED_MODULE_3__["default"])(Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arrays, 1, _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__["default"], true), Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratee, 2));
});

/* harmony default export */ __webpack_exports__["default"] = (unionBy);


/***/ }),
/* 616 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony import */ var _baseUniq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(613);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(309);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(320);






/**
 * This method is like `_.union` except that it accepts `comparator` which
 * is invoked to compare elements of `arrays`. Result values are chosen from
 * the first array in which the value occurs. The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.unionWith(objects, others, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
 */
var unionWith = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(arrays) {
  var comparator = Object(_last_js__WEBPACK_IMPORTED_MODULE_4__["default"])(arrays);
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return Object(_baseUniq_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arrays, 1, _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"], true), undefined, comparator);
});

/* harmony default export */ __webpack_exports__["default"] = (unionWith);


/***/ }),
/* 617 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseUniq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(613);


/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length) ? Object(_baseUniq_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array) : [];
}

/* harmony default export */ __webpack_exports__["default"] = (uniq);


/***/ }),
/* 618 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(259);
/* harmony import */ var _baseUniq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(613);



/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
function uniqBy(array, iteratee) {
  return (array && array.length) ? Object(_baseUniq_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratee, 2)) : [];
}

/* harmony default export */ __webpack_exports__["default"] = (uniqBy);


/***/ }),
/* 619 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseUniq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(613);


/**
 * This method is like `_.uniq` except that it accepts `comparator` which
 * is invoked to compare elements of `array`. The order of result values is
 * determined by the order they occur in the array.The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.uniqWith(objects, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
 */
function uniqWith(array, comparator) {
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return (array && array.length) ? Object(_baseUniq_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, undefined, comparator) : [];
}

/* harmony default export */ __webpack_exports__["default"] = (uniqWith);


/***/ }),
/* 620 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);


/** Used to generate unique IDs. */
var idCounter = 0;

/**
 * Generates a unique ID. If `prefix` is given, the ID is appended to it.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {string} [prefix=''] The value to prefix the ID with.
 * @returns {string} Returns the unique ID.
 * @example
 *
 * _.uniqueId('contact_');
 * // => 'contact_104'
 *
 * _.uniqueId();
 * // => '105'
 */
function uniqueId(prefix) {
  var id = ++idCounter;
  return Object(_toString_js__WEBPACK_IMPORTED_MODULE_0__["default"])(prefix) + id;
}

/* harmony default export */ __webpack_exports__["default"] = (uniqueId);


/***/ }),
/* 621 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseUnset_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(478);


/**
 * Removes the property at `path` of `object`.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 7 } }] };
 * _.unset(object, 'a[0].b.c');
 * // => true
 *
 * console.log(object);
 * // => { 'a': [{ 'b': {} }] };
 *
 * _.unset(object, ['a', '0', 'b', 'c']);
 * // => true
 *
 * console.log(object);
 * // => { 'a': [{ 'b': {} }] };
 */
function unset(object, path) {
  return object == null ? true : Object(_baseUnset_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path);
}

/* harmony default export */ __webpack_exports__["default"] = (unset);


/***/ }),
/* 622 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46);
/* harmony import */ var _baseProperty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(282);
/* harmony import */ var _baseTimes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(123);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(309);






/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This method is like `_.zip` except that it accepts an array of grouped
 * elements and creates an array regrouping the elements to their pre-zip
 * configuration.
 *
 * @static
 * @memberOf _
 * @since 1.2.0
 * @category Array
 * @param {Array} array The array of grouped elements to process.
 * @returns {Array} Returns the new array of regrouped elements.
 * @example
 *
 * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 *
 * _.unzip(zipped);
 * // => [['a', 'b'], [1, 2], [true, false]]
 */
function unzip(array) {
  if (!(array && array.length)) {
    return [];
  }
  var length = 0;
  array = Object(_arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, function(group) {
    if (Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__["default"])(group)) {
      length = nativeMax(group.length, length);
      return true;
    }
  });
  return Object(_baseTimes_js__WEBPACK_IMPORTED_MODULE_3__["default"])(length, function(index) {
    return Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(array, Object(_baseProperty_js__WEBPACK_IMPORTED_MODULE_2__["default"])(index));
  });
}

/* harmony default export */ __webpack_exports__["default"] = (unzip);


/***/ }),
/* 623 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _apply_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70);
/* harmony import */ var _arrayMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46);
/* harmony import */ var _unzip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(622);




/**
 * This method is like `_.unzip` except that it accepts `iteratee` to specify
 * how regrouped values should be combined. The iteratee is invoked with the
 * elements of each group: (...group).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Array
 * @param {Array} array The array of grouped elements to process.
 * @param {Function} [iteratee=_.identity] The function to combine
 *  regrouped values.
 * @returns {Array} Returns the new array of regrouped elements.
 * @example
 *
 * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
 * // => [[1, 10, 100], [2, 20, 200]]
 *
 * _.unzipWith(zipped, _.add);
 * // => [3, 30, 300]
 */
function unzipWith(array, iteratee) {
  if (!(array && array.length)) {
    return [];
  }
  var result = Object(_unzip_js__WEBPACK_IMPORTED_MODULE_2__["default"])(array);
  if (iteratee == null) {
    return result;
  }
  return Object(_arrayMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(result, function(group) {
    return Object(_apply_js__WEBPACK_IMPORTED_MODULE_0__["default"])(iteratee, undefined, group);
  });
}

/* harmony default export */ __webpack_exports__["default"] = (unzipWith);


/***/ }),
/* 624 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseUpdate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(625);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);



/**
 * This method is like `_.set` except that accepts `updater` to produce the
 * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
 * is invoked with one argument: (value).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {Function} updater The function to produce the updated value.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.update(object, 'a[0].b.c', function(n) { return n * n; });
 * console.log(object.a[0].b.c);
 * // => 9
 *
 * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
 * console.log(object.x[0].y.z);
 * // => 0
 */
function update(object, path, updater) {
  return object == null ? object : Object(_baseUpdate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path, Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"])(updater));
}

/* harmony default export */ __webpack_exports__["default"] = (update);


/***/ }),
/* 625 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseGet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(145);
/* harmony import */ var _baseSet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(483);



/**
 * The base implementation of `_.update`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to update.
 * @param {Function} updater The function to produce the updated value.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseUpdate(object, path, updater, customizer) {
  return Object(_baseSet_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, path, updater(Object(_baseGet_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path)), customizer);
}

/* harmony default export */ __webpack_exports__["default"] = (baseUpdate);


/***/ }),
/* 626 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseUpdate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(625);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);



/**
 * This method is like `_.update` except that it accepts `customizer` which is
 * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
 * path creation is handled by the method instead. The `customizer` is invoked
 * with three arguments: (nsValue, key, nsObject).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {Function} updater The function to produce the updated value.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {};
 *
 * _.updateWith(object, '[0][1]', _.constant('a'), Object);
 * // => { '0': { '1': 'a' } }
 */
function updateWith(object, path, updater, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return object == null ? object : Object(_baseUpdate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, path, Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_1__["default"])(updater), customizer);
}

/* harmony default export */ __webpack_exports__["default"] = (updateWith);


/***/ }),
/* 627 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _createCompounder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(199);


/**
 * Converts `string`, as space separated words, to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the upper cased string.
 * @example
 *
 * _.upperCase('--foo-bar');
 * // => 'FOO BAR'
 *
 * _.upperCase('fooBar');
 * // => 'FOO BAR'
 *
 * _.upperCase('__foo_bar__');
 * // => 'FOO BAR'
 */
var upperCase = Object(_createCompounder_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(result, word, index) {
  return result + (index ? ' ' : '') + word.toUpperCase();
});

/* harmony default export */ __webpack_exports__["default"] = (upperCase);


/***/ }),
/* 628 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wrapperValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(596);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _wrapperValue_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 629 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wrapperValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(596);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _wrapperValue_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),
/* 630 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseValues_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(400);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);



/**
 * Creates an array of the own and inherited enumerable string keyed property
 * values of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property values.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.valuesIn(new Foo);
 * // => [1, 2, 3] (iteration order is not guaranteed)
 */
function valuesIn(object) {
  return object == null ? [] : Object(_baseValues_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, Object(_keysIn_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object));
}

/* harmony default export */ __webpack_exports__["default"] = (valuesIn);


/***/ }),
/* 631 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseDifference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(317);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(309);




/**
 * Creates an array excluding all given values using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.pull`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...*} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.xor
 * @example
 *
 * _.without([2, 1, 2, 3], 1, 2);
 * // => [3]
 */
var without = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(array, values) {
  return Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_2__["default"])(array)
    ? Object(_baseDifference_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, values)
    : [];
});

/* harmony default export */ __webpack_exports__["default"] = (without);


/***/ }),
/* 632 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _castFunction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(330);
/* harmony import */ var _partial_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(505);



/**
 * Creates a function that provides `value` to `wrapper` as its first
 * argument. Any additional arguments provided to the function are appended
 * to those provided to the `wrapper`. The wrapper is invoked with the `this`
 * binding of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {*} value The value to wrap.
 * @param {Function} [wrapper=identity] The wrapper function.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var p = _.wrap(_.escape, function(func, text) {
 *   return '<p>' + func(text) + '</p>';
 * });
 *
 * p('fred, barney, & pebbles');
 * // => '<p>fred, barney, &amp; pebbles</p>'
 */
function wrap(value, wrapper) {
  return Object(_partial_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_castFunction_js__WEBPACK_IMPORTED_MODULE_0__["default"])(wrapper), value);
}

/* harmony default export */ __webpack_exports__["default"] = (wrap);


/***/ }),
/* 633 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84);
/* harmony import */ var _baseAt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(143);
/* harmony import */ var _flatRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(176);
/* harmony import */ var _isIndex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(105);
/* harmony import */ var _thru_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(592);







/**
 * This method is the wrapper version of `_.at`.
 *
 * @name at
 * @memberOf _
 * @since 1.0.0
 * @category Seq
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
 *
 * _(object).at(['a[0].b.c', 'a[1]']).value();
 * // => [3, 4]
 */
var wrapperAt = Object(_flatRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])(function(paths) {
  var length = paths.length,
      start = length ? paths[0] : 0,
      value = this.__wrapped__,
      interceptor = function(object) { return Object(_baseAt_js__WEBPACK_IMPORTED_MODULE_2__["default"])(object, paths); };

  if (length > 1 || this.__actions__.length ||
      !(value instanceof _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"]) || !Object(_isIndex_js__WEBPACK_IMPORTED_MODULE_4__["default"])(start)) {
    return this.thru(interceptor);
  }
  value = value.slice(start, +start + (length ? 1 : 0));
  value.__actions__.push({
    'func': _thru_js__WEBPACK_IMPORTED_MODULE_5__["default"],
    'args': [interceptor],
    'thisArg': undefined
  });
  return new _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"](value, this.__chain__).thru(function(array) {
    if (length && !array.length) {
      array.push(undefined);
    }
    return array;
  });
});

/* harmony default export */ __webpack_exports__["default"] = (wrapperAt);


/***/ }),
/* 634 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(211);


/**
 * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
 *
 * @name chain
 * @memberOf _
 * @since 0.1.0
 * @category Seq
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 40 }
 * ];
 *
 * // A sequence without explicit chaining.
 * _(users).head();
 * // => { 'user': 'barney', 'age': 36 }
 *
 * // A sequence with explicit chaining.
 * _(users)
 *   .chain()
 *   .head()
 *   .pick('user')
 *   .value();
 * // => { 'user': 'barney' }
 */
function wrapperChain() {
  return Object(_chain_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this);
}

/* harmony default export */ __webpack_exports__["default"] = (wrapperChain);


/***/ }),
/* 635 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84);
/* harmony import */ var _reverse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(537);
/* harmony import */ var _thru_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(592);





/**
 * This method is the wrapper version of `_.reverse`.
 *
 * **Note:** This method mutates the wrapped array.
 *
 * @name reverse
 * @memberOf _
 * @since 0.1.0
 * @category Seq
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _(array).reverse().value()
 * // => [3, 2, 1]
 *
 * console.log(array);
 * // => [3, 2, 1]
 */
function wrapperReverse() {
  var value = this.__wrapped__;
  if (value instanceof _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    var wrapped = value;
    if (this.__actions__.length) {
      wrapped = new _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"](this);
    }
    wrapped = wrapped.reverse();
    wrapped.__actions__.push({
      'func': _thru_js__WEBPACK_IMPORTED_MODULE_3__["default"],
      'args': [_reverse_js__WEBPACK_IMPORTED_MODULE_2__["default"]],
      'thisArg': undefined
    });
    return new _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"](wrapped, this.__chain__);
  }
  return this.thru(_reverse_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (wrapperReverse);


/***/ }),
/* 636 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony import */ var _baseXor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(637);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(309);





/**
 * Creates an array of unique values that is the
 * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
 * of the given arrays. The order of result values is determined by the order
 * they occur in the arrays.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.without
 * @example
 *
 * _.xor([2, 1], [2, 3]);
 * // => [1, 3]
 */
var xor = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(arrays) {
  return Object(_baseXor_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arrays, _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"]));
});

/* harmony default export */ __webpack_exports__["default"] = (xor);


/***/ }),
/* 637 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseDifference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(317);
/* harmony import */ var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _baseUniq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(613);




/**
 * The base implementation of methods like `_.xor`, without support for
 * iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of values.
 */
function baseXor(arrays, iteratee, comparator) {
  var length = arrays.length;
  if (length < 2) {
    return length ? Object(_baseUniq_js__WEBPACK_IMPORTED_MODULE_2__["default"])(arrays[0]) : [];
  }
  var index = -1,
      result = Array(length);

  while (++index < length) {
    var array = arrays[index],
        othIndex = -1;

    while (++othIndex < length) {
      if (othIndex != index) {
        result[index] = Object(_baseDifference_js__WEBPACK_IMPORTED_MODULE_0__["default"])(result[index] || array, arrays[othIndex], iteratee, comparator);
      }
    }
  }
  return Object(_baseUniq_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_baseFlatten_js__WEBPACK_IMPORTED_MODULE_1__["default"])(result, 1), iteratee, comparator);
}

/* harmony default export */ __webpack_exports__["default"] = (baseXor);


/***/ }),
/* 638 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(115);
/* harmony import */ var _baseXor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(637);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(309);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(320);







/**
 * This method is like `_.xor` except that it accepts `iteratee` which is
 * invoked for each element of each `arrays` to generate the criterion by
 * which by which they're compared. The order of result values is determined
 * by the order they occur in the arrays. The iteratee is invoked with one
 * argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [1.2, 3.4]
 *
 * // The `_.property` iteratee shorthand.
 * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 2 }]
 */
var xorBy = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function(arrays) {
  var iteratee = Object(_last_js__WEBPACK_IMPORTED_MODULE_5__["default"])(arrays);
  if (Object(_isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__["default"])(iteratee)) {
    iteratee = undefined;
  }
  return Object(_baseXor_js__WEBPACK_IMPORTED_MODULE_3__["default"])(Object(_arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arrays, _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_4__["default"]), Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__["default"])(iteratee, 2));
});

/* harmony default export */ __webpack_exports__["default"] = (xorBy);


/***/ }),
/* 639 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(115);
/* harmony import */ var _baseXor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(637);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(309);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(320);






/**
 * This method is like `_.xor` except that it accepts `comparator` which is
 * invoked to compare elements of `arrays`. The order of result values is
 * determined by the order they occur in the arrays. The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.xorWith(objects, others, _.isEqual);
 * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
 */
var xorWith = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function(arrays) {
  var comparator = Object(_last_js__WEBPACK_IMPORTED_MODULE_4__["default"])(arrays);
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return Object(_baseXor_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_arrayFilter_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arrays, _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_3__["default"]), undefined, comparator);
});

/* harmony default export */ __webpack_exports__["default"] = (xorWith);


/***/ }),
/* 640 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _unzip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(622);



/**
 * Creates an array of grouped elements, the first of which contains the
 * first elements of the given arrays, the second of which contains the
 * second elements of the given arrays, and so on.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to process.
 * @returns {Array} Returns the new array of grouped elements.
 * @example
 *
 * _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 */
var zip = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_unzip_js__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (zip);


/***/ }),
/* 641 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assignValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(110);
/* harmony import */ var _baseZipObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(642);



/**
 * This method is like `_.fromPairs` except that it accepts two arrays,
 * one of property identifiers and one of corresponding values.
 *
 * @static
 * @memberOf _
 * @since 0.4.0
 * @category Array
 * @param {Array} [props=[]] The property identifiers.
 * @param {Array} [values=[]] The property values.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.zipObject(['a', 'b'], [1, 2]);
 * // => { 'a': 1, 'b': 2 }
 */
function zipObject(props, values) {
  return Object(_baseZipObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(props || [], values || [], _assignValue_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (zipObject);


/***/ }),
/* 642 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
 *
 * @private
 * @param {Array} props The property identifiers.
 * @param {Array} values The property values.
 * @param {Function} assignFunc The function to assign values.
 * @returns {Object} Returns the new object.
 */
function baseZipObject(props, values, assignFunc) {
  var index = -1,
      length = props.length,
      valsLength = values.length,
      result = {};

  while (++index < length) {
    var value = index < valsLength ? values[index] : undefined;
    assignFunc(result, props[index], value);
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (baseZipObject);


/***/ }),
/* 643 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseSet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(483);
/* harmony import */ var _baseZipObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(642);



/**
 * This method is like `_.zipObject` except that it supports property paths.
 *
 * @static
 * @memberOf _
 * @since 4.1.0
 * @category Array
 * @param {Array} [props=[]] The property identifiers.
 * @param {Array} [values=[]] The property values.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
 * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
 */
function zipObjectDeep(props, values) {
  return Object(_baseZipObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(props || [], values || [], _baseSet_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
}

/* harmony default export */ __webpack_exports__["default"] = (zipObjectDeep);


/***/ }),
/* 644 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(115);
/* harmony import */ var _unzipWith_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(623);



/**
 * This method is like `_.zip` except that it accepts `iteratee` to specify
 * how grouped values should be combined. The iteratee is invoked with the
 * elements of each group: (...group).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Array
 * @param {...Array} [arrays] The arrays to process.
 * @param {Function} [iteratee=_.identity] The function to combine
 *  grouped values.
 * @returns {Array} Returns the new array of grouped elements.
 * @example
 *
 * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
 *   return a + b + c;
 * });
 * // => [111, 222]
 */
var zipWith = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function(arrays) {
  var length = arrays.length,
      iteratee = length > 1 ? arrays[length - 1] : undefined;

  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
  return Object(_unzipWith_js__WEBPACK_IMPORTED_MODULE_1__["default"])(arrays, iteratee);
});

/* harmony default export */ __webpack_exports__["default"] = (zipWith);


/***/ }),
/* 645 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(646);
/* harmony import */ var _collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(648);
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(650);
/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(652);
/* harmony import */ var _lang_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(654);
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(656);
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(658);
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(660);
/* harmony import */ var _seq_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(662);
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(664);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(666);
/* harmony import */ var _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(77);
/* harmony import */ var _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(84);
/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(38);
/* harmony import */ var _arrayEach_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(97);
/* harmony import */ var _arrayPush_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(179);
/* harmony import */ var _baseForOwn_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(293);
/* harmony import */ var _baseFunctions_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(386);
/* harmony import */ var _baseInvoke_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(413);
/* harmony import */ var _baseIteratee_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(259);
/* harmony import */ var _baseRest_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(115);
/* harmony import */ var _createHybrid_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(71);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(56);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(47);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(52);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(121);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(320);
/* harmony import */ var _lazyClone_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(668);
/* harmony import */ var _lazyReverse_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(669);
/* harmony import */ var _lazyValue_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(670);
/* harmony import */ var _mixin_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(468);
/* harmony import */ var _negate_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(470);
/* harmony import */ var _realNames_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(82);
/* harmony import */ var _thru_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(592);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(49);
/* harmony import */ var _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(83);
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */





































/** Used as the semantic version number. */
var VERSION = '4.17.15';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_KEY_FLAG = 2;

/** Used to indicate the type of lazy iteratees. */
var LAZY_FILTER_FLAG = 1,
    LAZY_WHILE_FLAG = 3;

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var symIterator = _Symbol_js__WEBPACK_IMPORTED_MODULE_13__["default"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_13__["default"].iterator : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

// wrap `_.mixin` so it works when provided only one argument
var mixin = (function(func) {
  return function(object, source, options) {
    if (options == null) {
      var isObj = Object(_isObject_js__WEBPACK_IMPORTED_MODULE_24__["default"])(source),
          props = isObj && Object(_keys_js__WEBPACK_IMPORTED_MODULE_25__["default"])(source),
          methodNames = props && props.length && Object(_baseFunctions_js__WEBPACK_IMPORTED_MODULE_17__["default"])(source, props);

      if (!(methodNames ? methodNames.length : isObj)) {
        options = source;
        source = object;
        object = this;
      }
    }
    return func(object, source, options);
  };
}(_mixin_js__WEBPACK_IMPORTED_MODULE_30__["default"]));

// Add methods that return wrapped values in chain sequences.
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].after = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].after;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].ary = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].ary;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].assign = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].assign;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].assignIn = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].assignIn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].assignInWith = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].assignInWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].assignWith = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].assignWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].at = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].at;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].before = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].before;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].bind = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].bind;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].bindAll = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].bindAll;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].bindKey = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].bindKey;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].castArray = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].castArray;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].chain = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].chain;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].chunk = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].chunk;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].compact = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].compact;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].concat = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].concat;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].cond = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].cond;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].conforms = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].conforms;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].constant = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].constant;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].countBy = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].countBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].create = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].create;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].curry = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].curry;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].curryRight = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].curryRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].debounce = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].debounce;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].defaults = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].defaults;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].defaultsDeep = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].defaultsDeep;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].defer = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].defer;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].delay = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].delay;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].difference = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].difference;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].differenceBy = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].differenceBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].differenceWith = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].differenceWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].drop = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].drop;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].dropRight = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].dropRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].dropRightWhile = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].dropRightWhile;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].dropWhile = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].dropWhile;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].fill = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].fill;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].filter = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].filter;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].flatMap = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].flatMap;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].flatMapDeep = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].flatMapDeep;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].flatMapDepth = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].flatMapDepth;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].flatten = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].flatten;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].flattenDeep = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].flattenDeep;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].flattenDepth = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].flattenDepth;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].flip = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].flip;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].flow = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].flow;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].flowRight = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].flowRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].fromPairs = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].fromPairs;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].functions = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].functions;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].functionsIn = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].functionsIn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].groupBy = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].groupBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].initial = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].initial;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].intersection = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].intersection;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].intersectionBy = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].intersectionBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].intersectionWith = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].intersectionWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].invert = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].invert;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].invertBy = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].invertBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].invokeMap = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].invokeMap;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].iteratee = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].iteratee;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].keyBy = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].keyBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].keys = _keys_js__WEBPACK_IMPORTED_MODULE_25__["default"];
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].keysIn = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].keysIn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].map = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].map;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].mapKeys = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].mapKeys;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].mapValues = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].mapValues;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].matches = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].matches;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].matchesProperty = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].matchesProperty;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].memoize = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].memoize;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].merge = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].merge;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].mergeWith = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].mergeWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].method = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].method;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].methodOf = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].methodOf;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].mixin = mixin;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].negate = _negate_js__WEBPACK_IMPORTED_MODULE_31__["default"];
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].nthArg = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].nthArg;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].omit = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].omit;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].omitBy = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].omitBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].once = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].once;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].orderBy = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].orderBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].over = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].over;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].overArgs = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].overArgs;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].overEvery = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].overEvery;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].overSome = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].overSome;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].partial = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].partial;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].partialRight = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].partialRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].partition = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].partition;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].pick = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].pick;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].pickBy = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].pickBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].property = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].property;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].propertyOf = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].propertyOf;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].pull = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].pull;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].pullAll = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].pullAll;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].pullAllBy = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].pullAllBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].pullAllWith = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].pullAllWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].pullAt = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].pullAt;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].range = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].range;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].rangeRight = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].rangeRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].rearg = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].rearg;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].reject = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].reject;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].remove = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].remove;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].rest = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].rest;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].reverse = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].reverse;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sampleSize = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].sampleSize;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].set = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].set;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].setWith = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].setWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].shuffle = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].shuffle;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].slice = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].slice;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sortBy = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].sortBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sortedUniq = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].sortedUniq;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sortedUniqBy = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].sortedUniqBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].split = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].split;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].spread = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].spread;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].tail = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].tail;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].take = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].take;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].takeRight = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].takeRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].takeRightWhile = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].takeRightWhile;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].takeWhile = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].takeWhile;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].tap = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].tap;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].throttle = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].throttle;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].thru = _thru_js__WEBPACK_IMPORTED_MODULE_33__["default"];
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toArray = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].toArray;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toPairs = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].toPairs;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toPairsIn = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].toPairsIn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toPath = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].toPath;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toPlainObject = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].toPlainObject;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].transform = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].transform;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].unary = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].unary;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].union = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].union;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].unionBy = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].unionBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].unionWith = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].unionWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].uniq = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].uniq;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].uniqBy = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].uniqBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].uniqWith = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].uniqWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].unset = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].unset;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].unzip = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].unzip;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].unzipWith = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].unzipWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].update = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].update;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].updateWith = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].updateWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].values = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].values;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].valuesIn = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].valuesIn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].without = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].without;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].words = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].words;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].wrap = _function_js__WEBPACK_IMPORTED_MODULE_3__["default"].wrap;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].xor = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].xor;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].xorBy = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].xorBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].xorWith = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].xorWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].zip = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].zip;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].zipObject = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].zipObject;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].zipObjectDeep = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].zipObjectDeep;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].zipWith = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].zipWith;

// Add aliases.
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].entries = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].toPairs;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].entriesIn = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].toPairsIn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].extend = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].assignIn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].extendWith = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].assignInWith;

// Add methods to `lodash.prototype`.
mixin(_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"], _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"]);

// Add methods that return unwrapped values in chain sequences.
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].add = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].add;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].attempt = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].attempt;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].camelCase = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].camelCase;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].capitalize = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].capitalize;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].ceil = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].ceil;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].clamp = _number_js__WEBPACK_IMPORTED_MODULE_6__["default"].clamp;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].clone = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].clone;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].cloneDeep = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].cloneDeep;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].cloneDeepWith = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].cloneDeepWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].cloneWith = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].cloneWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].conformsTo = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].conformsTo;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].deburr = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].deburr;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].defaultTo = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].defaultTo;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].divide = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].divide;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].endsWith = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].endsWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].eq = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].eq;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].escape = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].escape;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].escapeRegExp = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].escapeRegExp;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].every = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].every;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].find = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].find;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].findIndex = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].findIndex;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].findKey = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].findKey;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].findLast = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].findLast;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].findLastIndex = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].findLastIndex;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].findLastKey = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].findLastKey;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].floor = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].floor;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].forEach = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].forEach;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].forEachRight = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].forEachRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].forIn = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].forIn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].forInRight = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].forInRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].forOwn = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].forOwn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].forOwnRight = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].forOwnRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].get = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].get;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].gt = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].gt;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].gte = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].gte;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].has = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].has;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].hasIn = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].hasIn;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].head = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].head;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].identity = _identity_js__WEBPACK_IMPORTED_MODULE_22__["default"];
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].includes = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].includes;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].indexOf = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].indexOf;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].inRange = _number_js__WEBPACK_IMPORTED_MODULE_6__["default"].inRange;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].invoke = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].invoke;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isArguments = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isArguments;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isArray = _isArray_js__WEBPACK_IMPORTED_MODULE_23__["default"];
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isArrayBuffer = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isArrayBuffer;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isArrayLike = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isArrayLike;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isArrayLikeObject = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isArrayLikeObject;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isBoolean = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isBoolean;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isBuffer = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isBuffer;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isDate = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isDate;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isElement = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isElement;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isEmpty = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isEmpty;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isEqual = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isEqual;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isEqualWith = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isEqualWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isError = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isError;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isFinite = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isFinite;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isFunction = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isFunction;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isInteger = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isInteger;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isLength = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isLength;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isMap = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isMap;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isMatch = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isMatch;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isMatchWith = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isMatchWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isNaN = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isNaN;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isNative = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isNative;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isNil = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isNil;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isNull = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isNull;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isNumber = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isNumber;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isObject = _isObject_js__WEBPACK_IMPORTED_MODULE_24__["default"];
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isObjectLike = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isObjectLike;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isPlainObject = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isPlainObject;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isRegExp = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isRegExp;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isSafeInteger = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isSafeInteger;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isSet = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isSet;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isString = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isString;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isSymbol = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isSymbol;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isTypedArray = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isTypedArray;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isUndefined = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isUndefined;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isWeakMap = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isWeakMap;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].isWeakSet = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].isWeakSet;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].join = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].join;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].kebabCase = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].kebabCase;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].last = _last_js__WEBPACK_IMPORTED_MODULE_26__["default"];
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].lastIndexOf = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].lastIndexOf;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].lowerCase = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].lowerCase;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].lowerFirst = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].lowerFirst;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].lt = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].lt;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].lte = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].lte;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].max = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].max;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].maxBy = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].maxBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].mean = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].mean;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].meanBy = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].meanBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].min = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].min;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].minBy = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].minBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].stubArray = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].stubArray;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].stubFalse = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].stubFalse;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].stubObject = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].stubObject;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].stubString = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].stubString;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].stubTrue = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].stubTrue;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].multiply = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].multiply;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].nth = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].nth;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].noop = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].noop;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].now = _date_js__WEBPACK_IMPORTED_MODULE_2__["default"].now;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].pad = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].pad;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].padEnd = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].padEnd;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].padStart = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].padStart;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].parseInt = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].parseInt;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].random = _number_js__WEBPACK_IMPORTED_MODULE_6__["default"].random;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].reduce = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].reduce;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].reduceRight = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].reduceRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].repeat = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].repeat;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].replace = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].replace;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].result = _object_js__WEBPACK_IMPORTED_MODULE_7__["default"].result;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].round = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].round;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sample = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].sample;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].size = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].size;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].snakeCase = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].snakeCase;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].some = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].some;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sortedIndex = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].sortedIndex;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sortedIndexBy = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].sortedIndexBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sortedIndexOf = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].sortedIndexOf;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sortedLastIndex = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].sortedLastIndex;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sortedLastIndexBy = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].sortedLastIndexBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sortedLastIndexOf = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].sortedLastIndexOf;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].startCase = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].startCase;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].startsWith = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].startsWith;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].subtract = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].subtract;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sum = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].sum;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].sumBy = _math_js__WEBPACK_IMPORTED_MODULE_5__["default"].sumBy;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].template = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].template;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].times = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].times;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toFinite = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].toFinite;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toInteger = _toInteger_js__WEBPACK_IMPORTED_MODULE_34__["default"];
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toLength = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].toLength;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toLower = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].toLower;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toNumber = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].toNumber;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toSafeInteger = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].toSafeInteger;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toString = _lang_js__WEBPACK_IMPORTED_MODULE_4__["default"].toString;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].toUpper = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].toUpper;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].trim = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].trim;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].trimEnd = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].trimEnd;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].trimStart = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].trimStart;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].truncate = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].truncate;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].unescape = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].unescape;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].uniqueId = _util_js__WEBPACK_IMPORTED_MODULE_10__["default"].uniqueId;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].upperCase = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].upperCase;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].upperFirst = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].upperFirst;

// Add aliases.
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].each = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].forEach;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].eachRight = _collection_js__WEBPACK_IMPORTED_MODULE_1__["default"].forEachRight;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].first = _array_js__WEBPACK_IMPORTED_MODULE_0__["default"].head;

mixin(_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"], (function() {
  var source = {};
  Object(_baseForOwn_js__WEBPACK_IMPORTED_MODULE_16__["default"])(_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"], function(func, methodName) {
    if (!hasOwnProperty.call(_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype, methodName)) {
      source[methodName] = func;
    }
  });
  return source;
}()), { 'chain': false });

/**
 * The semantic version number.
 *
 * @static
 * @memberOf _
 * @type {string}
 */
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].VERSION = VERSION;
(_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].templateSettings = _string_js__WEBPACK_IMPORTED_MODULE_9__["default"].templateSettings).imports._ = _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"];

// Assign default placeholders.
Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_14__["default"])(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
  _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"][methodName].placeholder = _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"];
});

// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_14__["default"])(['drop', 'take'], function(methodName, index) {
  _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype[methodName] = function(n) {
    n = n === undefined ? 1 : nativeMax(Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_34__["default"])(n), 0);

    var result = (this.__filtered__ && !index)
      ? new _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"](this)
      : this.clone();

    if (result.__filtered__) {
      result.__takeCount__ = nativeMin(n, result.__takeCount__);
    } else {
      result.__views__.push({
        'size': nativeMin(n, MAX_ARRAY_LENGTH),
        'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
      });
    }
    return result;
  };

  _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype[methodName + 'Right'] = function(n) {
    return this.reverse()[methodName](n).reverse();
  };
});

// Add `LazyWrapper` methods that accept an `iteratee` value.
Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_14__["default"])(['filter', 'map', 'takeWhile'], function(methodName, index) {
  var type = index + 1,
      isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

  _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype[methodName] = function(iteratee) {
    var result = this.clone();
    result.__iteratees__.push({
      'iteratee': Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_19__["default"])(iteratee, 3),
      'type': type
    });
    result.__filtered__ = result.__filtered__ || isFilter;
    return result;
  };
});

// Add `LazyWrapper` methods for `_.head` and `_.last`.
Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_14__["default"])(['head', 'last'], function(methodName, index) {
  var takeName = 'take' + (index ? 'Right' : '');

  _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype[methodName] = function() {
    return this[takeName](1).value()[0];
  };
});

// Add `LazyWrapper` methods for `_.initial` and `_.tail`.
Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_14__["default"])(['initial', 'tail'], function(methodName, index) {
  var dropName = 'drop' + (index ? '' : 'Right');

  _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype[methodName] = function() {
    return this.__filtered__ ? new _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"](this) : this[dropName](1);
  };
});

_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.compact = function() {
  return this.filter(_identity_js__WEBPACK_IMPORTED_MODULE_22__["default"]);
};

_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.find = function(predicate) {
  return this.filter(predicate).head();
};

_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.findLast = function(predicate) {
  return this.reverse().find(predicate);
};

_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.invokeMap = Object(_baseRest_js__WEBPACK_IMPORTED_MODULE_20__["default"])(function(path, args) {
  if (typeof path == 'function') {
    return new _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"](this);
  }
  return this.map(function(value) {
    return Object(_baseInvoke_js__WEBPACK_IMPORTED_MODULE_18__["default"])(value, path, args);
  });
});

_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.reject = function(predicate) {
  return this.filter(Object(_negate_js__WEBPACK_IMPORTED_MODULE_31__["default"])(Object(_baseIteratee_js__WEBPACK_IMPORTED_MODULE_19__["default"])(predicate)));
};

_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.slice = function(start, end) {
  start = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_34__["default"])(start);

  var result = this;
  if (result.__filtered__ && (start > 0 || end < 0)) {
    return new _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"](result);
  }
  if (start < 0) {
    result = result.takeRight(-start);
  } else if (start) {
    result = result.drop(start);
  }
  if (end !== undefined) {
    end = Object(_toInteger_js__WEBPACK_IMPORTED_MODULE_34__["default"])(end);
    result = end < 0 ? result.dropRight(-end) : result.take(end - start);
  }
  return result;
};

_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.takeRightWhile = function(predicate) {
  return this.reverse().takeWhile(predicate).reverse();
};

_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.toArray = function() {
  return this.take(MAX_ARRAY_LENGTH);
};

// Add `LazyWrapper` methods to `lodash.prototype`.
Object(_baseForOwn_js__WEBPACK_IMPORTED_MODULE_16__["default"])(_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype, function(func, methodName) {
  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
      isTaker = /^(?:head|last)$/.test(methodName),
      lodashFunc = _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"][isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
      retUnwrapped = isTaker || /^find/.test(methodName);

  if (!lodashFunc) {
    return;
  }
  _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype[methodName] = function() {
    var value = this.__wrapped__,
        args = isTaker ? [1] : arguments,
        isLazy = value instanceof _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"],
        iteratee = args[0],
        useLazy = isLazy || Object(_isArray_js__WEBPACK_IMPORTED_MODULE_23__["default"])(value);

    var interceptor = function(value) {
      var result = lodashFunc.apply(_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"], Object(_arrayPush_js__WEBPACK_IMPORTED_MODULE_15__["default"])([value], args));
      return (isTaker && chainAll) ? result[0] : result;
    };

    if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
      // Avoid lazy use if the iteratee has a "length" value other than `1`.
      isLazy = useLazy = false;
    }
    var chainAll = this.__chain__,
        isHybrid = !!this.__actions__.length,
        isUnwrapped = retUnwrapped && !chainAll,
        onlyLazy = isLazy && !isHybrid;

    if (!retUnwrapped && useLazy) {
      value = onlyLazy ? value : new _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"](this);
      var result = func.apply(value, args);
      result.__actions__.push({ 'func': _thru_js__WEBPACK_IMPORTED_MODULE_33__["default"], 'args': [interceptor], 'thisArg': undefined });
      return new _LodashWrapper_js__WEBPACK_IMPORTED_MODULE_12__["default"](result, chainAll);
    }
    if (isUnwrapped && onlyLazy) {
      return func.apply(this, args);
    }
    result = this.thru(interceptor);
    return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
  };
});

// Add `Array` methods to `lodash.prototype`.
Object(_arrayEach_js__WEBPACK_IMPORTED_MODULE_14__["default"])(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
  var func = arrayProto[methodName],
      chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
      retUnwrapped = /^(?:pop|shift)$/.test(methodName);

  _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype[methodName] = function() {
    var args = arguments;
    if (retUnwrapped && !this.__chain__) {
      var value = this.value();
      return func.apply(Object(_isArray_js__WEBPACK_IMPORTED_MODULE_23__["default"])(value) ? value : [], args);
    }
    return this[chainName](function(value) {
      return func.apply(Object(_isArray_js__WEBPACK_IMPORTED_MODULE_23__["default"])(value) ? value : [], args);
    });
  };
});

// Map minified method names to their real names.
Object(_baseForOwn_js__WEBPACK_IMPORTED_MODULE_16__["default"])(_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype, function(func, methodName) {
  var lodashFunc = _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"][methodName];
  if (lodashFunc) {
    var key = lodashFunc.name + '';
    if (!hasOwnProperty.call(_realNames_js__WEBPACK_IMPORTED_MODULE_32__["default"], key)) {
      _realNames_js__WEBPACK_IMPORTED_MODULE_32__["default"][key] = [];
    }
    _realNames_js__WEBPACK_IMPORTED_MODULE_32__["default"][key].push({ 'name': methodName, 'func': lodashFunc });
  }
});

_realNames_js__WEBPACK_IMPORTED_MODULE_32__["default"][Object(_createHybrid_js__WEBPACK_IMPORTED_MODULE_21__["default"])(undefined, WRAP_BIND_KEY_FLAG).name] = [{
  'name': 'wrapper',
  'func': undefined
}];

// Add methods to `LazyWrapper`.
_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.clone = _lazyClone_js__WEBPACK_IMPORTED_MODULE_27__["default"];
_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.reverse = _lazyReverse_js__WEBPACK_IMPORTED_MODULE_28__["default"];
_LazyWrapper_js__WEBPACK_IMPORTED_MODULE_11__["default"].prototype.value = _lazyValue_js__WEBPACK_IMPORTED_MODULE_29__["default"];

// Add chain sequence methods to the `lodash` wrapper.
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.at = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].at;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.chain = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].wrapperChain;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.commit = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].commit;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.next = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].next;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.plant = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].plant;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.reverse = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].reverse;
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.toJSON = _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.valueOf = _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.value = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].value;

// Add lazy aliases.
_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.first = _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype.head;

if (symIterator) {
  _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"].prototype[symIterator] = _seq_js__WEBPACK_IMPORTED_MODULE_8__["default"].toIterator;
}

/* harmony default export */ __webpack_exports__["default"] = (_wrapperLodash_js__WEBPACK_IMPORTED_MODULE_35__["default"]);


/***/ }),
/* 646 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _chunk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(212);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chunk", function() { return _chunk_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _compact_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(256);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compact", function() { return _compact_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(257);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _concat_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _difference_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(316);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "difference", function() { return _difference_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _differenceBy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(319);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceBy", function() { return _differenceBy_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _differenceWith_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(321);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceWith", function() { return _differenceWith_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _drop_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(323);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drop", function() { return _drop_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _dropRight_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(324);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dropRight", function() { return _dropRight_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _dropRightWhile_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(325);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dropRightWhile", function() { return _dropRightWhile_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _dropWhile_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(327);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dropWhile", function() { return _dropWhile_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _fill_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(353);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fill", function() { return _fill_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _findIndex_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(360);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return _findIndex_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _findLastIndex_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(364);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findLastIndex", function() { return _findLastIndex_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _first_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(366);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "first", function() { return _first_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _flatten_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(177);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return _flatten_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _flattenDeep_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(373);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flattenDeep", function() { return _flattenDeep_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _flattenDepth_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(374);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flattenDepth", function() { return _flattenDepth_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _fromPairs_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(384);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromPairs", function() { return _fromPairs_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _head_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(367);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "head", function() { return _head_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _indexOf_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(401);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexOf", function() { return _indexOf_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _initial_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(402);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "initial", function() { return _initial_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _intersection_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(403);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersection", function() { return _intersection_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _intersectionBy_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(406);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectionBy", function() { return _intersectionBy_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _intersectionWith_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(407);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectionWith", function() { return _intersectionWith_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _join_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(442);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "join", function() { return _join_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(320);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "last", function() { return _last_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _lastIndexOf_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(445);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastIndexOf", function() { return _lastIndexOf_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _nth_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(474);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nth", function() { return _nth_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _pull_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(512);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pull", function() { return _pull_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _pullAll_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(513);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pullAll", function() { return _pullAll_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _pullAllBy_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(516);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pullAllBy", function() { return _pullAllBy_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _pullAllWith_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(517);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pullAllWith", function() { return _pullAllWith_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _pullAt_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(518);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pullAt", function() { return _pullAt_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(532);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return _remove_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _reverse_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(537);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reverse", function() { return _reverse_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _slice_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(552);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return _slice_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _sortedIndex_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(557);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedIndex", function() { return _sortedIndex_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _sortedIndexBy_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(560);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedIndexBy", function() { return _sortedIndexBy_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _sortedIndexOf_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(561);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedIndexOf", function() { return _sortedIndexOf_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _sortedLastIndex_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(562);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedLastIndex", function() { return _sortedLastIndex_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _sortedLastIndexBy_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(563);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedLastIndexBy", function() { return _sortedLastIndexBy_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _sortedLastIndexOf_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(564);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedLastIndexOf", function() { return _sortedLastIndexOf_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _sortedUniq_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(565);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedUniq", function() { return _sortedUniq_js__WEBPACK_IMPORTED_MODULE_42__["default"]; });

/* harmony import */ var _sortedUniqBy_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(567);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedUniqBy", function() { return _sortedUniqBy_js__WEBPACK_IMPORTED_MODULE_43__["default"]; });

/* harmony import */ var _tail_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(578);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tail", function() { return _tail_js__WEBPACK_IMPORTED_MODULE_44__["default"]; });

/* harmony import */ var _take_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(579);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "take", function() { return _take_js__WEBPACK_IMPORTED_MODULE_45__["default"]; });

/* harmony import */ var _takeRight_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(580);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeRight", function() { return _takeRight_js__WEBPACK_IMPORTED_MODULE_46__["default"]; });

/* harmony import */ var _takeRightWhile_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(581);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeRightWhile", function() { return _takeRightWhile_js__WEBPACK_IMPORTED_MODULE_47__["default"]; });

/* harmony import */ var _takeWhile_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(582);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return _takeWhile_js__WEBPACK_IMPORTED_MODULE_48__["default"]; });

/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(612);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "union", function() { return _union_js__WEBPACK_IMPORTED_MODULE_49__["default"]; });

/* harmony import */ var _unionBy_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(615);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unionBy", function() { return _unionBy_js__WEBPACK_IMPORTED_MODULE_50__["default"]; });

/* harmony import */ var _unionWith_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(616);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unionWith", function() { return _unionWith_js__WEBPACK_IMPORTED_MODULE_51__["default"]; });

/* harmony import */ var _uniq_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(617);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniq", function() { return _uniq_js__WEBPACK_IMPORTED_MODULE_52__["default"]; });

/* harmony import */ var _uniqBy_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(618);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqBy", function() { return _uniqBy_js__WEBPACK_IMPORTED_MODULE_53__["default"]; });

/* harmony import */ var _uniqWith_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(619);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqWith", function() { return _uniqWith_js__WEBPACK_IMPORTED_MODULE_54__["default"]; });

/* harmony import */ var _unzip_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(622);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unzip", function() { return _unzip_js__WEBPACK_IMPORTED_MODULE_55__["default"]; });

/* harmony import */ var _unzipWith_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(623);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unzipWith", function() { return _unzipWith_js__WEBPACK_IMPORTED_MODULE_56__["default"]; });

/* harmony import */ var _without_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(631);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "without", function() { return _without_js__WEBPACK_IMPORTED_MODULE_57__["default"]; });

/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(636);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xor", function() { return _xor_js__WEBPACK_IMPORTED_MODULE_58__["default"]; });

/* harmony import */ var _xorBy_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(638);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xorBy", function() { return _xorBy_js__WEBPACK_IMPORTED_MODULE_59__["default"]; });

/* harmony import */ var _xorWith_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(639);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xorWith", function() { return _xorWith_js__WEBPACK_IMPORTED_MODULE_60__["default"]; });

/* harmony import */ var _zip_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(640);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _zip_js__WEBPACK_IMPORTED_MODULE_61__["default"]; });

/* harmony import */ var _zipObject_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(641);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipObject", function() { return _zipObject_js__WEBPACK_IMPORTED_MODULE_62__["default"]; });

/* harmony import */ var _zipObjectDeep_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(643);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipObjectDeep", function() { return _zipObjectDeep_js__WEBPACK_IMPORTED_MODULE_63__["default"]; });

/* harmony import */ var _zipWith_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(644);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipWith", function() { return _zipWith_js__WEBPACK_IMPORTED_MODULE_64__["default"]; });

/* harmony import */ var _array_default_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(647);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _array_default_js__WEBPACK_IMPORTED_MODULE_65__["default"]; });





































































/***/ }),
/* 647 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _chunk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(212);
/* harmony import */ var _compact_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(256);
/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(257);
/* harmony import */ var _difference_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(316);
/* harmony import */ var _differenceBy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(319);
/* harmony import */ var _differenceWith_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(321);
/* harmony import */ var _drop_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(323);
/* harmony import */ var _dropRight_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(324);
/* harmony import */ var _dropRightWhile_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(325);
/* harmony import */ var _dropWhile_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(327);
/* harmony import */ var _fill_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(353);
/* harmony import */ var _findIndex_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(360);
/* harmony import */ var _findLastIndex_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(364);
/* harmony import */ var _first_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(366);
/* harmony import */ var _flatten_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(177);
/* harmony import */ var _flattenDeep_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(373);
/* harmony import */ var _flattenDepth_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(374);
/* harmony import */ var _fromPairs_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(384);
/* harmony import */ var _head_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(367);
/* harmony import */ var _indexOf_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(401);
/* harmony import */ var _initial_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(402);
/* harmony import */ var _intersection_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(403);
/* harmony import */ var _intersectionBy_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(406);
/* harmony import */ var _intersectionWith_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(407);
/* harmony import */ var _join_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(442);
/* harmony import */ var _last_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(320);
/* harmony import */ var _lastIndexOf_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(445);
/* harmony import */ var _nth_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(474);
/* harmony import */ var _pull_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(512);
/* harmony import */ var _pullAll_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(513);
/* harmony import */ var _pullAllBy_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(516);
/* harmony import */ var _pullAllWith_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(517);
/* harmony import */ var _pullAt_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(518);
/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(532);
/* harmony import */ var _reverse_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(537);
/* harmony import */ var _slice_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(552);
/* harmony import */ var _sortedIndex_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(557);
/* harmony import */ var _sortedIndexBy_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(560);
/* harmony import */ var _sortedIndexOf_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(561);
/* harmony import */ var _sortedLastIndex_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(562);
/* harmony import */ var _sortedLastIndexBy_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(563);
/* harmony import */ var _sortedLastIndexOf_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(564);
/* harmony import */ var _sortedUniq_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(565);
/* harmony import */ var _sortedUniqBy_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(567);
/* harmony import */ var _tail_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(578);
/* harmony import */ var _take_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(579);
/* harmony import */ var _takeRight_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(580);
/* harmony import */ var _takeRightWhile_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(581);
/* harmony import */ var _takeWhile_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(582);
/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(612);
/* harmony import */ var _unionBy_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(615);
/* harmony import */ var _unionWith_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(616);
/* harmony import */ var _uniq_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(617);
/* harmony import */ var _uniqBy_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(618);
/* harmony import */ var _uniqWith_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(619);
/* harmony import */ var _unzip_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(622);
/* harmony import */ var _unzipWith_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(623);
/* harmony import */ var _without_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(631);
/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(636);
/* harmony import */ var _xorBy_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(638);
/* harmony import */ var _xorWith_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(639);
/* harmony import */ var _zip_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(640);
/* harmony import */ var _zipObject_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(641);
/* harmony import */ var _zipObjectDeep_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(643);
/* harmony import */ var _zipWith_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(644);


































































/* harmony default export */ __webpack_exports__["default"] = ({
  chunk: _chunk_js__WEBPACK_IMPORTED_MODULE_0__["default"], compact: _compact_js__WEBPACK_IMPORTED_MODULE_1__["default"], concat: _concat_js__WEBPACK_IMPORTED_MODULE_2__["default"], difference: _difference_js__WEBPACK_IMPORTED_MODULE_3__["default"], differenceBy: _differenceBy_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  differenceWith: _differenceWith_js__WEBPACK_IMPORTED_MODULE_5__["default"], drop: _drop_js__WEBPACK_IMPORTED_MODULE_6__["default"], dropRight: _dropRight_js__WEBPACK_IMPORTED_MODULE_7__["default"], dropRightWhile: _dropRightWhile_js__WEBPACK_IMPORTED_MODULE_8__["default"], dropWhile: _dropWhile_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  fill: _fill_js__WEBPACK_IMPORTED_MODULE_10__["default"], findIndex: _findIndex_js__WEBPACK_IMPORTED_MODULE_11__["default"], findLastIndex: _findLastIndex_js__WEBPACK_IMPORTED_MODULE_12__["default"], first: _first_js__WEBPACK_IMPORTED_MODULE_13__["default"], flatten: _flatten_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  flattenDeep: _flattenDeep_js__WEBPACK_IMPORTED_MODULE_15__["default"], flattenDepth: _flattenDepth_js__WEBPACK_IMPORTED_MODULE_16__["default"], fromPairs: _fromPairs_js__WEBPACK_IMPORTED_MODULE_17__["default"], head: _head_js__WEBPACK_IMPORTED_MODULE_18__["default"], indexOf: _indexOf_js__WEBPACK_IMPORTED_MODULE_19__["default"],
  initial: _initial_js__WEBPACK_IMPORTED_MODULE_20__["default"], intersection: _intersection_js__WEBPACK_IMPORTED_MODULE_21__["default"], intersectionBy: _intersectionBy_js__WEBPACK_IMPORTED_MODULE_22__["default"], intersectionWith: _intersectionWith_js__WEBPACK_IMPORTED_MODULE_23__["default"], join: _join_js__WEBPACK_IMPORTED_MODULE_24__["default"],
  last: _last_js__WEBPACK_IMPORTED_MODULE_25__["default"], lastIndexOf: _lastIndexOf_js__WEBPACK_IMPORTED_MODULE_26__["default"], nth: _nth_js__WEBPACK_IMPORTED_MODULE_27__["default"], pull: _pull_js__WEBPACK_IMPORTED_MODULE_28__["default"], pullAll: _pullAll_js__WEBPACK_IMPORTED_MODULE_29__["default"],
  pullAllBy: _pullAllBy_js__WEBPACK_IMPORTED_MODULE_30__["default"], pullAllWith: _pullAllWith_js__WEBPACK_IMPORTED_MODULE_31__["default"], pullAt: _pullAt_js__WEBPACK_IMPORTED_MODULE_32__["default"], remove: _remove_js__WEBPACK_IMPORTED_MODULE_33__["default"], reverse: _reverse_js__WEBPACK_IMPORTED_MODULE_34__["default"],
  slice: _slice_js__WEBPACK_IMPORTED_MODULE_35__["default"], sortedIndex: _sortedIndex_js__WEBPACK_IMPORTED_MODULE_36__["default"], sortedIndexBy: _sortedIndexBy_js__WEBPACK_IMPORTED_MODULE_37__["default"], sortedIndexOf: _sortedIndexOf_js__WEBPACK_IMPORTED_MODULE_38__["default"], sortedLastIndex: _sortedLastIndex_js__WEBPACK_IMPORTED_MODULE_39__["default"],
  sortedLastIndexBy: _sortedLastIndexBy_js__WEBPACK_IMPORTED_MODULE_40__["default"], sortedLastIndexOf: _sortedLastIndexOf_js__WEBPACK_IMPORTED_MODULE_41__["default"], sortedUniq: _sortedUniq_js__WEBPACK_IMPORTED_MODULE_42__["default"], sortedUniqBy: _sortedUniqBy_js__WEBPACK_IMPORTED_MODULE_43__["default"], tail: _tail_js__WEBPACK_IMPORTED_MODULE_44__["default"],
  take: _take_js__WEBPACK_IMPORTED_MODULE_45__["default"], takeRight: _takeRight_js__WEBPACK_IMPORTED_MODULE_46__["default"], takeRightWhile: _takeRightWhile_js__WEBPACK_IMPORTED_MODULE_47__["default"], takeWhile: _takeWhile_js__WEBPACK_IMPORTED_MODULE_48__["default"], union: _union_js__WEBPACK_IMPORTED_MODULE_49__["default"],
  unionBy: _unionBy_js__WEBPACK_IMPORTED_MODULE_50__["default"], unionWith: _unionWith_js__WEBPACK_IMPORTED_MODULE_51__["default"], uniq: _uniq_js__WEBPACK_IMPORTED_MODULE_52__["default"], uniqBy: _uniqBy_js__WEBPACK_IMPORTED_MODULE_53__["default"], uniqWith: _uniqWith_js__WEBPACK_IMPORTED_MODULE_54__["default"],
  unzip: _unzip_js__WEBPACK_IMPORTED_MODULE_55__["default"], unzipWith: _unzipWith_js__WEBPACK_IMPORTED_MODULE_56__["default"], without: _without_js__WEBPACK_IMPORTED_MODULE_57__["default"], xor: _xor_js__WEBPACK_IMPORTED_MODULE_58__["default"], xorBy: _xorBy_js__WEBPACK_IMPORTED_MODULE_59__["default"],
  xorWith: _xorWith_js__WEBPACK_IMPORTED_MODULE_60__["default"], zip: _zip_js__WEBPACK_IMPORTED_MODULE_61__["default"], zipObject: _zipObject_js__WEBPACK_IMPORTED_MODULE_62__["default"], zipObjectDeep: _zipObjectDeep_js__WEBPACK_IMPORTED_MODULE_63__["default"], zipWith: _zipWith_js__WEBPACK_IMPORTED_MODULE_64__["default"]
});


/***/ }),
/* 648 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _countBy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(288);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "countBy", function() { return _countBy_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _each_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(328);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "each", function() { return _each_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _eachRight_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(331);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachRight", function() { return _eachRight_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _every_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(348);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "every", function() { return _every_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(356);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _filter_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _find_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(358);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "find", function() { return _find_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _findLast_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(363);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findLast", function() { return _findLast_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _flatMap_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(368);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return _flatMap_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _flatMapDeep_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(371);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMapDeep", function() { return _flatMapDeep_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _flatMapDepth_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(372);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMapDepth", function() { return _flatMapDepth_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _forEach_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(329);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return _forEach_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _forEachRight_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(332);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEachRight", function() { return _forEachRight_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _groupBy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(388);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return _groupBy_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _includes_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(397);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "includes", function() { return _includes_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _invokeMap_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(415);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invokeMap", function() { return _invokeMap_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _keyBy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(444);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keyBy", function() { return _keyBy_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(369);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _map_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _orderBy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(485);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "orderBy", function() { return _orderBy_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _partition_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(507);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _partition_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _reduce_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(527);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return _reduce_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _reduceRight_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(529);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduceRight", function() { return _reduceRight_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _reject_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(531);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reject", function() { return _reject_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _sample_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(539);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return _sample_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _sampleSize_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(542);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sampleSize", function() { return _sampleSize_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _shuffle_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(548);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _shuffle_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(551);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "size", function() { return _size_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _some_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(554);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "some", function() { return _some_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _sortBy_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(556);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortBy", function() { return _sortBy_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _collection_default_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(649);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _collection_default_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });
































/***/ }),
/* 649 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _countBy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(288);
/* harmony import */ var _each_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(328);
/* harmony import */ var _eachRight_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(331);
/* harmony import */ var _every_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(348);
/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(356);
/* harmony import */ var _find_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(358);
/* harmony import */ var _findLast_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(363);
/* harmony import */ var _flatMap_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(368);
/* harmony import */ var _flatMapDeep_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(371);
/* harmony import */ var _flatMapDepth_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(372);
/* harmony import */ var _forEach_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(329);
/* harmony import */ var _forEachRight_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(332);
/* harmony import */ var _groupBy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(388);
/* harmony import */ var _includes_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(397);
/* harmony import */ var _invokeMap_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(415);
/* harmony import */ var _keyBy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(444);
/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(369);
/* harmony import */ var _orderBy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(485);
/* harmony import */ var _partition_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(507);
/* harmony import */ var _reduce_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(527);
/* harmony import */ var _reduceRight_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(529);
/* harmony import */ var _reject_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(531);
/* harmony import */ var _sample_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(539);
/* harmony import */ var _sampleSize_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(542);
/* harmony import */ var _shuffle_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(548);
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(551);
/* harmony import */ var _some_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(554);
/* harmony import */ var _sortBy_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(556);





























/* harmony default export */ __webpack_exports__["default"] = ({
  countBy: _countBy_js__WEBPACK_IMPORTED_MODULE_0__["default"], each: _each_js__WEBPACK_IMPORTED_MODULE_1__["default"], eachRight: _eachRight_js__WEBPACK_IMPORTED_MODULE_2__["default"], every: _every_js__WEBPACK_IMPORTED_MODULE_3__["default"], filter: _filter_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  find: _find_js__WEBPACK_IMPORTED_MODULE_5__["default"], findLast: _findLast_js__WEBPACK_IMPORTED_MODULE_6__["default"], flatMap: _flatMap_js__WEBPACK_IMPORTED_MODULE_7__["default"], flatMapDeep: _flatMapDeep_js__WEBPACK_IMPORTED_MODULE_8__["default"], flatMapDepth: _flatMapDepth_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  forEach: _forEach_js__WEBPACK_IMPORTED_MODULE_10__["default"], forEachRight: _forEachRight_js__WEBPACK_IMPORTED_MODULE_11__["default"], groupBy: _groupBy_js__WEBPACK_IMPORTED_MODULE_12__["default"], includes: _includes_js__WEBPACK_IMPORTED_MODULE_13__["default"], invokeMap: _invokeMap_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  keyBy: _keyBy_js__WEBPACK_IMPORTED_MODULE_15__["default"], map: _map_js__WEBPACK_IMPORTED_MODULE_16__["default"], orderBy: _orderBy_js__WEBPACK_IMPORTED_MODULE_17__["default"], partition: _partition_js__WEBPACK_IMPORTED_MODULE_18__["default"], reduce: _reduce_js__WEBPACK_IMPORTED_MODULE_19__["default"],
  reduceRight: _reduceRight_js__WEBPACK_IMPORTED_MODULE_20__["default"], reject: _reject_js__WEBPACK_IMPORTED_MODULE_21__["default"], sample: _sample_js__WEBPACK_IMPORTED_MODULE_22__["default"], sampleSize: _sampleSize_js__WEBPACK_IMPORTED_MODULE_23__["default"], shuffle: _shuffle_js__WEBPACK_IMPORTED_MODULE_24__["default"],
  size: _size_js__WEBPACK_IMPORTED_MODULE_25__["default"], some: _some_js__WEBPACK_IMPORTED_MODULE_26__["default"], sortBy: _sortBy_js__WEBPACK_IMPORTED_MODULE_27__["default"]
});


/***/ }),
/* 650 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(301);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "now", function() { return _now_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _date_default_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(651);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _date_default_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });





/***/ }),
/* 651 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(301);


/* harmony default export */ __webpack_exports__["default"] = ({
  now: _now_js__WEBPACK_IMPORTED_MODULE_0__["default"]
});


/***/ }),
/* 652 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _after_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "after", function() { return _after_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _ary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(53);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ary", function() { return _ary_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _before_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(185);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "before", function() { return _before_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _bind_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(186);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bind", function() { return _bind_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _bindKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(188);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindKey", function() { return _bindKey_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _curry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(298);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curry", function() { return _curry_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _curryRight_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(299);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curryRight", function() { return _curryRight_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(300);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _debounce_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _defer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(313);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return _defer_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(315);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return _delay_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _flip_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(375);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flip", function() { return _flip_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(150);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "memoize", function() { return _memoize_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _negate_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(470);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return _negate_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _once_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(484);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "once", function() { return _once_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _overArgs_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(492);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "overArgs", function() { return _overArgs_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _partial_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(505);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partial", function() { return _partial_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _partialRight_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(506);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partialRight", function() { return _partialRight_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _rearg_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(526);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rearg", function() { return _rearg_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _rest_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(535);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rest", function() { return _rest_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _spread_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(569);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "spread", function() { return _spread_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(591);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return _throttle_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _unary_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(609);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unary", function() { return _unary_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _wrap_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(632);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return _wrap_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _function_default_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(653);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _function_default_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });



























/***/ }),
/* 653 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _after_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48);
/* harmony import */ var _ary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(53);
/* harmony import */ var _before_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(185);
/* harmony import */ var _bind_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(186);
/* harmony import */ var _bindKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(188);
/* harmony import */ var _curry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(298);
/* harmony import */ var _curryRight_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(299);
/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(300);
/* harmony import */ var _defer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(313);
/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(315);
/* harmony import */ var _flip_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(375);
/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(150);
/* harmony import */ var _negate_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(470);
/* harmony import */ var _once_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(484);
/* harmony import */ var _overArgs_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(492);
/* harmony import */ var _partial_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(505);
/* harmony import */ var _partialRight_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(506);
/* harmony import */ var _rearg_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(526);
/* harmony import */ var _rest_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(535);
/* harmony import */ var _spread_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(569);
/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(591);
/* harmony import */ var _unary_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(609);
/* harmony import */ var _wrap_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(632);
























/* harmony default export */ __webpack_exports__["default"] = ({
  after: _after_js__WEBPACK_IMPORTED_MODULE_0__["default"], ary: _ary_js__WEBPACK_IMPORTED_MODULE_1__["default"], before: _before_js__WEBPACK_IMPORTED_MODULE_2__["default"], bind: _bind_js__WEBPACK_IMPORTED_MODULE_3__["default"], bindKey: _bindKey_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  curry: _curry_js__WEBPACK_IMPORTED_MODULE_5__["default"], curryRight: _curryRight_js__WEBPACK_IMPORTED_MODULE_6__["default"], debounce: _debounce_js__WEBPACK_IMPORTED_MODULE_7__["default"], defer: _defer_js__WEBPACK_IMPORTED_MODULE_8__["default"], delay: _delay_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  flip: _flip_js__WEBPACK_IMPORTED_MODULE_10__["default"], memoize: _memoize_js__WEBPACK_IMPORTED_MODULE_11__["default"], negate: _negate_js__WEBPACK_IMPORTED_MODULE_12__["default"], once: _once_js__WEBPACK_IMPORTED_MODULE_13__["default"], overArgs: _overArgs_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  partial: _partial_js__WEBPACK_IMPORTED_MODULE_15__["default"], partialRight: _partialRight_js__WEBPACK_IMPORTED_MODULE_16__["default"], rearg: _rearg_js__WEBPACK_IMPORTED_MODULE_17__["default"], rest: _rest_js__WEBPACK_IMPORTED_MODULE_18__["default"], spread: _spread_js__WEBPACK_IMPORTED_MODULE_19__["default"],
  throttle: _throttle_js__WEBPACK_IMPORTED_MODULE_20__["default"], unary: _unary_js__WEBPACK_IMPORTED_MODULE_21__["default"], wrap: _wrap_js__WEBPACK_IMPORTED_MODULE_22__["default"]
});


/***/ }),
/* 654 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _castArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(208);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "castArray", function() { return _castArray_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _clone_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(215);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return _clone_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _cloneDeep_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(252);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneDeep", function() { return _cloneDeep_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _cloneDeepWith_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(253);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneDeepWith", function() { return _cloneDeepWith_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _cloneWith_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(254);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneWith", function() { return _cloneWith_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _conformsTo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(287);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conformsTo", function() { return _conformsTo_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(112);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eq", function() { return _eq_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _gt_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(389);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gt", function() { return _gt_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _gte_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(392);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gte", function() { return _gte_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(124);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArguments", function() { return _isArguments_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(47);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _isArray_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _isArrayBuffer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(416);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayBuffer", function() { return _isArrayBuffer_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(118);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return _isArrayLike_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(309);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayLikeObject", function() { return _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _isBoolean_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(418);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _isBoolean_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(126);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBuffer", function() { return _isBuffer_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _isDate_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(419);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return _isDate_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _isElement_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(421);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isElement", function() { return _isElement_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _isEmpty_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(422);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return _isEmpty_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _isEqual_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(423);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEqual", function() { return _isEqual_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _isEqualWith_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(424);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEqualWith", function() { return _isEqualWith_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _isError_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(182);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isError", function() { return _isError_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _isFinite_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(425);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFinite", function() { return _isFinite_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(61);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _isFunction_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _isInteger_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(426);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isInteger", function() { return _isInteger_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(119);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isLength", function() { return _isLength_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _isMap_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(248);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMap", function() { return _isMap_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _isMatch_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(427);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatch", function() { return _isMatch_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _isMatchWith_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(428);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatchWith", function() { return _isMatchWith_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _isNaN_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(429);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaN", function() { return _isNaN_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _isNative_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(431);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNative", function() { return _isNative_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _isNil_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(433);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNil", function() { return _isNil_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _isNull_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(434);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return _isNull_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _isNumber_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(430);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _isNumber_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(52);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _isObject_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(44);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObjectLike", function() { return _isObjectLike_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _isPlainObject_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(183);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPlainObject", function() { return _isPlainObject_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _isRegExp_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(435);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return _isRegExp_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _isSafeInteger_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(437);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSafeInteger", function() { return _isSafeInteger_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _isSet_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(250);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSet", function() { return _isSet_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _isString_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(398);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _isString_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(36);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSymbol", function() { return _isSymbol_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(129);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTypedArray", function() { return _isTypedArray_js__WEBPACK_IMPORTED_MODULE_42__["default"]; });

/* harmony import */ var _isUndefined_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(438);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return _isUndefined_js__WEBPACK_IMPORTED_MODULE_43__["default"]; });

/* harmony import */ var _isWeakMap_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(439);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWeakMap", function() { return _isWeakMap_js__WEBPACK_IMPORTED_MODULE_44__["default"]; });

/* harmony import */ var _isWeakSet_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(440);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWeakSet", function() { return _isWeakSet_js__WEBPACK_IMPORTED_MODULE_45__["default"]; });

/* harmony import */ var _lt_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(449);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lt", function() { return _lt_js__WEBPACK_IMPORTED_MODULE_46__["default"]; });

/* harmony import */ var _lte_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(451);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lte", function() { return _lte_js__WEBPACK_IMPORTED_MODULE_47__["default"]; });

/* harmony import */ var _toArray_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(472);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return _toArray_js__WEBPACK_IMPORTED_MODULE_48__["default"]; });

/* harmony import */ var _toFinite_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(50);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toFinite", function() { return _toFinite_js__WEBPACK_IMPORTED_MODULE_49__["default"]; });

/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(49);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toInteger", function() { return _toInteger_js__WEBPACK_IMPORTED_MODULE_50__["default"]; });

/* harmony import */ var _toLength_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(355);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toLength", function() { return _toLength_js__WEBPACK_IMPORTED_MODULE_51__["default"]; });

/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(51);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toNumber", function() { return _toNumber_js__WEBPACK_IMPORTED_MODULE_52__["default"]; });

/* harmony import */ var _toPlainObject_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(311);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPlainObject", function() { return _toPlainObject_js__WEBPACK_IMPORTED_MODULE_53__["default"]; });

/* harmony import */ var _toSafeInteger_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(600);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toSafeInteger", function() { return _toSafeInteger_js__WEBPACK_IMPORTED_MODULE_54__["default"]; });

/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(174);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toString", function() { return _toString_js__WEBPACK_IMPORTED_MODULE_55__["default"]; });

/* harmony import */ var _lang_default_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(655);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _lang_default_js__WEBPACK_IMPORTED_MODULE_56__["default"]; });




























































/***/ }),
/* 655 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _castArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(208);
/* harmony import */ var _clone_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(215);
/* harmony import */ var _cloneDeep_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(252);
/* harmony import */ var _cloneDeepWith_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(253);
/* harmony import */ var _cloneWith_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(254);
/* harmony import */ var _conformsTo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(287);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(112);
/* harmony import */ var _gt_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(389);
/* harmony import */ var _gte_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(392);
/* harmony import */ var _isArguments_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(124);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(47);
/* harmony import */ var _isArrayBuffer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(416);
/* harmony import */ var _isArrayLike_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(118);
/* harmony import */ var _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(309);
/* harmony import */ var _isBoolean_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(418);
/* harmony import */ var _isBuffer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(126);
/* harmony import */ var _isDate_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(419);
/* harmony import */ var _isElement_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(421);
/* harmony import */ var _isEmpty_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(422);
/* harmony import */ var _isEqual_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(423);
/* harmony import */ var _isEqualWith_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(424);
/* harmony import */ var _isError_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(182);
/* harmony import */ var _isFinite_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(425);
/* harmony import */ var _isFunction_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(61);
/* harmony import */ var _isInteger_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(426);
/* harmony import */ var _isLength_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(119);
/* harmony import */ var _isMap_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(248);
/* harmony import */ var _isMatch_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(427);
/* harmony import */ var _isMatchWith_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(428);
/* harmony import */ var _isNaN_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(429);
/* harmony import */ var _isNative_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(431);
/* harmony import */ var _isNil_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(433);
/* harmony import */ var _isNull_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(434);
/* harmony import */ var _isNumber_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(430);
/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(52);
/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(44);
/* harmony import */ var _isPlainObject_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(183);
/* harmony import */ var _isRegExp_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(435);
/* harmony import */ var _isSafeInteger_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(437);
/* harmony import */ var _isSet_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(250);
/* harmony import */ var _isString_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(398);
/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(36);
/* harmony import */ var _isTypedArray_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(129);
/* harmony import */ var _isUndefined_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(438);
/* harmony import */ var _isWeakMap_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(439);
/* harmony import */ var _isWeakSet_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(440);
/* harmony import */ var _lt_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(449);
/* harmony import */ var _lte_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(451);
/* harmony import */ var _toArray_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(472);
/* harmony import */ var _toFinite_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(50);
/* harmony import */ var _toInteger_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(49);
/* harmony import */ var _toLength_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(355);
/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(51);
/* harmony import */ var _toPlainObject_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(311);
/* harmony import */ var _toSafeInteger_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(600);
/* harmony import */ var _toString_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(174);

























































/* harmony default export */ __webpack_exports__["default"] = ({
  castArray: _castArray_js__WEBPACK_IMPORTED_MODULE_0__["default"], clone: _clone_js__WEBPACK_IMPORTED_MODULE_1__["default"], cloneDeep: _cloneDeep_js__WEBPACK_IMPORTED_MODULE_2__["default"], cloneDeepWith: _cloneDeepWith_js__WEBPACK_IMPORTED_MODULE_3__["default"], cloneWith: _cloneWith_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  conformsTo: _conformsTo_js__WEBPACK_IMPORTED_MODULE_5__["default"], eq: _eq_js__WEBPACK_IMPORTED_MODULE_6__["default"], gt: _gt_js__WEBPACK_IMPORTED_MODULE_7__["default"], gte: _gte_js__WEBPACK_IMPORTED_MODULE_8__["default"], isArguments: _isArguments_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  isArray: _isArray_js__WEBPACK_IMPORTED_MODULE_10__["default"], isArrayBuffer: _isArrayBuffer_js__WEBPACK_IMPORTED_MODULE_11__["default"], isArrayLike: _isArrayLike_js__WEBPACK_IMPORTED_MODULE_12__["default"], isArrayLikeObject: _isArrayLikeObject_js__WEBPACK_IMPORTED_MODULE_13__["default"], isBoolean: _isBoolean_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  isBuffer: _isBuffer_js__WEBPACK_IMPORTED_MODULE_15__["default"], isDate: _isDate_js__WEBPACK_IMPORTED_MODULE_16__["default"], isElement: _isElement_js__WEBPACK_IMPORTED_MODULE_17__["default"], isEmpty: _isEmpty_js__WEBPACK_IMPORTED_MODULE_18__["default"], isEqual: _isEqual_js__WEBPACK_IMPORTED_MODULE_19__["default"],
  isEqualWith: _isEqualWith_js__WEBPACK_IMPORTED_MODULE_20__["default"], isError: _isError_js__WEBPACK_IMPORTED_MODULE_21__["default"], isFinite: _isFinite_js__WEBPACK_IMPORTED_MODULE_22__["default"], isFunction: _isFunction_js__WEBPACK_IMPORTED_MODULE_23__["default"], isInteger: _isInteger_js__WEBPACK_IMPORTED_MODULE_24__["default"],
  isLength: _isLength_js__WEBPACK_IMPORTED_MODULE_25__["default"], isMap: _isMap_js__WEBPACK_IMPORTED_MODULE_26__["default"], isMatch: _isMatch_js__WEBPACK_IMPORTED_MODULE_27__["default"], isMatchWith: _isMatchWith_js__WEBPACK_IMPORTED_MODULE_28__["default"], isNaN: _isNaN_js__WEBPACK_IMPORTED_MODULE_29__["default"],
  isNative: _isNative_js__WEBPACK_IMPORTED_MODULE_30__["default"], isNil: _isNil_js__WEBPACK_IMPORTED_MODULE_31__["default"], isNull: _isNull_js__WEBPACK_IMPORTED_MODULE_32__["default"], isNumber: _isNumber_js__WEBPACK_IMPORTED_MODULE_33__["default"], isObject: _isObject_js__WEBPACK_IMPORTED_MODULE_34__["default"],
  isObjectLike: _isObjectLike_js__WEBPACK_IMPORTED_MODULE_35__["default"], isPlainObject: _isPlainObject_js__WEBPACK_IMPORTED_MODULE_36__["default"], isRegExp: _isRegExp_js__WEBPACK_IMPORTED_MODULE_37__["default"], isSafeInteger: _isSafeInteger_js__WEBPACK_IMPORTED_MODULE_38__["default"], isSet: _isSet_js__WEBPACK_IMPORTED_MODULE_39__["default"],
  isString: _isString_js__WEBPACK_IMPORTED_MODULE_40__["default"], isSymbol: _isSymbol_js__WEBPACK_IMPORTED_MODULE_41__["default"], isTypedArray: _isTypedArray_js__WEBPACK_IMPORTED_MODULE_42__["default"], isUndefined: _isUndefined_js__WEBPACK_IMPORTED_MODULE_43__["default"], isWeakMap: _isWeakMap_js__WEBPACK_IMPORTED_MODULE_44__["default"],
  isWeakSet: _isWeakSet_js__WEBPACK_IMPORTED_MODULE_45__["default"], lt: _lt_js__WEBPACK_IMPORTED_MODULE_46__["default"], lte: _lte_js__WEBPACK_IMPORTED_MODULE_47__["default"], toArray: _toArray_js__WEBPACK_IMPORTED_MODULE_48__["default"], toFinite: _toFinite_js__WEBPACK_IMPORTED_MODULE_49__["default"],
  toInteger: _toInteger_js__WEBPACK_IMPORTED_MODULE_50__["default"], toLength: _toLength_js__WEBPACK_IMPORTED_MODULE_51__["default"], toNumber: _toNumber_js__WEBPACK_IMPORTED_MODULE_52__["default"], toPlainObject: _toPlainObject_js__WEBPACK_IMPORTED_MODULE_53__["default"], toSafeInteger: _toSafeInteger_js__WEBPACK_IMPORTED_MODULE_54__["default"],
  toString: _toString_js__WEBPACK_IMPORTED_MODULE_55__["default"]
});


/***/ }),
/* 656 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _add_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "add", function() { return _add_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _ceil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(209);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return _ceil_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _divide_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(322);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return _divide_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _floor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(376);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return _floor_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(456);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _maxBy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(458);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxBy", function() { return _maxBy_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _mean_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(459);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _mean_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _meanBy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(462);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meanBy", function() { return _meanBy_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(466);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _minBy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(467);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minBy", function() { return _minBy_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _multiply_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(469);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return _multiply_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(538);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "round", function() { return _round_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _subtract_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(575);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return _subtract_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _sum_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(576);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _sum_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _sumBy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(577);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sumBy", function() { return _sumBy_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _math_default_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(657);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _math_default_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });



















/***/ }),
/* 657 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _add_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);
/* harmony import */ var _ceil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(209);
/* harmony import */ var _divide_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(322);
/* harmony import */ var _floor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(376);
/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(456);
/* harmony import */ var _maxBy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(458);
/* harmony import */ var _mean_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(459);
/* harmony import */ var _meanBy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(462);
/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(466);
/* harmony import */ var _minBy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(467);
/* harmony import */ var _multiply_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(469);
/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(538);
/* harmony import */ var _subtract_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(575);
/* harmony import */ var _sum_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(576);
/* harmony import */ var _sumBy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(577);
















/* harmony default export */ __webpack_exports__["default"] = ({
  add: _add_js__WEBPACK_IMPORTED_MODULE_0__["default"], ceil: _ceil_js__WEBPACK_IMPORTED_MODULE_1__["default"], divide: _divide_js__WEBPACK_IMPORTED_MODULE_2__["default"], floor: _floor_js__WEBPACK_IMPORTED_MODULE_3__["default"], max: _max_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  maxBy: _maxBy_js__WEBPACK_IMPORTED_MODULE_5__["default"], mean: _mean_js__WEBPACK_IMPORTED_MODULE_6__["default"], meanBy: _meanBy_js__WEBPACK_IMPORTED_MODULE_7__["default"], min: _min_js__WEBPACK_IMPORTED_MODULE_8__["default"], minBy: _minBy_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  multiply: _multiply_js__WEBPACK_IMPORTED_MODULE_10__["default"], round: _round_js__WEBPACK_IMPORTED_MODULE_11__["default"], subtract: _subtract_js__WEBPACK_IMPORTED_MODULE_12__["default"], sum: _sum_js__WEBPACK_IMPORTED_MODULE_13__["default"], sumBy: _sumBy_js__WEBPACK_IMPORTED_MODULE_14__["default"]
});


/***/ }),
/* 658 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _clamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(213);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clamp", function() { return _clamp_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _inRange_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(395);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inRange", function() { return _inRange_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(520);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "random", function() { return _random_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _number_default_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(659);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _number_default_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });







/***/ }),
/* 659 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _clamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(213);
/* harmony import */ var _inRange_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(395);
/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(520);




/* harmony default export */ __webpack_exports__["default"] = ({
  clamp: _clamp_js__WEBPACK_IMPORTED_MODULE_0__["default"], inRange: _inRange_js__WEBPACK_IMPORTED_MODULE_1__["default"], random: _random_js__WEBPACK_IMPORTED_MODULE_2__["default"]
});


/***/ }),
/* 660 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(109);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assign", function() { return _assign_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _assignIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(136);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assignIn", function() { return _assignIn_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _assignInWith_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(140);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assignInWith", function() { return _assignInWith_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _assignWith_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(141);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assignWith", function() { return _assignWith_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _at_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(142);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "at", function() { return _at_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _create_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(297);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _create_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(303);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaults", function() { return _defaults_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _defaultsDeep_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(304);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultsDeep", function() { return _defaultsDeep_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _entries_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(338);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return _entries_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _entriesIn_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(343);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entriesIn", function() { return _entriesIn_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _extend_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(351);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return _extend_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _extendWith_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(352);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extendWith", function() { return _extendWith_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _findKey_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(361);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findKey", function() { return _findKey_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _findLastKey_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(365);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findLastKey", function() { return _findLastKey_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _forIn_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(380);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forIn", function() { return _forIn_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _forInRight_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(381);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forInRight", function() { return _forInRight_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _forOwn_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(382);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forOwn", function() { return _forOwn_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _forOwnRight_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(383);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forOwnRight", function() { return _forOwnRight_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(385);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "functions", function() { return _functions_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _functionsIn_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(387);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "functionsIn", function() { return _functionsIn_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _get_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(144);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "get", function() { return _get_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(393);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "has", function() { return _has_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _hasIn_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(278);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasIn", function() { return _hasIn_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _invert_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(408);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return _invert_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _invertBy_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(411);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invertBy", function() { return _invertBy_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _invoke_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(412);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invoke", function() { return _invoke_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(121);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return _keys_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(137);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keysIn", function() { return _keysIn_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _mapKeys_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(452);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapKeys", function() { return _mapKeys_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _mapValues_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(453);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapValues", function() { return _mapValues_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(463);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _merge_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _mergeWith_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(312);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeWith", function() { return _mergeWith_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _omit_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(477);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "omit", function() { return _omit_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _omitBy_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(480);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "omitBy", function() { return _omitBy_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _pick_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(508);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return _pick_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _pickBy_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(481);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pickBy", function() { return _pickBy_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(536);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "result", function() { return _result_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(546);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "set", function() { return _set_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _setWith_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(547);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setWith", function() { return _setWith_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _toPairs_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(339);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPairs", function() { return _toPairs_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _toPairsIn_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(344);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPairsIn", function() { return _toPairsIn_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(602);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return _transform_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _unset_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(621);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unset", function() { return _unset_js__WEBPACK_IMPORTED_MODULE_42__["default"]; });

/* harmony import */ var _update_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(624);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "update", function() { return _update_js__WEBPACK_IMPORTED_MODULE_43__["default"]; });

/* harmony import */ var _updateWith_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(626);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "updateWith", function() { return _updateWith_js__WEBPACK_IMPORTED_MODULE_44__["default"]; });

/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(399);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return _values_js__WEBPACK_IMPORTED_MODULE_45__["default"]; });

/* harmony import */ var _valuesIn_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(630);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "valuesIn", function() { return _valuesIn_js__WEBPACK_IMPORTED_MODULE_46__["default"]; });

/* harmony import */ var _object_default_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(661);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _object_default_js__WEBPACK_IMPORTED_MODULE_47__["default"]; });



















































/***/ }),
/* 661 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(109);
/* harmony import */ var _assignIn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(136);
/* harmony import */ var _assignInWith_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(140);
/* harmony import */ var _assignWith_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(141);
/* harmony import */ var _at_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(142);
/* harmony import */ var _create_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(297);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(303);
/* harmony import */ var _defaultsDeep_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(304);
/* harmony import */ var _entries_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(338);
/* harmony import */ var _entriesIn_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(343);
/* harmony import */ var _extend_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(351);
/* harmony import */ var _extendWith_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(352);
/* harmony import */ var _findKey_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(361);
/* harmony import */ var _findLastKey_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(365);
/* harmony import */ var _forIn_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(380);
/* harmony import */ var _forInRight_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(381);
/* harmony import */ var _forOwn_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(382);
/* harmony import */ var _forOwnRight_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(383);
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(385);
/* harmony import */ var _functionsIn_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(387);
/* harmony import */ var _get_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(144);
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(393);
/* harmony import */ var _hasIn_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(278);
/* harmony import */ var _invert_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(408);
/* harmony import */ var _invertBy_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(411);
/* harmony import */ var _invoke_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(412);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(121);
/* harmony import */ var _keysIn_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(137);
/* harmony import */ var _mapKeys_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(452);
/* harmony import */ var _mapValues_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(453);
/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(463);
/* harmony import */ var _mergeWith_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(312);
/* harmony import */ var _omit_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(477);
/* harmony import */ var _omitBy_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(480);
/* harmony import */ var _pick_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(508);
/* harmony import */ var _pickBy_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(481);
/* harmony import */ var _result_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(536);
/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(546);
/* harmony import */ var _setWith_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(547);
/* harmony import */ var _toPairs_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(339);
/* harmony import */ var _toPairsIn_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(344);
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(602);
/* harmony import */ var _unset_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(621);
/* harmony import */ var _update_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(624);
/* harmony import */ var _updateWith_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(626);
/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(399);
/* harmony import */ var _valuesIn_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(630);
















































/* harmony default export */ __webpack_exports__["default"] = ({
  assign: _assign_js__WEBPACK_IMPORTED_MODULE_0__["default"], assignIn: _assignIn_js__WEBPACK_IMPORTED_MODULE_1__["default"], assignInWith: _assignInWith_js__WEBPACK_IMPORTED_MODULE_2__["default"], assignWith: _assignWith_js__WEBPACK_IMPORTED_MODULE_3__["default"], at: _at_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  create: _create_js__WEBPACK_IMPORTED_MODULE_5__["default"], defaults: _defaults_js__WEBPACK_IMPORTED_MODULE_6__["default"], defaultsDeep: _defaultsDeep_js__WEBPACK_IMPORTED_MODULE_7__["default"], entries: _entries_js__WEBPACK_IMPORTED_MODULE_8__["default"], entriesIn: _entriesIn_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  extend: _extend_js__WEBPACK_IMPORTED_MODULE_10__["default"], extendWith: _extendWith_js__WEBPACK_IMPORTED_MODULE_11__["default"], findKey: _findKey_js__WEBPACK_IMPORTED_MODULE_12__["default"], findLastKey: _findLastKey_js__WEBPACK_IMPORTED_MODULE_13__["default"], forIn: _forIn_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  forInRight: _forInRight_js__WEBPACK_IMPORTED_MODULE_15__["default"], forOwn: _forOwn_js__WEBPACK_IMPORTED_MODULE_16__["default"], forOwnRight: _forOwnRight_js__WEBPACK_IMPORTED_MODULE_17__["default"], functions: _functions_js__WEBPACK_IMPORTED_MODULE_18__["default"], functionsIn: _functionsIn_js__WEBPACK_IMPORTED_MODULE_19__["default"],
  get: _get_js__WEBPACK_IMPORTED_MODULE_20__["default"], has: _has_js__WEBPACK_IMPORTED_MODULE_21__["default"], hasIn: _hasIn_js__WEBPACK_IMPORTED_MODULE_22__["default"], invert: _invert_js__WEBPACK_IMPORTED_MODULE_23__["default"], invertBy: _invertBy_js__WEBPACK_IMPORTED_MODULE_24__["default"],
  invoke: _invoke_js__WEBPACK_IMPORTED_MODULE_25__["default"], keys: _keys_js__WEBPACK_IMPORTED_MODULE_26__["default"], keysIn: _keysIn_js__WEBPACK_IMPORTED_MODULE_27__["default"], mapKeys: _mapKeys_js__WEBPACK_IMPORTED_MODULE_28__["default"], mapValues: _mapValues_js__WEBPACK_IMPORTED_MODULE_29__["default"],
  merge: _merge_js__WEBPACK_IMPORTED_MODULE_30__["default"], mergeWith: _mergeWith_js__WEBPACK_IMPORTED_MODULE_31__["default"], omit: _omit_js__WEBPACK_IMPORTED_MODULE_32__["default"], omitBy: _omitBy_js__WEBPACK_IMPORTED_MODULE_33__["default"], pick: _pick_js__WEBPACK_IMPORTED_MODULE_34__["default"],
  pickBy: _pickBy_js__WEBPACK_IMPORTED_MODULE_35__["default"], result: _result_js__WEBPACK_IMPORTED_MODULE_36__["default"], set: _set_js__WEBPACK_IMPORTED_MODULE_37__["default"], setWith: _setWith_js__WEBPACK_IMPORTED_MODULE_38__["default"], toPairs: _toPairs_js__WEBPACK_IMPORTED_MODULE_39__["default"],
  toPairsIn: _toPairsIn_js__WEBPACK_IMPORTED_MODULE_40__["default"], transform: _transform_js__WEBPACK_IMPORTED_MODULE_41__["default"], unset: _unset_js__WEBPACK_IMPORTED_MODULE_42__["default"], update: _update_js__WEBPACK_IMPORTED_MODULE_43__["default"], updateWith: _updateWith_js__WEBPACK_IMPORTED_MODULE_44__["default"],
  values: _values_js__WEBPACK_IMPORTED_MODULE_45__["default"], valuesIn: _valuesIn_js__WEBPACK_IMPORTED_MODULE_46__["default"]
});


/***/ }),
/* 662 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wrapperAt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(633);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "at", function() { return _wrapperAt_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(211);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chain", function() { return _chain_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _commit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(255);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "commit", function() { return _commit_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(83);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lodash", function() { return _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _next_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(471);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "next", function() { return _next_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _plant_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(510);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "plant", function() { return _plant_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _wrapperReverse_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(635);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reverse", function() { return _wrapperReverse_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _tap_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(583);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return _tap_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _thru_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(592);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thru", function() { return _thru_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _toIterator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(594);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toIterator", function() { return _toIterator_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _toJSON_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(595);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toJSON", function() { return _toJSON_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _wrapperValue_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(596);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "value", function() { return _wrapperValue_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _valueOf_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(629);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "valueOf", function() { return _valueOf_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _wrapperChain_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(634);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperChain", function() { return _wrapperChain_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _seq_default_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(663);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _seq_default_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });


















/***/ }),
/* 663 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wrapperAt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(633);
/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(211);
/* harmony import */ var _commit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(255);
/* harmony import */ var _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(83);
/* harmony import */ var _next_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(471);
/* harmony import */ var _plant_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(510);
/* harmony import */ var _wrapperReverse_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(635);
/* harmony import */ var _tap_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(583);
/* harmony import */ var _thru_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(592);
/* harmony import */ var _toIterator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(594);
/* harmony import */ var _toJSON_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(595);
/* harmony import */ var _wrapperValue_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(596);
/* harmony import */ var _valueOf_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(629);
/* harmony import */ var _wrapperChain_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(634);















/* harmony default export */ __webpack_exports__["default"] = ({
  at: _wrapperAt_js__WEBPACK_IMPORTED_MODULE_0__["default"], chain: _chain_js__WEBPACK_IMPORTED_MODULE_1__["default"], commit: _commit_js__WEBPACK_IMPORTED_MODULE_2__["default"], lodash: _wrapperLodash_js__WEBPACK_IMPORTED_MODULE_3__["default"], next: _next_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  plant: _plant_js__WEBPACK_IMPORTED_MODULE_5__["default"], reverse: _wrapperReverse_js__WEBPACK_IMPORTED_MODULE_6__["default"], tap: _tap_js__WEBPACK_IMPORTED_MODULE_7__["default"], thru: _thru_js__WEBPACK_IMPORTED_MODULE_8__["default"], toIterator: _toIterator_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  toJSON: _toJSON_js__WEBPACK_IMPORTED_MODULE_10__["default"], value: _wrapperValue_js__WEBPACK_IMPORTED_MODULE_11__["default"], valueOf: _valueOf_js__WEBPACK_IMPORTED_MODULE_12__["default"], wrapperChain: _wrapperChain_js__WEBPACK_IMPORTED_MODULE_13__["default"]
});


/***/ }),
/* 664 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _camelCase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(189);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "camelCase", function() { return _camelCase_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _capitalize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(190);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "capitalize", function() { return _capitalize_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _deburr_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(201);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deburr", function() { return _deburr_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _endsWith_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(337);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endsWith", function() { return _endsWith_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _escape_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(345);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "escape", function() { return _escape_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _escapeRegExp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(347);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "escapeRegExp", function() { return _escapeRegExp_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _kebabCase_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(443);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kebabCase", function() { return _kebabCase_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _lowerCase_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(447);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lowerCase", function() { return _lowerCase_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _lowerFirst_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(448);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lowerFirst", function() { return _lowerFirst_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _pad_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(496);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pad", function() { return _pad_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _padEnd_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(502);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "padEnd", function() { return _padEnd_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _padStart_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(503);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "padStart", function() { return _padStart_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _parseInt_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(504);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseInt", function() { return _parseInt_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _repeat_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(533);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return _repeat_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _replace_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(534);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replace", function() { return _replace_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _snakeCase_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(553);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "snakeCase", function() { return _snakeCase_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _split_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(568);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "split", function() { return _split_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _startCase_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(570);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startCase", function() { return _startCase_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _startsWith_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(571);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startsWith", function() { return _startsWith_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(584);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "template", function() { return _template_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _templateSettings_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(588);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "templateSettings", function() { return _templateSettings_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _toLower_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(598);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toLower", function() { return _toLower_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _toUpper_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(601);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toUpper", function() { return _toUpper_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _trim_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(603);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trim", function() { return _trim_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _trimEnd_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(606);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trimEnd", function() { return _trimEnd_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _trimStart_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(607);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "trimStart", function() { return _trimStart_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _truncate_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(608);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truncate", function() { return _truncate_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _unescape_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(610);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unescape", function() { return _unescape_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _upperCase_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(627);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "upperCase", function() { return _upperCase_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _upperFirst_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(191);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "upperFirst", function() { return _upperFirst_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _words_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(204);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "words", function() { return _words_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _string_default_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(665);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _string_default_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });



































/***/ }),
/* 665 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _camelCase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(189);
/* harmony import */ var _capitalize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(190);
/* harmony import */ var _deburr_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(201);
/* harmony import */ var _endsWith_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(337);
/* harmony import */ var _escape_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(345);
/* harmony import */ var _escapeRegExp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(347);
/* harmony import */ var _kebabCase_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(443);
/* harmony import */ var _lowerCase_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(447);
/* harmony import */ var _lowerFirst_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(448);
/* harmony import */ var _pad_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(496);
/* harmony import */ var _padEnd_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(502);
/* harmony import */ var _padStart_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(503);
/* harmony import */ var _parseInt_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(504);
/* harmony import */ var _repeat_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(533);
/* harmony import */ var _replace_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(534);
/* harmony import */ var _snakeCase_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(553);
/* harmony import */ var _split_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(568);
/* harmony import */ var _startCase_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(570);
/* harmony import */ var _startsWith_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(571);
/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(584);
/* harmony import */ var _templateSettings_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(588);
/* harmony import */ var _toLower_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(598);
/* harmony import */ var _toUpper_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(601);
/* harmony import */ var _trim_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(603);
/* harmony import */ var _trimEnd_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(606);
/* harmony import */ var _trimStart_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(607);
/* harmony import */ var _truncate_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(608);
/* harmony import */ var _unescape_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(610);
/* harmony import */ var _upperCase_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(627);
/* harmony import */ var _upperFirst_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(191);
/* harmony import */ var _words_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(204);
































/* harmony default export */ __webpack_exports__["default"] = ({
  camelCase: _camelCase_js__WEBPACK_IMPORTED_MODULE_0__["default"], capitalize: _capitalize_js__WEBPACK_IMPORTED_MODULE_1__["default"], deburr: _deburr_js__WEBPACK_IMPORTED_MODULE_2__["default"], endsWith: _endsWith_js__WEBPACK_IMPORTED_MODULE_3__["default"], escape: _escape_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  escapeRegExp: _escapeRegExp_js__WEBPACK_IMPORTED_MODULE_5__["default"], kebabCase: _kebabCase_js__WEBPACK_IMPORTED_MODULE_6__["default"], lowerCase: _lowerCase_js__WEBPACK_IMPORTED_MODULE_7__["default"], lowerFirst: _lowerFirst_js__WEBPACK_IMPORTED_MODULE_8__["default"], pad: _pad_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  padEnd: _padEnd_js__WEBPACK_IMPORTED_MODULE_10__["default"], padStart: _padStart_js__WEBPACK_IMPORTED_MODULE_11__["default"], parseInt: _parseInt_js__WEBPACK_IMPORTED_MODULE_12__["default"], repeat: _repeat_js__WEBPACK_IMPORTED_MODULE_13__["default"], replace: _replace_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  snakeCase: _snakeCase_js__WEBPACK_IMPORTED_MODULE_15__["default"], split: _split_js__WEBPACK_IMPORTED_MODULE_16__["default"], startCase: _startCase_js__WEBPACK_IMPORTED_MODULE_17__["default"], startsWith: _startsWith_js__WEBPACK_IMPORTED_MODULE_18__["default"], template: _template_js__WEBPACK_IMPORTED_MODULE_19__["default"],
  templateSettings: _templateSettings_js__WEBPACK_IMPORTED_MODULE_20__["default"], toLower: _toLower_js__WEBPACK_IMPORTED_MODULE_21__["default"], toUpper: _toUpper_js__WEBPACK_IMPORTED_MODULE_22__["default"], trim: _trim_js__WEBPACK_IMPORTED_MODULE_23__["default"], trimEnd: _trimEnd_js__WEBPACK_IMPORTED_MODULE_24__["default"],
  trimStart: _trimStart_js__WEBPACK_IMPORTED_MODULE_25__["default"], truncate: _truncate_js__WEBPACK_IMPORTED_MODULE_26__["default"], unescape: _unescape_js__WEBPACK_IMPORTED_MODULE_27__["default"], upperCase: _upperCase_js__WEBPACK_IMPORTED_MODULE_28__["default"], upperFirst: _upperFirst_js__WEBPACK_IMPORTED_MODULE_29__["default"],
  words: _words_js__WEBPACK_IMPORTED_MODULE_30__["default"]
});


/***/ }),
/* 666 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _attempt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(181);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "attempt", function() { return _attempt_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _bindAll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(187);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindAll", function() { return _bindAll_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _cond_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(258);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cond", function() { return _cond_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _conforms_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(284);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "conforms", function() { return _conforms_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "constant", function() { return _constant_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _defaultTo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(302);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultTo", function() { return _defaultTo_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _flow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(377);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flow", function() { return _flow_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _flowRight_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(379);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flowRight", function() { return _flowRight_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(56);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _identity_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _iteratee_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(441);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iteratee", function() { return _iteratee_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _matches_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(454);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matches", function() { return _matches_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _matchesProperty_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(455);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matchesProperty", function() { return _matchesProperty_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _method_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(464);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "method", function() { return _method_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _methodOf_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(465);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "methodOf", function() { return _methodOf_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _mixin_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(468);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mixin", function() { return _mixin_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(80);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return _noop_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _nthArg_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(476);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nthArg", function() { return _nthArg_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _over_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(490);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "over", function() { return _over_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _overEvery_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(494);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "overEvery", function() { return _overEvery_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _overSome_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(495);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "overSome", function() { return _overSome_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _property_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(281);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "property", function() { return _property_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _propertyOf_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(511);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "propertyOf", function() { return _propertyOf_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _range_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(522);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _range_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _rangeRight_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(525);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rangeRight", function() { return _rangeRight_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _stubArray_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(229);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubArray", function() { return _stubArray_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(128);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubFalse", function() { return _stubFalse_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _stubObject_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(572);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubObject", function() { return _stubObject_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _stubString_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(573);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubString", function() { return _stubString_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _stubTrue_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(574);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stubTrue", function() { return _stubTrue_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _times_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(593);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "times", function() { return _times_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _toPath_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(599);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPath", function() { return _toPath_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _uniqueId_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(620);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqueId", function() { return _uniqueId_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _util_default_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(667);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _util_default_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });




































/***/ }),
/* 667 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _attempt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(181);
/* harmony import */ var _bindAll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(187);
/* harmony import */ var _cond_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(258);
/* harmony import */ var _conforms_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(284);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94);
/* harmony import */ var _defaultTo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(302);
/* harmony import */ var _flow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(377);
/* harmony import */ var _flowRight_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(379);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(56);
/* harmony import */ var _iteratee_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(441);
/* harmony import */ var _matches_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(454);
/* harmony import */ var _matchesProperty_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(455);
/* harmony import */ var _method_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(464);
/* harmony import */ var _methodOf_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(465);
/* harmony import */ var _mixin_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(468);
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(80);
/* harmony import */ var _nthArg_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(476);
/* harmony import */ var _over_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(490);
/* harmony import */ var _overEvery_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(494);
/* harmony import */ var _overSome_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(495);
/* harmony import */ var _property_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(281);
/* harmony import */ var _propertyOf_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(511);
/* harmony import */ var _range_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(522);
/* harmony import */ var _rangeRight_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(525);
/* harmony import */ var _stubArray_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(229);
/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(128);
/* harmony import */ var _stubObject_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(572);
/* harmony import */ var _stubString_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(573);
/* harmony import */ var _stubTrue_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(574);
/* harmony import */ var _times_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(593);
/* harmony import */ var _toPath_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(599);
/* harmony import */ var _uniqueId_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(620);

































/* harmony default export */ __webpack_exports__["default"] = ({
  attempt: _attempt_js__WEBPACK_IMPORTED_MODULE_0__["default"], bindAll: _bindAll_js__WEBPACK_IMPORTED_MODULE_1__["default"], cond: _cond_js__WEBPACK_IMPORTED_MODULE_2__["default"], conforms: _conforms_js__WEBPACK_IMPORTED_MODULE_3__["default"], constant: _constant_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  defaultTo: _defaultTo_js__WEBPACK_IMPORTED_MODULE_5__["default"], flow: _flow_js__WEBPACK_IMPORTED_MODULE_6__["default"], flowRight: _flowRight_js__WEBPACK_IMPORTED_MODULE_7__["default"], identity: _identity_js__WEBPACK_IMPORTED_MODULE_8__["default"], iteratee: _iteratee_js__WEBPACK_IMPORTED_MODULE_9__["default"],
  matches: _matches_js__WEBPACK_IMPORTED_MODULE_10__["default"], matchesProperty: _matchesProperty_js__WEBPACK_IMPORTED_MODULE_11__["default"], method: _method_js__WEBPACK_IMPORTED_MODULE_12__["default"], methodOf: _methodOf_js__WEBPACK_IMPORTED_MODULE_13__["default"], mixin: _mixin_js__WEBPACK_IMPORTED_MODULE_14__["default"],
  noop: _noop_js__WEBPACK_IMPORTED_MODULE_15__["default"], nthArg: _nthArg_js__WEBPACK_IMPORTED_MODULE_16__["default"], over: _over_js__WEBPACK_IMPORTED_MODULE_17__["default"], overEvery: _overEvery_js__WEBPACK_IMPORTED_MODULE_18__["default"], overSome: _overSome_js__WEBPACK_IMPORTED_MODULE_19__["default"],
  property: _property_js__WEBPACK_IMPORTED_MODULE_20__["default"], propertyOf: _propertyOf_js__WEBPACK_IMPORTED_MODULE_21__["default"], range: _range_js__WEBPACK_IMPORTED_MODULE_22__["default"], rangeRight: _rangeRight_js__WEBPACK_IMPORTED_MODULE_23__["default"], stubArray: _stubArray_js__WEBPACK_IMPORTED_MODULE_24__["default"],
  stubFalse: _stubFalse_js__WEBPACK_IMPORTED_MODULE_25__["default"], stubObject: _stubObject_js__WEBPACK_IMPORTED_MODULE_26__["default"], stubString: _stubString_js__WEBPACK_IMPORTED_MODULE_27__["default"], stubTrue: _stubTrue_js__WEBPACK_IMPORTED_MODULE_28__["default"], times: _times_js__WEBPACK_IMPORTED_MODULE_29__["default"],
  toPath: _toPath_js__WEBPACK_IMPORTED_MODULE_30__["default"], uniqueId: _uniqueId_js__WEBPACK_IMPORTED_MODULE_31__["default"]
});


/***/ }),
/* 668 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _copyArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86);



/**
 * Creates a clone of the lazy wrapper object.
 *
 * @private
 * @name clone
 * @memberOf LazyWrapper
 * @returns {Object} Returns the cloned `LazyWrapper` object.
 */
function lazyClone() {
  var result = new _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"](this.__wrapped__);
  result.__actions__ = Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(this.__actions__);
  result.__dir__ = this.__dir__;
  result.__filtered__ = this.__filtered__;
  result.__iteratees__ = Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(this.__iteratees__);
  result.__takeCount__ = this.__takeCount__;
  result.__views__ = Object(_copyArray_js__WEBPACK_IMPORTED_MODULE_1__["default"])(this.__views__);
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (lazyClone);


/***/ }),
/* 669 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);


/**
 * Reverses the direction of lazy iteration.
 *
 * @private
 * @name reverse
 * @memberOf LazyWrapper
 * @returns {Object} Returns the new reversed `LazyWrapper` object.
 */
function lazyReverse() {
  if (this.__filtered__) {
    var result = new _LazyWrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"](this);
    result.__dir__ = -1;
    result.__filtered__ = true;
  } else {
    result = this.clone();
    result.__dir__ *= -1;
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (lazyReverse);


/***/ }),
/* 670 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _baseWrapperValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(597);
/* harmony import */ var _getView_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(671);
/* harmony import */ var _isArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47);




/** Used to indicate the type of lazy iteratees. */
var LAZY_FILTER_FLAG = 1,
    LAZY_MAP_FLAG = 2;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Extracts the unwrapped value from its lazy wrapper.
 *
 * @private
 * @name value
 * @memberOf LazyWrapper
 * @returns {*} Returns the unwrapped value.
 */
function lazyValue() {
  var array = this.__wrapped__.value(),
      dir = this.__dir__,
      isArr = Object(_isArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(array),
      isRight = dir < 0,
      arrLength = isArr ? array.length : 0,
      view = Object(_getView_js__WEBPACK_IMPORTED_MODULE_1__["default"])(0, arrLength, this.__views__),
      start = view.start,
      end = view.end,
      length = end - start,
      index = isRight ? end : (start - 1),
      iteratees = this.__iteratees__,
      iterLength = iteratees.length,
      resIndex = 0,
      takeCount = nativeMin(length, this.__takeCount__);

  if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
    return Object(_baseWrapperValue_js__WEBPACK_IMPORTED_MODULE_0__["default"])(array, this.__actions__);
  }
  var result = [];

  outer:
  while (length-- && resIndex < takeCount) {
    index += dir;

    var iterIndex = -1,
        value = array[index];

    while (++iterIndex < iterLength) {
      var data = iteratees[iterIndex],
          iteratee = data.iteratee,
          type = data.type,
          computed = iteratee(value);

      if (type == LAZY_MAP_FLAG) {
        value = computed;
      } else if (!computed) {
        if (type == LAZY_FILTER_FLAG) {
          continue outer;
        } else {
          break outer;
        }
      }
    }
    result[resIndex++] = value;
  }
  return result;
}

/* harmony default export */ __webpack_exports__["default"] = (lazyValue);


/***/ }),
/* 671 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the view, applying any `transforms` to the `start` and `end` positions.
 *
 * @private
 * @param {number} start The start of the view.
 * @param {number} end The end of the view.
 * @param {Array} transforms The transformations to apply to the view.
 * @returns {Object} Returns an object containing the `start` and `end`
 *  positions of the view.
 */
function getView(start, end, transforms) {
  var index = -1,
      length = transforms.length;

  while (++index < length) {
    var data = transforms[index],
        size = data.size;

    switch (data.type) {
      case 'drop':      start += size; break;
      case 'dropRight': end -= size; break;
      case 'take':      end = nativeMin(end, start + size); break;
      case 'takeRight': start = nativeMax(start, end - size); break;
    }
  }
  return { 'start': start, 'end': end };
}

/* harmony default export */ __webpack_exports__["default"] = (getView);


/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.str2ab = exports.ab2str = void 0;

var ab2str = function ab2str(ab) {
  return new TextDecoder().decode(ab);
};

exports.ab2str = ab2str;

var str2ab = function str2ab(str) {
  return new TextEncoder().encode(str);
};

exports.str2ab = str2ab;

/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.NotImplemented = exports.NetWorkError = exports.BaseError = void 0;

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var BaseError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(BaseError, _Error);

  function BaseError(type, message) {
    var _this;

    _this = _Error.call(this, type + ": " + message) || this;
    _this.type = type;
    _this.message = message;
    return _this;
  }

  return BaseError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

exports.BaseError = BaseError;

var NetWorkError = /*#__PURE__*/function (_BaseError) {
  _inheritsLoose(NetWorkError, _BaseError);

  function NetWorkError(code, message) {
    var _this2;

    _this2 = _BaseError.call(this, 'NetWorkError', message) || this;
    _this2.code = code;
    return _this2;
  }

  return NetWorkError;
}(BaseError);

exports.NetWorkError = NetWorkError;

var NotImplemented = /*#__PURE__*/function (_BaseError2) {
  _inheritsLoose(NotImplemented, _BaseError2);

  function NotImplemented() {
    return _BaseError2.call(this, 'NotImplemented', 'NotImplemented') || this;
  }

  return NotImplemented;
}(BaseError);

exports.NotImplemented = NotImplemented;

/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Priority = exports.FetchType = void 0;
var FetchType = {
  DicomInfo: 'dicom-info',
  StudyInfo: 'study-info',
  SeriesInfo: 'series-info',
  InstanceInfo: 'instance-info',
  DicomMeta: 'dicom-meta',
  DicomInstance: 'dicom-instance',
  Url: 'url',
  File: 'file',
  BrowserFile: 'browser-file'
};
exports.FetchType = FetchType;
var Priority;
exports.Priority = Priority;

(function (Priority) {
  Priority[Priority["Low"] = 0] = "Low";
  Priority[Priority["Medium"] = 1] = "Medium";
  Priority[Priority["High"] = 2] = "High";
})(Priority || (exports.Priority = Priority = {}));

/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.AnyResource = void 0;

var _resource = __webpack_require__(676);

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var AnyResource = /*#__PURE__*/function (_Resource) {
  _inheritsLoose(AnyResource, _Resource);

  _createClass(AnyResource, [{
    key: "data",
    get: function get() {
      return this.mData;
    }
  }]);

  function AnyResource(data) {
    var _this;

    _this = _Resource.call(this, 'any') || this;

    _defineProperty(_assertThisInitialized(_this), "mData", void 0);

    _this.mData = data;
    return _this;
  }

  return AnyResource;
}(_resource.Resource);

exports.AnyResource = AnyResource;

/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Resource = void 0;

var Resource = /*#__PURE__*/function () {
  function Resource(type) {
    this.type = type;
  } // eslint-disable-next-line class-methods-use-this


  var _proto = Resource.prototype;

  _proto.getJson = function getJson() {
    throw new Error('Resource: getJson not implemented');
  } // eslint-disable-next-line class-methods-use-this
  ;

  _proto.getArrayBuffer = function getArrayBuffer() {
    throw new Error('Resource: getArrayBuffer not implemented');
  } // eslint-disable-next-line class-methods-use-this
  ;

  _proto.getString = function getString() {
    throw new Error('Resource: getString not implemented');
  } // eslint-disable-next-line class-methods-use-this
  ;

  _proto.getData = function getData() {
    throw new Error('Resource: getData not implemented');
  } // eslint-disable-next-line class-methods-use-this
  ;

  _proto.getTypedArray = function getTypedArray() {
    throw new Error('Resource: getTypedArray not implemented');
  };

  return Resource;
}();

exports.Resource = Resource;

/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.FetcherMgr = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var FetcherMgr = /*#__PURE__*/function () {
  function FetcherMgr() {
    _defineProperty(this, "fetchers", new Map());
  }

  var _proto = FetcherMgr.prototype;

  _proto.register = function register(type, fetch) {
    if (this.fetchers.has(type)) {
      throw new Error("FetcherMgr, " + type + " is existed, registered failed");
    }

    this.fetchers.set(type, fetch);
  } // eslint-disable-next-line
  ;

  _proto.fetch = async function fetch(fetchType, locator, option) {
    var registered = this.fetchers.get(fetchType);

    if (!registered) {
      throw new Error("FetcherMgr: " + fetchType + " is not registered.");
    }

    return registered(locator, option);
  };

  return FetcherMgr;
}();

exports.FetcherMgr = FetcherMgr;

/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseData = void 0;

var _dataresource = __webpack_require__(679);

var parseData = async function parseData(data) {
  return new _dataresource.DataResource(data);
};

exports.parseData = parseData;

/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.DataResource = void 0;

var _resource = __webpack_require__(676);

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var DataResource = /*#__PURE__*/function (_Resource) {
  _inheritsLoose(DataResource, _Resource);

  function DataResource(data) {
    var _this;

    _this = _Resource.call(this, 'data') || this;
    _this.data = data;
    return _this;
  }

  var _proto = DataResource.prototype;

  _proto.getArrayBuffer = function getArrayBuffer() {
    return this.data.getArrayBuffer();
  };

  _proto.getString = function getString() {
    return this.data.getString();
  };

  _proto.getData = function getData() {
    return this.data;
  };

  _proto.getJson = function getJson() {
    return this.data.getJson();
  };

  _proto.getTypedArray = function getTypedArray() {
    return this.data.getTypedArray();
  };

  return DataResource;
}(_resource.Resource);

exports.DataResource = DataResource;

/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.ResourceMgr = void 0;

var _lodashEs = __webpack_require__(32);

var _resourcerep = __webpack_require__(681);

var _scheduler = __webpack_require__(682);

var _logger = _interopRequireDefault(__webpack_require__(683));

var _parsedata = __webpack_require__(678);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ResourceMgr = /*#__PURE__*/function () {
  function ResourceMgr(fetcherMgr) {
    this.fetcherMgr = fetcherMgr;

    _defineProperty(this, "waited", new Map());

    _defineProperty(this, "locatorCache", []);

    _defineProperty(this, "loadCache", new Map());

    _defineProperty(this, "scheduler", new _scheduler.Scheduler(6));
  }

  var _proto = ResourceMgr.prototype;

  _proto.addResource = function addResource(loadParams) {
    var rep = new _resourcerep.ResourceRep(this);
    this.waited.set(rep.uid, loadParams);
    return rep;
  } // Do a hack fetch optimization here.
  ;

  _proto.fetchInner = async function fetchInner(fetchType, locator, option) {
    var cacheItem = this.locatorCache.find(function (l) {
      return l.locator === locator;
    });

    if (cacheItem) {
      return cacheItem.promise;
    }

    var promise = this.fetcherMgr.fetch(fetchType, locator, option);
    this.locatorCache.push({
      locator: locator,
      promise: promise
    });

    if (this.locatorCache.length > 10) {
      this.locatorCache.shift();
    }

    await promise;
    return promise;
  };

  _proto.doLoad = async function doLoad(resourceRep) {
    var loadParams = await this.waited.get(resourceRep.uid);

    if (loadParams == null) {
      throw new Error('ResourceMgr load unknown error. loadParams not found');
    }

    var fetchType = loadParams.fetchType,
        locator = loadParams.locator,
        parse = loadParams.parse,
        option = loadParams.option;
    var data = await this.fetchInner(fetchType, locator, option || {});
    if (!data) throw new Error('No data');

    if (!parse) {
      return (0, _parsedata.parseData)(data);
    }

    return parse({
      data: data,
      mgr: this,
      option: option || {}
    });
  };

  _proto.load = async function load(resourceRep, priority) {
    var _this = this;

    _logger.default.assert(!resourceRep.isReady());

    if (resourceRep.isReady()) {
      throw new Error('resourceRep ready should not be called here');
    }

    try {
      await this.scheduler.get(resourceRep, priority);
    } catch (e) {
      this.scheduler.free(resourceRep);
      throw e;
    }

    try {
      var cached = this.loadCache.get(resourceRep);

      if (cached) {
        this.scheduler.free(resourceRep);
        return cached;
      }

      var promise = this.doLoad(resourceRep);
      this.loadCache.set(resourceRep, promise);
      var resource = await promise;
      this.loadCache.delete(resourceRep);
      (0, _lodashEs.delay)(function () {
        return _this.scheduler.free(resourceRep);
      }, 0);
      return resource;
    } catch (e) {
      this.scheduler.free(resourceRep);
      throw e;
    }
  };

  _proto.cancel = function cancel(resourceRep) {
    _logger.default.assert(!resourceRep.isReady());

    if (resourceRep.isReady()) {
      throw new Error('resourceRep ready should not be called here');
    }

    this.scheduler.cancel(resourceRep);
  };

  return ResourceMgr;
}();

exports.ResourceMgr = ResourceMgr;

/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.ResourceRep = void 0;

var _types = __webpack_require__(674);

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var counter = 0;

var ResourceRep = /*#__PURE__*/function () {
  _createClass(ResourceRep, [{
    key: "uid",
    get: function get() {
      return this.muid;
    }
  }]);

  function ResourceRep(mgr) {
    this.mgr = mgr;

    _defineProperty(this, "muid", void 0);

    _defineProperty(this, "resource", void 0);

    this.muid = "" + counter;
    counter += 1;
  }

  var _proto = ResourceRep.prototype;

  _proto.isReady = function isReady() {
    return this.resource != null;
  };

  _proto.load = async function load(priority) {
    if (priority === void 0) {
      priority = _types.Priority.Medium;
    }

    if (this.resource) {
      return this.resource;
    }

    this.resource = await this.mgr.load(this, priority);
    return this.resource;
  };

  _proto.cancel = function cancel() {
    if (this.resource) {
      return;
    }

    this.mgr.cancel(this);
  };

  _proto.get = function get() {
    if (this.resource == null) {
      throw new Error('resource is not loaded');
    }

    return this.resource;
  };

  return ResourceRep;
}();

exports.ResourceRep = ResourceRep;

/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Scheduler = void 0;

var _lodashEs = __webpack_require__(32);

var _types = __webpack_require__(674);

var _logger = _interopRequireDefault(__webpack_require__(683));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var MEDIUM_PRIORITY_MIN_COUNT = 3;

var Scheduler = /*#__PURE__*/function () {
  function Scheduler(limit) {
    this.limit = limit;

    _defineProperty(this, "lists", [[], [], []]);

    _defineProperty(this, "all", new Map());

    _defineProperty(this, "freeSlot", void 0);

    this.freeSlot = limit;
  }

  var _proto = Scheduler.prototype;

  _proto.get = async function get(v, priority) {
    this.update(v, priority);
    var item = this.all.get(v);

    _logger.default.assert(item);

    if (item == null) {
      throw new Error('Scheduler: item must be existed in get function');
    }

    if (item.promise == null) {
      item.promise = new Promise(function (resolve, reject) {
        item.resolve = resolve;
        item.reject = reject;
      });
    }

    this.check();
    var t = await item.promise;
    return t;
  };

  _proto.free = function free(v) {
    var item = this.all.get(v);

    _logger.default.assert(item);

    if (item == null) {
      return;
    }

    _logger.default.assert(item.refcount > 0);

    item.refcount -= 1;

    if (item.refcount <= 0) {
      this.freeSlot++;
      this.all.delete(v);

      _logger.default.assert(this.freeSlot <= this.limit);

      if (this.freeSlot >= this.limit) {
        this.freeSlot = this.limit;
      }

      (0, _lodashEs.delay)(this.check.bind(this), 0);
    }
  };

  _proto.cancel = function cancel(v) {
    var item = this.all.get(v);

    if (item == null) {
      return;
    }

    item.cancelRequested = true;
  };

  _proto.check = function check() {
    _logger.default.assert(this.freeSlot <= this.limit);

    var listLimit = this.freeSlot <= 0 ? this.lists.length - 1 : 0;

    for (var i = this.lists.length - 1; i >= listLimit; i -= 1) {
      var l = this.lists[i];

      if (l.length > 0) {
        if (i === _types.Priority.Low && this.freeSlot <= MEDIUM_PRIORITY_MIN_COUNT) return;
        this.freeSlot--;
        var item = this.all.get(l[0]);
        l.shift();

        if (item == null) {
          throw new Error('check, unknown error');
        }

        if (item.cancelRequested) {
          item.reject(item.value);
        } else {
          item.resolve(item.value);
        }

        (0, _lodashEs.delay)(this.check.bind(this), 0);
        return;
      }
    }
  };

  _proto.update = function update(v, priority) {
    var item = this.all.get(v);

    if (item == null) {
      var newItem = {
        priority: priority,
        value: v,
        refcount: 1,
        cancelRequested: false
      };
      this.all.set(v, newItem);
      this.lists[priority].push(v);
    } else {
      item.refcount += 1;
      item.cancelRequested = false; // reset cancel if new get request received.
    }

    if (item != null && item.priority < priority) {
      var index = this.lists[item.priority].indexOf(v);

      if (index !== -1) {
        this.lists[item.priority].splice(index, 1);
        this.lists[priority].push(v);
      }

      item.priority = priority;
    }
  };

  return Scheduler;
}();

exports.Scheduler = Scheduler;

/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;
var logger = console;
var _default = logger;
exports.default = _default;

/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Image3DSpaceInfo = void 0;

var _image2dspaceinfo = __webpack_require__(685);

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Image3DSpaceInfo = /*#__PURE__*/function () {
  var _proto = Image3DSpaceInfo.prototype;

  _proto.getAxialInfo = function getAxialInfo() {
    return this.axialInfo;
  };

  _proto.getSagittalInfo = function getSagittalInfo() {
    return this.sagittalInfo;
  };

  _proto.getCoronalInfo = function getCoronalInfo() {
    return this.coronalInfo;
  };

  function Image3DSpaceInfo(size, spacing, origin) {
    this.size = size;
    this.spacing = spacing;
    this.origin = origin;

    _defineProperty(this, "axialInfo", void 0);

    _defineProperty(this, "sagittalInfo", void 0);

    _defineProperty(this, "coronalInfo", void 0);

    _defineProperty(this, "physicalSize", void 0);

    this.physicalSize = [0, 1, 2].map(function (i) {
      return size[i] * spacing[i];
    });
    this.axialInfo = this.createInfo(0, 1, size[2], [_image2dspaceinfo.AnatomicalDirection.Right, _image2dspaceinfo.AnatomicalDirection.Left, _image2dspaceinfo.AnatomicalDirection.Anterior, _image2dspaceinfo.AnatomicalDirection.Posterior], function (_ref) {
      var sliceIndex = _ref.sliceIndex,
          indexCoords = _ref.indexCoords;
      return [indexCoords[0], indexCoords[1], sliceIndex];
    }, function (indexCoords) {
      return {
        sliceIndex: indexCoords[2],
        indexCoords: [indexCoords[0], indexCoords[1]]
      };
    });
    this.sagittalInfo = this.createInfo(1, 2, size[0], [_image2dspaceinfo.AnatomicalDirection.Anterior, _image2dspaceinfo.AnatomicalDirection.Posterior, _image2dspaceinfo.AnatomicalDirection.Superior, _image2dspaceinfo.AnatomicalDirection.Inferior], function (_ref2) {
      var sliceIndex = _ref2.sliceIndex,
          indexCoords = _ref2.indexCoords;
      return [sliceIndex, indexCoords[0], size[2] - indexCoords[1] - 1];
    }, function (indexCoords) {
      return {
        sliceIndex: indexCoords[0],
        indexCoords: [indexCoords[1], size[2] - indexCoords[2] - 1]
      };
    });
    this.coronalInfo = this.createInfo(0, 2, size[1], [_image2dspaceinfo.AnatomicalDirection.Right, _image2dspaceinfo.AnatomicalDirection.Left, _image2dspaceinfo.AnatomicalDirection.Superior, _image2dspaceinfo.AnatomicalDirection.Inferior], function (_ref3) {
      var sliceIndex = _ref3.sliceIndex,
          indexCoords = _ref3.indexCoords;
      return [indexCoords[0], sliceIndex, size[2] - indexCoords[1] - 1];
    }, function (indexCoords) {
      return {
        sliceIndex: indexCoords[1],
        indexCoords: [indexCoords[0], size[2] - indexCoords[2] - 1]
      };
    });
  }

  _proto.createInfo = function createInfo(xAxis, yAxis, count, anatomicalSystem, coords2DTo3D, coords3DTo2D) {
    var _this = this;

    return new _image2dspaceinfo.Image2DSpaceInfo([this.size[xAxis], this.size[yAxis]], [this.spacing[xAxis], this.spacing[yAxis]], [this.origin[xAxis], this.origin[yAxis]], count, anatomicalSystem, function (sliceIndexAndCoords) {
      return _this.indexToPhysical(coords2DTo3D(sliceIndexAndCoords));
    }, function (physical) {
      var indexCoords = _this.physicalToIndex(physical);

      return coords3DTo2D(indexCoords);
    }, coords2DTo3D, coords3DTo2D, this);
  };

  _proto.indexToPhysical = function indexToPhysical(indexCoords) {
    var _this2 = this;

    var scale = [-1, -1, 1];
    return [0, 1, 2].map(function (i) {
      return _this2.origin[i] + scale[i] * indexCoords[i] * _this2.spacing[i];
    });
  };

  _proto.physicalToIndex = function physicalToIndex(physical) {
    var _this3 = this;

    var scale = [-1, -1, 1];
    return [0, 1, 2].map(function (i) {
      return (physical[i] - _this3.origin[i]) / _this3.spacing[i] / scale[i];
    });
  };

  _proto.isInside = function isInside(index) {
    if (index[0] < 0 || index[0] >= this.size[0]) {
      return false;
    }

    if (index[1] < 0 || index[1] >= this.size[1]) {
      return false;
    }

    if (index[2] < 0 || index[2] >= this.size[2]) {
      return false;
    }

    return true;
  };

  return Image3DSpaceInfo;
}();

exports.Image3DSpaceInfo = Image3DSpaceInfo;

/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Image2DSpaceInfo = exports.AnatomicalDirection = void 0;
var AnatomicalDirection;
exports.AnatomicalDirection = AnatomicalDirection;

(function (AnatomicalDirection) {
  AnatomicalDirection[AnatomicalDirection["Left"] = 0] = "Left";
  AnatomicalDirection[AnatomicalDirection["Right"] = 1] = "Right";
  AnatomicalDirection[AnatomicalDirection["Posterior"] = 2] = "Posterior";
  AnatomicalDirection[AnatomicalDirection["Anterior"] = 3] = "Anterior";
  AnatomicalDirection[AnatomicalDirection["Inferior"] = 4] = "Inferior";
  AnatomicalDirection[AnatomicalDirection["Superior"] = 5] = "Superior";
})(AnatomicalDirection || (exports.AnatomicalDirection = AnatomicalDirection = {}));

var Image2DSpaceInfo = function Image2DSpaceInfo(size, spacing, origin, count, anatomicalSystem, indexToPhysical, physicalToIndex, coords2DTo3D, coords3DTo2D, refImage3DSpaceInfo) {
  this.size = size;
  this.spacing = spacing;
  this.origin = origin;
  this.count = count;
  this.anatomicalSystem = anatomicalSystem;
  this.indexToPhysical = indexToPhysical;
  this.physicalToIndex = physicalToIndex;
  this.coords2DTo3D = coords2DTo3D;
  this.coords3DTo2D = coords3DTo2D;
  this.refImage3DSpaceInfo = refImage3DSpaceInfo;
};

exports.Image2DSpaceInfo = Image2DSpaceInfo;

/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _types = __webpack_require__(687);

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _types[key];
});

var _resourcebased = __webpack_require__(688);

Object.keys(_resourcebased).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _resourcebased[key];
});

var _image3cache = __webpack_require__(689);

Object.keys(_image3cache).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _image3cache[key];
});

var _fullcache = __webpack_require__(690);

Object.keys(_fullcache).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _fullcache[key];
});

/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.ResourceBasedImageCache = void 0;

var _lodashEs = __webpack_require__(32);

var _errors = __webpack_require__(673);

var ResourceBasedImageCache = /*#__PURE__*/function () {
  function ResourceBasedImageCache(resources, rg) {
    this.resources = resources;
    this.rg = rg;
  }

  var _proto = ResourceBasedImageCache.prototype;

  _proto.force = async function force(priority) {
    await Promise.all(this.resources.map(function (r) {
      return r.load(priority);
    }));
  } // must be loaded.
  ;

  _proto.getSync = function getSync(layer) {
    if (!this.resources[layer].isReady()) {
      throw new Error('ResourceBasedImageCache, getSync but resource is not loaded');
    }

    return this.rg.getBuffer(this.resources[layer].get());
  };

  _proto.getResource = async function getResource(layer, priority) {
    if (this.resources[layer].isReady()) {
      return this.resources[layer].get();
    }

    var r = await this.resources[layer].load(priority);
    return r;
  };

  _proto.getResourceSync = function getResourceSync(layer) {
    if (!this.resources[layer].isReady()) {
      throw new Error('ResourceBasedImageCache, getResourceSync but resource is not loaded');
    }

    return this.resources[layer].get();
  };

  _proto.getAsync = async function getAsync(layer, priority) {
    var r = await this.getResource(layer, priority);
    return this.rg.getBuffer(r);
  };

  _proto.getTagImpl = function getTagImpl(layer, tagName) {
    if (this.rg.getTagByNumber) {
      return this.rg.getTagByNumber(layer, tagName);
    }

    if (this.rg.getTagByResource) {
      var _r = this.getResourceSync(layer);

      return this.rg.getTagByResource(_r, tagName);
    }

    throw new Error('ResourceBasedImageCache: ResourceGetter interface didnt implement getTag');
  };

  _proto.getTag = function getTag(layer, tagName) {
    var _this = this;

    if ((0, _lodashEs.isString)(tagName)) {
      return this.getTagImpl(layer, tagName);
    }

    return tagName.map(function (name) {
      return _this.getTagImpl(layer, name);
    });
  };

  _proto.isReady = function isReady() {
    for (var i = 0; i < this.resources.length; i += 1) {
      if (!this.resources[i].isReady()) {
        return false;
      }
    }

    return true;
  };

  _proto.cancelLoading = function cancelLoading() {
    if (this.isReady()) {
      return;
    }

    this.resources.forEach(function (r) {
      return r.cancel();
    });
  };

  _proto.getRawPixel = function getRawPixel() {
    throw new _errors.NotImplemented();
  } // eslint-disable-next-line @typescript-eslint/no-unused-vars
  ;

  _proto.writeDiff = function writeDiff(indexArray, diffArray) {
    throw new _errors.NotImplemented();
  };

  return ResourceBasedImageCache;
}();

exports.ResourceBasedImageCache = ResourceBasedImageCache;

/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.cacheImage3 = cacheImage3;

function cacheImage3(image3, C) {
  var cAxial = new C(image3.getAxial);
  var cSagittal = new C(image3.getSagittal);
  var cCoronal = new C(image3.getCoronal);
  var caches = {
    getAxial: cAxial.get,
    getSagittal: cSagittal.get,
    getCoronal: cCoronal.get
  };
  return new Proxy(image3, {
    get: function get(target, propKey) {
      return Reflect.has(caches, propKey) ? Reflect.get(caches, propKey) : Reflect.get(target, propKey);
    }
  });
}

/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.FullCache = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// eslint-disable-next-line @typescript-eslint/no-explicit-any
var FullCache = function FullCache(loader) {
  var _this = this;

  this.loader = loader;

  _defineProperty(this, "cache", []);

  _defineProperty(this, "get", async function (index) {
    if (!_this.cache[index]) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      _this.cache[index] = await _this.loader.apply(_this, [index].concat(args));
    }

    return _this.cache[index];
  });
};

exports.FullCache = FullCache;

/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _image2dsource = __webpack_require__(692);

Object.keys(_image2dsource).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _image2dsource[key];
});

var _image2dlastone = __webpack_require__(694);

Object.keys(_image2dlastone).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _image2dlastone[key];
});

/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Image2DSource = exports.idleEvent = exports.loadingFailedEvent = exports.loadingCompletedEvent = exports.loadingStartedEvent = exports.requestedEvent = exports.activeChangedEvent = void 0;

var _eventemitter = __webpack_require__(693);

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

// activeChangedEvent: emit when activeImage changed.
// requestedEvent: emit when receive right request. the folling request is invalid:
// 1. out of index. 2. duplicate with the last request.
// loadingstarted: loading start
// loadingcompleted: loading finished
// loadingfailed: loading failed
var activeChangedEvent = 'activechanged';
exports.activeChangedEvent = activeChangedEvent;
var requestedEvent = 'requested';
exports.requestedEvent = requestedEvent;
var loadingStartedEvent = 'loadingstarted';
exports.loadingStartedEvent = loadingStartedEvent;
var loadingCompletedEvent = 'loadingcompleted';
exports.loadingCompletedEvent = loadingCompletedEvent;
var loadingFailedEvent = 'loadingfailed';
exports.loadingFailedEvent = loadingFailedEvent;
var idleEvent = 'idle';
exports.idleEvent = idleEvent;

// provide active image2d. the imageIndex requested must be in range [0, count - 1]
// Image2DSource have following function
// 1. contain count image2d. range in [0, count - 1]
// 2. provide one active image2D.
// 3. can request new image.
// 4. can listen the image loading process.
var Image2DSource = /*#__PURE__*/function (_EventEmitter) {
  _inheritsLoose(Image2DSource, _EventEmitter);

  function Image2DSource() {
    return _EventEmitter.apply(this, arguments) || this;
  }

  return Image2DSource;
}(_eventemitter.EventEmitter);

exports.Image2DSource = Image2DSource;

/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if (true) {
  module.exports = EventEmitter;
}


/***/ }),
/* 694 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.makeAxialLoader = makeAxialLoader;
exports.makeSagittalLoader = makeSagittalLoader;
exports.makeCoronalLoader = makeCoronalLoader;
exports.Image2DLastOne = void 0;

var _image2dsource = __webpack_require__(692);

var _loadlastone = __webpack_require__(695);

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Image2DLastOne = /*#__PURE__*/function (_Image2DSource) {
  _inheritsLoose(Image2DLastOne, _Image2DSource);

  var _proto = Image2DLastOne.prototype;

  _proto.getCount = function getCount() {
    return this.mCount;
  };

  _proto.getSize = function getSize() {
    return this.mSize;
  };

  _proto.getSpacing = function getSpacing() {
    return this.mSpacing;
  };

  _proto.getActiveDisplayed = function getActiveDisplayed() {
    return this.loadLastOne.getActive();
  };

  _proto.getLastRequestedIndex = function getLastRequestedIndex() {
    var v = this.loadLastOne.getLastRequestedIndex();
    return v !== undefined ? v : -1;
  };

  _proto.getExpectedIndex = function getExpectedIndex() {
    var v = this.loadLastOne.getExpectedIndex();
    return v !== undefined ? v : -1;
  };

  _proto.getActiveIndex = function getActiveIndex() {
    var v = this.loadLastOne.getActiveIndex();
    return v !== undefined ? v : -1;
  };

  function Image2DLastOne(count, size, spacing, loadImage) {
    var _this;

    _this = _Image2DSource.call(this) || this;

    _defineProperty(_assertThisInitialized(_this), "mCount", void 0);

    _defineProperty(_assertThisInitialized(_this), "mSize", void 0);

    _defineProperty(_assertThisInitialized(_this), "mSpacing", void 0);

    _defineProperty(_assertThisInitialized(_this), "loadLastOne", void 0);

    _this.mCount = count;
    _this.mSize = size;
    _this.mSpacing = spacing;
    _this.loadLastOne = new _loadlastone.LoadLastOne(_assertThisInitialized(_this), loadImage);
    return _this;
  }

  _proto.isLoading = function isLoading() {
    return this.loadLastOne.isLoading();
  };

  _proto.request = function request(index) {
    if (index < 0 || index >= this.getCount()) {
      throw new Error('Image2DLastOne: request out of index');
    }

    this.loadLastOne.request(index);
  };

  _proto.forceLoad = function forceLoad() {
    this.loadLastOne.forceLoad();
  };

  return Image2DLastOne;
}(_image2dsource.Image2DSource);

exports.Image2DLastOne = Image2DLastOne;

function makeAxialLoader(image, isSync) {
  if (isSync === void 0) {
    isSync = false;
  }

  return new Image2DLastOne(image.size[2], [image.size[0], image.size[1]], [image.spacing[0], image.spacing[1]], isSync || image.isAllDataReady ? image.getAxialSync : image.getAxial);
}

function makeSagittalLoader(image, isSync) {
  if (isSync === void 0) {
    isSync = false;
  }

  return new Image2DLastOne(image.size[0], [image.size[1], image.size[2]], [image.spacing[1], image.spacing[2]], isSync || image.isAllDataReady ? image.getSagittalSync : image.getSagittal);
}

function makeCoronalLoader(image, isSync) {
  if (isSync === void 0) {
    isSync = false;
  }

  return new Image2DLastOne(image.size[1], [image.size[0], image.size[2]], [image.spacing[0], image.spacing[2]], isSync || image.isAllDataReady ? image.getCoronalSync : image.getCoronal);
}

/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.LoadLastOne = void 0;

var _lodashEs = __webpack_require__(32);

var _isPromise = _interopRequireDefault(__webpack_require__(696));

var _image2dsource = __webpack_require__(692);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var IndexType;

(function (IndexType) {
  IndexType[IndexType["Active"] = 0] = "Active";
  IndexType[IndexType["Loading"] = 1] = "Loading";
  IndexType[IndexType["Pending"] = 2] = "Pending";
})(IndexType || (IndexType = {}));

var LoadLastOne = /*#__PURE__*/function () {
  var _proto = LoadLastOne.prototype;

  _proto.getActive = function getActive() {
    return this.mActive;
  };

  _proto.getLastRequestedIndex = function getLastRequestedIndex() {
    return this.mLastRequested;
  };

  _proto.getExpectedIndex = function getExpectedIndex() {
    if (this.getIndex(IndexType.Pending) !== undefined) {
      return this.getIndex(IndexType.Pending);
    }

    if (this.getIndex(IndexType.Loading) !== undefined) {
      return this.getIndex(IndexType.Loading);
    }

    return this.getIndex(IndexType.Active);
  };

  _proto.getActiveIndex = function getActiveIndex() {
    return this.mActiveIndex;
  };

  function LoadLastOne(emitter, loader) {
    this.emitter = emitter;
    this.loader = loader;

    _defineProperty(this, "mActive", void 0);

    _defineProperty(this, "indices", []);

    _defineProperty(this, "mLastRequested", void 0);

    _defineProperty(this, "mActiveIndex", void 0);
  }

  _proto.isLoading = function isLoading() {
    return this.getIndex(IndexType.Loading) !== undefined;
  };

  _proto.getIndex = function getIndex(type) {
    return this.indices[type];
  };

  _proto.setIndex = function setIndex(type, index) {
    this.indices[type] = index;
  };

  _proto.clearIndex = function clearIndex(type) {
    this.setIndex(type, undefined);
  };

  _proto.forceLoad = function forceLoad() {
    if (this.isLoading()) {
      return;
    }

    if (!this.getActive()) {
      return;
    }

    this.load(this.getActiveIndex());
  };

  _proto.request = function request(index) {
    if ((0, _lodashEs.isEqual)(this.mLastRequested, index)) {
      return;
    }

    this.mLastRequested = index;
    this.emitter.emit(_image2dsource.requestedEvent, index);

    if (this.isLoading()) {
      if (index === this.getIndex(IndexType.Loading)) {
        this.clearIndex(IndexType.Pending);
      } else if (index === this.getIndex(IndexType.Active)) {
        this.clearIndex(IndexType.Pending);
        this.clearIndex(IndexType.Loading);
      } else {
        this.setIndex(IndexType.Pending, index);
      }
    } else {
      this.load(index);
    }
  };

  _proto.load = async function load(index) {
    this.setIndex(IndexType.Loading, index);
    this.emitter.emit(_image2dsource.loadingStartedEvent, index);

    try {
      var loaderRet = this.loader(index);
      var d = (0, _isPromise.default)(loaderRet) ? await loaderRet : loaderRet;

      if (this.getIndex(IndexType.Loading) !== index) {
        this.emitter.emit(_image2dsource.loadingFailedEvent, index);

        if (!this.isLoading()) {
          var pending = this.getIndex(IndexType.Pending);

          if (pending === undefined) {
            this.emitter.emit(_image2dsource.idleEvent);
          }
        }

        return;
      }

      this.clearIndex(IndexType.Loading);
      this.emitter.emit(_image2dsource.loadingCompletedEvent, index);
      this.setIndex(IndexType.Active, index);
      this.mActive = d;
      this.mActiveIndex = index;
      this.emitter.emit(_image2dsource.activeChangedEvent);
    } catch (e) {
      if (this.getIndex(IndexType.Loading) === index) {
        this.clearIndex(IndexType.Loading);
      }

      this.emitter.emit(_image2dsource.loadingFailedEvent, index);
    }

    if (!this.isLoading()) {
      var _pending = this.getIndex(IndexType.Pending);

      if (_pending !== undefined) {
        this.clearIndex(IndexType.Pending);
        this.setIndex(IndexType.Loading, _pending);
        this.load(_pending);
      } else {
        this.emitter.emit(_image2dsource.idleEvent);
      }
    }
  };

  return LoadLastOne;
}();

exports.LoadLastOne = LoadLastOne;

/***/ }),
/* 696 */
/***/ (function(module, exports) {

module.exports = isPromise;
module.exports.default = isPromise;

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}


/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.createThickImage = createThickImage;

var _lodashEs = __webpack_require__(32);

var _image = __webpack_require__(28);

var _image3dspaceinfo = __webpack_require__(684);

var _errors = __webpack_require__(673);

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function makeLayer(pxiels, o) {
  for (var i = 0; i < o.length; i++) {
    var total = 0;

    for (var j = 0; j < pxiels.length; j++) {
      total += pxiels[j][i];
    } // eslint-disable-next-line no-param-reassign


    o[i] = Math.floor(total / pxiels.length);
  }

  return o;
}

var ThickImageCache = /*#__PURE__*/function () {
  function ThickImageCache(proxyCache, multiplier, creator) {
    this.proxyCache = proxyCache;
    this.multiplier = multiplier;
    this.creator = creator;

    _defineProperty(this, "layerCache", []);

    _defineProperty(this, "layerPromiseCache", []);

    if (multiplier <= 1) {
      throw new Error('ThickImageCache, multiplier must > 1 and be integer');
    }
  }

  var _proto = ThickImageCache.prototype;

  _proto.force = async function force(priority) {
    return this.proxyCache.force(priority);
  };

  _proto.getSync = function getSync(layer) {
    var _this = this;

    if (this.layerCache[layer]) {
      return this.layerCache[layer];
    }

    var pixels = (0, _lodashEs.range)(this.multiplier).map(function (i) {
      return _this.proxyCache.getSync(layer * _this.multiplier + i);
    }); // eslint-disable-next-line new-cap

    var o = new this.creator(pixels[0].length);
    this.layerCache[layer] = o;
    return makeLayer(pixels, o);
  };

  _proto.getAsyncImpl = async function getAsyncImpl(layer, priority) {
    var _this2 = this;

    var pixels = await Promise.all((0, _lodashEs.range)(this.multiplier).map(function (i) {
      return _this2.proxyCache.getAsync(layer * _this2.multiplier + i, priority);
    })); // eslint-disable-next-line new-cap

    var o = new this.creator(pixels[0].length);
    this.layerCache[layer] = o;
    return makeLayer(pixels, o);
  };

  _proto.getAsync = async function getAsync(layer, priority) {
    if (this.layerCache[layer]) {
      return this.layerCache[layer];
    }

    if (this.layerPromiseCache[layer]) {
      return this.layerPromiseCache[layer];
    }

    this.layerPromiseCache[layer] = this.getAsyncImpl(layer, priority);
    return this.layerPromiseCache[layer];
  };

  _proto.isReady = function isReady() {
    return this.proxyCache.isReady();
  };

  _proto.cancelLoading = function cancelLoading() {
    return this.proxyCache.cancelLoading();
  };

  _proto.getTag = function getTag(layer, tagName) {
    return this.proxyCache.getTag(layer * this.multiplier, tagName);
  };

  _proto.getRawPixel = function getRawPixel() {
    throw new _errors.NotImplemented();
  } // eslint-disable-next-line @typescript-eslint/no-unused-vars
  ;

  _proto.writeDiff = function writeDiff(indexArray, diffArray) {
    throw new _errors.NotImplemented();
  };

  return ThickImageCache;
}();

function createThickImage(source, thickMultiplier) {
  if (thickMultiplier === void 0) {
    thickMultiplier = 4;
  }

  var info = {
    size: [source.info.size[0], source.info.size[1], Math.floor(source.info.size[2] / thickMultiplier)],
    spacing: [source.info.spacing[0], source.info.spacing[1], source.info.spacing[2] * thickMultiplier],
    origin: source.info.origin
  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var _ref = source,
      cache = _ref.cache,
      creator = _ref.creator;
  var thick = new _image.Image3D(new _image3dspaceinfo.Image3DSpaceInfo(info.size, info.spacing, info.origin), new ThickImageCache(cache, thickMultiplier, creator), creator);
  return thick;
}

/***/ }),
/* 698 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var _exportNames = {
  parseVtp: true
};
exports.parseVtp = void 0;

var _core = __webpack_require__(30);

var _vtpfile = __webpack_require__(699);

Object.keys(_vtpfile).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _vtpfile[key];
});

var parseVtp = async function parseVtp(_ref) {
  var data = _ref.data;
  return new _core.AnyResource(new _vtpfile.VTPFile(data.getString()));
};

exports.parseVtp = parseVtp;

/***/ }),
/* 699 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.VTPFile = exports.DataArray = void 0;

var _lodashEs = __webpack_require__(32);

var _fastXmlParser = _interopRequireDefault(__webpack_require__(700));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// TODO: data of DataArray should be tuples of Array.
// Now we only use Array<number> to represent data array.
// Dont support point, normal ... vector based data.
var DataArray = function DataArray(type, numberOfTuples, data) {
  this.type = type;
  this.numberOfTuples = numberOfTuples;
  this.data = data;
};

exports.DataArray = DataArray;

var textToArray = function textToArray(text) {
  return text.split(/[\n\s]+/).filter(Boolean).map(Number);
};

var parseDataArray = function parseDataArray(tagObject) {
  var data = textToArray(tagObject['#text'] || '');
  return new DataArray(tagObject.Name, parseInt(tagObject.NumberOfComponents || tagObject.NumberOfTuples || '1', 10), data);
};

var parseDataArrayList = function parseDataArrayList(tagObjectList) {
  var ret = {};

  if (!(0, _lodashEs.isArray)(tagObjectList)) {
    var dataArray = parseDataArray(tagObjectList);
    ret[dataArray.type] = dataArray;
    return ret;
  }

  tagObjectList.forEach(function (tagObject) {
    var dataArray = parseDataArray(tagObject);
    ret[dataArray.type] = dataArray;
  });
  return ret;
};

var VTPFile = /*#__PURE__*/function () {
  // connectivity, offsets两组数据， 这些数据主要是用于处理Cell的， 最好内部使用， 不导出
  function VTPFile(data) {
    _defineProperty(this, "fieldData", void 0);

    _defineProperty(this, "cellData", void 0);

    _defineProperty(this, "pointData", void 0);

    _defineProperty(this, "points", void 0);

    _defineProperty(this, "lines", void 0);

    _defineProperty(this, "numberOfPoints", void 0);

    _defineProperty(this, "numberOfLines", void 0);

    var vtkObj = _fastXmlParser.default.parse(data, {
      ignoreAttributes: false,
      parseNodeValue: false,
      attributeNamePrefix: ''
    });

    var _vtkObj$VTKFile$PolyD = vtkObj.VTKFile.PolyData,
        Piece = _vtkObj$VTKFile$PolyD.Piece,
        FieldData = _vtkObj$VTKFile$PolyD.FieldData;
    this.numberOfPoints = parseInt(Piece.NumberOfPoints, 10);
    this.numberOfLines = parseInt(Piece.NumberOfLines, 10);
    this.fieldData = FieldData ? parseDataArrayList(FieldData.DataArray) : {};
    this.cellData = Piece.CellData && Piece.CellData.DataArray ? parseDataArrayList(Piece.CellData.DataArray) : undefined;
    this.pointData = parseDataArrayList(Piece.PointData.DataArray);
    this.points = parseDataArray(Piece.Points.DataArray);
    this.lines = parseDataArrayList(Piece.Lines.DataArray);
  }

  var _proto = VTPFile.prototype;

  _proto.getPointData = function getPointData(tagName) {
    return this.pointData[tagName];
  };

  _proto.getNumberOfCells = function getNumberOfCells() {
    return this.numberOfLines;
  };

  _proto.getNumberOfPoints = function getNumberOfPoints() {
    return this.numberOfPoints;
  };

  _proto.getFieldData = function getFieldData(tagName) {
    return this.fieldData[tagName];
  };

  _proto.getCellData = function getCellData(tagName) {
    return this.cellData && this.cellData[tagName];
  };

  _proto.getPoints = function getPoints() {
    return this.points;
  };

  return VTPFile;
}();

exports.VTPFile = VTPFile;

/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const nodeToJson = __webpack_require__(701);
const xmlToNodeobj = __webpack_require__(703);
const x2xmlnode = __webpack_require__(703);
const buildOptions = __webpack_require__(702).buildOptions;
const validator = __webpack_require__(705);

exports.parse = function(xmlData, options, validationOption) {
  if( validationOption){
    if(validationOption === true) validationOption = {}
    
    const result = validator.validate(xmlData, validationOption);
    if (result !== true) {
      throw Error( result.err.msg)
    }
  }
  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);
  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)
  //print(traversableObj, "  ");
  return nodeToJson.convertToJson(traversableObj, options);
};
exports.convertTonimn = __webpack_require__(706).convert2nimn;
exports.getTraversalObj = xmlToNodeobj.getTraversalObj;
exports.convertToJson = nodeToJson.convertToJson;
exports.convertToJsonString = __webpack_require__(707).convertToJsonString;
exports.validate = validator.validate;
exports.j2xParser = __webpack_require__(708);
exports.parseToNimn = function(xmlData, schema, options) {
  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);
};


function print(xmlNode, indentation){
  if(xmlNode){
    console.log(indentation + "{")
    console.log(indentation + "  \"tagName\": \"" + xmlNode.tagname + "\", ");
    if(xmlNode.parent){
      console.log(indentation + "  \"parent\": \"" + xmlNode.parent.tagname  + "\", ");
    }
    console.log(indentation + "  \"val\": \"" + xmlNode.val  + "\", ");
    console.log(indentation + "  \"attrs\": " + JSON.stringify(xmlNode.attrsMap,null,4)  + ", ");

    if(xmlNode.child){
      console.log(indentation + "\"child\": {")
      const indentation2 = indentation + indentation;
      Object.keys(xmlNode.child).forEach( function(key) {
        const node = xmlNode.child[key];

        if(Array.isArray(node)){
          console.log(indentation +  "\""+key+"\" :[")
          node.forEach( function(item,index) {
            //console.log(indentation + " \""+index+"\" : [")
            print(item, indentation2);
          })
          console.log(indentation + "],")  
        }else{
          console.log(indentation + " \""+key+"\" : {")
          print(node, indentation2);
          console.log(indentation + "},")  
        }
      });
      console.log(indentation + "},")
    }
    console.log(indentation + "},")
  }
}

/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const util = __webpack_require__(702);

const convertToJson = function(node, options) {
  const jObj = {};

  //when no child node or attr is present
  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {
    return util.isExist(node.val) ? node.val : '';
  } else {
    //otherwise create a textnode if node has some text
    if (util.isExist(node.val)) {
      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {
        if(options.arrayMode === "strict"){
          jObj[options.textNodeName] = [ node.val ];
        }else{
          jObj[options.textNodeName] = node.val;
        }
      }
    }
  }

  util.merge(jObj, node.attrsMap, options.arrayMode);

  const keys = Object.keys(node.child);
  for (let index = 0; index < keys.length; index++) {
    var tagname = keys[index];
    if (node.child[tagname] && node.child[tagname].length > 1) {
      jObj[tagname] = [];
      for (var tag in node.child[tagname]) {
        jObj[tagname].push(convertToJson(node.child[tagname][tag], options));
      }
    } else {
      if(options.arrayMode === true){
        const result = convertToJson(node.child[tagname][0], options)
        if(typeof result === 'object')
          jObj[tagname] = [ result ];
        else
          jObj[tagname] = result;
      }else if(options.arrayMode === "strict"){
        jObj[tagname] = [convertToJson(node.child[tagname][0], options) ];
      }else{
        jObj[tagname] = convertToJson(node.child[tagname][0], options);
      }
    }
  }

  //add value
  return jObj;
};

exports.convertToJson = convertToJson;


/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const nameStartChar = ':A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
const nameChar = nameStartChar + '\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
const nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'
const regexName = new RegExp('^' + nameRegexp + '$');

const getAllMatches = function(string, regex) {
  const matches = [];
  let match = regex.exec(string);
  while (match) {
    const allmatches = [];
    const len = match.length;
    for (let index = 0; index < len; index++) {
      allmatches.push(match[index]);
    }
    matches.push(allmatches);
    match = regex.exec(string);
  }
  return matches;
};

const isName = function(string) {
  const match = regexName.exec(string);
  return !(match === null || typeof match === 'undefined');
};

exports.isExist = function(v) {
  return typeof v !== 'undefined';
};

exports.isEmptyObject = function(obj) {
  return Object.keys(obj).length === 0;
};

/**
 * Copy all the properties of a into b.
 * @param {*} target
 * @param {*} a
 */
exports.merge = function(target, a, arrayMode) {
  if (a) {
    const keys = Object.keys(a); // will return an array of own properties
    const len = keys.length; //don't make it inline
    for (let i = 0; i < len; i++) {
      if(arrayMode === 'strict'){
        target[keys[i]] = [ a[keys[i]] ];
      }else{
        target[keys[i]] = a[keys[i]];
      }
    }
  }
};
/* exports.merge =function (b,a){
  return Object.assign(b,a);
} */

exports.getValue = function(v) {
  if (exports.isExist(v)) {
    return v;
  } else {
    return '';
  }
};

// const fakeCall = function(a) {return a;};
// const fakeCallNoReturn = function() {};

exports.buildOptions = function(options, defaultOptions, props) {
  var newOptions = {};
  if (!options) {
    return defaultOptions; //if there are not options
  }

  for (let i = 0; i < props.length; i++) {
    if (options[props[i]] !== undefined) {
      newOptions[props[i]] = options[props[i]];
    } else {
      newOptions[props[i]] = defaultOptions[props[i]];
    }
  }
  return newOptions;
};

exports.isName = isName;
exports.getAllMatches = getAllMatches;
exports.nameRegexp = nameRegexp;


/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const util = __webpack_require__(702);
const buildOptions = __webpack_require__(702).buildOptions;
const xmlNode = __webpack_require__(704);
const regx =
  '<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)'
  .replace(/NAME/g, util.nameRegexp);

//const tagsRegx = new RegExp("<(\\/?[\\w:\\-\._]+)([^>]*)>(\\s*"+cdataRegx+")*([^<]+)?","g");
//const tagsRegx = new RegExp("<(\\/?)((\\w*:)?([\\w:\\-\._]+))([^>]*)>([^<]*)("+cdataRegx+"([^<]*))*([^<]+)?","g");

//polyfill
if (!Number.parseInt && window.parseInt) {
  Number.parseInt = window.parseInt;
}
if (!Number.parseFloat && window.parseFloat) {
  Number.parseFloat = window.parseFloat;
}

const defaultOptions = {
  attributeNamePrefix: '@_',
  attrNodeName: false,
  textNodeName: '#text',
  ignoreAttributes: true,
  ignoreNameSpace: false,
  allowBooleanAttributes: false, //a tag can have attributes without any value
  //ignoreRootElement : false,
  parseNodeValue: true,
  parseAttributeValue: false,
  arrayMode: false,
  trimValues: true, //Trim string values of tag and attributes
  cdataTagName: false,
  cdataPositionChar: '\\c',
  tagValueProcessor: function(a, tagName) {
    return a;
  },
  attrValueProcessor: function(a, attrName) {
    return a;
  },
  stopNodes: []
  //decodeStrict: false,
};

exports.defaultOptions = defaultOptions;

const props = [
  'attributeNamePrefix',
  'attrNodeName',
  'textNodeName',
  'ignoreAttributes',
  'ignoreNameSpace',
  'allowBooleanAttributes',
  'parseNodeValue',
  'parseAttributeValue',
  'arrayMode',
  'trimValues',
  'cdataTagName',
  'cdataPositionChar',
  'tagValueProcessor',
  'attrValueProcessor',
  'parseTrueNumberOnly',
  'stopNodes'
];
exports.props = props;

/**
 * Trim -> valueProcessor -> parse value
 * @param {string} tagName
 * @param {string} val
 * @param {object} options
 */
function processTagValue(tagName, val, options) {
  if (val) {
    if (options.trimValues) {
      val = val.trim();
    }
    val = options.tagValueProcessor(val, tagName);
    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);
  }

  return val;
}

function resolveNameSpace(tagname, options) {
  if (options.ignoreNameSpace) {
    const tags = tagname.split(':');
    const prefix = tagname.charAt(0) === '/' ? '/' : '';
    if (tags[0] === 'xmlns') {
      return '';
    }
    if (tags.length === 2) {
      tagname = prefix + tags[1];
    }
  }
  return tagname;
}

function parseValue(val, shouldParse, parseTrueNumberOnly) {
  if (shouldParse && typeof val === 'string') {
    let parsed;
    if (val.trim() === '' || isNaN(val)) {
      parsed = val === 'true' ? true : val === 'false' ? false : val;
    } else {
      if (val.indexOf('0x') !== -1) {
        //support hexa decimal
        parsed = Number.parseInt(val, 16);
      } else if (val.indexOf('.') !== -1) {
        parsed = Number.parseFloat(val);
        val = val.replace(/\.?0+$/, "");
      } else {
        parsed = Number.parseInt(val, 10);
      }
      if (parseTrueNumberOnly) {
        parsed = String(parsed) === val ? parsed : val;
      }
    }
    return parsed;
  } else {
    if (util.isExist(val)) {
      return val;
    } else {
      return '';
    }
  }
}

//TODO: change regex to capture NS
//const attrsRegx = new RegExp("([\\w\\-\\.\\:]+)\\s*=\\s*(['\"])((.|\n)*?)\\2","gm");
const attrsRegx = new RegExp('([^\\s=]+)\\s*(=\\s*([\'"])(.*?)\\3)?', 'g');

function buildAttributesMap(attrStr, options) {
  if (!options.ignoreAttributes && typeof attrStr === 'string') {
    attrStr = attrStr.replace(/\r?\n/g, ' ');
    //attrStr = attrStr || attrStr.trim();

    const matches = util.getAllMatches(attrStr, attrsRegx);
    const len = matches.length; //don't make it inline
    const attrs = {};
    for (let i = 0; i < len; i++) {
      const attrName = resolveNameSpace(matches[i][1], options);
      if (attrName.length) {
        if (matches[i][4] !== undefined) {
          if (options.trimValues) {
            matches[i][4] = matches[i][4].trim();
          }
          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);
          attrs[options.attributeNamePrefix + attrName] = parseValue(
            matches[i][4],
            options.parseAttributeValue,
            options.parseTrueNumberOnly
          );
        } else if (options.allowBooleanAttributes) {
          attrs[options.attributeNamePrefix + attrName] = true;
        }
      }
    }
    if (!Object.keys(attrs).length) {
      return;
    }
    if (options.attrNodeName) {
      const attrCollection = {};
      attrCollection[options.attrNodeName] = attrs;
      return attrCollection;
    }
    return attrs;
  }
}

const getTraversalObj = function(xmlData, options) {
  xmlData = xmlData.replace(/(\r\n)|\n/, " ");
  options = buildOptions(options, defaultOptions, props);
  const xmlObj = new xmlNode('!xml');
  let currentNode = xmlObj;
  let textData = "";

//function match(xmlData){
  for(let i=0; i< xmlData.length; i++){
    const ch = xmlData[i];
    if(ch === '<'){
      if( xmlData[i+1] === '/') {//Closing Tag
        const closeIndex = findClosingIndex(xmlData, ">", i, "Closing Tag is not closed.")
        let tagName = xmlData.substring(i+2,closeIndex).trim();

        if(options.ignoreNameSpace){
          const colonIndex = tagName.indexOf(":");
          if(colonIndex !== -1){
            tagName = tagName.substr(colonIndex+1);
          }
        }

        /* if (currentNode.parent) {
          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);
        } */
        if(currentNode){
          if(currentNode.val){
            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData , options);
          }else{
            currentNode.val = processTagValue(tagName, textData , options);
          }
        }

        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {
          currentNode.child = []
          if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}
          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1)
        }
        currentNode = currentNode.parent;
        textData = "";
        i = closeIndex;
      } else if( xmlData[i+1] === '?') {
        i = findClosingIndex(xmlData, "?>", i, "Pi Tag is not closed.")
      } else if(xmlData.substr(i + 1, 3) === '!--') {
        i = findClosingIndex(xmlData, "-->", i, "Comment is not closed.")
      } else if( xmlData.substr(i + 1, 2) === '!D') {
        const closeIndex = findClosingIndex(xmlData, ">", i, "DOCTYPE is not closed.")
        const tagExp = xmlData.substring(i, closeIndex);
        if(tagExp.indexOf("[") >= 0){
          i = xmlData.indexOf("]>", i) + 1;
        }else{
          i = closeIndex;
        }
      }else if(xmlData.substr(i + 1, 2) === '![') {
        const closeIndex = findClosingIndex(xmlData, "]]>", i, "CDATA is not closed.") - 2
        const tagExp = xmlData.substring(i + 9,closeIndex);

        //considerations
        //1. CDATA will always have parent node
        //2. A tag with CDATA is not a leaf node so it's value would be string type.
        if(textData){
          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData , options);
          textData = "";
        }

        if (options.cdataTagName) {
          //add cdata node
          const childNode = new xmlNode(options.cdataTagName, currentNode, tagExp);
          currentNode.addChild(childNode);
          //for backtracking
          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;
          //add rest value to parent node
          if (tagExp) {
            childNode.val = tagExp;
          }
        } else {
          currentNode.val = (currentNode.val || '') + (tagExp || '');
        }

        i = closeIndex + 2;
      }else {//Opening tag
        const result = closingIndexForOpeningTag(xmlData, i+1)
        let tagExp = result.data;
        const closeIndex = result.index;
        const separatorIndex = tagExp.indexOf(" ");
        let tagName = tagExp;
        if(separatorIndex !== -1){
          tagName = tagExp.substr(0, separatorIndex).trimRight();
          tagExp = tagExp.substr(separatorIndex + 1);
        }

        if(options.ignoreNameSpace){
          const colonIndex = tagName.indexOf(":");
          if(colonIndex !== -1){
            tagName = tagName.substr(colonIndex+1);
          }
        }

        //save text to parent node
        if (currentNode && textData) {
          if(currentNode.tagname !== '!xml'){
            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue( currentNode.tagname, textData, options);
          }
        }

        if(tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1){//selfClosing tag

          if(tagName[tagName.length - 1] === "/"){ //remove trailing '/'
            tagName = tagName.substr(0, tagName.length - 1);
            tagExp = tagName;
          }else{
            tagExp = tagExp.substr(0, tagExp.length - 1);
          }

          const childNode = new xmlNode(tagName, currentNode, '');
          if(tagName !== tagExp){
            childNode.attrsMap = buildAttributesMap(tagExp, options);
          }
          currentNode.addChild(childNode);
        }else{//opening tag

          const childNode = new xmlNode( tagName, currentNode );
          if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {
            childNode.startIndex=closeIndex;
          }
          if(tagName !== tagExp){
            childNode.attrsMap = buildAttributesMap(tagExp, options);
          }
          currentNode.addChild(childNode);
          currentNode = childNode;
        }
        textData = "";
        i = closeIndex;
      }
    }else{
      textData += xmlData[i];
    }
  }
  return xmlObj;
}

function closingIndexForOpeningTag(data, i){
  let attrBoundary;
  let tagExp = "";
  for (let index = i; index < data.length; index++) {
    let ch = data[index];
    if (attrBoundary) {
        if (ch === attrBoundary) attrBoundary = "";//reset
    } else if (ch === '"' || ch === "'") {
        attrBoundary = ch;
    } else if (ch === '>') {
        return {
          data: tagExp,
          index: index
        }
    } else if (ch === '\t') {
      ch = " "
    }
    tagExp += ch;
  }
}

function findClosingIndex(xmlData, str, i, errMsg){
  const closingIndex = xmlData.indexOf(str, i);
  if(closingIndex === -1){
    throw new Error(errMsg)
  }else{
    return closingIndex + str.length - 1;
  }
}

exports.getTraversalObj = getTraversalObj;


/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(tagname, parent, val) {
  this.tagname = tagname;
  this.parent = parent;
  this.child = {}; //child tags
  this.attrsMap = {}; //attributes map
  this.val = val; //text only
  this.addChild = function(child) {
    if (Array.isArray(this.child[child.tagname])) {
      //already presents
      this.child[child.tagname].push(child);
    } else {
      this.child[child.tagname] = [child];
    }
  };
};


/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const util = __webpack_require__(702);

const defaultOptions = {
  allowBooleanAttributes: false, //A tag can have attributes without any value
};

const props = ['allowBooleanAttributes'];

//const tagsPattern = new RegExp("<\\/?([\\w:\\-_\.]+)\\s*\/?>","g");
exports.validate = function (xmlData, options) {
  options = util.buildOptions(options, defaultOptions, props);

  //xmlData = xmlData.replace(/(\r\n|\n|\r)/gm,"");//make it single line
  //xmlData = xmlData.replace(/(^\s*<\?xml.*?\?>)/g,"");//Remove XML starting tag
  //xmlData = xmlData.replace(/(<!DOCTYPE[\s\w\"\.\/\-\:]+(\[.*\])*\s*>)/g,"");//Remove DOCTYPE
  const tags = [];
  let tagFound = false;

  //indicates that the root tag has been closed (aka. depth 0 has been reached)
  let reachedRoot = false;

  if (xmlData[0] === '\ufeff') {
    // check for byte order mark (BOM)
    xmlData = xmlData.substr(1);
  }

  for (let i = 0; i < xmlData.length; i++) {
    if (xmlData[i] === '<') {
      //starting of tag
      //read until you reach to '>' avoiding any '>' in attribute value

      i++;
      if (xmlData[i] === '?') {
        i = readPI(xmlData, ++i);
        if (i.err) {
          return i;
        }
      } else if (xmlData[i] === '!') {
        i = readCommentAndCDATA(xmlData, i);
        continue;
      } else {
        let closingTag = false;
        if (xmlData[i] === '/') {
          //closing tag
          closingTag = true;
          i++;
        }
        //read tagname
        let tagName = '';
        for (; i < xmlData.length &&
          xmlData[i] !== '>' &&
          xmlData[i] !== ' ' &&
          xmlData[i] !== '\t' &&
          xmlData[i] !== '\n' &&
          xmlData[i] !== '\r'; i++
        ) {
          tagName += xmlData[i];
        }
        tagName = tagName.trim();
        //console.log(tagName);

        if (tagName[tagName.length - 1] === '/') {
          //self closing tag without attributes
          tagName = tagName.substring(0, tagName.length - 1);
          //continue;
          i--;
        }
        if (!validateTagName(tagName)) {
          let msg;
          if (tagName.trim().length === 0) {
            msg = "There is an unnecessary space between tag name and backward slash '</ ..'.";
          } else {
            msg = "Tag '"+tagName+"' is an invalid name.";
          }
          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));
        }

        const result = readAttributeStr(xmlData, i);
        if (result === false) {
          return getErrorObject('InvalidAttr', "Attributes for '"+tagName+"' have open quote.", getLineNumberForPosition(xmlData, i));
        }
        let attrStr = result.value;
        i = result.index;

        if (attrStr[attrStr.length - 1] === '/') {
          //self closing tag
          attrStr = attrStr.substring(0, attrStr.length - 1);
          const isValid = validateAttributeString(attrStr, options);
          if (isValid === true) {
            tagFound = true;
            //continue; //text may presents after self closing tag
          } else {
            //the result from the nested function returns the position of the error within the attribute
            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute
            //this gives us the absolute index in the entire xml, which we can use to find the line at last
            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));
          }
        } else if (closingTag) {
          if (!result.tagClosed) {
            return getErrorObject('InvalidTag', "Closing tag '"+tagName+"' doesn't have proper closing.", getLineNumberForPosition(xmlData, i));
          } else if (attrStr.trim().length > 0) {
            return getErrorObject('InvalidTag', "Closing tag '"+tagName+"' can't have attributes or invalid starting.", getLineNumberForPosition(xmlData, i));
          } else {
            const otg = tags.pop();
            if (tagName !== otg) {
              return getErrorObject('InvalidTag', "Closing tag '"+otg+"' is expected inplace of '"+tagName+"'.", getLineNumberForPosition(xmlData, i));
            }

            //when there are no more tags, we reached the root level.
            if (tags.length == 0) {
              reachedRoot = true;
            }
          }
        } else {
          const isValid = validateAttributeString(attrStr, options);
          if (isValid !== true) {
            //the result from the nested function returns the position of the error within the attribute
            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute
            //this gives us the absolute index in the entire xml, which we can use to find the line at last
            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));
          }

          //if the root level has been reached before ...
          if (reachedRoot === true) {
            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));
          } else {
            tags.push(tagName);
          }
          tagFound = true;
        }

        //skip tag text value
        //It may include comments and CDATA value
        for (i++; i < xmlData.length; i++) {
          if (xmlData[i] === '<') {
            if (xmlData[i + 1] === '!') {
              //comment or CADATA
              i++;
              i = readCommentAndCDATA(xmlData, i);
              continue;
            } else {
              break;
            }
          } else if (xmlData[i] === '&') {
            const afterAmp = validateAmpersand(xmlData, i);
            if (afterAmp == -1)
              return getErrorObject('InvalidChar', "char '&' is not expected.", getLineNumberForPosition(xmlData, i));
            i = afterAmp;
          }
        } //end of reading tag text value
        if (xmlData[i] === '<') {
          i--;
        }
      }
    } else {
      if (xmlData[i] === ' ' || xmlData[i] === '\t' || xmlData[i] === '\n' || xmlData[i] === '\r') {
        continue;
      }
      return getErrorObject('InvalidChar', "char '"+xmlData[i]+"' is not expected.", getLineNumberForPosition(xmlData, i));
    }
  }

  if (!tagFound) {
    return getErrorObject('InvalidXml', 'Start tag expected.', 1);
  } else if (tags.length > 0) {
    return getErrorObject('InvalidXml', "Invalid '"+JSON.stringify(tags, null, 4).replace(/\r?\n/g, '')+"' found.", 1);
  }

  return true;
};

/**
 * Read Processing insstructions and skip
 * @param {*} xmlData
 * @param {*} i
 */
function readPI(xmlData, i) {
  var start = i;
  for (; i < xmlData.length; i++) {
    if (xmlData[i] == '?' || xmlData[i] == ' ') {
      //tagname
      var tagname = xmlData.substr(start, i - start);
      if (i > 5 && tagname === 'xml') {
        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));
      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {
        //check if valid attribut string
        i++;
        break;
      } else {
        continue;
      }
    }
  }
  return i;
}

function readCommentAndCDATA(xmlData, i) {
  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {
    //comment
    for (i += 3; i < xmlData.length; i++) {
      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {
        i += 2;
        break;
      }
    }
  } else if (
    xmlData.length > i + 8 &&
    xmlData[i + 1] === 'D' &&
    xmlData[i + 2] === 'O' &&
    xmlData[i + 3] === 'C' &&
    xmlData[i + 4] === 'T' &&
    xmlData[i + 5] === 'Y' &&
    xmlData[i + 6] === 'P' &&
    xmlData[i + 7] === 'E'
  ) {
    let angleBracketsCount = 1;
    for (i += 8; i < xmlData.length; i++) {
      if (xmlData[i] === '<') {
        angleBracketsCount++;
      } else if (xmlData[i] === '>') {
        angleBracketsCount--;
        if (angleBracketsCount === 0) {
          break;
        }
      }
    }
  } else if (
    xmlData.length > i + 9 &&
    xmlData[i + 1] === '[' &&
    xmlData[i + 2] === 'C' &&
    xmlData[i + 3] === 'D' &&
    xmlData[i + 4] === 'A' &&
    xmlData[i + 5] === 'T' &&
    xmlData[i + 6] === 'A' &&
    xmlData[i + 7] === '['
  ) {
    for (i += 8; i < xmlData.length; i++) {
      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {
        i += 2;
        break;
      }
    }
  }

  return i;
}

var doubleQuote = '"';
var singleQuote = "'";

/**
 * Keep reading xmlData until '<' is found outside the attribute value.
 * @param {string} xmlData
 * @param {number} i
 */
function readAttributeStr(xmlData, i) {
  let attrStr = '';
  let startChar = '';
  let tagClosed = false;
  for (; i < xmlData.length; i++) {
    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {
      if (startChar === '') {
        startChar = xmlData[i];
      } else if (startChar !== xmlData[i]) {
        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa
        continue;
      } else {
        startChar = '';
      }
    } else if (xmlData[i] === '>') {
      if (startChar === '') {
        tagClosed = true;
        break;
      }
    }
    attrStr += xmlData[i];
  }
  if (startChar !== '') {
    return false;
  }

  return {
    value: attrStr,
    index: i,
    tagClosed: tagClosed
  };
}

/**
 * Select all the attributes whether valid or invalid.
 */
const validAttrStrRegxp = new RegExp('(\\s*)([^\\s=]+)(\\s*=)?(\\s*([\'"])(([\\s\\S])*?)\\5)?', 'g');

//attr, ="sd", a="amit's", a="sd"b="saf", ab  cd=""

function validateAttributeString(attrStr, options) {
  //console.log("start:"+attrStr+":end");

  //if(attrStr.trim().length === 0) return true; //empty string

  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);
  const attrNames = {};

  for (let i = 0; i < matches.length; i++) {
    if (matches[i][1].length === 0) {
      //nospace before attribute name: a="sd"b="saf"
      return getErrorObject('InvalidAttr', "Attribute '"+matches[i][2]+"' has no space in starting.", getPositionFromMatch(attrStr, matches[i][0]))
    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {
      //independent attribute: ab
      return getErrorObject('InvalidAttr', "boolean attribute '"+matches[i][2]+"' is not allowed.", getPositionFromMatch(attrStr, matches[i][0]));
    }
    /* else if(matches[i][6] === undefined){//attribute without value: ab=
                    return { err: { code:"InvalidAttr",msg:"attribute " + matches[i][2] + " has no value assigned."}};
                } */
    const attrName = matches[i][2];
    if (!validateAttrName(attrName)) {
      return getErrorObject('InvalidAttr', "Attribute '"+attrName+"' is an invalid name.", getPositionFromMatch(attrStr, matches[i][0]));
    }
    if (!attrNames.hasOwnProperty(attrName)) {
      //check for duplicate attribute.
      attrNames[attrName] = 1;
    } else {
      return getErrorObject('InvalidAttr', "Attribute '"+attrName+"' is repeated.", getPositionFromMatch(attrStr, matches[i][0]));
    }
  }

  return true;
}

function validateNumberAmpersand(xmlData, i) {
  let re = /\d/;
  if (xmlData[i] === 'x') {
    i++;
    re = /[\da-fA-F]/;
  }
  for (; i < xmlData.length; i++) {
    if (xmlData[i] === ';')
      return i;
    if (!xmlData[i].match(re))
      break;
  }
  return -1;
}

function validateAmpersand(xmlData, i) {
  // https://www.w3.org/TR/xml/#dt-charref
  i++;
  if (xmlData[i] === ';')
    return -1;
  if (xmlData[i] === '#') {
    i++;
    return validateNumberAmpersand(xmlData, i);
  }
  let count = 0;
  for (; i < xmlData.length; i++, count++) {
    if (xmlData[i].match(/\w/) && count < 20)
      continue;
    if (xmlData[i] === ';')
      break;
    return -1;
  }
  return i;
}

function getErrorObject(code, message, lineNumber) {
  return {
    err: {
      code: code,
      msg: message,
      line: lineNumber,
    },
  };
}

function validateAttrName(attrName) {
  return util.isName(attrName);
}

// const startsWithXML = /^xml/i;

function validateTagName(tagname) {
  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;
}

//this function returns the line number for the character at the given index
function getLineNumberForPosition(xmlData, index) {
  var lines = xmlData.substring(0, index).split(/\r?\n/);
  return lines.length;
}

//this function returns the position of the last character of match within attrStr
function getPositionFromMatch(attrStr, match) {
  return attrStr.indexOf(match) + match.length;
}


/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const char = function(a) {
  return String.fromCharCode(a);
};

const chars = {
  nilChar: char(176),
  missingChar: char(201),
  nilPremitive: char(175),
  missingPremitive: char(200),

  emptyChar: char(178),
  emptyValue: char(177), //empty Premitive

  boundryChar: char(179),

  objStart: char(198),
  arrStart: char(204),
  arrayEnd: char(185),
};

const charsArr = [
  chars.nilChar,
  chars.nilPremitive,
  chars.missingChar,
  chars.missingPremitive,
  chars.boundryChar,
  chars.emptyChar,
  chars.emptyValue,
  chars.arrayEnd,
  chars.objStart,
  chars.arrStart,
];

const _e = function(node, e_schema, options) {
  if (typeof e_schema === 'string') {
    //premitive
    if (node && node[0] && node[0].val !== undefined) {
      return getValue(node[0].val, e_schema);
    } else {
      return getValue(node, e_schema);
    }
  } else {
    const hasValidData = hasData(node);
    if (hasValidData === true) {
      let str = '';
      if (Array.isArray(e_schema)) {
        //attributes can't be repeated. hence check in children tags only
        str += chars.arrStart;
        const itemSchema = e_schema[0];
        //var itemSchemaType = itemSchema;
        const arr_len = node.length;

        if (typeof itemSchema === 'string') {
          for (let arr_i = 0; arr_i < arr_len; arr_i++) {
            const r = getValue(node[arr_i].val, itemSchema);
            str = processValue(str, r);
          }
        } else {
          for (let arr_i = 0; arr_i < arr_len; arr_i++) {
            const r = _e(node[arr_i], itemSchema, options);
            str = processValue(str, r);
          }
        }
        str += chars.arrayEnd; //indicates that next item is not array item
      } else {
        //object
        str += chars.objStart;
        const keys = Object.keys(e_schema);
        if (Array.isArray(node)) {
          node = node[0];
        }
        for (let i in keys) {
          const key = keys[i];
          //a property defined in schema can be present either in attrsMap or children tags
          //options.textNodeName will not present in both maps, take it's value from val
          //options.attrNodeName will be present in attrsMap
          let r;
          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {
            r = _e(node.attrsMap[key], e_schema[key], options);
          } else if (key === options.textNodeName) {
            r = _e(node.val, e_schema[key], options);
          } else {
            r = _e(node.child[key], e_schema[key], options);
          }
          str = processValue(str, r);
        }
      }
      return str;
    } else {
      return hasValidData;
    }
  }
};

const getValue = function(a /*, type*/) {
  switch (a) {
    case undefined:
      return chars.missingPremitive;
    case null:
      return chars.nilPremitive;
    case '':
      return chars.emptyValue;
    default:
      return a;
  }
};

const processValue = function(str, r) {
  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {
    str += chars.boundryChar;
  }
  return str + r;
};

const isAppChar = function(ch) {
  return charsArr.indexOf(ch) !== -1;
};

function hasData(jObj) {
  if (jObj === undefined) {
    return chars.missingChar;
  } else if (jObj === null) {
    return chars.nilChar;
  } else if (
    jObj.child &&
    Object.keys(jObj.child).length === 0 &&
    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)
  ) {
    return chars.emptyChar;
  } else {
    return true;
  }
}

const x2j = __webpack_require__(703);
const buildOptions = __webpack_require__(702).buildOptions;

const convert2nimn = function(node, e_schema, options) {
  options = buildOptions(options, x2j.defaultOptions, x2j.props);
  return _e(node, e_schema, options);
};

exports.convert2nimn = convert2nimn;


/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const util = __webpack_require__(702);
const buildOptions = __webpack_require__(702).buildOptions;
const x2j = __webpack_require__(703);

//TODO: do it later
const convertToJsonString = function(node, options) {
  options = buildOptions(options, x2j.defaultOptions, x2j.props);

  options.indentBy = options.indentBy || '';
  return _cToJsonStr(node, options, 0);
};

const _cToJsonStr = function(node, options, level) {
  let jObj = '{';

  //traver through all the children
  const keys = Object.keys(node.child);

  for (let index = 0; index < keys.length; index++) {
    var tagname = keys[index];
    if (node.child[tagname] && node.child[tagname].length > 1) {
      jObj += '"' + tagname + '" : [ ';
      for (var tag in node.child[tagname]) {
        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';
      }
      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last
    } else {
      jObj += '"' + tagname + '" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';
    }
  }
  util.merge(jObj, node.attrsMap);
  //add attrsMap as new children
  if (util.isEmptyObject(jObj)) {
    return util.isExist(node.val) ? node.val : '';
  } else {
    if (util.isExist(node.val)) {
      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {
        jObj += '"' + options.textNodeName + '" : ' + stringval(node.val);
      }
    }
  }
  //add value
  if (jObj[jObj.length - 1] === ',') {
    jObj = jObj.substr(0, jObj.length - 2);
  }
  return jObj + '}';
};

function stringval(v) {
  if (v === true || v === false || !isNaN(v)) {
    return v;
  } else {
    return '"' + v + '"';
  }
}

function indentate(options, level) {
  return options.indentBy.repeat(level);
}

exports.convertToJsonString = convertToJsonString;


/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

//parse Empty Node as self closing node
const buildOptions = __webpack_require__(702).buildOptions;

const defaultOptions = {
  attributeNamePrefix: '@_',
  attrNodeName: false,
  textNodeName: '#text',
  ignoreAttributes: true,
  cdataTagName: false,
  cdataPositionChar: '\\c',
  format: false,
  indentBy: '  ',
  supressEmptyNode: false,
  tagValueProcessor: function(a) {
    return a;
  },
  attrValueProcessor: function(a) {
    return a;
  },
};

const props = [
  'attributeNamePrefix',
  'attrNodeName',
  'textNodeName',
  'ignoreAttributes',
  'cdataTagName',
  'cdataPositionChar',
  'format',
  'indentBy',
  'supressEmptyNode',
  'tagValueProcessor',
  'attrValueProcessor',
];

function Parser(options) {
  this.options = buildOptions(options, defaultOptions, props);
  if (this.options.ignoreAttributes || this.options.attrNodeName) {
    this.isAttribute = function(/*a*/) {
      return false;
    };
  } else {
    this.attrPrefixLen = this.options.attributeNamePrefix.length;
    this.isAttribute = isAttribute;
  }
  if (this.options.cdataTagName) {
    this.isCDATA = isCDATA;
  } else {
    this.isCDATA = function(/*a*/) {
      return false;
    };
  }
  this.replaceCDATAstr = replaceCDATAstr;
  this.replaceCDATAarr = replaceCDATAarr;

  if (this.options.format) {
    this.indentate = indentate;
    this.tagEndChar = '>\n';
    this.newLine = '\n';
  } else {
    this.indentate = function() {
      return '';
    };
    this.tagEndChar = '>';
    this.newLine = '';
  }

  if (this.options.supressEmptyNode) {
    this.buildTextNode = buildEmptyTextNode;
    this.buildObjNode = buildEmptyObjNode;
  } else {
    this.buildTextNode = buildTextValNode;
    this.buildObjNode = buildObjectNode;
  }

  this.buildTextValNode = buildTextValNode;
  this.buildObjectNode = buildObjectNode;
}

Parser.prototype.parse = function(jObj) {
  return this.j2x(jObj, 0).val;
};

Parser.prototype.j2x = function(jObj, level) {
  let attrStr = '';
  let val = '';
  const keys = Object.keys(jObj);
  const len = keys.length;
  for (let i = 0; i < len; i++) {
    const key = keys[i];
    if (typeof jObj[key] === 'undefined') {
      // supress undefined node
    } else if (jObj[key] === null) {
      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
    } else if (jObj[key] instanceof Date) {
      val += this.buildTextNode(jObj[key], key, '', level);
    } else if (typeof jObj[key] !== 'object') {
      //premitive type
      const attr = this.isAttribute(key);
      if (attr) {
        attrStr += ' ' + attr + '="' + this.options.attrValueProcessor('' + jObj[key]) + '"';
      } else if (this.isCDATA(key)) {
        if (jObj[this.options.textNodeName]) {
          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);
        } else {
          val += this.replaceCDATAstr('', jObj[key]);
        }
      } else {
        //tag value
        if (key === this.options.textNodeName) {
          if (jObj[this.options.cdataTagName]) {
            //value will added while processing cdata
          } else {
            val += this.options.tagValueProcessor('' + jObj[key]);
          }
        } else {
          val += this.buildTextNode(jObj[key], key, '', level);
        }
      }
    } else if (Array.isArray(jObj[key])) {
      //repeated nodes
      if (this.isCDATA(key)) {
        val += this.indentate(level);
        if (jObj[this.options.textNodeName]) {
          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);
        } else {
          val += this.replaceCDATAarr('', jObj[key]);
        }
      } else {
        //nested nodes
        const arrLen = jObj[key].length;
        for (let j = 0; j < arrLen; j++) {
          const item = jObj[key][j];
          if (typeof item === 'undefined') {
            // supress undefined node
          } else if (item === null) {
            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
          } else if (typeof item === 'object') {
            const result = this.j2x(item, level + 1);
            val += this.buildObjNode(result.val, key, result.attrStr, level);
          } else {
            val += this.buildTextNode(item, key, '', level);
          }
        }
      }
    } else {
      //nested node
      if (this.options.attrNodeName && key === this.options.attrNodeName) {
        const Ks = Object.keys(jObj[key]);
        const L = Ks.length;
        for (let j = 0; j < L; j++) {
          attrStr += ' ' + Ks[j] + '="' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '"';
        }
      } else {
        const result = this.j2x(jObj[key], level + 1);
        val += this.buildObjNode(result.val, key, result.attrStr, level);
      }
    }
  }
  return {attrStr: attrStr, val: val};
};

function replaceCDATAstr(str, cdata) {
  str = this.options.tagValueProcessor('' + str);
  if (this.options.cdataPositionChar === '' || str === '') {
    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;
  } else {
    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);
  }
}

function replaceCDATAarr(str, cdata) {
  str = this.options.tagValueProcessor('' + str);
  if (this.options.cdataPositionChar === '' || str === '') {
    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;
  } else {
    for (let v in cdata) {
      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');
    }
    return str + this.newLine;
  }
}

function buildObjectNode(val, key, attrStr, level) {
  if (attrStr && !val.includes('<')) {
    return (
      this.indentate(level) +
      '<' +
      key +
      attrStr +
      '>' +
      val +
      //+ this.newLine
      // + this.indentate(level)
      '</' +
      key +
      this.tagEndChar
    );
  } else {
    return (
      this.indentate(level) +
      '<' +
      key +
      attrStr +
      this.tagEndChar +
      val +
      //+ this.newLine
      this.indentate(level) +
      '</' +
      key +
      this.tagEndChar
    );
  }
}

function buildEmptyObjNode(val, key, attrStr, level) {
  if (val !== '') {
    return this.buildObjectNode(val, key, attrStr, level);
  } else {
    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;
    //+ this.newLine
  }
}

function buildTextValNode(val, key, attrStr, level) {
  return (
    this.indentate(level) +
    '<' +
    key +
    attrStr +
    '>' +
    this.options.tagValueProcessor(val) +
    '</' +
    key +
    this.tagEndChar
  );
}

function buildEmptyTextNode(val, key, attrStr, level) {
  if (val !== '') {
    return this.buildTextValNode(val, key, attrStr, level);
  } else {
    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;
  }
}

function indentate(level) {
  return this.options.indentBy.repeat(level);
}

function isAttribute(name /*, options*/) {
  if (name.startsWith(this.options.attributeNamePrefix)) {
    return name.substr(this.attrPrefixLen);
  } else {
    return false;
  }
}

function isCDATA(name) {
  return name === this.options.cdataTagName;
}

//formatting
//indentation
//\n after each closing or self closing tag

module.exports = Parser;


/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _rlefile = __webpack_require__(710);

Object.keys(_rlefile).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _rlefile[key];
});

var _rle = __webpack_require__(711);

Object.keys(_rle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _rle[key];
});

var _rleimageparser = __webpack_require__(712);

Object.keys(_rleimageparser).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _rleimageparser[key];
});

/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.encodeRLE = exports.decodeRLE = void 0;

var _rle = __webpack_require__(711);

var _core = __webpack_require__(30);

var encode = function encode(file) {
  var headerArrayBuffer = (0, _core.str2ab)(JSON.stringify(file.header));
  var totalSize = 4 + headerArrayBuffer.byteLength + file.data.byteLength;
  var ret = new ArrayBuffer(totalSize); // fill totalSize

  new Int32Array(ret, 0, 4)[0] = headerArrayBuffer.byteLength; // fill headerContent

  new Uint8Array(ret, 4, headerArrayBuffer.byteLength).set(new Uint8Array(headerArrayBuffer));
  new Uint8Array(ret, 4 + headerArrayBuffer.byteLength).set(new Uint8Array(file.data));
  return ret;
};

var decode = function decode(arrayBuffer) {
  var headerSize = new Int32Array(arrayBuffer, 0, 4)[0];
  var header = JSON.parse((0, _core.ab2str)(arrayBuffer.slice(4, 4 + headerSize)));
  var data = arrayBuffer.slice(4 + headerSize);
  return {
    header: header,
    data: data
  };
};

var decodeRLE = function decodeRLE(arrayBuffer) {
  var file = decode(arrayBuffer);
  var uncompress = (0, _rle.decompress)(new Uint8Array(file.data), file.header.size[0] * file.header.size[1] * file.header.size[2]);
  return {
    origin: file.header.origin,
    size: file.header.size,
    spacing: file.header.spacing,
    buffer: uncompress
  };
};

exports.decodeRLE = decodeRLE;

var encodeRLE = function encodeRLE(origin, size, spacing, buffer) {
  var compressed = (0, _rle.compress)(buffer);
  var header = {
    origin: origin,
    size: size,
    spacing: spacing,
    id: 'RLE',
    contentSize: compressed.length
  };
  return encode({
    header: header,
    data: compressed.buffer
  });
};

exports.encodeRLE = encodeRLE;

/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.decompress = exports.compress = void 0;

var _lodashEs = __webpack_require__(32);

var _logger = _interopRequireDefault(__webpack_require__(683));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var compress = function compress(buffer) {
  // let maxValue = -100000;
  // let minValue = 100000;
  var l = [];
  var count = 0;
  var value = 0;

  var newPair = function newPair(newValue) {
    l.push([count, value]);
    count = 1;
    value = newValue;
  };

  for (var i = 0; i < buffer.length; i += 1) {
    var newValue = (0, _lodashEs.clamp)(buffer[i], 0, 255);

    if (count === 0) {
      count += 1;
      value = newValue;
    } else if (value === newValue) {
      if (count === 255) {
        newPair(value);
      } else {
        count += 1;
      }
    } else {
      newPair(newValue);
    }
  }

  newPair(0);

  _logger.default.log('pair count', l.length);

  var out = new Uint8Array(l.length * 2);

  for (var _i = 0; _i < l.length; _i += 1) {
    // eslint-disable-next-line prefer-destructuring
    out[_i * 2] = l[_i][0]; // eslint-disable-next-line prefer-destructuring

    out[_i * 2 + 1] = l[_i][1];
  }

  return out;
};

exports.compress = compress;

var decompress = function decompress(buffer, size, type) {
  if (type === void 0) {
    type = Uint8Array;
  }

  // eslint-disable-next-line new-cap
  var out = new type(size);
  var c = 0;

  for (var i = 0; i < buffer.length; i += 2) {
    var count = buffer[i];
    var value = buffer[i + 1];

    for (var j = 0; j < count; j += 1) {
      // eslint-disable-next-line no-plusplus
      out[c++] = value;
    }
  }

  return out;
};

exports.decompress = decompress;

/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseRLEImage = void 0;

var _core = __webpack_require__(30);

var _image = __webpack_require__(26);

var _rlefile = __webpack_require__(710);

var _nifti = __webpack_require__(713);

var parseRLEImage = async function parseRLEImage(params) {
  var rleData = (0, _rlefile.decodeRLE)(params.data.getArrayBuffer());
  var info = {
    origin: rleData.origin,
    size: rleData.size,
    spacing: rleData.spacing
  };
  return new _core.AnyResource(new _image.Image3D(info, new _nifti.NiftiCache(rleData.buffer, info), Uint8Array));
};

exports.parseRLEImage = parseRLEImage;

/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _parseniftiimage = __webpack_require__(714);

Object.keys(_parseniftiimage).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _parseniftiimage[key];
});

var _nifticache = __webpack_require__(715);

Object.keys(_nifticache).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _nifticache[key];
});

var _niftiwriter = __webpack_require__(719);

Object.keys(_niftiwriter).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _niftiwriter[key];
});

var _niftiparser = __webpack_require__(716);

Object.keys(_niftiparser).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _niftiparser[key];
});

/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseNiftiImageWithWorker = exports.parseNiftiImage = void 0;

var _nifticache = __webpack_require__(715);

var _niftiparser = __webpack_require__(716);

var _image = __webpack_require__(26);

/* eslint-disable @typescript-eslint/no-explicit-any */
var logger = console;

var parseNiftiImageImpl = function parseNiftiImageImpl(fn, perfName) {
  return async function (_ref) {
    var data = _ref.data;
    logger.time(perfName);
    var ab = data.getArrayBuffer();

    var _await$fn = await fn(ab),
        buffer = _await$fn.buffer,
        info = _await$fn.info,
        creator = _await$fn.creator,
        header = _await$fn.header;

    var ret = new _image.Image3D(info, new _nifticache.NiftiCache(buffer, info), creator);
    logger.timeEnd(perfName);
    ret.niftiHeader = header;
    return ret;
  };
};

var parseNiftiImage = parseNiftiImageImpl(async function (ab) {
  return (0, _niftiparser.parseNifti)(ab);
}, 'parseNiftiImage');
exports.parseNiftiImage = parseNiftiImage;
var parseNiftiImageWithWorker = parseNiftiImageImpl(_niftiparser.parseNiftiWithWorker, 'parseNiftiImageWithWorker');
exports.parseNiftiImageWithWorker = parseNiftiImageWithWorker;

/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.NiftiCache = void 0;

var _errors = __webpack_require__(673);

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var NiftiCache = /*#__PURE__*/function () {
  function NiftiCache(buffer, info) {
    this.buffer = buffer;
    this.info = info;

    _defineProperty(this, "cache", void 0);

    if (buffer.length !== info.size[0] * info.size[1] * info.size[2]) {
      throw new Error('NiftiCache, data size is not match with data info');
    }

    this.cache = new Array(info.size[2]);
  } // eslint-disable-next-line class-methods-use-this


  var _proto = NiftiCache.prototype;

  _proto.force = async function force(_priority) {// do nothing
  };

  _proto.getBuffer = function getBuffer(layer) {
    if (layer < 0 || layer >= this.info.size[2]) {
      throw new Error("NiftiCache: layer " + layer + " is out of index");
    }

    if (!this.cache[layer]) {
      var start = this.info.size[0] * this.info.size[1] * layer;
      var end = this.info.size[0] * this.info.size[1] * (layer + 1);
      this.cache[layer] = this.buffer.subarray(start, end);
    }

    return this.cache[layer];
  };

  _proto.getSync = function getSync(layer) {
    return this.getBuffer(layer);
  };

  _proto.getAsync = async function getAsync(layer, _priority) {
    return this.getSync(layer);
  } // eslint-disable-next-line class-methods-use-this
  ;

  _proto.getTag = function getTag() {
    throw new _errors.NotImplemented();
  } // eslint-disable-next-line class-methods-use-this
  ;

  _proto.isReady = function isReady() {
    return true;
  } // eslint-disable-next-line class-methods-use-this
  ;

  _proto.cancelLoading = function cancelLoading() {
    throw new _errors.NotImplemented();
  };

  _proto.getRawPixel = function getRawPixel() {
    return this.buffer;
  } // TODO: handle the case of out of index.
  ;

  _proto.writeDiff = function writeDiff(indexArray, diffArray) {
    for (var i = 0; i < indexArray.length; i++) {
      this.buffer[indexArray[i]] += diffArray[i];
    }

    this.cache = new Array(this.info.size[2]);
  };

  return NiftiCache;
}();

exports.NiftiCache = NiftiCache;

/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseNiftiWithWorker = exports.parseNifti = void 0;

var _niftiReaderJs = _interopRequireDefault(__webpack_require__(3));

var _pako = _interopRequireDefault(__webpack_require__(7));

var _inflatearraybuffer = __webpack_require__(717);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var pixelExtractors = {
  2: Uint8Array,
  4: Int16Array,
  8: Int32Array,
  16: Float32Array,
  64: Float64Array,
  256: Int8Array,
  512: Uint16Array,
  768: Uint32Array
};

var parseNiftiWithBuffer = function parseNiftiWithBuffer(data) {
  if (!_niftiReaderJs.default.isNIFTI(data)) {
    throw new Error('parse nifti, not nifti file');
  }

  var header = _niftiReaderJs.default.readHeader(data);

  var image = _niftiReaderJs.default.readImage(header, data);

  return {
    buffer: new pixelExtractors[header.datatypeCode](image),
    info: {
      origin: [header.qoffset_x, header.qoffset_y, header.qoffset_z],
      size: [header.dims[1], header.dims[2], header.dims[3]],
      spacing: [header.pixDims[1], header.pixDims[2], header.pixDims[3]]
    },
    creator: pixelExtractors[header.datatypeCode],
    header: header
  };
};

var parseNifti = function parseNifti(arrayBuffer) {
  return parseNiftiWithBuffer(_niftiReaderJs.default.isCompressed(arrayBuffer) ? _pako.default.inflate(new Uint8Array(arrayBuffer)).buffer : arrayBuffer);
};

exports.parseNifti = parseNifti;

var parseNiftiWithWorker = async function parseNiftiWithWorker(arrayBuffer) {
  if (_niftiReaderJs.default.isCompressed(arrayBuffer)) {
    var data = await (0, _inflatearraybuffer.inflateArrayBuffer)(arrayBuffer);
    return parseNiftiWithBuffer(data);
  }

  return parseNiftiWithBuffer(arrayBuffer);
};

exports.parseNiftiWithWorker = parseNiftiWithWorker;

/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.inflateArrayBuffer = void 0;

var _comlink = __webpack_require__(1);

var _makeworker = __webpack_require__(718);

var inflateArrayBuffer = async function inflateArrayBuffer(arrayBuffer) {
  var worker = (0, _makeworker.makeWorker)('workers/inflatearraybuffer.js');
  var algo = (0, _comlink.wrap)(worker);
  var ret = await algo.inflate((0, _comlink.transfer)(arrayBuffer, [arrayBuffer]));

  algo[_comlink.releaseProxy]();

  worker.terminate();
  return ret;
};

exports.inflateArrayBuffer = inflateArrayBuffer;

/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.makeWorker = void 0;

var cheatParcel = function cheatParcel(path) {
  return new Worker(path);
};

var makeWorker = function makeWorker(path) {
  return cheatParcel(path);
};

exports.makeWorker = makeWorker;

/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.writeImage = writeImage;

var _pako = _interopRequireDefault(__webpack_require__(7));

var _errors = __webpack_require__(673);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable prefer-destructuring */
// only support nifti1.
var DataType;

(function (DataType) {
  DataType[DataType["TYPE_BINARY"] = 1] = "TYPE_BINARY";
  DataType[DataType["TYPE_UINT8"] = 2] = "TYPE_UINT8";
  DataType[DataType["TYPE_INT16"] = 4] = "TYPE_INT16";
  DataType[DataType["TYPE_INT32"] = 8] = "TYPE_INT32";
  DataType[DataType["TYPE_FLOAT32"] = 16] = "TYPE_FLOAT32";
  DataType[DataType["TYPE_COMPLEX64"] = 32] = "TYPE_COMPLEX64";
  DataType[DataType["TYPE_FLOAT64"] = 64] = "TYPE_FLOAT64";
  DataType[DataType["TYPE_RGB24"] = 128] = "TYPE_RGB24";
  DataType[DataType["TYPE_INT8"] = 256] = "TYPE_INT8";
  DataType[DataType["TYPE_UINT16"] = 512] = "TYPE_UINT16";
  DataType[DataType["TYPE_UINT32"] = 768] = "TYPE_UINT32";
  DataType[DataType["TYPE_INT64"] = 1024] = "TYPE_INT64";
  DataType[DataType["TYPE_UINT64"] = 1280] = "TYPE_UINT64";
  DataType[DataType["TYPE_FLOAT128"] = 1536] = "TYPE_FLOAT128";
  DataType[DataType["TYPE_COMPLEX128"] = 1792] = "TYPE_COMPLEX128";
  DataType[DataType["TYPE_COMPLEX256"] = 2048] = "TYPE_COMPLEX256";
})(DataType || (DataType = {}));

var UnitCode;

(function (UnitCode) {
  UnitCode[UnitCode["UNITS_MM"] = 2] = "UNITS_MM";
})(UnitCode || (UnitCode = {}));

var MAGIC_COOKIE = 348;
var STANDARD_HEADER_SIZE = 348;
var MAGIC_NUMBER_LOCATION = 344;
var MAGIC_NUMBER = [0x6e, 0x2b, 0x31]; // n + 1

var descFromArray = function descFromArray(array) {
  if (array instanceof Uint8Array) {
    return {
      code: DataType.TYPE_UINT8,
      bytesPerElement: 1
    };
  }

  if (array instanceof Int16Array) {
    return {
      code: DataType.TYPE_INT16,
      bytesPerElement: 2
    };
  }

  if (array instanceof Int32Array) {
    return {
      code: DataType.TYPE_INT32,
      bytesPerElement: 4
    };
  }

  if (array instanceof Float32Array) {
    return {
      code: DataType.TYPE_FLOAT32,
      bytesPerElement: 4
    };
  }

  if (array instanceof Float64Array) {
    return {
      code: DataType.TYPE_FLOAT64,
      bytesPerElement: 8
    };
  }

  if (array instanceof Int8Array) {
    return {
      code: DataType.TYPE_INT8,
      bytesPerElement: 1
    };
  }

  if (array instanceof Uint16Array) {
    return {
      code: DataType.TYPE_UINT16,
      bytesPerElement: 2
    };
  }

  if (array instanceof Uint32Array) {
    return {
      code: DataType.TYPE_UINT32,
      bytesPerElement: 4
    };
  }

  throw new _errors.NotImplemented();
}; // nifti format: https://brainder.org/2012/09/23/the-nifti-file-format/


function writeHeader(ab, image, desc) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  var niftiHeader = image.niftiHeader;
  var littleEndian = niftiHeader ? niftiHeader.littleEndian : true;
  var dataView = new DataView(ab);
  dataView.setInt32(0, MAGIC_COOKIE, littleEndian); // magic

  var dims = [3, image.info.size[0], image.info.size[1], image.info.size[2], 1, 1, 1, 1];

  if (niftiHeader) {
    dataView.setInt8(39, niftiHeader.dim_info);
  }

  dims.forEach(function (v, i) {
    return dataView.setInt16(40 + i * 2, v, littleEndian);
  }); // dims

  if (niftiHeader) {
    dataView.setFloat32(56, niftiHeader.intent_p1, littleEndian);
    dataView.setFloat32(60, niftiHeader.intent_p2, littleEndian);
    dataView.setFloat32(64, niftiHeader.intent_p3, littleEndian);
    dataView.setInt16(68, niftiHeader.intent_code, littleEndian);
  }

  dataView.setInt16(70, desc.code, littleEndian); // datatypeCode

  dataView.setInt16(72, desc.bytesPerElement * 8, littleEndian); // numBitsPerVoxel

  if (niftiHeader) {
    dataView.setInt16(74, niftiHeader.slice_start, littleEndian);
  }

  var pixelDims = [1, image.info.spacing[0], image.info.spacing[1], image.info.spacing[2], 0, 0, 0, 0];
  pixelDims.forEach(function (v, i) {
    return dataView.setFloat32(76 + i * 4, v, littleEndian);
  }); // pixDims

  dataView.setFloat32(108, STANDARD_HEADER_SIZE + 4, littleEndian); // vox_offset

  dataView.setFloat32(112, niftiHeader ? niftiHeader.scl_slope : 1, littleEndian); // scl_slope

  dataView.setFloat32(116, niftiHeader ? niftiHeader.scl_inter : 0, littleEndian); // scl_inter

  if (niftiHeader) {
    dataView.setInt16(120, niftiHeader.slice_end, littleEndian);
    dataView.setInt8(122, niftiHeader.slice_code);
  }

  dataView.setInt8(123, niftiHeader ? niftiHeader.xyzt_units : UnitCode.UNITS_MM); // xyzt_units

  if (niftiHeader) {
    dataView.setFloat32(124, niftiHeader.cal_max, littleEndian);
    dataView.setFloat32(128, niftiHeader.cal_min, littleEndian);
    dataView.setFloat32(132, niftiHeader.slice_duration, littleEndian);
    dataView.setFloat32(136, niftiHeader.toffset, littleEndian); // ignore description and aux_file
  }

  dataView.setInt16(252, niftiHeader ? niftiHeader.qform_code : 1, littleEndian); // qform_code

  dataView.setInt16(254, niftiHeader ? niftiHeader.sform_code : 1, littleEndian); // sform_code

  var transform = niftiHeader ? [niftiHeader.quatern_b, niftiHeader.quatern_c, niftiHeader.quatern_d, niftiHeader.qoffset_x, niftiHeader.qoffset_y, niftiHeader.qoffset_z] : [0, 0, 1, image.info.origin[0], image.info.origin[1], image.info.origin[2]]; // b, c, d, x, y, z

  transform.forEach(function (v, i) {
    return dataView.setFloat32(256 + i * 4, v, littleEndian);
  });

  if (niftiHeader) {
    // affine
    niftiHeader.affine[0].forEach(function (v, i) {
      return dataView.setFloat32(280 + i * 4, v, littleEndian);
    });
    niftiHeader.affine[1].forEach(function (v, i) {
      return dataView.setFloat32(296 + i * 4, v, littleEndian);
    });
    niftiHeader.affine[2].forEach(function (v, i) {
      return dataView.setFloat32(312 + i * 4, v, littleEndian);
    });
  }

  MAGIC_NUMBER.forEach(function (v, i) {
    return dataView.setInt8(MAGIC_NUMBER_LOCATION + i, v);
  });
}

async function writeContent(ab, image) {
  var layerSize = image.info.size[0] * image.info.size[1];
  var p = 0;

  for (var i = 0; i < image.info.size[2]; i++) {
    // eslint-disable-next-line no-await-in-loop
    var image2 = await image.getAxial(i);

    for (var j = 0; j < layerSize; j++) {
      // eslint-disable-next-line no-param-reassign
      ab[p++] = image2.pixel[j];
    }
  }
}

async function writeImage(image, creator, compressed) {
  if (compressed === void 0) {
    compressed = true;
  }

  // eslint-disable-next-line new-cap
  var tmp = new creator(1);
  var desc = descFromArray(tmp);
  var info = image.info;
  var length = STANDARD_HEADER_SIZE + 4 + desc.bytesPerElement * info.size[0] * info.size[1] * info.size[2];
  var ab = new ArrayBuffer(length); // write header
  // write content

  writeHeader(ab, image, desc); // eslint-disable-next-line new-cap

  await writeContent(new creator(ab, STANDARD_HEADER_SIZE + 4), image);

  if (compressed) {
    return _pako.default.gzip(new Uint8Array(ab)).buffer;
  }

  return ab;
}

/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _types = __webpack_require__(721);

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _types[key];
});

var _dicomwebworklistfetch = __webpack_require__(722);

Object.keys(_dicomwebworklistfetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _dicomwebworklistfetch[key];
});

var _workitem = __webpack_require__(723);

Object.keys(_workitem).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _workitem[key];
});

/***/ }),
/* 721 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.WorkItemErrorReason = exports.WorkItemState = exports.DicomWorklistHint = void 0;
var DicomWorklistHint = 'dicom-worklist';
exports.DicomWorklistHint = DicomWorklistHint;
var WorkItemState;
exports.WorkItemState = WorkItemState;

(function (WorkItemState) {
  WorkItemState["CANCELED"] = "CANCELED";
  WorkItemState["COMPLETED"] = "COMPLETED";
  WorkItemState["SCHEDULED"] = "SCHEDULED";
  WorkItemState["INPROGRESS"] = "IN PROGRESS";
})(WorkItemState || (exports.WorkItemState = WorkItemState = {}));

var WorkItemErrorReason;
exports.WorkItemErrorReason = WorkItemErrorReason;

(function (WorkItemErrorReason) {
  WorkItemErrorReason["UnknownError"] = "Unknown Error";
  WorkItemErrorReason["NoData"] = "No Data";
  WorkItemErrorReason["InvalidData"] = "InValid Data";
  WorkItemErrorReason["Repeated"] = "Repeated";
  WorkItemErrorReason["Timeout"] = "Timeout";
  WorkItemErrorReason["NoErrorError"] = "No Error Error";
})(WorkItemErrorReason || (exports.WorkItemErrorReason = WorkItemErrorReason = {}));

/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.fetchWorkItemCreator = void 0;

var _lodashEs = __webpack_require__(32);

var _core = __webpack_require__(30);

var _workitem = __webpack_require__(723);

var fetchWorkItemCreator = function fetchWorkItemCreator(urlFetch, baseurl) {
  return async function (locator, option) {
    if (option === void 0) {
      option = {};
    }

    var workitem = locator.workitem,
        filter = locator.filter,
        sort = locator.sort,
        limit = locator.limit,
        offset = locator.offset,
        fuzzymatching = locator.fuzzymatching; // workitem is a WorkItem object will be create event
    // is a string will be a get.
    // no workitem means query.

    if (workitem) {
      // workitem is string. create get workitem request.
      // is not string. create new workitem request.
      var urlLocator = (0, _lodashEs.isString)(workitem) ? {
        url: baseurl + "/workitems/" + workitem
      } : {
        url: baseurl + "/workitems?" + workitem.SOPInstanceUID,
        method: 'POST',
        payload: JSON.stringify(workitem.ds.json)
      };

      var _data = await urlFetch(urlLocator, option); // use this api will return the item itself. Wrap it into array for same output result.


      var item = _data.getJson();

      return new _core.Data(_core.PayLoadType.OTHERS, _workitem.WorkItem.createWorkItem(item));
    }

    var params = [];

    if (filter != null) {
      (0, _lodashEs.forEach)(filter, function (v, k) {
        params.push(encodeURIComponent(k) + "=" + encodeURIComponent(v));
      });
    }

    if (sort) {
      params.push("sort=" + encodeURIComponent(JSON.stringify(sort)));
    }

    if (limit) {
      params.push("limit=" + limit);
    }

    if (offset) {
      params.push("offset=" + offset);
    }

    if (fuzzymatching) {
      params.push("fuzzymatching=" + true);
    }

    var url = baseurl + "/workitems?";
    var data = await urlFetch({
      url: "" + url + params.join('&')
    }, option);

    if (data.type === _core.PayLoadType.PAGED_CONTENT) {
      var pageData = data.getAny();
      pageData.offset = offset || 0;
      var contentData = pageData.data;

      var _json = contentData.getJson();

      var newPageData = {
        data: new _core.Data(_core.PayLoadType.OTHERS, _json.map(function (o) {
          return _workitem.WorkItem.createWorkItem(o);
        })),
        more: pageData.more,
        offset: pageData.offset
      };
      return new _core.Data(_core.PayLoadType.PAGED_CONTENT, newPageData);
    }

    if (data.type === _core.PayLoadType.NO_CONTENT) {
      return data;
    }

    var json = data.getJson();
    return new _core.Data(_core.PayLoadType.OTHERS, json.map(function (o) {
      return _workitem.WorkItem.createWorkItem(o);
    }));
  };
};

exports.fetchWorkItemCreator = fetchWorkItemCreator;

/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.WorkItem = void 0;

var _dicomtags = __webpack_require__(724);

var _types = __webpack_require__(721);

var _createworkitemuid = _interopRequireDefault(__webpack_require__(730));

var _util = __webpack_require__(731);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var makeInputInformation = function makeInputInformation(item) {
  var ds = new _dicomtags.DataSet();
  ds.StudyInstanceUID = item.StudyInstanceUID;
  ds.SeriesInstanceUID = item.SeriesInstanceUID;
  var retrieveDs = new _dicomtags.DataSet();
  retrieveDs.setElementValue('RetrieveAETitle', item.AETitle);
  ds.addSQItem('DICOMRetrievalSequence', retrieveDs);
  return ds;
};

var makeCode = function makeCode(value, meaning) {
  var ds = new _dicomtags.DataSet();
  ds.setElementValue('CodeValue', value);
  ds.setElementValue('CodeMeaning', meaning);
  return ds;
};

var makeParameterString = function makeParameterString(param) {
  var TextValue = param.TextValue,
      CodeValue = param.CodeValue,
      CodeMeaning = param.CodeMeaning;
  var ds = new _dicomtags.DataSet();
  ds.setElementValue('ValueType', 'TEXT');
  ds.setElementValue('TextValue', TextValue);
  ds.addSQItem('ConceptNameCodeSequence', makeCode(CodeValue, CodeMeaning));
  return ds;
};

var getSeriesRepFromDS = function getSeriesRepFromDS(elementDS) {
  var StudyInstanceUID = elementDS.StudyInstanceUID,
      SeriesInstanceUID = elementDS.SeriesInstanceUID;
  var DICOMRetrievalSequence = elementDS.getSQElement('DICOMRetrievalSequence');
  var AETitle = DICOMRetrievalSequence && DICOMRetrievalSequence.getElementValue('RetrieveAETitle');
  return {
    StudyInstanceUID: StudyInstanceUID,
    SeriesInstanceUID: SeriesInstanceUID,
    AETitle: AETitle || ''
  };
};

var decodeParam = function decodeParam(ds) {
  var TextValue = ds.getElementValue('TextValue');
  var ConceptNameCodeSequence = ds.getSQElement('ConceptNameCodeSequence');
  var CodeValue = ConceptNameCodeSequence && ConceptNameCodeSequence.getElementValue('CodeValue');
  var CodeMeaning = ConceptNameCodeSequence && ConceptNameCodeSequence.getElementValue('CodeMeaning');
  return {
    TextValue: TextValue,
    CodeValue: CodeValue,
    CodeMeaning: CodeMeaning
  };
};

var WorkItem = /*#__PURE__*/function () {
  WorkItem.createNewWorkItem = function createNewWorkItem(stepLabel, referencedDS) {
    var wi = new WorkItem(new _dicomtags.DataSet(), (0, _createworkitemuid.default)());
    wi.create(stepLabel, referencedDS);
    return wi;
  };

  WorkItem.createWorkItem = function createWorkItem(ds) {
    var dataSet = ds instanceof _dicomtags.DataSet ? ds : new _dicomtags.DataSet(ds);

    if (!dataSet.SOPInstanceUID) {
      throw new Error("Workitem's SOPInstanceUID does not exist");
    }

    return new WorkItem(dataSet, dataSet.SOPInstanceUID);
  };

  function WorkItem(ds, SOPInstanceUID) {
    this.ds = ds;
    this.SOPInstanceUID = SOPInstanceUID;

    _defineProperty(this, "firstInputSeries", void 0);
  }

  var _proto = WorkItem.prototype;

  _proto.create = function create(stepLabel, referencedDS) {
    this.ds.setElementValue('ScheduledProcedureStepPriority', 'MEDIUM');
    this.ds.setElementValue('ProcedureStepLabel', stepLabel);
    this.ds.addSQItem('InputInformationSequence');
    this.ds.copyElement(referencedDS, 'PatientName', '');
    this.ds.copyElement(referencedDS, 'PatientID', '');
    this.ds.copyElement(referencedDS, 'PatientBirthDate', '');
    this.ds.copyElement(referencedDS, 'PatientSex', '');
    var ds = new _dicomtags.DataSet();
    ds.copyElement(referencedDS, 'StudyInstanceUID');
    ds.copyElement(referencedDS, 'AccessionNumber');
    this.ds.addSQItem('ReferencedRequestSequence', ds);
    this.ds.setElementValue('ScheduledProcedureStepStartDateTime', (0, _util.getCurrentDateTime)());
  };

  _proto.addInput = function addInput(item) {
    this.ds.addSQItem('InputInformationSequence', makeInputInformation(item));
  };

  _proto.extractCommonInfo = function extractCommonInfo() {
    var ds = new _dicomtags.DataSet();
    ds.copyElement(this.ds, 'PatientName');
    ds.copyElement(this.ds, 'PatientID');
    ds.copyElement(this.ds, 'PatientBirthDate');
    ds.copyElement(this.ds, 'PatientSex');
    ds.copyElement(this.ds, 'PatientAge');
    ds.copyElement(this.ds, 'StudyDate');
    var ReferencedRequestSequence = this.ds.getSQElement('ReferencedRequestSequence');

    if (ReferencedRequestSequence) {
      ds.copyElement(ReferencedRequestSequence, 'StudyInstanceUID');
      ds.copyElement(ReferencedRequestSequence, 'AccessionNumber');
    }

    return ds;
  };

  _proto.getFirstInput = function getFirstInput() {
    if (!this.firstInputSeries) {
      var inputs = this.getInputs();

      if (inputs.length > 0) {
        this.firstInputSeries = inputs[0];
      }
    }

    return this.firstInputSeries;
  };

  _proto.getFirstInputSeriesInstanceUID = function getFirstInputSeriesInstanceUID() {
    this.getFirstInput();

    if (this.firstInputSeries) {
      return this.firstInputSeries.SeriesInstanceUID;
    }

    return undefined;
  };

  _proto.getFirstInputStudyInstanceUID = function getFirstInputStudyInstanceUID() {
    this.getFirstInput();

    if (this.firstInputSeries) {
      return this.firstInputSeries.StudyInstanceUID;
    }

    return undefined;
  };

  _proto.getInputs = function getInputs() {
    var InputInformationSequence = this.ds.getSQElementArray('InputInformationSequence');
    return InputInformationSequence.map(getSeriesRepFromDS);
  };

  _proto.getOutputs = function getOutputs() {
    var UnifiedProcedureStepPerformedProcedureSequence = this.ds.getSQElement('UnifiedProcedureStepPerformedProcedureSequence');
    var OutputInformationSequence = UnifiedProcedureStepPerformedProcedureSequence && UnifiedProcedureStepPerformedProcedureSequence.getSQElementArray('OutputInformationSequence');
    return OutputInformationSequence ? OutputInformationSequence.map(getSeriesRepFromDS) : [];
  };

  _proto.addParam = function addParam(param) {
    this.ds.addSQItem('ScheduledProcessingParametersSequence', makeParameterString(param));
  };

  _proto.getParams = function getParams() {
    var ScheduledProcessingParametersSequence = this.ds.getSQElementArray('ScheduledProcessingParametersSequence');

    if (!ScheduledProcessingParametersSequence) {
      return [];
    }

    return ScheduledProcessingParametersSequence.map(decodeParam);
  };

  _proto.getParam = function getParam(codeValue) {
    var ScheduledProcessingParametersSequence = this.ds.getSQElementArray('ScheduledProcessingParametersSequence');

    if (!ScheduledProcessingParametersSequence) {
      return undefined;
    }

    for (var i = 0; i < ScheduledProcessingParametersSequence.length; i += 1) {
      var param = decodeParam(ScheduledProcessingParametersSequence[i]);

      if (param.CodeValue === codeValue) {
        return param;
      }
    }

    return undefined;
  };

  _proto.getProcedureStepState = function getProcedureStepState() {
    return this.ds.getElementValue('ProcedureStepState');
  };

  _proto.getProcedureStepLabel = function getProcedureStepLabel() {
    return this.ds.getElementValue('ProcedureStepLabel');
  };

  _proto.getScheduledProcedureStepStartDateTime = function getScheduledProcedureStepStartDateTime() {
    return this.ds.getElementValue('ScheduledProcedureStepStartDateTime');
  };

  _proto.getPerformedProcedureStepEndDateTime = function getPerformedProcedureStepEndDateTime() {
    var procedureSequenceDs = this.ds.getSQElement('UnifiedProcedureStepPerformedProcedureSequence');
    var endTime = procedureSequenceDs && procedureSequenceDs.getElementValue('PerformedProcedureStepEndDateTime');
    return endTime;
  };

  _proto.isCompleted = function isCompleted() {
    return this.getProcedureStepState() === _types.WorkItemState.COMPLETED;
  };

  _proto.isInProgress = function isInProgress() {
    return this.getProcedureStepState() === _types.WorkItemState.INPROGRESS;
  };

  _proto.isCanceled = function isCanceled() {
    return this.getProcedureStepState() === _types.WorkItemState.CANCELED;
  };

  _proto.isScheduled = function isScheduled() {
    return this.getProcedureStepState() === _types.WorkItemState.SCHEDULED;
  };

  _proto.getErrorReason = function getErrorReason() {
    if (!this.isCanceled()) {
      throw new Error('shouldnot call getErrorReason if the workitem not in cancelled status');
    }

    try {
      this.checkFinish();
    } catch (e) {
      if (e.name === 'worklist') {
        if (e.message === _types.WorkItemErrorReason.UnknownError) {
          return _types.WorkItemErrorReason.UnknownError;
        }

        if (e.message === _types.WorkItemErrorReason.NoData) {
          return _types.WorkItemErrorReason.NoData;
        }

        if (e.message === _types.WorkItemErrorReason.InvalidData) {
          return _types.WorkItemErrorReason.InvalidData;
        }

        if (e.message === _types.WorkItemErrorReason.Timeout) {
          return _types.WorkItemErrorReason.Timeout;
        }

        if (e.message === _types.WorkItemErrorReason.Repeated) {
          return _types.WorkItemErrorReason.Repeated;
        }
      }
    }

    return _types.WorkItemErrorReason.NoErrorError;
  } // throw if cancelled, or return true/false.
  ;

  _proto.checkFinish = function checkFinish() {
    var ProcedureStepState = this.getProcedureStepState();

    if (ProcedureStepState === 'CANCELED') {
      var ProcedureStepProgressInformationSequence = this.ds.getSQElement('ProcedureStepProgressInformationSequence');
      var ReasonForCancellation = ProcedureStepProgressInformationSequence && ProcedureStepProgressInformationSequence.getElementValue('ReasonForCancellation');
      var error = new Error(ReasonForCancellation);
      error.name = 'worklist';
      throw error;
    }

    return ProcedureStepState === 'COMPLETED';
  };

  _proto.getOutputSeries = function getOutputSeries(cond) {
    var ppds = this.ds.getSQElement('UnifiedProcedureStepPerformedProcedureSequence');
    var outputInformation = ppds && ppds.getSQElementArray('OutputInformationSequence');
    var foundSeries = outputInformation && outputInformation.find(function (info) {
      return cond(info.SeriesInstanceUID);
    });

    if (foundSeries) {
      var DICOMRetrievalSequence = foundSeries.getSQElement('DICOMRetrievalSequence');
      var AETitle = DICOMRetrievalSequence && DICOMRetrievalSequence.getElementValue('RetrieveAETitle');
      return {
        AETitle: AETitle || '',
        StudyInstanceUID: foundSeries.StudyInstanceUID,
        SeriesInstanceUID: foundSeries.SeriesInstanceUID
      };
    }

    return undefined;
  };

  return WorkItem;
}();

exports.WorkItem = WorkItem;

/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var _exportNames = {
  addCustomTags: true,
  standard: true
};
exports.standard = exports.addCustomTags = void 0;

var _tags = __webpack_require__(725);

exports.addCustomTags = _tags.addCustomTags;
exports.standard = _tags.standard;

var _dataset = __webpack_require__(727);

Object.keys(_dataset).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _dataset[key];
});

var _types = __webpack_require__(728);

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _types[key];
});

var _cura = __webpack_require__(729);

Object.keys(_cura).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _cura[key];
});

/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.standard = exports.addCustomTags = exports.getJsonTagCodeFromName = exports.getTagFromName = void 0;

var _lodashEs = __webpack_require__(32);

var _dicomtags = _interopRequireDefault(__webpack_require__(726));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var standard = _dicomtags.default;
exports.standard = standard;
var nameMap = {}; // adding key into definition

(0, _lodashEs.forEach)(standard, function (v, k) {
  nameMap[v.name] = k;
});

var addCustomTags = function addCustomTags(custom) {
  (0, _lodashEs.forEach)(custom, function (v, k) {
    standard[k] = v;
  });
  (0, _lodashEs.forEach)(custom, function (v, k) {
    nameMap[v.name] = k;
  });
};

exports.addCustomTags = addCustomTags;

var checkTagValidation = function checkTagValidation(tagCode) {
  var r = /^[0123456789abcdefABCDEF]+$/;
  return tagCode.length === 8 && tagCode.match(r);
};

var getJsonTagCodeFromName = function getJsonTagCodeFromName(name) {
  var tagCode = nameMap[name];

  if (tagCode) {
    tagCode = tagCode.slice(1);
  } else {
    tagCode = name;
  }

  if (!checkTagValidation(tagCode)) {
    return undefined;
  }

  return tagCode.toLocaleUpperCase();
};

exports.getJsonTagCodeFromName = getJsonTagCodeFromName;

var getTagFromName = function getTagFromName(name) {
  var tagCode = getJsonTagCodeFromName(name);

  if (tagCode === undefined) {
    return tagCode;
  }

  return standard["x" + tagCode.toLocaleLowerCase()];
};

exports.getTagFromName = getTagFromName;

/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;
var TAG_DICT = {
  x00000000: {
    tag: '(0000,0000)',
    vr: 'UL',
    vm: 1,
    name: 'CommandGroupLength'
  },
  x00000001: {
    tag: '(0000,0001)',
    vr: 'UL',
    vm: 1,
    name: 'CommandLengthToEnd'
  },
  x00000002: {
    tag: '(0000,0002)',
    vr: 'UI',
    vm: 1,
    name: 'AffectedSOPClassUID'
  },
  x00000003: {
    tag: '(0000,0003)',
    vr: 'UI',
    vm: 1,
    name: 'RequestedSOPClassUID'
  },
  x00000010: {
    tag: '(0000,0010)',
    vr: 'SH',
    vm: 1,
    name: 'CommandRecognitionCode'
  },
  x00000100: {
    tag: '(0000,0100)',
    vr: 'US',
    vm: 1,
    name: 'CommandField'
  },
  x00000110: {
    tag: '(0000,0110)',
    vr: 'US',
    vm: 1,
    name: 'MessageID'
  },
  x00000120: {
    tag: '(0000,0120)',
    vr: 'US',
    vm: 1,
    name: 'MessageIDBeingRespondedTo'
  },
  x00000200: {
    tag: '(0000,0200)',
    vr: 'AE',
    vm: 1,
    name: 'Initiator'
  },
  x00000300: {
    tag: '(0000,0300)',
    vr: 'AE',
    vm: 1,
    name: 'Receiver'
  },
  x00000400: {
    tag: '(0000,0400)',
    vr: 'AE',
    vm: 1,
    name: 'FindLocation'
  },
  x00000600: {
    tag: '(0000,0600)',
    vr: 'AE',
    vm: 1,
    name: 'MoveDestination'
  },
  x00000700: {
    tag: '(0000,0700)',
    vr: 'US',
    vm: 1,
    name: 'Priority'
  },
  x00000800: {
    tag: '(0000,0800)',
    vr: 'US',
    vm: 1,
    name: 'CommandDataSetType'
  },
  x00000850: {
    tag: '(0000,0850)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfMatches'
  },
  x00000860: {
    tag: '(0000,0860)',
    vr: 'US',
    vm: 1,
    name: 'ResponseSequenceNumber'
  },
  x00000900: {
    tag: '(0000,0900)',
    vr: 'US',
    vm: 1,
    name: 'Status'
  },
  x00000901: {
    tag: '(0000,0901)',
    vr: 'AT',
    vm: '1-n',
    name: 'OffendingElement'
  },
  x00000902: {
    tag: '(0000,0902)',
    vr: 'LO',
    vm: 1,
    name: 'ErrorComment'
  },
  x00000903: {
    tag: '(0000,0903)',
    vr: 'US',
    vm: 1,
    name: 'ErrorID'
  },
  x00001000: {
    tag: '(0000,1000)',
    vr: 'UI',
    vm: 1,
    name: 'AffectedSOPInstanceUID'
  },
  x00001001: {
    tag: '(0000,1001)',
    vr: 'UI',
    vm: 1,
    name: 'RequestedSOPInstanceUID'
  },
  x00001002: {
    tag: '(0000,1002)',
    vr: 'US',
    vm: 1,
    name: 'EventTypeID'
  },
  x00001005: {
    tag: '(0000,1005)',
    vr: 'AT',
    vm: '1-n',
    name: 'AttributeIdentifierList'
  },
  x00001008: {
    tag: '(0000,1008)',
    vr: 'US',
    vm: 1,
    name: 'ActionTypeID'
  },
  x00001020: {
    tag: '(0000,1020)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfRemainingSuboperations'
  },
  x00001021: {
    tag: '(0000,1021)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfCompletedSuboperations'
  },
  x00001022: {
    tag: '(0000,1022)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfFailedSuboperations'
  },
  x00001023: {
    tag: '(0000,1023)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfWarningSuboperations'
  },
  x00001030: {
    tag: '(0000,1030)',
    vr: 'AE',
    vm: 1,
    name: 'MoveOriginatorApplicationEntityTitle'
  },
  x00001031: {
    tag: '(0000,1031)',
    vr: 'US',
    vm: 1,
    name: 'MoveOriginatorMessageID'
  },
  x00004000: {
    tag: '(0000,4000)',
    vr: 'LT',
    vm: 1,
    name: 'DialogReceiver'
  },
  x00004010: {
    tag: '(0000,4010)',
    vr: 'LT',
    vm: 1,
    name: 'TerminalType'
  },
  x00005010: {
    tag: '(0000,5010)',
    vr: 'SH',
    vm: 1,
    name: 'MessageSetID'
  },
  x00005020: {
    tag: '(0000,5020)',
    vr: 'SH',
    vm: 1,
    name: 'EndMessageID'
  },
  x00005110: {
    tag: '(0000,5110)',
    vr: 'LT',
    vm: 1,
    name: 'DisplayFormat'
  },
  x00005120: {
    tag: '(0000,5120)',
    vr: 'LT',
    vm: 1,
    name: 'PagePositionID'
  },
  x00005130: {
    tag: '(0000,5130)',
    vr: 'CS',
    vm: 1,
    name: 'TextFormatID'
  },
  x00005140: {
    tag: '(0000,5140)',
    vr: 'CS',
    vm: 1,
    name: 'NormalReverse'
  },
  x00005150: {
    tag: '(0000,5150)',
    vr: 'CS',
    vm: 1,
    name: 'AddGrayScale'
  },
  x00005160: {
    tag: '(0000,5160)',
    vr: 'CS',
    vm: 1,
    name: 'Borders'
  },
  x00005170: {
    tag: '(0000,5170)',
    vr: 'IS',
    vm: 1,
    name: 'Copies'
  },
  x00005180: {
    tag: '(0000,5180)',
    vr: 'CS',
    vm: 1,
    name: 'CommandMagnificationType'
  },
  x00005190: {
    tag: '(0000,5190)',
    vr: 'CS',
    vm: 1,
    name: 'Erase'
  },
  x000051a0: {
    tag: '(0000,51A0)',
    vr: 'CS',
    vm: 1,
    name: 'Print'
  },
  x000051b0: {
    tag: '(0000,51B0)',
    vr: 'US',
    vm: '1-n',
    name: 'Overlays'
  },
  x00020000: {
    tag: '(0002,0000)',
    vr: 'UL',
    vm: 1,
    name: 'FileMetaInformationGroupLength'
  },
  x00020001: {
    tag: '(0002,0001)',
    vr: 'OB',
    vm: 1,
    name: 'FileMetaInformationVersion'
  },
  x00020002: {
    tag: '(0002,0002)',
    vr: 'UI',
    vm: 1,
    name: 'MediaStorageSOPClassUID'
  },
  x00020003: {
    tag: '(0002,0003)',
    vr: 'UI',
    vm: 1,
    name: 'MediaStorageSOPInstanceUID'
  },
  x00020010: {
    tag: '(0002,0010)',
    vr: 'UI',
    vm: 1,
    name: 'TransferSyntaxUID'
  },
  x00020012: {
    tag: '(0002,0012)',
    vr: 'UI',
    vm: 1,
    name: 'ImplementationClassUID'
  },
  x00020013: {
    tag: '(0002,0013)',
    vr: 'SH',
    vm: 1,
    name: 'ImplementationVersionName'
  },
  x00020016: {
    tag: '(0002,0016)',
    vr: 'AE',
    vm: 1,
    name: 'SourceApplicationEntityTitle'
  },
  x00020100: {
    tag: '(0002,0100)',
    vr: 'UI',
    vm: 1,
    name: 'PrivateInformationCreatorUID'
  },
  x00020102: {
    tag: '(0002,0102)',
    vr: 'OB',
    vm: 1,
    name: 'PrivateInformation'
  },
  x00041130: {
    tag: '(0004,1130)',
    vr: 'CS',
    vm: 1,
    name: 'FileSetID'
  },
  x00041141: {
    tag: '(0004,1141)',
    vr: 'CS',
    vm: '1-8',
    name: 'FileSetDescriptorFileID'
  },
  x00041142: {
    tag: '(0004,1142)',
    vr: 'CS',
    vm: 1,
    name: 'SpecificCharacterSetOfFileSetDescriptorFile'
  },
  x00041200: {
    tag: '(0004,1200)',
    vr: 'UL',
    vm: 1,
    name: 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'
  },
  x00041202: {
    tag: '(0004,1202)',
    vr: 'UL',
    vm: 1,
    name: 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'
  },
  x00041212: {
    tag: '(0004,1212)',
    vr: 'US',
    vm: 1,
    name: 'FileSetConsistencyFlag'
  },
  x00041220: {
    tag: '(0004,1220)',
    vr: 'SQ',
    vm: 1,
    name: 'DirectoryRecordSequence'
  },
  x00041400: {
    tag: '(0004,1400)',
    vr: 'UL',
    vm: 1,
    name: 'OffsetOfTheNextDirectoryRecord'
  },
  x00041410: {
    tag: '(0004,1410)',
    vr: 'US',
    vm: 1,
    name: 'RecordInUseFlag'
  },
  x00041420: {
    tag: '(0004,1420)',
    vr: 'UL',
    vm: 1,
    name: 'OffsetOfReferencedLowerLevelDirectoryEntity'
  },
  x00041430: {
    tag: '(0004,1430)',
    vr: 'CS',
    vm: 1,
    name: 'DirectoryRecordType'
  },
  x00041432: {
    tag: '(0004,1432)',
    vr: 'UI',
    vm: 1,
    name: 'PrivateRecordUID'
  },
  x00041500: {
    tag: '(0004,1500)',
    vr: 'CS',
    vm: '1-8',
    name: 'ReferencedFileID'
  },
  x00041504: {
    tag: '(0004,1504)',
    vr: 'UL',
    vm: 1,
    name: 'MRDRDirectoryRecordOffset'
  },
  x00041510: {
    tag: '(0004,1510)',
    vr: 'UI',
    vm: 1,
    name: 'ReferencedSOPClassUIDInFile'
  },
  x00041511: {
    tag: '(0004,1511)',
    vr: 'UI',
    vm: 1,
    name: 'ReferencedSOPInstanceUIDInFile'
  },
  x00041512: {
    tag: '(0004,1512)',
    vr: 'UI',
    vm: 1,
    name: 'ReferencedTransferSyntaxUIDInFile'
  },
  x0004151a: {
    tag: '(0004,151A)',
    vr: 'UI',
    vm: '1-n',
    name: 'ReferencedRelatedGeneralSOPClassUIDInFile'
  },
  x00041600: {
    tag: '(0004,1600)',
    vr: 'UL',
    vm: 1,
    name: 'NumberOfReferences'
  },
  x00080000: {
    tag: '(0008,0000)',
    vr: 'UL',
    vm: 1,
    name: 'IdentifyingGroupLength'
  },
  x00080001: {
    tag: '(0008,0001)',
    vr: 'UL',
    vm: 1,
    name: 'LengthToEnd'
  },
  x00080005: {
    tag: '(0008,0005)',
    vr: 'CS',
    vm: '1-n',
    name: 'SpecificCharacterSet'
  },
  x00080006: {
    tag: '(0008,0006)',
    vr: 'SQ',
    vm: 1,
    name: 'LanguageCodeSequence'
  },
  x00080008: {
    tag: '(0008,0008)',
    vr: 'CS',
    vm: '2-n',
    name: 'ImageType'
  },
  x00080010: {
    tag: '(0008,0010)',
    vr: 'SH',
    vm: 1,
    name: 'RecognitionCode'
  },
  x00080012: {
    tag: '(0008,0012)',
    vr: 'DA',
    vm: 1,
    name: 'InstanceCreationDate'
  },
  x00080013: {
    tag: '(0008,0013)',
    vr: 'TM',
    vm: 1,
    name: 'InstanceCreationTime'
  },
  x00080014: {
    tag: '(0008,0014)',
    vr: 'UI',
    vm: 1,
    name: 'InstanceCreatorUID'
  },
  x00080016: {
    tag: '(0008,0016)',
    vr: 'UI',
    vm: 1,
    name: 'SOPClassUID'
  },
  x00080018: {
    tag: '(0008,0018)',
    vr: 'UI',
    vm: 1,
    name: 'SOPInstanceUID'
  },
  x0008001a: {
    tag: '(0008,001A)',
    vr: 'UI',
    vm: '1-n',
    name: 'RelatedGeneralSOPClassUID'
  },
  x0008001b: {
    tag: '(0008,001B)',
    vr: 'UI',
    vm: 1,
    name: 'OriginalSpecializedSOPClassUID'
  },
  x00080020: {
    tag: '(0008,0020)',
    vr: 'DA',
    vm: 1,
    name: 'StudyDate'
  },
  x00080021: {
    tag: '(0008,0021)',
    vr: 'DA',
    vm: 1,
    name: 'SeriesDate'
  },
  x00080022: {
    tag: '(0008,0022)',
    vr: 'DA',
    vm: 1,
    name: 'AcquisitionDate'
  },
  x00080023: {
    tag: '(0008,0023)',
    vr: 'DA',
    vm: 1,
    name: 'ContentDate'
  },
  x00080024: {
    tag: '(0008,0024)',
    vr: 'DA',
    vm: 1,
    name: 'OverlayDate'
  },
  x00080025: {
    tag: '(0008,0025)',
    vr: 'DA',
    vm: 1,
    name: 'CurveDate'
  },
  x0008002a: {
    tag: '(0008,002A)',
    vr: 'DT',
    vm: 1,
    name: 'AcquisitionDateTime'
  },
  x00080030: {
    tag: '(0008,0030)',
    vr: 'TM',
    vm: 1,
    name: 'StudyTime'
  },
  x00080031: {
    tag: '(0008,0031)',
    vr: 'TM',
    vm: 1,
    name: 'SeriesTime'
  },
  x00080032: {
    tag: '(0008,0032)',
    vr: 'TM',
    vm: 1,
    name: 'AcquisitionTime'
  },
  x00080033: {
    tag: '(0008,0033)',
    vr: 'TM',
    vm: 1,
    name: 'ContentTime'
  },
  x00080034: {
    tag: '(0008,0034)',
    vr: 'TM',
    vm: 1,
    name: 'OverlayTime'
  },
  x00080035: {
    tag: '(0008,0035)',
    vr: 'TM',
    vm: 1,
    name: 'CurveTime'
  },
  x00080040: {
    tag: '(0008,0040)',
    vr: 'US',
    vm: 1,
    name: 'DataSetType'
  },
  x00080041: {
    tag: '(0008,0041)',
    vr: 'LO',
    vm: 1,
    name: 'DataSetSubtype'
  },
  x00080042: {
    tag: '(0008,0042)',
    vr: 'CS',
    vm: 1,
    name: 'NuclearMedicineSeriesType'
  },
  x00080050: {
    tag: '(0008,0050)',
    vr: 'SH',
    vm: 1,
    name: 'AccessionNumber'
  },
  x00080051: {
    tag: '(0008,0051)',
    vr: 'SQ',
    vm: 1,
    name: 'IssuerOfAccessionNumberSequence'
  },
  x00080052: {
    tag: '(0008,0052)',
    vr: 'CS',
    vm: 1,
    name: 'QueryRetrieveLevel'
  },
  x00080054: {
    tag: '(0008,0054)',
    vr: 'AE',
    vm: '1-n',
    name: 'RetrieveAETitle'
  },
  x00080056: {
    tag: '(0008,0056)',
    vr: 'CS',
    vm: 1,
    name: 'InstanceAvailability'
  },
  x00080058: {
    tag: '(0008,0058)',
    vr: 'UI',
    vm: '1-n',
    name: 'FailedSOPInstanceUIDList'
  },
  x00080060: {
    tag: '(0008,0060)',
    vr: 'CS',
    vm: 1,
    name: 'Modality'
  },
  x00080061: {
    tag: '(0008,0061)',
    vr: 'CS',
    vm: '1-n',
    name: 'ModalitiesInStudy'
  },
  x00080062: {
    tag: '(0008,0062)',
    vr: 'UI',
    vm: '1-n',
    name: 'SOPClassesInStudy'
  },
  x00080064: {
    tag: '(0008,0064)',
    vr: 'CS',
    vm: 1,
    name: 'ConversionType'
  },
  x00080068: {
    tag: '(0008,0068)',
    vr: 'CS',
    vm: 1,
    name: 'PresentationIntentType'
  },
  x00080070: {
    tag: '(0008,0070)',
    vr: 'LO',
    vm: 1,
    name: 'Manufacturer'
  },
  x00080080: {
    tag: '(0008,0080)',
    vr: 'LO',
    vm: 1,
    name: 'InstitutionName'
  },
  x00080081: {
    tag: '(0008,0081)',
    vr: 'ST',
    vm: 1,
    name: 'InstitutionAddress'
  },
  x00080082: {
    tag: '(0008,0082)',
    vr: 'SQ',
    vm: 1,
    name: 'InstitutionCodeSequence'
  },
  x00080090: {
    tag: '(0008,0090)',
    vr: 'PN',
    vm: 1,
    name: 'ReferringPhysicianName'
  },
  x00080092: {
    tag: '(0008,0092)',
    vr: 'ST',
    vm: 1,
    name: 'ReferringPhysicianAddress'
  },
  x00080094: {
    tag: '(0008,0094)',
    vr: 'SH',
    vm: '1-n',
    name: 'ReferringPhysicianTelephoneNumbers'
  },
  x00080096: {
    tag: '(0008,0096)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferringPhysicianIdentificationSequence'
  },
  x00080100: {
    tag: '(0008,0100)',
    vr: 'SH',
    vm: 1,
    name: 'CodeValue'
  },
  x00080102: {
    tag: '(0008,0102)',
    vr: 'SH',
    vm: 1,
    name: 'CodingSchemeDesignator'
  },
  x00080103: {
    tag: '(0008,0103)',
    vr: 'SH',
    vm: 1,
    name: 'CodingSchemeVersion'
  },
  x00080104: {
    tag: '(0008,0104)',
    vr: 'LO',
    vm: 1,
    name: 'CodeMeaning'
  },
  x00080105: {
    tag: '(0008,0105)',
    vr: 'CS',
    vm: 1,
    name: 'MappingResource'
  },
  x00080106: {
    tag: '(0008,0106)',
    vr: 'DT',
    vm: 1,
    name: 'ContextGroupVersion'
  },
  x00080107: {
    tag: '(0008,0107)',
    vr: 'DT',
    vm: 1,
    name: 'ContextGroupLocalVersion'
  },
  x0008010b: {
    tag: '(0008,010B)',
    vr: 'CS',
    vm: 1,
    name: 'ContextGroupExtensionFlag'
  },
  x0008010c: {
    tag: '(0008,010C)',
    vr: 'UI',
    vm: 1,
    name: 'CodingSchemeUID'
  },
  x0008010d: {
    tag: '(0008,010D)',
    vr: 'UI',
    vm: 1,
    name: 'ContextGroupExtensionCreatorUID'
  },
  x0008010f: {
    tag: '(0008,010F)',
    vr: 'CS',
    vm: 1,
    name: 'ContextIdentifier'
  },
  x00080110: {
    tag: '(0008,0110)',
    vr: 'SQ',
    vm: 1,
    name: 'CodingSchemeIdentificationSequence'
  },
  x00080112: {
    tag: '(0008,0112)',
    vr: 'LO',
    vm: 1,
    name: 'CodingSchemeRegistry'
  },
  x00080114: {
    tag: '(0008,0114)',
    vr: 'ST',
    vm: 1,
    name: 'CodingSchemeExternalID'
  },
  x00080115: {
    tag: '(0008,0115)',
    vr: 'ST',
    vm: 1,
    name: 'CodingSchemeName'
  },
  x00080116: {
    tag: '(0008,0116)',
    vr: 'ST',
    vm: 1,
    name: 'CodingSchemeResponsibleOrganization'
  },
  x00080117: {
    tag: '(0008,0117)',
    vr: 'UI',
    vm: 1,
    name: 'ContextUID'
  },
  x00080201: {
    tag: '(0008,0201)',
    vr: 'SH',
    vm: 1,
    name: 'TimezoneOffsetFromUTC'
  },
  x00081000: {
    tag: '(0008,1000)',
    vr: 'AE',
    vm: 1,
    name: 'NetworkID'
  },
  x00081010: {
    tag: '(0008,1010)',
    vr: 'SH',
    vm: 1,
    name: 'StationName'
  },
  x00081030: {
    tag: '(0008,1030)',
    vr: 'LO',
    vm: 1,
    name: 'StudyDescription'
  },
  x00081032: {
    tag: '(0008,1032)',
    vr: 'SQ',
    vm: 1,
    name: 'ProcedureCodeSequence'
  },
  x0008103e: {
    tag: '(0008,103E)',
    vr: 'LO',
    vm: 1,
    name: 'SeriesDescription'
  },
  x0008103f: {
    tag: '(0008,103F)',
    vr: 'SQ',
    vm: 1,
    name: 'SeriesDescriptionCodeSequence'
  },
  x00081040: {
    tag: '(0008,1040)',
    vr: 'LO',
    vm: 1,
    name: 'InstitutionalDepartmentName'
  },
  x00081048: {
    tag: '(0008,1048)',
    vr: 'PN',
    vm: '1-n',
    name: 'PhysiciansOfRecord'
  },
  x00081049: {
    tag: '(0008,1049)',
    vr: 'SQ',
    vm: 1,
    name: 'PhysiciansOfRecordIdentificationSequence'
  },
  x00081050: {
    tag: '(0008,1050)',
    vr: 'PN',
    vm: '1-n',
    name: 'PerformingPhysicianName'
  },
  x00081052: {
    tag: '(0008,1052)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformingPhysicianIdentificationSequence'
  },
  x00081060: {
    tag: '(0008,1060)',
    vr: 'PN',
    vm: '1-n',
    name: 'NameOfPhysiciansReadingStudy'
  },
  x00081062: {
    tag: '(0008,1062)',
    vr: 'SQ',
    vm: 1,
    name: 'PhysiciansReadingStudyIdentificationSequence'
  },
  x00081070: {
    tag: '(0008,1070)',
    vr: 'PN',
    vm: '1-n',
    name: 'OperatorsName'
  },
  x00081072: {
    tag: '(0008,1072)',
    vr: 'SQ',
    vm: 1,
    name: 'OperatorIdentificationSequence'
  },
  x00081080: {
    tag: '(0008,1080)',
    vr: 'LO',
    vm: '1-n',
    name: 'AdmittingDiagnosesDescription'
  },
  x00081084: {
    tag: '(0008,1084)',
    vr: 'SQ',
    vm: 1,
    name: 'AdmittingDiagnosesCodeSequence'
  },
  x00081090: {
    tag: '(0008,1090)',
    vr: 'LO',
    vm: 1,
    name: 'ManufacturerModelName'
  },
  x00081100: {
    tag: '(0008,1100)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedResultsSequence'
  },
  x00081110: {
    tag: '(0008,1110)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedStudySequence'
  },
  x00081111: {
    tag: '(0008,1111)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedPerformedProcedureStepSequence'
  },
  x00081115: {
    tag: '(0008,1115)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedSeriesSequence'
  },
  x00081120: {
    tag: '(0008,1120)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedPatientSequence'
  },
  x00081125: {
    tag: '(0008,1125)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedVisitSequence'
  },
  x00081130: {
    tag: '(0008,1130)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedOverlaySequence'
  },
  x00081134: {
    tag: '(0008,1134)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedStereometricInstanceSequence'
  },
  x0008113a: {
    tag: '(0008,113A)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedWaveformSequence'
  },
  x00081140: {
    tag: '(0008,1140)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedImageSequence'
  },
  x00081145: {
    tag: '(0008,1145)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedCurveSequence'
  },
  x0008114a: {
    tag: '(0008,114A)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedInstanceSequence'
  },
  x0008114b: {
    tag: '(0008,114B)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedRealWorldValueMappingInstanceSequence'
  },
  x00081150: {
    tag: '(0008,1150)',
    vr: 'UI',
    vm: 1,
    name: 'ReferencedSOPClassUID'
  },
  x00081155: {
    tag: '(0008,1155)',
    vr: 'UI',
    vm: 1,
    name: 'ReferencedSOPInstanceUID'
  },
  x0008115a: {
    tag: '(0008,115A)',
    vr: 'UI',
    vm: '1-n',
    name: 'SOPClassesSupported'
  },
  x00081160: {
    tag: '(0008,1160)',
    vr: 'IS',
    vm: '1-n',
    name: 'ReferencedFrameNumber'
  },
  x00081161: {
    tag: '(0008,1161)',
    vr: 'UL',
    vm: '1-n',
    name: 'SimpleFrameList'
  },
  x00081162: {
    tag: '(0008,1162)',
    vr: 'UL',
    vm: '3-3n',
    name: 'CalculatedFrameList'
  },
  x00081163: {
    tag: '(0008,1163)',
    vr: 'FD',
    vm: 2,
    name: 'TimeRange'
  },
  x00081164: {
    tag: '(0008,1164)',
    vr: 'SQ',
    vm: 1,
    name: 'FrameExtractionSequence'
  },
  x00081167: {
    tag: '(0008,1167)',
    vr: 'UI',
    vm: 1,
    name: 'MultiFrameSourceSOPInstanceUID'
  },
  x00081195: {
    tag: '(0008,1195)',
    vr: 'UI',
    vm: 1,
    name: 'TransactionUID'
  },
  x00081197: {
    tag: '(0008,1197)',
    vr: 'US',
    vm: 1,
    name: 'FailureReason'
  },
  x00081198: {
    tag: '(0008,1198)',
    vr: 'SQ',
    vm: 1,
    name: 'FailedSOPSequence'
  },
  x00081199: {
    tag: '(0008,1199)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedSOPSequence'
  },
  x00081200: {
    tag: '(0008,1200)',
    vr: 'SQ',
    vm: 1,
    name: 'StudiesContainingOtherReferencedInstancesSequence'
  },
  x00081250: {
    tag: '(0008,1250)',
    vr: 'SQ',
    vm: 1,
    name: 'RelatedSeriesSequence'
  },
  x00082110: {
    tag: '(0008,2110)',
    vr: 'CS',
    vm: 1,
    name: 'LossyImageCompressionRetired'
  },
  x00082111: {
    tag: '(0008,2111)',
    vr: 'ST',
    vm: 1,
    name: 'DerivationDescription'
  },
  x00082112: {
    tag: '(0008,2112)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceImageSequence'
  },
  x00082120: {
    tag: '(0008,2120)',
    vr: 'SH',
    vm: 1,
    name: 'StageName'
  },
  x00082122: {
    tag: '(0008,2122)',
    vr: 'IS',
    vm: 1,
    name: 'StageNumber'
  },
  x00082124: {
    tag: '(0008,2124)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfStages'
  },
  x00082127: {
    tag: '(0008,2127)',
    vr: 'SH',
    vm: 1,
    name: 'ViewName'
  },
  x00082128: {
    tag: '(0008,2128)',
    vr: 'IS',
    vm: 1,
    name: 'ViewNumber'
  },
  x00082129: {
    tag: '(0008,2129)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfEventTimers'
  },
  x0008212a: {
    tag: '(0008,212A)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfViewsInStage'
  },
  x00082130: {
    tag: '(0008,2130)',
    vr: 'DS',
    vm: '1-n',
    name: 'EventElapsedTimes'
  },
  x00082132: {
    tag: '(0008,2132)',
    vr: 'LO',
    vm: '1-n',
    name: 'EventTimerNames'
  },
  x00082133: {
    tag: '(0008,2133)',
    vr: 'SQ',
    vm: 1,
    name: 'EventTimerSequence'
  },
  x00082134: {
    tag: '(0008,2134)',
    vr: 'FD',
    vm: 1,
    name: 'EventTimeOffset'
  },
  x00082135: {
    tag: '(0008,2135)',
    vr: 'SQ',
    vm: 1,
    name: 'EventCodeSequence'
  },
  x00082142: {
    tag: '(0008,2142)',
    vr: 'IS',
    vm: 1,
    name: 'StartTrim'
  },
  x00082143: {
    tag: '(0008,2143)',
    vr: 'IS',
    vm: 1,
    name: 'StopTrim'
  },
  x00082144: {
    tag: '(0008,2144)',
    vr: 'IS',
    vm: 1,
    name: 'RecommendedDisplayFrameRate'
  },
  x00082200: {
    tag: '(0008,2200)',
    vr: 'CS',
    vm: 1,
    name: 'TransducerPosition'
  },
  x00082204: {
    tag: '(0008,2204)',
    vr: 'CS',
    vm: 1,
    name: 'TransducerOrientation'
  },
  x00082208: {
    tag: '(0008,2208)',
    vr: 'CS',
    vm: 1,
    name: 'AnatomicStructure'
  },
  x00082218: {
    tag: '(0008,2218)',
    vr: 'SQ',
    vm: 1,
    name: 'AnatomicRegionSequence'
  },
  x00082220: {
    tag: '(0008,2220)',
    vr: 'SQ',
    vm: 1,
    name: 'AnatomicRegionModifierSequence'
  },
  x00082228: {
    tag: '(0008,2228)',
    vr: 'SQ',
    vm: 1,
    name: 'PrimaryAnatomicStructureSequence'
  },
  x00082229: {
    tag: '(0008,2229)',
    vr: 'SQ',
    vm: 1,
    name: 'AnatomicStructureSpaceOrRegionSequence'
  },
  x00082230: {
    tag: '(0008,2230)',
    vr: 'SQ',
    vm: 1,
    name: 'PrimaryAnatomicStructureModifierSequence'
  },
  x00082240: {
    tag: '(0008,2240)',
    vr: 'SQ',
    vm: 1,
    name: 'TransducerPositionSequence'
  },
  x00082242: {
    tag: '(0008,2242)',
    vr: 'SQ',
    vm: 1,
    name: 'TransducerPositionModifierSequence'
  },
  x00082244: {
    tag: '(0008,2244)',
    vr: 'SQ',
    vm: 1,
    name: 'TransducerOrientationSequence'
  },
  x00082246: {
    tag: '(0008,2246)',
    vr: 'SQ',
    vm: 1,
    name: 'TransducerOrientationModifierSequence'
  },
  x00082251: {
    tag: '(0008,2251)',
    vr: 'SQ',
    vm: 1,
    name: 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'
  },
  x00082253: {
    tag: '(0008,2253)',
    vr: 'SQ',
    vm: 1,
    name: 'AnatomicPortalOfEntranceCodeSequenceTrial'
  },
  x00082255: {
    tag: '(0008,2255)',
    vr: 'SQ',
    vm: 1,
    name: 'AnatomicApproachDirectionCodeSequenceTrial'
  },
  x00082256: {
    tag: '(0008,2256)',
    vr: 'ST',
    vm: 1,
    name: 'AnatomicPerspectiveDescriptionTrial'
  },
  x00082257: {
    tag: '(0008,2257)',
    vr: 'SQ',
    vm: 1,
    name: 'AnatomicPerspectiveCodeSequenceTrial'
  },
  x00082258: {
    tag: '(0008,2258)',
    vr: 'ST',
    vm: 1,
    name: 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'
  },
  x00082259: {
    tag: '(0008,2259)',
    vr: 'SQ',
    vm: 1,
    name: 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'
  },
  x0008225a: {
    tag: '(0008,225A)',
    vr: 'SQ',
    vm: 1,
    name: 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'
  },
  x0008225c: {
    tag: '(0008,225C)',
    vr: 'SQ',
    vm: 1,
    name: 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'
  },
  x00083001: {
    tag: '(0008,3001)',
    vr: 'SQ',
    vm: 1,
    name: 'AlternateRepresentationSequence'
  },
  x00083010: {
    tag: '(0008,3010)',
    vr: 'UI',
    vm: 1,
    name: 'IrradiationEventUID'
  },
  x00084000: {
    tag: '(0008,4000)',
    vr: 'LT',
    vm: 1,
    name: 'IdentifyingComments'
  },
  x00089007: {
    tag: '(0008,9007)',
    vr: 'CS',
    vm: 4,
    name: 'FrameType'
  },
  x00089092: {
    tag: '(0008,9092)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedImageEvidenceSequence'
  },
  x00089121: {
    tag: '(0008,9121)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedRawDataSequence'
  },
  x00089123: {
    tag: '(0008,9123)',
    vr: 'UI',
    vm: 1,
    name: 'CreatorVersionUID'
  },
  x00089124: {
    tag: '(0008,9124)',
    vr: 'SQ',
    vm: 1,
    name: 'DerivationImageSequence'
  },
  x00089154: {
    tag: '(0008,9154)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceImageEvidenceSequence'
  },
  x00089205: {
    tag: '(0008,9205)',
    vr: 'CS',
    vm: 1,
    name: 'PixelPresentation'
  },
  x00089206: {
    tag: '(0008,9206)',
    vr: 'CS',
    vm: 1,
    name: 'VolumetricProperties'
  },
  x00089207: {
    tag: '(0008,9207)',
    vr: 'CS',
    vm: 1,
    name: 'VolumeBasedCalculationTechnique'
  },
  x00089208: {
    tag: '(0008,9208)',
    vr: 'CS',
    vm: 1,
    name: 'ComplexImageComponent'
  },
  x00089209: {
    tag: '(0008,9209)',
    vr: 'CS',
    vm: 1,
    name: 'AcquisitionContrast'
  },
  x00089215: {
    tag: '(0008,9215)',
    vr: 'SQ',
    vm: 1,
    name: 'DerivationCodeSequence'
  },
  x00089237: {
    tag: '(0008,9237)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedPresentationStateSequence'
  },
  x00089410: {
    tag: '(0008,9410)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedOtherPlaneSequence'
  },
  x00089458: {
    tag: '(0008,9458)',
    vr: 'SQ',
    vm: 1,
    name: 'FrameDisplaySequence'
  },
  x00089459: {
    tag: '(0008,9459)',
    vr: 'FL',
    vm: 1,
    name: 'RecommendedDisplayFrameRateInFloat'
  },
  x00089460: {
    tag: '(0008,9460)',
    vr: 'CS',
    vm: 1,
    name: 'SkipFrameRangeFlag'
  },
  x00100010: {
    tag: '(0010,0010)',
    vr: 'PN',
    vm: 1,
    name: 'PatientName'
  },
  x00100020: {
    tag: '(0010,0020)',
    vr: 'LO',
    vm: 1,
    name: 'PatientID'
  },
  x00100021: {
    tag: '(0010,0021)',
    vr: 'LO',
    vm: 1,
    name: 'IssuerOfPatientID'
  },
  x00100022: {
    tag: '(0010,0022)',
    vr: 'CS',
    vm: 1,
    name: 'TypeOfPatientID'
  },
  x00100024: {
    tag: '(0010,0024)',
    vr: 'SQ',
    vm: 1,
    name: 'IssuerOfPatientIDQualifiersSequence'
  },
  x00100030: {
    tag: '(0010,0030)',
    vr: 'DA',
    vm: 1,
    name: 'PatientBirthDate'
  },
  x00100032: {
    tag: '(0010,0032)',
    vr: 'TM',
    vm: 1,
    name: 'PatientBirthTime'
  },
  x00100040: {
    tag: '(0010,0040)',
    vr: 'CS',
    vm: 1,
    name: 'PatientSex'
  },
  x00100050: {
    tag: '(0010,0050)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientInsurancePlanCodeSequence'
  },
  x00100101: {
    tag: '(0010,0101)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientPrimaryLanguageCodeSequence'
  },
  x00100102: {
    tag: '(0010,0102)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientPrimaryLanguageModifierCodeSequence'
  },
  x00101000: {
    tag: '(0010,1000)',
    vr: 'LO',
    vm: '1-n',
    name: 'OtherPatientIDs'
  },
  x00101001: {
    tag: '(0010,1001)',
    vr: 'PN',
    vm: '1-n',
    name: 'OtherPatientNames'
  },
  x00101002: {
    tag: '(0010,1002)',
    vr: 'SQ',
    vm: 1,
    name: 'OtherPatientIDsSequence'
  },
  x00101005: {
    tag: '(0010,1005)',
    vr: 'PN',
    vm: 1,
    name: 'PatientBirthName'
  },
  x00101010: {
    tag: '(0010,1010)',
    vr: 'AS',
    vm: 1,
    name: 'PatientAge'
  },
  x00101020: {
    tag: '(0010,1020)',
    vr: 'DS',
    vm: 1,
    name: 'PatientSize'
  },
  x00101021: {
    tag: '(0010,1021)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientSizeCodeSequence'
  },
  x00101030: {
    tag: '(0010,1030)',
    vr: 'DS',
    vm: 1,
    name: 'PatientWeight'
  },
  x00101040: {
    tag: '(0010,1040)',
    vr: 'LO',
    vm: 1,
    name: 'PatientAddress'
  },
  x00101050: {
    tag: '(0010,1050)',
    vr: 'LO',
    vm: '1-n',
    name: 'InsurancePlanIdentification'
  },
  x00101060: {
    tag: '(0010,1060)',
    vr: 'PN',
    vm: 1,
    name: 'PatientMotherBirthName'
  },
  x00101080: {
    tag: '(0010,1080)',
    vr: 'LO',
    vm: 1,
    name: 'MilitaryRank'
  },
  x00101081: {
    tag: '(0010,1081)',
    vr: 'LO',
    vm: 1,
    name: 'BranchOfService'
  },
  x00101090: {
    tag: '(0010,1090)',
    vr: 'LO',
    vm: 1,
    name: 'MedicalRecordLocator'
  },
  x00102000: {
    tag: '(0010,2000)',
    vr: 'LO',
    vm: '1-n',
    name: 'MedicalAlerts'
  },
  x00102110: {
    tag: '(0010,2110)',
    vr: 'LO',
    vm: '1-n',
    name: 'Allergies'
  },
  x00102150: {
    tag: '(0010,2150)',
    vr: 'LO',
    vm: 1,
    name: 'CountryOfResidence'
  },
  x00102152: {
    tag: '(0010,2152)',
    vr: 'LO',
    vm: 1,
    name: 'RegionOfResidence'
  },
  x00102154: {
    tag: '(0010,2154)',
    vr: 'SH',
    vm: '1-n',
    name: 'PatientTelephoneNumbers'
  },
  x00102160: {
    tag: '(0010,2160)',
    vr: 'SH',
    vm: 1,
    name: 'EthnicGroup'
  },
  x00102180: {
    tag: '(0010,2180)',
    vr: 'SH',
    vm: 1,
    name: 'Occupation'
  },
  x001021a0: {
    tag: '(0010,21A0)',
    vr: 'CS',
    vm: 1,
    name: 'SmokingStatus'
  },
  x001021b0: {
    tag: '(0010,21B0)',
    vr: 'LT',
    vm: 1,
    name: 'AdditionalPatientHistory'
  },
  x001021c0: {
    tag: '(0010,21C0)',
    vr: 'US',
    vm: 1,
    name: 'PregnancyStatus'
  },
  x001021d0: {
    tag: '(0010,21D0)',
    vr: 'DA',
    vm: 1,
    name: 'LastMenstrualDate'
  },
  x001021f0: {
    tag: '(0010,21F0)',
    vr: 'LO',
    vm: 1,
    name: 'PatientReligiousPreference'
  },
  x00102201: {
    tag: '(0010,2201)',
    vr: 'LO',
    vm: 1,
    name: 'PatientSpeciesDescription'
  },
  x00102202: {
    tag: '(0010,2202)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientSpeciesCodeSequence'
  },
  x00102203: {
    tag: '(0010,2203)',
    vr: 'CS',
    vm: 1,
    name: 'PatientSexNeutered'
  },
  x00102210: {
    tag: '(0010,2210)',
    vr: 'CS',
    vm: 1,
    name: 'AnatomicalOrientationType'
  },
  x00102292: {
    tag: '(0010,2292)',
    vr: 'LO',
    vm: 1,
    name: 'PatientBreedDescription'
  },
  x00102293: {
    tag: '(0010,2293)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientBreedCodeSequence'
  },
  x00102294: {
    tag: '(0010,2294)',
    vr: 'SQ',
    vm: 1,
    name: 'BreedRegistrationSequence'
  },
  x00102295: {
    tag: '(0010,2295)',
    vr: 'LO',
    vm: 1,
    name: 'BreedRegistrationNumber'
  },
  x00102296: {
    tag: '(0010,2296)',
    vr: 'SQ',
    vm: 1,
    name: 'BreedRegistryCodeSequence'
  },
  x00102297: {
    tag: '(0010,2297)',
    vr: 'PN',
    vm: 1,
    name: 'ResponsiblePerson'
  },
  x00102298: {
    tag: '(0010,2298)',
    vr: 'CS',
    vm: 1,
    name: 'ResponsiblePersonRole'
  },
  x00102299: {
    tag: '(0010,2299)',
    vr: 'LO',
    vm: 1,
    name: 'ResponsibleOrganization'
  },
  x00104000: {
    tag: '(0010,4000)',
    vr: 'LT',
    vm: 1,
    name: 'PatientComments'
  },
  x00109431: {
    tag: '(0010,9431)',
    vr: 'FL',
    vm: 1,
    name: 'ExaminedBodyThickness'
  },
  x00120010: {
    tag: '(0012,0010)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialSponsorName'
  },
  x00120020: {
    tag: '(0012,0020)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialProtocolID'
  },
  x00120021: {
    tag: '(0012,0021)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialProtocolName'
  },
  x00120030: {
    tag: '(0012,0030)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialSiteID'
  },
  x00120031: {
    tag: '(0012,0031)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialSiteName'
  },
  x00120040: {
    tag: '(0012,0040)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialSubjectID'
  },
  x00120042: {
    tag: '(0012,0042)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialSubjectReadingID'
  },
  x00120050: {
    tag: '(0012,0050)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialTimePointID'
  },
  x00120051: {
    tag: '(0012,0051)',
    vr: 'ST',
    vm: 1,
    name: 'ClinicalTrialTimePointDescription'
  },
  x00120060: {
    tag: '(0012,0060)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialCoordinatingCenterName'
  },
  x00120062: {
    tag: '(0012,0062)',
    vr: 'CS',
    vm: 1,
    name: 'PatientIdentityRemoved'
  },
  x00120063: {
    tag: '(0012,0063)',
    vr: 'LO',
    vm: '1-n',
    name: 'DeidentificationMethod'
  },
  x00120064: {
    tag: '(0012,0064)',
    vr: 'SQ',
    vm: 1,
    name: 'DeidentificationMethodCodeSequence'
  },
  x00120071: {
    tag: '(0012,0071)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialSeriesID'
  },
  x00120072: {
    tag: '(0012,0072)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialSeriesDescription'
  },
  x00120081: {
    tag: '(0012,0081)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialProtocolEthicsCommitteeName'
  },
  x00120082: {
    tag: '(0012,0082)',
    vr: 'LO',
    vm: 1,
    name: 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'
  },
  x00120083: {
    tag: '(0012,0083)',
    vr: 'SQ',
    vm: 1,
    name: 'ConsentForClinicalTrialUseSequence'
  },
  x00120084: {
    tag: '(0012,0084)',
    vr: 'CS',
    vm: 1,
    name: 'DistributionType'
  },
  x00120085: {
    tag: '(0012,0085)',
    vr: 'CS',
    vm: 1,
    name: 'ConsentForDistributionFlag'
  },
  x00140023: {
    tag: '(0014,0023)',
    vr: 'ST',
    vm: '1-n',
    name: 'CADFileFormat'
  },
  x00140024: {
    tag: '(0014,0024)',
    vr: 'ST',
    vm: '1-n',
    name: 'ComponentReferenceSystem'
  },
  x00140025: {
    tag: '(0014,0025)',
    vr: 'ST',
    vm: '1-n',
    name: 'ComponentManufacturingProcedure'
  },
  x00140028: {
    tag: '(0014,0028)',
    vr: 'ST',
    vm: '1-n',
    name: 'ComponentManufacturer'
  },
  x00140030: {
    tag: '(0014,0030)',
    vr: 'DS',
    vm: '1-n',
    name: 'MaterialThickness'
  },
  x00140032: {
    tag: '(0014,0032)',
    vr: 'DS',
    vm: '1-n',
    name: 'MaterialPipeDiameter'
  },
  x00140034: {
    tag: '(0014,0034)',
    vr: 'DS',
    vm: '1-n',
    name: 'MaterialIsolationDiameter'
  },
  x00140042: {
    tag: '(0014,0042)',
    vr: 'ST',
    vm: '1-n',
    name: 'MaterialGrade'
  },
  x00140044: {
    tag: '(0014,0044)',
    vr: 'ST',
    vm: '1-n',
    name: 'MaterialPropertiesFileID'
  },
  x00140045: {
    tag: '(0014,0045)',
    vr: 'ST',
    vm: '1-n',
    name: 'MaterialPropertiesFileFormat'
  },
  x00140046: {
    tag: '(0014,0046)',
    vr: 'LT',
    vm: 1,
    name: 'MaterialNotes'
  },
  x00140050: {
    tag: '(0014,0050)',
    vr: 'CS',
    vm: 1,
    name: 'ComponentShape'
  },
  x00140052: {
    tag: '(0014,0052)',
    vr: 'CS',
    vm: 1,
    name: 'CurvatureType'
  },
  x00140054: {
    tag: '(0014,0054)',
    vr: 'DS',
    vm: 1,
    name: 'OuterDiameter'
  },
  x00140056: {
    tag: '(0014,0056)',
    vr: 'DS',
    vm: 1,
    name: 'InnerDiameter'
  },
  x00141010: {
    tag: '(0014,1010)',
    vr: 'ST',
    vm: 1,
    name: 'ActualEnvironmentalConditions'
  },
  x00141020: {
    tag: '(0014,1020)',
    vr: 'DA',
    vm: 1,
    name: 'ExpiryDate'
  },
  x00141040: {
    tag: '(0014,1040)',
    vr: 'ST',
    vm: 1,
    name: 'EnvironmentalConditions'
  },
  x00142002: {
    tag: '(0014,2002)',
    vr: 'SQ',
    vm: 1,
    name: 'EvaluatorSequence'
  },
  x00142004: {
    tag: '(0014,2004)',
    vr: 'IS',
    vm: 1,
    name: 'EvaluatorNumber'
  },
  x00142006: {
    tag: '(0014,2006)',
    vr: 'PN',
    vm: 1,
    name: 'EvaluatorName'
  },
  x00142008: {
    tag: '(0014,2008)',
    vr: 'IS',
    vm: 1,
    name: 'EvaluationAttempt'
  },
  x00142012: {
    tag: '(0014,2012)',
    vr: 'SQ',
    vm: 1,
    name: 'IndicationSequence'
  },
  x00142014: {
    tag: '(0014,2014)',
    vr: 'IS',
    vm: 1,
    name: 'IndicationNumber '
  },
  x00142016: {
    tag: '(0014,2016)',
    vr: 'SH',
    vm: 1,
    name: 'IndicationLabel'
  },
  x00142018: {
    tag: '(0014,2018)',
    vr: 'ST',
    vm: 1,
    name: 'IndicationDescription'
  },
  x0014201a: {
    tag: '(0014,201A)',
    vr: 'CS',
    vm: '1-n',
    name: 'IndicationType'
  },
  x0014201c: {
    tag: '(0014,201C)',
    vr: 'CS',
    vm: 1,
    name: 'IndicationDisposition'
  },
  x0014201e: {
    tag: '(0014,201E)',
    vr: 'SQ',
    vm: 1,
    name: 'IndicationROISequence'
  },
  x00142030: {
    tag: '(0014,2030)',
    vr: 'SQ',
    vm: 1,
    name: 'IndicationPhysicalPropertySequence'
  },
  x00142032: {
    tag: '(0014,2032)',
    vr: 'SH',
    vm: 1,
    name: 'PropertyLabel'
  },
  x00142202: {
    tag: '(0014,2202)',
    vr: 'IS',
    vm: 1,
    name: 'CoordinateSystemNumberOfAxes '
  },
  x00142204: {
    tag: '(0014,2204)',
    vr: 'SQ',
    vm: 1,
    name: 'CoordinateSystemAxesSequence'
  },
  x00142206: {
    tag: '(0014,2206)',
    vr: 'ST',
    vm: 1,
    name: 'CoordinateSystemAxisDescription'
  },
  x00142208: {
    tag: '(0014,2208)',
    vr: 'CS',
    vm: 1,
    name: 'CoordinateSystemDataSetMapping'
  },
  x0014220a: {
    tag: '(0014,220A)',
    vr: 'IS',
    vm: 1,
    name: 'CoordinateSystemAxisNumber'
  },
  x0014220c: {
    tag: '(0014,220C)',
    vr: 'CS',
    vm: 1,
    name: 'CoordinateSystemAxisType'
  },
  x0014220e: {
    tag: '(0014,220E)',
    vr: 'CS',
    vm: 1,
    name: 'CoordinateSystemAxisUnits'
  },
  x00142210: {
    tag: '(0014,2210)',
    vr: 'OB',
    vm: 1,
    name: 'CoordinateSystemAxisValues'
  },
  x00142220: {
    tag: '(0014,2220)',
    vr: 'SQ',
    vm: 1,
    name: 'CoordinateSystemTransformSequence'
  },
  x00142222: {
    tag: '(0014,2222)',
    vr: 'ST',
    vm: 1,
    name: 'TransformDescription'
  },
  x00142224: {
    tag: '(0014,2224)',
    vr: 'IS',
    vm: 1,
    name: 'TransformNumberOfAxes'
  },
  x00142226: {
    tag: '(0014,2226)',
    vr: 'IS',
    vm: '1-n',
    name: 'TransformOrderOfAxes'
  },
  x00142228: {
    tag: '(0014,2228)',
    vr: 'CS',
    vm: 1,
    name: 'TransformedAxisUnits'
  },
  x0014222a: {
    tag: '(0014,222A)',
    vr: 'DS',
    vm: '1-n',
    name: 'CoordinateSystemTransformRotationAndScaleMatrix'
  },
  x0014222c: {
    tag: '(0014,222C)',
    vr: 'DS',
    vm: '1-n',
    name: 'CoordinateSystemTransformTranslationMatrix'
  },
  x00143011: {
    tag: '(0014,3011)',
    vr: 'DS',
    vm: 1,
    name: 'InternalDetectorFrameTime'
  },
  x00143012: {
    tag: '(0014,3012)',
    vr: 'DS',
    vm: 1,
    name: 'NumberOfFramesIntegrated'
  },
  x00143020: {
    tag: '(0014,3020)',
    vr: 'SQ',
    vm: 1,
    name: 'DetectorTemperatureSequence'
  },
  x00143022: {
    tag: '(0014,3022)',
    vr: 'DS',
    vm: 1,
    name: 'SensorName'
  },
  x00143024: {
    tag: '(0014,3024)',
    vr: 'DS',
    vm: 1,
    name: 'HorizontalOffsetOfSensor'
  },
  x00143026: {
    tag: '(0014,3026)',
    vr: 'DS',
    vm: 1,
    name: 'VerticalOffsetOfSensor'
  },
  x00143028: {
    tag: '(0014,3028)',
    vr: 'DS',
    vm: 1,
    name: 'SensorTemperature'
  },
  x00143040: {
    tag: '(0014,3040)',
    vr: 'SQ',
    vm: 1,
    name: 'DarkCurrentSequence'
  },
  x00143050: {
    tag: '(0014,3050)',
    vr: 'OB|OW',
    vm: 1,
    name: 'DarkCurrentCounts'
  },
  x00143060: {
    tag: '(0014,3060)',
    vr: 'SQ',
    vm: 1,
    name: 'GainCorrectionReferenceSequence'
  },
  x00143070: {
    tag: '(0014,3070)',
    vr: 'OB|OW',
    vm: 1,
    name: 'AirCounts'
  },
  x00143071: {
    tag: '(0014,3071)',
    vr: 'DS',
    vm: 1,
    name: 'KVUsedInGainCalibration'
  },
  x00143072: {
    tag: '(0014,3072)',
    vr: 'DS',
    vm: 1,
    name: 'MAUsedInGainCalibration'
  },
  x00143073: {
    tag: '(0014,3073)',
    vr: 'DS',
    vm: 1,
    name: 'NumberOfFramesUsedForIntegration'
  },
  x00143074: {
    tag: '(0014,3074)',
    vr: 'LO',
    vm: 1,
    name: 'FilterMaterialUsedInGainCalibration'
  },
  x00143075: {
    tag: '(0014,3075)',
    vr: 'DS',
    vm: 1,
    name: 'FilterThicknessUsedInGainCalibration'
  },
  x00143076: {
    tag: '(0014,3076)',
    vr: 'DA',
    vm: 1,
    name: 'DateOfGainCalibration'
  },
  x00143077: {
    tag: '(0014,3077)',
    vr: 'TM',
    vm: 1,
    name: 'TimeOfGainCalibration'
  },
  x00143080: {
    tag: '(0014,3080)',
    vr: 'OB',
    vm: 1,
    name: 'BadPixelImage'
  },
  x00143099: {
    tag: '(0014,3099)',
    vr: 'LT',
    vm: 1,
    name: 'CalibrationNotes'
  },
  x00144002: {
    tag: '(0014,4002)',
    vr: 'SQ',
    vm: 1,
    name: 'PulserEquipmentSequence'
  },
  x00144004: {
    tag: '(0014,4004)',
    vr: 'CS',
    vm: 1,
    name: 'PulserType'
  },
  x00144006: {
    tag: '(0014,4006)',
    vr: 'LT',
    vm: 1,
    name: 'PulserNotes'
  },
  x00144008: {
    tag: '(0014,4008)',
    vr: 'SQ',
    vm: 1,
    name: 'ReceiverEquipmentSequence'
  },
  x0014400a: {
    tag: '(0014,400A)',
    vr: 'CS',
    vm: 1,
    name: 'AmplifierType'
  },
  x0014400c: {
    tag: '(0014,400C)',
    vr: 'LT',
    vm: 1,
    name: 'ReceiverNotes'
  },
  x0014400e: {
    tag: '(0014,400E)',
    vr: 'SQ',
    vm: 1,
    name: 'PreAmplifierEquipmentSequence'
  },
  x0014400f: {
    tag: '(0014,400F)',
    vr: 'LT',
    vm: 1,
    name: 'PreAmplifierNotes'
  },
  x00144010: {
    tag: '(0014,4010)',
    vr: 'SQ',
    vm: 1,
    name: 'TransmitTransducerSequence'
  },
  x00144011: {
    tag: '(0014,4011)',
    vr: 'SQ',
    vm: 1,
    name: 'ReceiveTransducerSequence'
  },
  x00144012: {
    tag: '(0014,4012)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfElements'
  },
  x00144013: {
    tag: '(0014,4013)',
    vr: 'CS',
    vm: 1,
    name: 'ElementShape'
  },
  x00144014: {
    tag: '(0014,4014)',
    vr: 'DS',
    vm: 1,
    name: 'ElementDimensionA'
  },
  x00144015: {
    tag: '(0014,4015)',
    vr: 'DS',
    vm: 1,
    name: 'ElementDimensionB'
  },
  x00144016: {
    tag: '(0014,4016)',
    vr: 'DS',
    vm: 1,
    name: 'ElementPitch'
  },
  x00144017: {
    tag: '(0014,4017)',
    vr: 'DS',
    vm: 1,
    name: 'MeasuredBeamDimensionA'
  },
  x00144018: {
    tag: '(0014,4018)',
    vr: 'DS',
    vm: 1,
    name: 'MeasuredBeamDimensionB'
  },
  x00144019: {
    tag: '(0014,4019)',
    vr: 'DS',
    vm: 1,
    name: 'LocationOfMeasuredBeamDiameter'
  },
  x0014401a: {
    tag: '(0014,401A)',
    vr: 'DS',
    vm: 1,
    name: 'NominalFrequency'
  },
  x0014401b: {
    tag: '(0014,401B)',
    vr: 'DS',
    vm: 1,
    name: 'MeasuredCenterFrequency'
  },
  x0014401c: {
    tag: '(0014,401C)',
    vr: 'DS',
    vm: 1,
    name: 'MeasuredBandwidth'
  },
  x00144020: {
    tag: '(0014,4020)',
    vr: 'SQ',
    vm: 1,
    name: 'PulserSettingsSequence'
  },
  x00144022: {
    tag: '(0014,4022)',
    vr: 'DS',
    vm: 1,
    name: 'PulseWidth'
  },
  x00144024: {
    tag: '(0014,4024)',
    vr: 'DS',
    vm: 1,
    name: 'ExcitationFrequency'
  },
  x00144026: {
    tag: '(0014,4026)',
    vr: 'CS',
    vm: 1,
    name: 'ModulationType'
  },
  x00144028: {
    tag: '(0014,4028)',
    vr: 'DS',
    vm: 1,
    name: 'Damping'
  },
  x00144030: {
    tag: '(0014,4030)',
    vr: 'SQ',
    vm: 1,
    name: 'ReceiverSettingsSequence'
  },
  x00144031: {
    tag: '(0014,4031)',
    vr: 'DS',
    vm: 1,
    name: 'AcquiredSoundpathLength'
  },
  x00144032: {
    tag: '(0014,4032)',
    vr: 'CS',
    vm: 1,
    name: 'AcquisitionCompressionType'
  },
  x00144033: {
    tag: '(0014,4033)',
    vr: 'IS',
    vm: 1,
    name: 'AcquisitionSampleSize'
  },
  x00144034: {
    tag: '(0014,4034)',
    vr: 'DS',
    vm: 1,
    name: 'RectifierSmoothing'
  },
  x00144035: {
    tag: '(0014,4035)',
    vr: 'SQ',
    vm: 1,
    name: 'DACSequence'
  },
  x00144036: {
    tag: '(0014,4036)',
    vr: 'CS',
    vm: 1,
    name: 'DACType'
  },
  x00144038: {
    tag: '(0014,4038)',
    vr: 'DS',
    vm: '1-n',
    name: 'DACGainPoints'
  },
  x0014403a: {
    tag: '(0014,403A)',
    vr: 'DS',
    vm: '1-n',
    name: 'DACTimePoints'
  },
  x0014403c: {
    tag: '(0014,403C)',
    vr: 'DS',
    vm: '1-n',
    name: 'DACAmplitude'
  },
  x00144040: {
    tag: '(0014,4040)',
    vr: 'SQ',
    vm: 1,
    name: 'PreAmplifierSettingsSequence'
  },
  x00144050: {
    tag: '(0014,4050)',
    vr: 'SQ',
    vm: 1,
    name: 'TransmitTransducerSettingsSequence'
  },
  x00144051: {
    tag: '(0014,4051)',
    vr: 'SQ',
    vm: 1,
    name: 'ReceiveTransducerSettingsSequence'
  },
  x00144052: {
    tag: '(0014,4052)',
    vr: 'DS',
    vm: 1,
    name: 'IncidentAngle'
  },
  x00144054: {
    tag: '(0014,4054)',
    vr: 'ST',
    vm: 1,
    name: 'CouplingTechnique'
  },
  x00144056: {
    tag: '(0014,4056)',
    vr: 'ST',
    vm: 1,
    name: 'CouplingMedium'
  },
  x00144057: {
    tag: '(0014,4057)',
    vr: 'DS',
    vm: 1,
    name: 'CouplingVelocity'
  },
  x00144058: {
    tag: '(0014,4058)',
    vr: 'DS',
    vm: 1,
    name: 'CrystalCenterLocationX'
  },
  x00144059: {
    tag: '(0014,4059)',
    vr: 'DS',
    vm: 1,
    name: 'CrystalCenterLocationZ'
  },
  x0014405a: {
    tag: '(0014,405A)',
    vr: 'DS',
    vm: 1,
    name: 'SoundPathLength'
  },
  x0014405c: {
    tag: '(0014,405C)',
    vr: 'ST',
    vm: 1,
    name: 'DelayLawIdentifier'
  },
  x00144060: {
    tag: '(0014,4060)',
    vr: 'SQ',
    vm: 1,
    name: 'GateSettingsSequence'
  },
  x00144062: {
    tag: '(0014,4062)',
    vr: 'DS',
    vm: 1,
    name: 'GateThreshold'
  },
  x00144064: {
    tag: '(0014,4064)',
    vr: 'DS',
    vm: 1,
    name: 'VelocityOfSound'
  },
  x00144070: {
    tag: '(0014,4070)',
    vr: 'SQ',
    vm: 1,
    name: 'CalibrationSettingsSequence'
  },
  x00144072: {
    tag: '(0014,4072)',
    vr: 'ST',
    vm: 1,
    name: 'CalibrationProcedure'
  },
  x00144074: {
    tag: '(0014,4074)',
    vr: 'SH',
    vm: 1,
    name: 'ProcedureVersion'
  },
  x00144076: {
    tag: '(0014,4076)',
    vr: 'DA',
    vm: 1,
    name: 'ProcedureCreationDate'
  },
  x00144078: {
    tag: '(0014,4078)',
    vr: 'DA',
    vm: 1,
    name: 'ProcedureExpirationDate'
  },
  x0014407a: {
    tag: '(0014,407A)',
    vr: 'DA',
    vm: 1,
    name: 'ProcedureLastModifiedDate'
  },
  x0014407c: {
    tag: '(0014,407C)',
    vr: 'TM',
    vm: '1-n',
    name: 'CalibrationTime'
  },
  x0014407e: {
    tag: '(0014,407E)',
    vr: 'DA',
    vm: '1-n',
    name: 'CalibrationDate'
  },
  x00145002: {
    tag: '(0014,5002)',
    vr: 'IS',
    vm: 1,
    name: 'LINACEnergy'
  },
  x00145004: {
    tag: '(0014,5004)',
    vr: 'IS',
    vm: 1,
    name: 'LINACOutput'
  },
  x00180010: {
    tag: '(0018,0010)',
    vr: 'LO',
    vm: 1,
    name: 'ContrastBolusAgent'
  },
  x00180012: {
    tag: '(0018,0012)',
    vr: 'SQ',
    vm: 1,
    name: 'ContrastBolusAgentSequence'
  },
  x00180014: {
    tag: '(0018,0014)',
    vr: 'SQ',
    vm: 1,
    name: 'ContrastBolusAdministrationRouteSequence'
  },
  x00180015: {
    tag: '(0018,0015)',
    vr: 'CS',
    vm: 1,
    name: 'BodyPartExamined'
  },
  x00180020: {
    tag: '(0018,0020)',
    vr: 'CS',
    vm: '1-n',
    name: 'ScanningSequence'
  },
  x00180021: {
    tag: '(0018,0021)',
    vr: 'CS',
    vm: '1-n',
    name: 'SequenceVariant'
  },
  x00180022: {
    tag: '(0018,0022)',
    vr: 'CS',
    vm: '1-n',
    name: 'ScanOptions'
  },
  x00180023: {
    tag: '(0018,0023)',
    vr: 'CS',
    vm: 1,
    name: 'MRAcquisitionType'
  },
  x00180024: {
    tag: '(0018,0024)',
    vr: 'SH',
    vm: 1,
    name: 'SequenceName'
  },
  x00180025: {
    tag: '(0018,0025)',
    vr: 'CS',
    vm: 1,
    name: 'AngioFlag'
  },
  x00180026: {
    tag: '(0018,0026)',
    vr: 'SQ',
    vm: 1,
    name: 'InterventionDrugInformationSequence'
  },
  x00180027: {
    tag: '(0018,0027)',
    vr: 'TM',
    vm: 1,
    name: 'InterventionDrugStopTime'
  },
  x00180028: {
    tag: '(0018,0028)',
    vr: 'DS',
    vm: 1,
    name: 'InterventionDrugDose'
  },
  x00180029: {
    tag: '(0018,0029)',
    vr: 'SQ',
    vm: 1,
    name: 'InterventionDrugCodeSequence'
  },
  x0018002a: {
    tag: '(0018,002A)',
    vr: 'SQ',
    vm: 1,
    name: 'AdditionalDrugSequence'
  },
  x00180030: {
    tag: '(0018,0030)',
    vr: 'LO',
    vm: '1-n',
    name: 'Radionuclide'
  },
  x00180031: {
    tag: '(0018,0031)',
    vr: 'LO',
    vm: 1,
    name: 'Radiopharmaceutical'
  },
  x00180032: {
    tag: '(0018,0032)',
    vr: 'DS',
    vm: 1,
    name: 'EnergyWindowCenterline'
  },
  x00180033: {
    tag: '(0018,0033)',
    vr: 'DS',
    vm: '1-n',
    name: 'EnergyWindowTotalWidth'
  },
  x00180034: {
    tag: '(0018,0034)',
    vr: 'LO',
    vm: 1,
    name: 'InterventionDrugName'
  },
  x00180035: {
    tag: '(0018,0035)',
    vr: 'TM',
    vm: 1,
    name: 'InterventionDrugStartTime'
  },
  x00180036: {
    tag: '(0018,0036)',
    vr: 'SQ',
    vm: 1,
    name: 'InterventionSequence'
  },
  x00180037: {
    tag: '(0018,0037)',
    vr: 'CS',
    vm: 1,
    name: 'TherapyType'
  },
  x00180038: {
    tag: '(0018,0038)',
    vr: 'CS',
    vm: 1,
    name: 'InterventionStatus'
  },
  x00180039: {
    tag: '(0018,0039)',
    vr: 'CS',
    vm: 1,
    name: 'TherapyDescription'
  },
  x0018003a: {
    tag: '(0018,003A)',
    vr: 'ST',
    vm: 1,
    name: 'InterventionDescription'
  },
  x00180040: {
    tag: '(0018,0040)',
    vr: 'IS',
    vm: 1,
    name: 'CineRate'
  },
  x00180042: {
    tag: '(0018,0042)',
    vr: 'CS',
    vm: 1,
    name: 'InitialCineRunState'
  },
  x00180050: {
    tag: '(0018,0050)',
    vr: 'DS',
    vm: 1,
    name: 'SliceThickness'
  },
  x00180060: {
    tag: '(0018,0060)',
    vr: 'DS',
    vm: 1,
    name: 'KVP'
  },
  x00180070: {
    tag: '(0018,0070)',
    vr: 'IS',
    vm: 1,
    name: 'CountsAccumulated'
  },
  x00180071: {
    tag: '(0018,0071)',
    vr: 'CS',
    vm: 1,
    name: 'AcquisitionTerminationCondition'
  },
  x00180072: {
    tag: '(0018,0072)',
    vr: 'DS',
    vm: 1,
    name: 'EffectiveDuration'
  },
  x00180073: {
    tag: '(0018,0073)',
    vr: 'CS',
    vm: 1,
    name: 'AcquisitionStartCondition'
  },
  x00180074: {
    tag: '(0018,0074)',
    vr: 'IS',
    vm: 1,
    name: 'AcquisitionStartConditionData'
  },
  x00180075: {
    tag: '(0018,0075)',
    vr: 'IS',
    vm: 1,
    name: 'AcquisitionTerminationConditionData'
  },
  x00180080: {
    tag: '(0018,0080)',
    vr: 'DS',
    vm: 1,
    name: 'RepetitionTime'
  },
  x00180081: {
    tag: '(0018,0081)',
    vr: 'DS',
    vm: 1,
    name: 'EchoTime'
  },
  x00180082: {
    tag: '(0018,0082)',
    vr: 'DS',
    vm: 1,
    name: 'InversionTime'
  },
  x00180083: {
    tag: '(0018,0083)',
    vr: 'DS',
    vm: 1,
    name: 'NumberOfAverages'
  },
  x00180084: {
    tag: '(0018,0084)',
    vr: 'DS',
    vm: 1,
    name: 'ImagingFrequency'
  },
  x00180085: {
    tag: '(0018,0085)',
    vr: 'SH',
    vm: 1,
    name: 'ImagedNucleus'
  },
  x00180086: {
    tag: '(0018,0086)',
    vr: 'IS',
    vm: '1-n',
    name: 'EchoNumbers'
  },
  x00180087: {
    tag: '(0018,0087)',
    vr: 'DS',
    vm: 1,
    name: 'MagneticFieldStrength'
  },
  x00180088: {
    tag: '(0018,0088)',
    vr: 'DS',
    vm: 1,
    name: 'SpacingBetweenSlices'
  },
  x00180089: {
    tag: '(0018,0089)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfPhaseEncodingSteps'
  },
  x00180090: {
    tag: '(0018,0090)',
    vr: 'DS',
    vm: 1,
    name: 'DataCollectionDiameter'
  },
  x00180091: {
    tag: '(0018,0091)',
    vr: 'IS',
    vm: 1,
    name: 'EchoTrainLength'
  },
  x00180093: {
    tag: '(0018,0093)',
    vr: 'DS',
    vm: 1,
    name: 'PercentSampling'
  },
  x00180094: {
    tag: '(0018,0094)',
    vr: 'DS',
    vm: 1,
    name: 'PercentPhaseFieldOfView'
  },
  x00180095: {
    tag: '(0018,0095)',
    vr: 'DS',
    vm: 1,
    name: 'PixelBandwidth'
  },
  x00181000: {
    tag: '(0018,1000)',
    vr: 'LO',
    vm: 1,
    name: 'DeviceSerialNumber'
  },
  x00181002: {
    tag: '(0018,1002)',
    vr: 'UI',
    vm: 1,
    name: 'DeviceUID'
  },
  x00181003: {
    tag: '(0018,1003)',
    vr: 'LO',
    vm: 1,
    name: 'DeviceID'
  },
  x00181004: {
    tag: '(0018,1004)',
    vr: 'LO',
    vm: 1,
    name: 'PlateID'
  },
  x00181005: {
    tag: '(0018,1005)',
    vr: 'LO',
    vm: 1,
    name: 'GeneratorID'
  },
  x00181006: {
    tag: '(0018,1006)',
    vr: 'LO',
    vm: 1,
    name: 'GridID'
  },
  x00181007: {
    tag: '(0018,1007)',
    vr: 'LO',
    vm: 1,
    name: 'CassetteID'
  },
  x00181008: {
    tag: '(0018,1008)',
    vr: 'LO',
    vm: 1,
    name: 'GantryID'
  },
  x00181010: {
    tag: '(0018,1010)',
    vr: 'LO',
    vm: 1,
    name: 'SecondaryCaptureDeviceID'
  },
  x00181011: {
    tag: '(0018,1011)',
    vr: 'LO',
    vm: 1,
    name: 'HardcopyCreationDeviceID'
  },
  x00181012: {
    tag: '(0018,1012)',
    vr: 'DA',
    vm: 1,
    name: 'DateOfSecondaryCapture'
  },
  x00181014: {
    tag: '(0018,1014)',
    vr: 'TM',
    vm: 1,
    name: 'TimeOfSecondaryCapture'
  },
  x00181016: {
    tag: '(0018,1016)',
    vr: 'LO',
    vm: 1,
    name: 'SecondaryCaptureDeviceManufacturer'
  },
  x00181017: {
    tag: '(0018,1017)',
    vr: 'LO',
    vm: 1,
    name: 'HardcopyDeviceManufacturer'
  },
  x00181018: {
    tag: '(0018,1018)',
    vr: 'LO',
    vm: 1,
    name: 'SecondaryCaptureDeviceManufacturerModelName'
  },
  x00181019: {
    tag: '(0018,1019)',
    vr: 'LO',
    vm: '1-n',
    name: 'SecondaryCaptureDeviceSoftwareVersions'
  },
  x0018101a: {
    tag: '(0018,101A)',
    vr: 'LO',
    vm: '1-n',
    name: 'HardcopyDeviceSoftwareVersion'
  },
  x0018101b: {
    tag: '(0018,101B)',
    vr: 'LO',
    vm: 1,
    name: 'HardcopyDeviceManufacturerModelName'
  },
  x00181020: {
    tag: '(0018,1020)',
    vr: 'LO',
    vm: '1-n',
    name: 'SoftwareVersions'
  },
  x00181022: {
    tag: '(0018,1022)',
    vr: 'SH',
    vm: 1,
    name: 'VideoImageFormatAcquired'
  },
  x00181023: {
    tag: '(0018,1023)',
    vr: 'LO',
    vm: 1,
    name: 'DigitalImageFormatAcquired'
  },
  x00181030: {
    tag: '(0018,1030)',
    vr: 'LO',
    vm: 1,
    name: 'ProtocolName'
  },
  x00181040: {
    tag: '(0018,1040)',
    vr: 'LO',
    vm: 1,
    name: 'ContrastBolusRoute'
  },
  x00181041: {
    tag: '(0018,1041)',
    vr: 'DS',
    vm: 1,
    name: 'ContrastBolusVolume'
  },
  x00181042: {
    tag: '(0018,1042)',
    vr: 'TM',
    vm: 1,
    name: 'ContrastBolusStartTime'
  },
  x00181043: {
    tag: '(0018,1043)',
    vr: 'TM',
    vm: 1,
    name: 'ContrastBolusStopTime'
  },
  x00181044: {
    tag: '(0018,1044)',
    vr: 'DS',
    vm: 1,
    name: 'ContrastBolusTotalDose'
  },
  x00181045: {
    tag: '(0018,1045)',
    vr: 'IS',
    vm: 1,
    name: 'SyringeCounts'
  },
  x00181046: {
    tag: '(0018,1046)',
    vr: 'DS',
    vm: '1-n',
    name: 'ContrastFlowRate'
  },
  x00181047: {
    tag: '(0018,1047)',
    vr: 'DS',
    vm: '1-n',
    name: 'ContrastFlowDuration'
  },
  x00181048: {
    tag: '(0018,1048)',
    vr: 'CS',
    vm: 1,
    name: 'ContrastBolusIngredient'
  },
  x00181049: {
    tag: '(0018,1049)',
    vr: 'DS',
    vm: 1,
    name: 'ContrastBolusIngredientConcentration'
  },
  x00181050: {
    tag: '(0018,1050)',
    vr: 'DS',
    vm: 1,
    name: 'SpatialResolution'
  },
  x00181060: {
    tag: '(0018,1060)',
    vr: 'DS',
    vm: 1,
    name: 'TriggerTime'
  },
  x00181061: {
    tag: '(0018,1061)',
    vr: 'LO',
    vm: 1,
    name: 'TriggerSourceOrType'
  },
  x00181062: {
    tag: '(0018,1062)',
    vr: 'IS',
    vm: 1,
    name: 'NominalInterval'
  },
  x00181063: {
    tag: '(0018,1063)',
    vr: 'DS',
    vm: 1,
    name: 'FrameTime'
  },
  x00181064: {
    tag: '(0018,1064)',
    vr: 'LO',
    vm: 1,
    name: 'CardiacFramingType'
  },
  x00181065: {
    tag: '(0018,1065)',
    vr: 'DS',
    vm: '1-n',
    name: 'FrameTimeVector'
  },
  x00181066: {
    tag: '(0018,1066)',
    vr: 'DS',
    vm: 1,
    name: 'FrameDelay'
  },
  x00181067: {
    tag: '(0018,1067)',
    vr: 'DS',
    vm: 1,
    name: 'ImageTriggerDelay'
  },
  x00181068: {
    tag: '(0018,1068)',
    vr: 'DS',
    vm: 1,
    name: 'MultiplexGroupTimeOffset'
  },
  x00181069: {
    tag: '(0018,1069)',
    vr: 'DS',
    vm: 1,
    name: 'TriggerTimeOffset'
  },
  x0018106a: {
    tag: '(0018,106A)',
    vr: 'CS',
    vm: 1,
    name: 'SynchronizationTrigger'
  },
  x0018106c: {
    tag: '(0018,106C)',
    vr: 'US',
    vm: 2,
    name: 'SynchronizationChannel'
  },
  x0018106e: {
    tag: '(0018,106E)',
    vr: 'UL',
    vm: 1,
    name: 'TriggerSamplePosition'
  },
  x00181070: {
    tag: '(0018,1070)',
    vr: 'LO',
    vm: 1,
    name: 'RadiopharmaceuticalRoute'
  },
  x00181071: {
    tag: '(0018,1071)',
    vr: 'DS',
    vm: 1,
    name: 'RadiopharmaceuticalVolume'
  },
  x00181072: {
    tag: '(0018,1072)',
    vr: 'TM',
    vm: 1,
    name: 'RadiopharmaceuticalStartTime'
  },
  x00181073: {
    tag: '(0018,1073)',
    vr: 'TM',
    vm: 1,
    name: 'RadiopharmaceuticalStopTime'
  },
  x00181074: {
    tag: '(0018,1074)',
    vr: 'DS',
    vm: 1,
    name: 'RadionuclideTotalDose'
  },
  x00181075: {
    tag: '(0018,1075)',
    vr: 'DS',
    vm: 1,
    name: 'RadionuclideHalfLife'
  },
  x00181076: {
    tag: '(0018,1076)',
    vr: 'DS',
    vm: 1,
    name: 'RadionuclidePositronFraction'
  },
  x00181077: {
    tag: '(0018,1077)',
    vr: 'DS',
    vm: 1,
    name: 'RadiopharmaceuticalSpecificActivity'
  },
  x00181078: {
    tag: '(0018,1078)',
    vr: 'DT',
    vm: 1,
    name: 'RadiopharmaceuticalStartDateTime'
  },
  x00181079: {
    tag: '(0018,1079)',
    vr: 'DT',
    vm: 1,
    name: 'RadiopharmaceuticalStopDateTime'
  },
  x00181080: {
    tag: '(0018,1080)',
    vr: 'CS',
    vm: 1,
    name: 'BeatRejectionFlag'
  },
  x00181081: {
    tag: '(0018,1081)',
    vr: 'IS',
    vm: 1,
    name: 'LowRRValue'
  },
  x00181082: {
    tag: '(0018,1082)',
    vr: 'IS',
    vm: 1,
    name: 'HighRRValue'
  },
  x00181083: {
    tag: '(0018,1083)',
    vr: 'IS',
    vm: 1,
    name: 'IntervalsAcquired'
  },
  x00181084: {
    tag: '(0018,1084)',
    vr: 'IS',
    vm: 1,
    name: 'IntervalsRejected'
  },
  x00181085: {
    tag: '(0018,1085)',
    vr: 'LO',
    vm: 1,
    name: 'PVCRejection'
  },
  x00181086: {
    tag: '(0018,1086)',
    vr: 'IS',
    vm: 1,
    name: 'SkipBeats'
  },
  x00181088: {
    tag: '(0018,1088)',
    vr: 'IS',
    vm: 1,
    name: 'HeartRate'
  },
  x00181090: {
    tag: '(0018,1090)',
    vr: 'IS',
    vm: 1,
    name: 'CardiacNumberOfImages'
  },
  x00181094: {
    tag: '(0018,1094)',
    vr: 'IS',
    vm: 1,
    name: 'TriggerWindow'
  },
  x00181100: {
    tag: '(0018,1100)',
    vr: 'DS',
    vm: 1,
    name: 'ReconstructionDiameter'
  },
  x00181110: {
    tag: '(0018,1110)',
    vr: 'DS',
    vm: 1,
    name: 'DistanceSourceToDetector'
  },
  x00181111: {
    tag: '(0018,1111)',
    vr: 'DS',
    vm: 1,
    name: 'DistanceSourceToPatient'
  },
  x00181114: {
    tag: '(0018,1114)',
    vr: 'DS',
    vm: 1,
    name: 'EstimatedRadiographicMagnificationFactor'
  },
  x00181120: {
    tag: '(0018,1120)',
    vr: 'DS',
    vm: 1,
    name: 'GantryDetectorTilt'
  },
  x00181121: {
    tag: '(0018,1121)',
    vr: 'DS',
    vm: 1,
    name: 'GantryDetectorSlew'
  },
  x00181130: {
    tag: '(0018,1130)',
    vr: 'DS',
    vm: 1,
    name: 'TableHeight'
  },
  x00181131: {
    tag: '(0018,1131)',
    vr: 'DS',
    vm: 1,
    name: 'TableTraverse'
  },
  x00181134: {
    tag: '(0018,1134)',
    vr: 'CS',
    vm: 1,
    name: 'TableMotion'
  },
  x00181135: {
    tag: '(0018,1135)',
    vr: 'DS',
    vm: '1-n',
    name: 'TableVerticalIncrement'
  },
  x00181136: {
    tag: '(0018,1136)',
    vr: 'DS',
    vm: '1-n',
    name: 'TableLateralIncrement'
  },
  x00181137: {
    tag: '(0018,1137)',
    vr: 'DS',
    vm: '1-n',
    name: 'TableLongitudinalIncrement'
  },
  x00181138: {
    tag: '(0018,1138)',
    vr: 'DS',
    vm: 1,
    name: 'TableAngle'
  },
  x0018113a: {
    tag: '(0018,113A)',
    vr: 'CS',
    vm: 1,
    name: 'TableType'
  },
  x00181140: {
    tag: '(0018,1140)',
    vr: 'CS',
    vm: 1,
    name: 'RotationDirection'
  },
  x00181141: {
    tag: '(0018,1141)',
    vr: 'DS',
    vm: 1,
    name: 'AngularPosition'
  },
  x00181142: {
    tag: '(0018,1142)',
    vr: 'DS',
    vm: '1-n',
    name: 'RadialPosition'
  },
  x00181143: {
    tag: '(0018,1143)',
    vr: 'DS',
    vm: 1,
    name: 'ScanArc'
  },
  x00181144: {
    tag: '(0018,1144)',
    vr: 'DS',
    vm: 1,
    name: 'AngularStep'
  },
  x00181145: {
    tag: '(0018,1145)',
    vr: 'DS',
    vm: 1,
    name: 'CenterOfRotationOffset'
  },
  x00181146: {
    tag: '(0018,1146)',
    vr: 'DS',
    vm: '1-n',
    name: 'RotationOffset'
  },
  x00181147: {
    tag: '(0018,1147)',
    vr: 'CS',
    vm: 1,
    name: 'FieldOfViewShape'
  },
  x00181149: {
    tag: '(0018,1149)',
    vr: 'IS',
    vm: '1-2',
    name: 'FieldOfViewDimensions'
  },
  x00181150: {
    tag: '(0018,1150)',
    vr: 'IS',
    vm: 1,
    name: 'ExposureTime'
  },
  x00181151: {
    tag: '(0018,1151)',
    vr: 'IS',
    vm: 1,
    name: 'XRayTubeCurrent'
  },
  x00181152: {
    tag: '(0018,1152)',
    vr: 'IS',
    vm: 1,
    name: 'Exposure'
  },
  x00181153: {
    tag: '(0018,1153)',
    vr: 'IS',
    vm: 1,
    name: 'ExposureInuAs'
  },
  x00181154: {
    tag: '(0018,1154)',
    vr: 'DS',
    vm: 1,
    name: 'AveragePulseWidth'
  },
  x00181155: {
    tag: '(0018,1155)',
    vr: 'CS',
    vm: 1,
    name: 'RadiationSetting'
  },
  x00181156: {
    tag: '(0018,1156)',
    vr: 'CS',
    vm: 1,
    name: 'RectificationType'
  },
  x0018115a: {
    tag: '(0018,115A)',
    vr: 'CS',
    vm: 1,
    name: 'RadiationMode'
  },
  x0018115e: {
    tag: '(0018,115E)',
    vr: 'DS',
    vm: 1,
    name: 'ImageAndFluoroscopyAreaDoseProduct'
  },
  x00181160: {
    tag: '(0018,1160)',
    vr: 'SH',
    vm: 1,
    name: 'FilterType'
  },
  x00181161: {
    tag: '(0018,1161)',
    vr: 'LO',
    vm: '1-n',
    name: 'TypeOfFilters'
  },
  x00181162: {
    tag: '(0018,1162)',
    vr: 'DS',
    vm: 1,
    name: 'IntensifierSize'
  },
  x00181164: {
    tag: '(0018,1164)',
    vr: 'DS',
    vm: 2,
    name: 'ImagerPixelSpacing'
  },
  x00181166: {
    tag: '(0018,1166)',
    vr: 'CS',
    vm: '1-n',
    name: 'Grid'
  },
  x00181170: {
    tag: '(0018,1170)',
    vr: 'IS',
    vm: 1,
    name: 'GeneratorPower'
  },
  x00181180: {
    tag: '(0018,1180)',
    vr: 'SH',
    vm: 1,
    name: 'CollimatorGridName'
  },
  x00181181: {
    tag: '(0018,1181)',
    vr: 'CS',
    vm: 1,
    name: 'CollimatorType'
  },
  x00181182: {
    tag: '(0018,1182)',
    vr: 'IS',
    vm: '1-2',
    name: 'FocalDistance'
  },
  x00181183: {
    tag: '(0018,1183)',
    vr: 'DS',
    vm: '1-2',
    name: 'xfocuscenter'
  },
  x00181184: {
    tag: '(0018,1184)',
    vr: 'DS',
    vm: '1-2',
    name: 'YFocusCenter'
  },
  x00181190: {
    tag: '(0018,1190)',
    vr: 'DS',
    vm: '1-n',
    name: 'FocalSpots'
  },
  x00181191: {
    tag: '(0018,1191)',
    vr: 'CS',
    vm: 1,
    name: 'AnodeTargetMaterial'
  },
  x001811a0: {
    tag: '(0018,11A0)',
    vr: 'DS',
    vm: 1,
    name: 'BodyPartThickness'
  },
  x001811a2: {
    tag: '(0018,11A2)',
    vr: 'DS',
    vm: 1,
    name: 'CompressionForce'
  },
  x00181200: {
    tag: '(0018,1200)',
    vr: 'DA',
    vm: '1-n',
    name: 'DateOfLastCalibration'
  },
  x00181201: {
    tag: '(0018,1201)',
    vr: 'TM',
    vm: '1-n',
    name: 'TimeOfLastCalibration'
  },
  x00181210: {
    tag: '(0018,1210)',
    vr: 'SH',
    vm: '1-n',
    name: 'ConvolutionKernel'
  },
  x00181240: {
    tag: '(0018,1240)',
    vr: 'IS',
    vm: '1-n',
    name: 'UpperLowerPixelValues'
  },
  x00181242: {
    tag: '(0018,1242)',
    vr: 'IS',
    vm: 1,
    name: 'ActualFrameDuration'
  },
  x00181243: {
    tag: '(0018,1243)',
    vr: 'IS',
    vm: 1,
    name: 'CountRate'
  },
  x00181244: {
    tag: '(0018,1244)',
    vr: 'US',
    vm: 1,
    name: 'PreferredPlaybackSequencing'
  },
  x00181250: {
    tag: '(0018,1250)',
    vr: 'SH',
    vm: 1,
    name: 'ReceiveCoilName'
  },
  x00181251: {
    tag: '(0018,1251)',
    vr: 'SH',
    vm: 1,
    name: 'TransmitCoilName'
  },
  x00181260: {
    tag: '(0018,1260)',
    vr: 'SH',
    vm: 1,
    name: 'PlateType'
  },
  x00181261: {
    tag: '(0018,1261)',
    vr: 'LO',
    vm: 1,
    name: 'PhosphorType'
  },
  x00181300: {
    tag: '(0018,1300)',
    vr: 'DS',
    vm: 1,
    name: 'ScanVelocity'
  },
  x00181301: {
    tag: '(0018,1301)',
    vr: 'CS',
    vm: '1-n',
    name: 'WholeBodyTechnique'
  },
  x00181302: {
    tag: '(0018,1302)',
    vr: 'IS',
    vm: 1,
    name: 'ScanLength'
  },
  x00181310: {
    tag: '(0018,1310)',
    vr: 'US',
    vm: 4,
    name: 'AcquisitionMatrix'
  },
  x00181312: {
    tag: '(0018,1312)',
    vr: 'CS',
    vm: 1,
    name: 'InPlanePhaseEncodingDirection'
  },
  x00181314: {
    tag: '(0018,1314)',
    vr: 'DS',
    vm: 1,
    name: 'FlipAngle'
  },
  x00181315: {
    tag: '(0018,1315)',
    vr: 'CS',
    vm: 1,
    name: 'VariableFlipAngleFlag'
  },
  x00181316: {
    tag: '(0018,1316)',
    vr: 'DS',
    vm: 1,
    name: 'SAR'
  },
  x00181318: {
    tag: '(0018,1318)',
    vr: 'DS',
    vm: 1,
    name: 'dBdt'
  },
  x00181400: {
    tag: '(0018,1400)',
    vr: 'LO',
    vm: 1,
    name: 'AcquisitionDeviceProcessingDescription'
  },
  x00181401: {
    tag: '(0018,1401)',
    vr: 'LO',
    vm: 1,
    name: 'AcquisitionDeviceProcessingCode'
  },
  x00181402: {
    tag: '(0018,1402)',
    vr: 'CS',
    vm: 1,
    name: 'CassetteOrientation'
  },
  x00181403: {
    tag: '(0018,1403)',
    vr: 'CS',
    vm: 1,
    name: 'CassetteSize'
  },
  x00181404: {
    tag: '(0018,1404)',
    vr: 'US',
    vm: 1,
    name: 'ExposuresOnPlate'
  },
  x00181405: {
    tag: '(0018,1405)',
    vr: 'IS',
    vm: 1,
    name: 'RelativeXRayExposure'
  },
  x00181411: {
    tag: '(0018,1411)',
    vr: 'DS',
    vm: 1,
    name: 'ExposureIndex'
  },
  x00181412: {
    tag: '(0018,1412)',
    vr: 'DS',
    vm: 1,
    name: 'TargetExposureIndex'
  },
  x00181413: {
    tag: '(0018,1413)',
    vr: 'DS',
    vm: 1,
    name: 'DeviationIndex'
  },
  x00181450: {
    tag: '(0018,1450)',
    vr: 'DS',
    vm: 1,
    name: 'ColumnAngulation'
  },
  x00181460: {
    tag: '(0018,1460)',
    vr: 'DS',
    vm: 1,
    name: 'TomoLayerHeight'
  },
  x00181470: {
    tag: '(0018,1470)',
    vr: 'DS',
    vm: 1,
    name: 'TomoAngle'
  },
  x00181480: {
    tag: '(0018,1480)',
    vr: 'DS',
    vm: 1,
    name: 'TomoTime'
  },
  x00181490: {
    tag: '(0018,1490)',
    vr: 'CS',
    vm: 1,
    name: 'TomoType'
  },
  x00181491: {
    tag: '(0018,1491)',
    vr: 'CS',
    vm: 1,
    name: 'TomoClass'
  },
  x00181495: {
    tag: '(0018,1495)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfTomosynthesisSourceImages'
  },
  x00181500: {
    tag: '(0018,1500)',
    vr: 'CS',
    vm: 1,
    name: 'PositionerMotion'
  },
  x00181508: {
    tag: '(0018,1508)',
    vr: 'CS',
    vm: 1,
    name: 'PositionerType'
  },
  x00181510: {
    tag: '(0018,1510)',
    vr: 'DS',
    vm: 1,
    name: 'PositionerPrimaryAngle'
  },
  x00181511: {
    tag: '(0018,1511)',
    vr: 'DS',
    vm: 1,
    name: 'PositionerSecondaryAngle'
  },
  x00181520: {
    tag: '(0018,1520)',
    vr: 'DS',
    vm: '1-n',
    name: 'PositionerPrimaryAngleIncrement'
  },
  x00181521: {
    tag: '(0018,1521)',
    vr: 'DS',
    vm: '1-n',
    name: 'PositionerSecondaryAngleIncrement'
  },
  x00181530: {
    tag: '(0018,1530)',
    vr: 'DS',
    vm: 1,
    name: 'DetectorPrimaryAngle'
  },
  x00181531: {
    tag: '(0018,1531)',
    vr: 'DS',
    vm: 1,
    name: 'DetectorSecondaryAngle'
  },
  x00181600: {
    tag: '(0018,1600)',
    vr: 'CS',
    vm: '1-3',
    name: 'ShutterShape'
  },
  x00181602: {
    tag: '(0018,1602)',
    vr: 'IS',
    vm: 1,
    name: 'ShutterLeftVerticalEdge'
  },
  x00181604: {
    tag: '(0018,1604)',
    vr: 'IS',
    vm: 1,
    name: 'ShutterRightVerticalEdge'
  },
  x00181606: {
    tag: '(0018,1606)',
    vr: 'IS',
    vm: 1,
    name: 'ShutterUpperHorizontalEdge'
  },
  x00181608: {
    tag: '(0018,1608)',
    vr: 'IS',
    vm: 1,
    name: 'ShutterLowerHorizontalEdge'
  },
  x00181610: {
    tag: '(0018,1610)',
    vr: 'IS',
    vm: 2,
    name: 'CenterOfCircularShutter'
  },
  x00181612: {
    tag: '(0018,1612)',
    vr: 'IS',
    vm: 1,
    name: 'RadiusOfCircularShutter'
  },
  x00181620: {
    tag: '(0018,1620)',
    vr: 'IS',
    vm: '2-2n',
    name: 'VerticesOfThePolygonalShutter'
  },
  x00181622: {
    tag: '(0018,1622)',
    vr: 'US',
    vm: 1,
    name: 'ShutterPresentationValue'
  },
  x00181623: {
    tag: '(0018,1623)',
    vr: 'US',
    vm: 1,
    name: 'ShutterOverlayGroup'
  },
  x00181624: {
    tag: '(0018,1624)',
    vr: 'US',
    vm: 3,
    name: 'ShutterPresentationColorCIELabValue'
  },
  x00181700: {
    tag: '(0018,1700)',
    vr: 'CS',
    vm: '1-3',
    name: 'CollimatorShape'
  },
  x00181702: {
    tag: '(0018,1702)',
    vr: 'IS',
    vm: 1,
    name: 'CollimatorLeftVerticalEdge'
  },
  x00181704: {
    tag: '(0018,1704)',
    vr: 'IS',
    vm: 1,
    name: 'CollimatorRightVerticalEdge'
  },
  x00181706: {
    tag: '(0018,1706)',
    vr: 'IS',
    vm: 1,
    name: 'CollimatorUpperHorizontalEdge'
  },
  x00181708: {
    tag: '(0018,1708)',
    vr: 'IS',
    vm: 1,
    name: 'CollimatorLowerHorizontalEdge'
  },
  x00181710: {
    tag: '(0018,1710)',
    vr: 'IS',
    vm: 2,
    name: 'CenterOfCircularCollimator'
  },
  x00181712: {
    tag: '(0018,1712)',
    vr: 'IS',
    vm: 1,
    name: 'RadiusOfCircularCollimator'
  },
  x00181720: {
    tag: '(0018,1720)',
    vr: 'IS',
    vm: '2-2n',
    name: 'VerticesOfThePolygonalCollimator'
  },
  x00181800: {
    tag: '(0018,1800)',
    vr: 'CS',
    vm: 1,
    name: 'AcquisitionTimeSynchronized'
  },
  x00181801: {
    tag: '(0018,1801)',
    vr: 'SH',
    vm: 1,
    name: 'TimeSource'
  },
  x00181802: {
    tag: '(0018,1802)',
    vr: 'CS',
    vm: 1,
    name: 'TimeDistributionProtocol'
  },
  x00181803: {
    tag: '(0018,1803)',
    vr: 'LO',
    vm: 1,
    name: 'NTPSourceAddress'
  },
  x00182001: {
    tag: '(0018,2001)',
    vr: 'IS',
    vm: '1-n',
    name: 'PageNumberVector'
  },
  x00182002: {
    tag: '(0018,2002)',
    vr: 'SH',
    vm: '1-n',
    name: 'FrameLabelVector'
  },
  x00182003: {
    tag: '(0018,2003)',
    vr: 'DS',
    vm: '1-n',
    name: 'FramePrimaryAngleVector'
  },
  x00182004: {
    tag: '(0018,2004)',
    vr: 'DS',
    vm: '1-n',
    name: 'FrameSecondaryAngleVector'
  },
  x00182005: {
    tag: '(0018,2005)',
    vr: 'DS',
    vm: '1-n',
    name: 'SliceLocationVector'
  },
  x00182006: {
    tag: '(0018,2006)',
    vr: 'SH',
    vm: '1-n',
    name: 'DisplayWindowLabelVector'
  },
  x00182010: {
    tag: '(0018,2010)',
    vr: 'DS',
    vm: 2,
    name: 'NominalScannedPixelSpacing'
  },
  x00182020: {
    tag: '(0018,2020)',
    vr: 'CS',
    vm: 1,
    name: 'DigitizingDeviceTransportDirection'
  },
  x00182030: {
    tag: '(0018,2030)',
    vr: 'DS',
    vm: 1,
    name: 'RotationOfScannedFilm'
  },
  x00183100: {
    tag: '(0018,3100)',
    vr: 'CS',
    vm: 1,
    name: 'IVUSAcquisition'
  },
  x00183101: {
    tag: '(0018,3101)',
    vr: 'DS',
    vm: 1,
    name: 'IVUSPullbackRate'
  },
  x00183102: {
    tag: '(0018,3102)',
    vr: 'DS',
    vm: 1,
    name: 'IVUSGatedRate'
  },
  x00183103: {
    tag: '(0018,3103)',
    vr: 'IS',
    vm: 1,
    name: 'IVUSPullbackStartFrameNumber'
  },
  x00183104: {
    tag: '(0018,3104)',
    vr: 'IS',
    vm: 1,
    name: 'IVUSPullbackStopFrameNumber'
  },
  x00183105: {
    tag: '(0018,3105)',
    vr: 'IS',
    vm: '1-n',
    name: 'LesionNumber'
  },
  x00184000: {
    tag: '(0018,4000)',
    vr: 'LT',
    vm: 1,
    name: 'AcquisitionComments'
  },
  x00185000: {
    tag: '(0018,5000)',
    vr: 'SH',
    vm: '1-n',
    name: 'OutputPower'
  },
  x00185010: {
    tag: '(0018,5010)',
    vr: 'LO',
    vm: '1-n',
    name: 'TransducerData'
  },
  x00185012: {
    tag: '(0018,5012)',
    vr: 'DS',
    vm: 1,
    name: 'FocusDepth'
  },
  x00185020: {
    tag: '(0018,5020)',
    vr: 'LO',
    vm: 1,
    name: 'ProcessingFunction'
  },
  x00185021: {
    tag: '(0018,5021)',
    vr: 'LO',
    vm: 1,
    name: 'PostprocessingFunction'
  },
  x00185022: {
    tag: '(0018,5022)',
    vr: 'DS',
    vm: 1,
    name: 'MechanicalIndex'
  },
  x00185024: {
    tag: '(0018,5024)',
    vr: 'DS',
    vm: 1,
    name: 'BoneThermalIndex'
  },
  x00185026: {
    tag: '(0018,5026)',
    vr: 'DS',
    vm: 1,
    name: 'CranialThermalIndex'
  },
  x00185027: {
    tag: '(0018,5027)',
    vr: 'DS',
    vm: 1,
    name: 'SoftTissueThermalIndex'
  },
  x00185028: {
    tag: '(0018,5028)',
    vr: 'DS',
    vm: 1,
    name: 'SoftTissueFocusThermalIndex'
  },
  x00185029: {
    tag: '(0018,5029)',
    vr: 'DS',
    vm: 1,
    name: 'SoftTissueSurfaceThermalIndex'
  },
  x00185030: {
    tag: '(0018,5030)',
    vr: 'DS',
    vm: 1,
    name: 'DynamicRange'
  },
  x00185040: {
    tag: '(0018,5040)',
    vr: 'DS',
    vm: 1,
    name: 'TotalGain'
  },
  x00185050: {
    tag: '(0018,5050)',
    vr: 'IS',
    vm: 1,
    name: 'DepthOfScanField'
  },
  x00185100: {
    tag: '(0018,5100)',
    vr: 'CS',
    vm: 1,
    name: 'PatientPosition'
  },
  x00185101: {
    tag: '(0018,5101)',
    vr: 'CS',
    vm: 1,
    name: 'ViewPosition'
  },
  x00185104: {
    tag: '(0018,5104)',
    vr: 'SQ',
    vm: 1,
    name: 'ProjectionEponymousNameCodeSequence'
  },
  x00185210: {
    tag: '(0018,5210)',
    vr: 'DS',
    vm: 6,
    name: 'ImageTransformationMatrix'
  },
  x00185212: {
    tag: '(0018,5212)',
    vr: 'DS',
    vm: 3,
    name: 'ImageTranslationVector'
  },
  x00186000: {
    tag: '(0018,6000)',
    vr: 'DS',
    vm: 1,
    name: 'Sensitivity'
  },
  x00186011: {
    tag: '(0018,6011)',
    vr: 'SQ',
    vm: 1,
    name: 'SequenceOfUltrasoundRegions'
  },
  x00186012: {
    tag: '(0018,6012)',
    vr: 'US',
    vm: 1,
    name: 'RegionSpatialFormat'
  },
  x00186014: {
    tag: '(0018,6014)',
    vr: 'US',
    vm: 1,
    name: 'RegionDataType'
  },
  x00186016: {
    tag: '(0018,6016)',
    vr: 'UL',
    vm: 1,
    name: 'RegionFlags'
  },
  x00186018: {
    tag: '(0018,6018)',
    vr: 'UL',
    vm: 1,
    name: 'RegionLocationMinX0'
  },
  x0018601a: {
    tag: '(0018,601A)',
    vr: 'UL',
    vm: 1,
    name: 'RegionLocationMinY0'
  },
  x0018601c: {
    tag: '(0018,601C)',
    vr: 'UL',
    vm: 1,
    name: 'RegionLocationMaxX1'
  },
  x0018601e: {
    tag: '(0018,601E)',
    vr: 'UL',
    vm: 1,
    name: 'RegionLocationMaxY1'
  },
  x00186020: {
    tag: '(0018,6020)',
    vr: 'SL',
    vm: 1,
    name: 'ReferencePixelX0'
  },
  x00186022: {
    tag: '(0018,6022)',
    vr: 'SL',
    vm: 1,
    name: 'ReferencePixelY0'
  },
  x00186024: {
    tag: '(0018,6024)',
    vr: 'US',
    vm: 1,
    name: 'PhysicalUnitsXDirection'
  },
  x00186026: {
    tag: '(0018,6026)',
    vr: 'US',
    vm: 1,
    name: 'PhysicalUnitsYDirection'
  },
  x00186028: {
    tag: '(0018,6028)',
    vr: 'FD',
    vm: 1,
    name: 'ReferencePixelPhysicalValueX'
  },
  x0018602a: {
    tag: '(0018,602A)',
    vr: 'FD',
    vm: 1,
    name: 'ReferencePixelPhysicalValueY'
  },
  x0018602c: {
    tag: '(0018,602C)',
    vr: 'FD',
    vm: 1,
    name: 'PhysicalDeltaX'
  },
  x0018602e: {
    tag: '(0018,602E)',
    vr: 'FD',
    vm: 1,
    name: 'PhysicalDeltaY'
  },
  x00186030: {
    tag: '(0018,6030)',
    vr: 'UL',
    vm: 1,
    name: 'TransducerFrequency'
  },
  x00186031: {
    tag: '(0018,6031)',
    vr: 'CS',
    vm: 1,
    name: 'TransducerType'
  },
  x00186032: {
    tag: '(0018,6032)',
    vr: 'UL',
    vm: 1,
    name: 'PulseRepetitionFrequency'
  },
  x00186034: {
    tag: '(0018,6034)',
    vr: 'FD',
    vm: 1,
    name: 'DopplerCorrectionAngle'
  },
  x00186036: {
    tag: '(0018,6036)',
    vr: 'FD',
    vm: 1,
    name: 'SteeringAngle'
  },
  x00186038: {
    tag: '(0018,6038)',
    vr: 'UL',
    vm: 1,
    name: 'DopplerSampleVolumeXPositionRetired'
  },
  x00186039: {
    tag: '(0018,6039)',
    vr: 'SL',
    vm: 1,
    name: 'DopplerSampleVolumeXPosition'
  },
  x0018603a: {
    tag: '(0018,603A)',
    vr: 'UL',
    vm: 1,
    name: 'DopplerSampleVolumeYPositionRetired'
  },
  x0018603b: {
    tag: '(0018,603B)',
    vr: 'SL',
    vm: 1,
    name: 'DopplerSampleVolumeYPosition'
  },
  x0018603c: {
    tag: '(0018,603C)',
    vr: 'UL',
    vm: 1,
    name: 'TMLinePositionX0Retired'
  },
  x0018603d: {
    tag: '(0018,603D)',
    vr: 'SL',
    vm: 1,
    name: 'TMLinePositionX0'
  },
  x0018603e: {
    tag: '(0018,603E)',
    vr: 'UL',
    vm: 1,
    name: 'TMLinePositionY0Retired'
  },
  x0018603f: {
    tag: '(0018,603F)',
    vr: 'SL',
    vm: 1,
    name: 'TMLinePositionY0'
  },
  x00186040: {
    tag: '(0018,6040)',
    vr: 'UL',
    vm: 1,
    name: 'TMLinePositionX1Retired'
  },
  x00186041: {
    tag: '(0018,6041)',
    vr: 'SL',
    vm: 1,
    name: 'TMLinePositionX1'
  },
  x00186042: {
    tag: '(0018,6042)',
    vr: 'UL',
    vm: 1,
    name: 'TMLinePositionY1Retired'
  },
  x00186043: {
    tag: '(0018,6043)',
    vr: 'SL',
    vm: 1,
    name: 'TMLinePositionY1'
  },
  x00186044: {
    tag: '(0018,6044)',
    vr: 'US',
    vm: 1,
    name: 'PixelComponentOrganization'
  },
  x00186046: {
    tag: '(0018,6046)',
    vr: 'UL',
    vm: 1,
    name: 'PixelComponentMask'
  },
  x00186048: {
    tag: '(0018,6048)',
    vr: 'UL',
    vm: 1,
    name: 'PixelComponentRangeStart'
  },
  x0018604a: {
    tag: '(0018,604A)',
    vr: 'UL',
    vm: 1,
    name: 'PixelComponentRangeStop'
  },
  x0018604c: {
    tag: '(0018,604C)',
    vr: 'US',
    vm: 1,
    name: 'PixelComponentPhysicalUnits'
  },
  x0018604e: {
    tag: '(0018,604E)',
    vr: 'US',
    vm: 1,
    name: 'PixelComponentDataType'
  },
  x00186050: {
    tag: '(0018,6050)',
    vr: 'UL',
    vm: 1,
    name: 'NumberOfTableBreakPoints'
  },
  x00186052: {
    tag: '(0018,6052)',
    vr: 'UL',
    vm: '1-n',
    name: 'TableOfXBreakPoints'
  },
  x00186054: {
    tag: '(0018,6054)',
    vr: 'FD',
    vm: '1-n',
    name: 'TableOfYBreakPoints'
  },
  x00186056: {
    tag: '(0018,6056)',
    vr: 'UL',
    vm: 1,
    name: 'NumberOfTableEntries'
  },
  x00186058: {
    tag: '(0018,6058)',
    vr: 'UL',
    vm: '1-n',
    name: 'TableOfPixelValues'
  },
  x0018605a: {
    tag: '(0018,605A)',
    vr: 'FL',
    vm: '1-n',
    name: 'TableOfParameterValues'
  },
  x00186060: {
    tag: '(0018,6060)',
    vr: 'FL',
    vm: '1-n',
    name: 'RWaveTimeVector'
  },
  x00187000: {
    tag: '(0018,7000)',
    vr: 'CS',
    vm: 1,
    name: 'DetectorConditionsNominalFlag'
  },
  x00187001: {
    tag: '(0018,7001)',
    vr: 'DS',
    vm: 1,
    name: 'DetectorTemperature'
  },
  x00187004: {
    tag: '(0018,7004)',
    vr: 'CS',
    vm: 1,
    name: 'DetectorType'
  },
  x00187005: {
    tag: '(0018,7005)',
    vr: 'CS',
    vm: 1,
    name: 'DetectorConfiguration'
  },
  x00187006: {
    tag: '(0018,7006)',
    vr: 'LT',
    vm: 1,
    name: 'DetectorDescription'
  },
  x00187008: {
    tag: '(0018,7008)',
    vr: 'LT',
    vm: 1,
    name: 'DetectorMode'
  },
  x0018700a: {
    tag: '(0018,700A)',
    vr: 'SH',
    vm: 1,
    name: 'DetectorID'
  },
  x0018700c: {
    tag: '(0018,700C)',
    vr: 'DA',
    vm: 1,
    name: 'DateOfLastDetectorCalibration'
  },
  x0018700e: {
    tag: '(0018,700E)',
    vr: 'TM',
    vm: 1,
    name: 'TimeOfLastDetectorCalibration'
  },
  x00187010: {
    tag: '(0018,7010)',
    vr: 'IS',
    vm: 1,
    name: 'ExposuresOnDetectorSinceLastCalibration'
  },
  x00187011: {
    tag: '(0018,7011)',
    vr: 'IS',
    vm: 1,
    name: 'ExposuresOnDetectorSinceManufactured'
  },
  x00187012: {
    tag: '(0018,7012)',
    vr: 'DS',
    vm: 1,
    name: 'DetectorTimeSinceLastExposure'
  },
  x00187014: {
    tag: '(0018,7014)',
    vr: 'DS',
    vm: 1,
    name: 'DetectorActiveTime'
  },
  x00187016: {
    tag: '(0018,7016)',
    vr: 'DS',
    vm: 1,
    name: 'DetectorActivationOffsetFromExposure'
  },
  x0018701a: {
    tag: '(0018,701A)',
    vr: 'DS',
    vm: 2,
    name: 'DetectorBinning'
  },
  x00187020: {
    tag: '(0018,7020)',
    vr: 'DS',
    vm: 2,
    name: 'DetectorElementPhysicalSize'
  },
  x00187022: {
    tag: '(0018,7022)',
    vr: 'DS',
    vm: 2,
    name: 'DetectorElementSpacing'
  },
  x00187024: {
    tag: '(0018,7024)',
    vr: 'CS',
    vm: 1,
    name: 'DetectorActiveShape'
  },
  x00187026: {
    tag: '(0018,7026)',
    vr: 'DS',
    vm: '1-2',
    name: 'DetectorActiveDimensions'
  },
  x00187028: {
    tag: '(0018,7028)',
    vr: 'DS',
    vm: 2,
    name: 'DetectorActiveOrigin'
  },
  x0018702a: {
    tag: '(0018,702A)',
    vr: 'LO',
    vm: 1,
    name: 'DetectorManufacturerName'
  },
  x0018702b: {
    tag: '(0018,702B)',
    vr: 'LO',
    vm: 1,
    name: 'DetectorManufacturerModelName'
  },
  x00187030: {
    tag: '(0018,7030)',
    vr: 'DS',
    vm: 2,
    name: 'FieldOfViewOrigin'
  },
  x00187032: {
    tag: '(0018,7032)',
    vr: 'DS',
    vm: 1,
    name: 'FieldOfViewRotation'
  },
  x00187034: {
    tag: '(0018,7034)',
    vr: 'CS',
    vm: 1,
    name: 'FieldOfViewHorizontalFlip'
  },
  x00187036: {
    tag: '(0018,7036)',
    vr: 'FL',
    vm: 2,
    name: 'PixelDataAreaOriginRelativeToFOV'
  },
  x00187038: {
    tag: '(0018,7038)',
    vr: 'FL',
    vm: 1,
    name: 'PixelDataAreaRotationAngleRelativeToFOV'
  },
  x00187040: {
    tag: '(0018,7040)',
    vr: 'LT',
    vm: 1,
    name: 'GridAbsorbingMaterial'
  },
  x00187041: {
    tag: '(0018,7041)',
    vr: 'LT',
    vm: 1,
    name: 'GridSpacingMaterial'
  },
  x00187042: {
    tag: '(0018,7042)',
    vr: 'DS',
    vm: 1,
    name: 'GridThickness'
  },
  x00187044: {
    tag: '(0018,7044)',
    vr: 'DS',
    vm: 1,
    name: 'GridPitch'
  },
  x00187046: {
    tag: '(0018,7046)',
    vr: 'IS',
    vm: 2,
    name: 'GridAspectRatio'
  },
  x00187048: {
    tag: '(0018,7048)',
    vr: 'DS',
    vm: 1,
    name: 'GridPeriod'
  },
  x0018704c: {
    tag: '(0018,704C)',
    vr: 'DS',
    vm: 1,
    name: 'GridFocalDistance'
  },
  x00187050: {
    tag: '(0018,7050)',
    vr: 'CS',
    vm: '1-n',
    name: 'FilterMaterial'
  },
  x00187052: {
    tag: '(0018,7052)',
    vr: 'DS',
    vm: '1-n',
    name: 'FilterThicknessMinimum'
  },
  x00187054: {
    tag: '(0018,7054)',
    vr: 'DS',
    vm: '1-n',
    name: 'FilterThicknessMaximum'
  },
  x00187056: {
    tag: '(0018,7056)',
    vr: 'FL',
    vm: '1-n',
    name: 'FilterBeamPathLengthMinimum'
  },
  x00187058: {
    tag: '(0018,7058)',
    vr: 'FL',
    vm: '1-n',
    name: 'FilterBeamPathLengthMaximum'
  },
  x00187060: {
    tag: '(0018,7060)',
    vr: 'CS',
    vm: 1,
    name: 'ExposureControlMode'
  },
  x00187062: {
    tag: '(0018,7062)',
    vr: 'LT',
    vm: 1,
    name: 'ExposureControlModeDescription'
  },
  x00187064: {
    tag: '(0018,7064)',
    vr: 'CS',
    vm: 1,
    name: 'ExposureStatus'
  },
  x00187065: {
    tag: '(0018,7065)',
    vr: 'DS',
    vm: 1,
    name: 'PhototimerSetting'
  },
  x00188150: {
    tag: '(0018,8150)',
    vr: 'DS',
    vm: 1,
    name: 'ExposureTimeInuS'
  },
  x00188151: {
    tag: '(0018,8151)',
    vr: 'DS',
    vm: 1,
    name: 'XRayTubeCurrentinua'
  },
  x00189004: {
    tag: '(0018,9004)',
    vr: 'CS',
    vm: 1,
    name: 'ContentQualification'
  },
  x00189005: {
    tag: '(0018,9005)',
    vr: 'SH',
    vm: 1,
    name: 'PulseSequenceName'
  },
  x00189006: {
    tag: '(0018,9006)',
    vr: 'SQ',
    vm: 1,
    name: 'MRImagingModifierSequence'
  },
  x00189008: {
    tag: '(0018,9008)',
    vr: 'CS',
    vm: 1,
    name: 'EchoPulseSequence'
  },
  x00189009: {
    tag: '(0018,9009)',
    vr: 'CS',
    vm: 1,
    name: 'InversionRecovery'
  },
  x00189010: {
    tag: '(0018,9010)',
    vr: 'CS',
    vm: 1,
    name: 'FlowCompensation'
  },
  x00189011: {
    tag: '(0018,9011)',
    vr: 'CS',
    vm: 1,
    name: 'MultipleSpinEcho'
  },
  x00189012: {
    tag: '(0018,9012)',
    vr: 'CS',
    vm: 1,
    name: 'MultiPlanarExcitation'
  },
  x00189014: {
    tag: '(0018,9014)',
    vr: 'CS',
    vm: 1,
    name: 'PhaseContrast'
  },
  x00189015: {
    tag: '(0018,9015)',
    vr: 'CS',
    vm: 1,
    name: 'TimeOfFlightContrast'
  },
  x00189016: {
    tag: '(0018,9016)',
    vr: 'CS',
    vm: 1,
    name: 'Spoiling'
  },
  x00189017: {
    tag: '(0018,9017)',
    vr: 'CS',
    vm: 1,
    name: 'SteadyStatePulseSequence'
  },
  x00189018: {
    tag: '(0018,9018)',
    vr: 'CS',
    vm: 1,
    name: 'EchoPlanarPulseSequence'
  },
  x00189019: {
    tag: '(0018,9019)',
    vr: 'FD',
    vm: 1,
    name: 'TagAngleFirstAxis'
  },
  x00189020: {
    tag: '(0018,9020)',
    vr: 'CS',
    vm: 1,
    name: 'MagnetizationTransfer'
  },
  x00189021: {
    tag: '(0018,9021)',
    vr: 'CS',
    vm: 1,
    name: 'T2Preparation'
  },
  x00189022: {
    tag: '(0018,9022)',
    vr: 'CS',
    vm: 1,
    name: 'BloodSignalNulling'
  },
  x00189024: {
    tag: '(0018,9024)',
    vr: 'CS',
    vm: 1,
    name: 'SaturationRecovery'
  },
  x00189025: {
    tag: '(0018,9025)',
    vr: 'CS',
    vm: 1,
    name: 'SpectrallySelectedSuppression'
  },
  x00189026: {
    tag: '(0018,9026)',
    vr: 'CS',
    vm: 1,
    name: 'SpectrallySelectedExcitation'
  },
  x00189027: {
    tag: '(0018,9027)',
    vr: 'CS',
    vm: 1,
    name: 'SpatialPresaturation'
  },
  x00189028: {
    tag: '(0018,9028)',
    vr: 'CS',
    vm: 1,
    name: 'Tagging'
  },
  x00189029: {
    tag: '(0018,9029)',
    vr: 'CS',
    vm: 1,
    name: 'OversamplingPhase'
  },
  x00189030: {
    tag: '(0018,9030)',
    vr: 'FD',
    vm: 1,
    name: 'TagSpacingFirstDimension'
  },
  x00189032: {
    tag: '(0018,9032)',
    vr: 'CS',
    vm: 1,
    name: 'GeometryOfKSpaceTraversal'
  },
  x00189033: {
    tag: '(0018,9033)',
    vr: 'CS',
    vm: 1,
    name: 'SegmentedKSpaceTraversal'
  },
  x00189034: {
    tag: '(0018,9034)',
    vr: 'CS',
    vm: 1,
    name: 'RectilinearPhaseEncodeReordering'
  },
  x00189035: {
    tag: '(0018,9035)',
    vr: 'FD',
    vm: 1,
    name: 'TagThickness'
  },
  x00189036: {
    tag: '(0018,9036)',
    vr: 'CS',
    vm: 1,
    name: 'PartialFourierDirection'
  },
  x00189037: {
    tag: '(0018,9037)',
    vr: 'CS',
    vm: 1,
    name: 'CardiacSynchronizationTechnique'
  },
  x00189041: {
    tag: '(0018,9041)',
    vr: 'LO',
    vm: 1,
    name: 'ReceiveCoilManufacturerName'
  },
  x00189042: {
    tag: '(0018,9042)',
    vr: 'SQ',
    vm: 1,
    name: 'MRReceiveCoilSequence'
  },
  x00189043: {
    tag: '(0018,9043)',
    vr: 'CS',
    vm: 1,
    name: 'ReceiveCoilType'
  },
  x00189044: {
    tag: '(0018,9044)',
    vr: 'CS',
    vm: 1,
    name: 'QuadratureReceiveCoil'
  },
  x00189045: {
    tag: '(0018,9045)',
    vr: 'SQ',
    vm: 1,
    name: 'MultiCoilDefinitionSequence'
  },
  x00189046: {
    tag: '(0018,9046)',
    vr: 'LO',
    vm: 1,
    name: 'MultiCoilConfiguration'
  },
  x00189047: {
    tag: '(0018,9047)',
    vr: 'SH',
    vm: 1,
    name: 'MultiCoilElementName'
  },
  x00189048: {
    tag: '(0018,9048)',
    vr: 'CS',
    vm: 1,
    name: 'MultiCoilElementUsed'
  },
  x00189049: {
    tag: '(0018,9049)',
    vr: 'SQ',
    vm: 1,
    name: 'MRTransmitCoilSequence'
  },
  x00189050: {
    tag: '(0018,9050)',
    vr: 'LO',
    vm: 1,
    name: 'TransmitCoilManufacturerName'
  },
  x00189051: {
    tag: '(0018,9051)',
    vr: 'CS',
    vm: 1,
    name: 'TransmitCoilType'
  },
  x00189052: {
    tag: '(0018,9052)',
    vr: 'FD',
    vm: '1-2',
    name: 'SpectralWidth'
  },
  x00189053: {
    tag: '(0018,9053)',
    vr: 'FD',
    vm: '1-2',
    name: 'ChemicalShiftReference'
  },
  x00189054: {
    tag: '(0018,9054)',
    vr: 'CS',
    vm: 1,
    name: 'VolumeLocalizationTechnique'
  },
  x00189058: {
    tag: '(0018,9058)',
    vr: 'US',
    vm: 1,
    name: 'MRAcquisitionFrequencyEncodingSteps'
  },
  x00189059: {
    tag: '(0018,9059)',
    vr: 'CS',
    vm: 1,
    name: 'Decoupling'
  },
  x00189060: {
    tag: '(0018,9060)',
    vr: 'CS',
    vm: '1-2',
    name: 'DecoupledNucleus'
  },
  x00189061: {
    tag: '(0018,9061)',
    vr: 'FD',
    vm: '1-2',
    name: 'DecouplingFrequency'
  },
  x00189062: {
    tag: '(0018,9062)',
    vr: 'CS',
    vm: 1,
    name: 'DecouplingMethod'
  },
  x00189063: {
    tag: '(0018,9063)',
    vr: 'FD',
    vm: '1-2',
    name: 'DecouplingChemicalShiftReference'
  },
  x00189064: {
    tag: '(0018,9064)',
    vr: 'CS',
    vm: 1,
    name: 'KSpaceFiltering'
  },
  x00189065: {
    tag: '(0018,9065)',
    vr: 'CS',
    vm: '1-2',
    name: 'TimeDomainFiltering'
  },
  x00189066: {
    tag: '(0018,9066)',
    vr: 'US',
    vm: '1-2',
    name: 'NumberOfZeroFills'
  },
  x00189067: {
    tag: '(0018,9067)',
    vr: 'CS',
    vm: 1,
    name: 'BaselineCorrection'
  },
  x00189069: {
    tag: '(0018,9069)',
    vr: 'FD',
    vm: 1,
    name: 'ParallelReductionFactorInPlane'
  },
  x00189070: {
    tag: '(0018,9070)',
    vr: 'FD',
    vm: 1,
    name: 'CardiacRRIntervalSpecified'
  },
  x00189073: {
    tag: '(0018,9073)',
    vr: 'FD',
    vm: 1,
    name: 'AcquisitionDuration'
  },
  x00189074: {
    tag: '(0018,9074)',
    vr: 'DT',
    vm: 1,
    name: 'FrameAcquisitionDateTime'
  },
  x00189075: {
    tag: '(0018,9075)',
    vr: 'CS',
    vm: 1,
    name: 'DiffusionDirectionality'
  },
  x00189076: {
    tag: '(0018,9076)',
    vr: 'SQ',
    vm: 1,
    name: 'DiffusionGradientDirectionSequence'
  },
  x00189077: {
    tag: '(0018,9077)',
    vr: 'CS',
    vm: 1,
    name: 'ParallelAcquisition'
  },
  x00189078: {
    tag: '(0018,9078)',
    vr: 'CS',
    vm: 1,
    name: 'ParallelAcquisitionTechnique'
  },
  x00189079: {
    tag: '(0018,9079)',
    vr: 'FD',
    vm: '1-n',
    name: 'InversionTimes'
  },
  x00189080: {
    tag: '(0018,9080)',
    vr: 'ST',
    vm: 1,
    name: 'MetaboliteMapDescription'
  },
  x00189081: {
    tag: '(0018,9081)',
    vr: 'CS',
    vm: 1,
    name: 'PartialFourier'
  },
  x00189082: {
    tag: '(0018,9082)',
    vr: 'FD',
    vm: 1,
    name: 'EffectiveEchoTime'
  },
  x00189083: {
    tag: '(0018,9083)',
    vr: 'SQ',
    vm: 1,
    name: 'MetaboliteMapCodeSequence'
  },
  x00189084: {
    tag: '(0018,9084)',
    vr: 'SQ',
    vm: 1,
    name: 'ChemicalShiftSequence'
  },
  x00189085: {
    tag: '(0018,9085)',
    vr: 'CS',
    vm: 1,
    name: 'CardiacSignalSource'
  },
  x00189087: {
    tag: '(0018,9087)',
    vr: 'FD',
    vm: 1,
    name: 'DiffusionBValue'
  },
  x00189089: {
    tag: '(0018,9089)',
    vr: 'FD',
    vm: 3,
    name: 'DiffusionGradientOrientation'
  },
  x00189090: {
    tag: '(0018,9090)',
    vr: 'FD',
    vm: 3,
    name: 'VelocityEncodingDirection'
  },
  x00189091: {
    tag: '(0018,9091)',
    vr: 'FD',
    vm: 1,
    name: 'VelocityEncodingMinimumValue'
  },
  x00189092: {
    tag: '(0018,9092)',
    vr: 'SQ',
    vm: 1,
    name: 'VelocityEncodingAcquisitionSequence'
  },
  x00189093: {
    tag: '(0018,9093)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfKSpaceTrajectories'
  },
  x00189094: {
    tag: '(0018,9094)',
    vr: 'CS',
    vm: 1,
    name: 'CoverageOfKSpace'
  },
  x00189095: {
    tag: '(0018,9095)',
    vr: 'UL',
    vm: 1,
    name: 'SpectroscopyAcquisitionPhaseRows'
  },
  x00189096: {
    tag: '(0018,9096)',
    vr: 'FD',
    vm: 1,
    name: 'ParallelReductionFactorInPlaneRetired'
  },
  x00189098: {
    tag: '(0018,9098)',
    vr: 'FD',
    vm: '1-2',
    name: 'TransmitterFrequency'
  },
  x00189100: {
    tag: '(0018,9100)',
    vr: 'CS',
    vm: '1-2',
    name: 'ResonantNucleus'
  },
  x00189101: {
    tag: '(0018,9101)',
    vr: 'CS',
    vm: 1,
    name: 'FrequencyCorrection'
  },
  x00189103: {
    tag: '(0018,9103)',
    vr: 'SQ',
    vm: 1,
    name: 'MRSpectroscopyFOVGeometrySequence'
  },
  x00189104: {
    tag: '(0018,9104)',
    vr: 'FD',
    vm: 1,
    name: 'SlabThickness'
  },
  x00189105: {
    tag: '(0018,9105)',
    vr: 'FD',
    vm: 3,
    name: 'SlabOrientation'
  },
  x00189106: {
    tag: '(0018,9106)',
    vr: 'FD',
    vm: 3,
    name: 'MidSlabPosition'
  },
  x00189107: {
    tag: '(0018,9107)',
    vr: 'SQ',
    vm: 1,
    name: 'MRSpatialSaturationSequence'
  },
  x00189112: {
    tag: '(0018,9112)',
    vr: 'SQ',
    vm: 1,
    name: 'MRTimingAndRelatedParametersSequence'
  },
  x00189114: {
    tag: '(0018,9114)',
    vr: 'SQ',
    vm: 1,
    name: 'MREchoSequence'
  },
  x00189115: {
    tag: '(0018,9115)',
    vr: 'SQ',
    vm: 1,
    name: 'MRModifierSequence'
  },
  x00189117: {
    tag: '(0018,9117)',
    vr: 'SQ',
    vm: 1,
    name: 'MRDiffusionSequence'
  },
  x00189118: {
    tag: '(0018,9118)',
    vr: 'SQ',
    vm: 1,
    name: 'CardiacSynchronizationSequence'
  },
  x00189119: {
    tag: '(0018,9119)',
    vr: 'SQ',
    vm: 1,
    name: 'MRAveragesSequence'
  },
  x00189125: {
    tag: '(0018,9125)',
    vr: 'SQ',
    vm: 1,
    name: 'MRFOVGeometrySequence'
  },
  x00189126: {
    tag: '(0018,9126)',
    vr: 'SQ',
    vm: 1,
    name: 'VolumeLocalizationSequence'
  },
  x00189127: {
    tag: '(0018,9127)',
    vr: 'UL',
    vm: 1,
    name: 'SpectroscopyAcquisitionDataColumns'
  },
  x00189147: {
    tag: '(0018,9147)',
    vr: 'CS',
    vm: 1,
    name: 'DiffusionAnisotropyType'
  },
  x00189151: {
    tag: '(0018,9151)',
    vr: 'DT',
    vm: 1,
    name: 'FrameReferenceDateTime'
  },
  x00189152: {
    tag: '(0018,9152)',
    vr: 'SQ',
    vm: 1,
    name: 'MRMetaboliteMapSequence'
  },
  x00189155: {
    tag: '(0018,9155)',
    vr: 'FD',
    vm: 1,
    name: 'ParallelReductionFactorOutOfPlane'
  },
  x00189159: {
    tag: '(0018,9159)',
    vr: 'UL',
    vm: 1,
    name: 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'
  },
  x00189166: {
    tag: '(0018,9166)',
    vr: 'CS',
    vm: 1,
    name: 'BulkMotionStatus'
  },
  x00189168: {
    tag: '(0018,9168)',
    vr: 'FD',
    vm: 1,
    name: 'ParallelReductionFactorSecondInPlane'
  },
  x00189169: {
    tag: '(0018,9169)',
    vr: 'CS',
    vm: 1,
    name: 'CardiacBeatRejectionTechnique'
  },
  x00189170: {
    tag: '(0018,9170)',
    vr: 'CS',
    vm: 1,
    name: 'RespiratoryMotionCompensationTechnique'
  },
  x00189171: {
    tag: '(0018,9171)',
    vr: 'CS',
    vm: 1,
    name: 'RespiratorySignalSource'
  },
  x00189172: {
    tag: '(0018,9172)',
    vr: 'CS',
    vm: 1,
    name: 'BulkMotionCompensationTechnique'
  },
  x00189173: {
    tag: '(0018,9173)',
    vr: 'CS',
    vm: 1,
    name: 'BulkMotionSignalSource'
  },
  x00189174: {
    tag: '(0018,9174)',
    vr: 'CS',
    vm: 1,
    name: 'ApplicableSafetyStandardAgency'
  },
  x00189175: {
    tag: '(0018,9175)',
    vr: 'LO',
    vm: 1,
    name: 'ApplicableSafetyStandardDescription'
  },
  x00189176: {
    tag: '(0018,9176)',
    vr: 'SQ',
    vm: 1,
    name: 'OperatingModeSequence'
  },
  x00189177: {
    tag: '(0018,9177)',
    vr: 'CS',
    vm: 1,
    name: 'OperatingModeType'
  },
  x00189178: {
    tag: '(0018,9178)',
    vr: 'CS',
    vm: 1,
    name: 'OperatingMode'
  },
  x00189179: {
    tag: '(0018,9179)',
    vr: 'CS',
    vm: 1,
    name: 'SpecificAbsorptionRateDefinition'
  },
  x00189180: {
    tag: '(0018,9180)',
    vr: 'CS',
    vm: 1,
    name: 'GradientOutputType'
  },
  x00189181: {
    tag: '(0018,9181)',
    vr: 'FD',
    vm: 1,
    name: 'SpecificAbsorptionRateValue'
  },
  x00189182: {
    tag: '(0018,9182)',
    vr: 'FD',
    vm: 1,
    name: 'GradientOutput'
  },
  x00189183: {
    tag: '(0018,9183)',
    vr: 'CS',
    vm: 1,
    name: 'FlowCompensationDirection'
  },
  x00189184: {
    tag: '(0018,9184)',
    vr: 'FD',
    vm: 1,
    name: 'TaggingDelay'
  },
  x00189185: {
    tag: '(0018,9185)',
    vr: 'ST',
    vm: 1,
    name: 'RespiratoryMotionCompensationTechniqueDescription'
  },
  x00189186: {
    tag: '(0018,9186)',
    vr: 'SH',
    vm: 1,
    name: 'RespiratorySignalSourceID'
  },
  x00189195: {
    tag: '(0018,9195)',
    vr: 'FD',
    vm: 1,
    name: 'ChemicalShiftMinimumIntegrationLimitInHz'
  },
  x00189196: {
    tag: '(0018,9196)',
    vr: 'FD',
    vm: 1,
    name: 'ChemicalShiftMaximumIntegrationLimitInHz'
  },
  x00189197: {
    tag: '(0018,9197)',
    vr: 'SQ',
    vm: 1,
    name: 'MRVelocityEncodingSequence'
  },
  x00189198: {
    tag: '(0018,9198)',
    vr: 'CS',
    vm: 1,
    name: 'FirstOrderPhaseCorrection'
  },
  x00189199: {
    tag: '(0018,9199)',
    vr: 'CS',
    vm: 1,
    name: 'WaterReferencedPhaseCorrection'
  },
  x00189200: {
    tag: '(0018,9200)',
    vr: 'CS',
    vm: 1,
    name: 'MRSpectroscopyAcquisitionType'
  },
  x00189214: {
    tag: '(0018,9214)',
    vr: 'CS',
    vm: 1,
    name: 'RespiratoryCyclePosition'
  },
  x00189217: {
    tag: '(0018,9217)',
    vr: 'FD',
    vm: 1,
    name: 'VelocityEncodingMaximumValue'
  },
  x00189218: {
    tag: '(0018,9218)',
    vr: 'FD',
    vm: 1,
    name: 'TagSpacingSecondDimension'
  },
  x00189219: {
    tag: '(0018,9219)',
    vr: 'SS',
    vm: 1,
    name: 'TagAngleSecondAxis'
  },
  x00189220: {
    tag: '(0018,9220)',
    vr: 'FD',
    vm: 1,
    name: 'FrameAcquisitionDuration'
  },
  x00189226: {
    tag: '(0018,9226)',
    vr: 'SQ',
    vm: 1,
    name: 'MRImageFrameTypeSequence'
  },
  x00189227: {
    tag: '(0018,9227)',
    vr: 'SQ',
    vm: 1,
    name: 'MRSpectroscopyFrameTypeSequence'
  },
  x00189231: {
    tag: '(0018,9231)',
    vr: 'US',
    vm: 1,
    name: 'MRAcquisitionPhaseEncodingStepsInPlane'
  },
  x00189232: {
    tag: '(0018,9232)',
    vr: 'US',
    vm: 1,
    name: 'MRAcquisitionPhaseEncodingStepsOutOfPlane'
  },
  x00189234: {
    tag: '(0018,9234)',
    vr: 'UL',
    vm: 1,
    name: 'SpectroscopyAcquisitionPhaseColumns'
  },
  x00189236: {
    tag: '(0018,9236)',
    vr: 'CS',
    vm: 1,
    name: 'CardiacCyclePosition'
  },
  x00189239: {
    tag: '(0018,9239)',
    vr: 'SQ',
    vm: 1,
    name: 'SpecificAbsorptionRateSequence'
  },
  x00189240: {
    tag: '(0018,9240)',
    vr: 'US',
    vm: 1,
    name: 'RFEchoTrainLength'
  },
  x00189241: {
    tag: '(0018,9241)',
    vr: 'US',
    vm: 1,
    name: 'GradientEchoTrainLength'
  },
  x00189250: {
    tag: '(0018,9250)',
    vr: 'CS',
    vm: 1,
    name: 'ArterialSpinLabelingContrast'
  },
  x00189251: {
    tag: '(0018,9251)',
    vr: 'SQ',
    vm: 1,
    name: 'MRArterialSpinLabelingSequence'
  },
  x00189252: {
    tag: '(0018,9252)',
    vr: 'LO',
    vm: 1,
    name: 'ASLTechniqueDescription'
  },
  x00189253: {
    tag: '(0018,9253)',
    vr: 'US',
    vm: 1,
    name: 'ASLSlabNumber'
  },
  x00189254: {
    tag: '(0018,9254)',
    vr: 'FD',
    vm: '1 ',
    name: 'ASLSlabThickness'
  },
  x00189255: {
    tag: '(0018,9255)',
    vr: 'FD',
    vm: '3 ',
    name: 'ASLSlabOrientation'
  },
  x00189256: {
    tag: '(0018,9256)',
    vr: 'FD',
    vm: 3,
    name: 'ASLMidSlabPosition'
  },
  x00189257: {
    tag: '(0018,9257)',
    vr: 'CS',
    vm: '1 ',
    name: 'ASLContext'
  },
  x00189258: {
    tag: '(0018,9258)',
    vr: 'UL',
    vm: 1,
    name: 'ASLPulseTrainDuration'
  },
  x00189259: {
    tag: '(0018,9259)',
    vr: 'CS',
    vm: '1 ',
    name: 'ASLCrusherFlag'
  },
  x0018925a: {
    tag: '(0018,925A)',
    vr: 'FD',
    vm: 1,
    name: 'ASLCrusherFlow'
  },
  x0018925b: {
    tag: '(0018,925B)',
    vr: 'LO',
    vm: 1,
    name: 'ASLCrusherDescription'
  },
  x0018925c: {
    tag: '(0018,925C)',
    vr: 'CS',
    vm: '1 ',
    name: 'ASLBolusCutoffFlag'
  },
  x0018925d: {
    tag: '(0018,925D)',
    vr: 'SQ',
    vm: 1,
    name: 'ASLBolusCutoffTimingSequence'
  },
  x0018925e: {
    tag: '(0018,925E)',
    vr: 'LO',
    vm: 1,
    name: 'ASLBolusCutoffTechnique'
  },
  x0018925f: {
    tag: '(0018,925F)',
    vr: 'UL',
    vm: 1,
    name: 'ASLBolusCutoffDelayTime'
  },
  x00189260: {
    tag: '(0018,9260)',
    vr: 'SQ',
    vm: 1,
    name: 'ASLSlabSequence'
  },
  x00189295: {
    tag: '(0018,9295)',
    vr: 'FD',
    vm: 1,
    name: 'ChemicalShiftMinimumIntegrationLimitInppm'
  },
  x00189296: {
    tag: '(0018,9296)',
    vr: 'FD',
    vm: 1,
    name: 'ChemicalShiftMaximumIntegrationLimitInppm'
  },
  x00189301: {
    tag: '(0018,9301)',
    vr: 'SQ',
    vm: 1,
    name: 'CTAcquisitionTypeSequence'
  },
  x00189302: {
    tag: '(0018,9302)',
    vr: 'CS',
    vm: 1,
    name: 'AcquisitionType'
  },
  x00189303: {
    tag: '(0018,9303)',
    vr: 'FD',
    vm: 1,
    name: 'TubeAngle'
  },
  x00189304: {
    tag: '(0018,9304)',
    vr: 'SQ',
    vm: 1,
    name: 'CTAcquisitionDetailsSequence'
  },
  x00189305: {
    tag: '(0018,9305)',
    vr: 'FD',
    vm: 1,
    name: 'RevolutionTime'
  },
  x00189306: {
    tag: '(0018,9306)',
    vr: 'FD',
    vm: 1,
    name: 'SingleCollimationWidth'
  },
  x00189307: {
    tag: '(0018,9307)',
    vr: 'FD',
    vm: 1,
    name: 'TotalCollimationWidth'
  },
  x00189308: {
    tag: '(0018,9308)',
    vr: 'SQ',
    vm: 1,
    name: 'CTTableDynamicsSequence'
  },
  x00189309: {
    tag: '(0018,9309)',
    vr: 'FD',
    vm: 1,
    name: 'TableSpeed'
  },
  x00189310: {
    tag: '(0018,9310)',
    vr: 'FD',
    vm: 1,
    name: 'TableFeedPerRotation'
  },
  x00189311: {
    tag: '(0018,9311)',
    vr: 'FD',
    vm: 1,
    name: 'SpiralPitchFactor'
  },
  x00189312: {
    tag: '(0018,9312)',
    vr: 'SQ',
    vm: 1,
    name: 'CTGeometrySequence'
  },
  x00189313: {
    tag: '(0018,9313)',
    vr: 'FD',
    vm: 3,
    name: 'DataCollectionCenterPatient'
  },
  x00189314: {
    tag: '(0018,9314)',
    vr: 'SQ',
    vm: 1,
    name: 'CTReconstructionSequence'
  },
  x00189315: {
    tag: '(0018,9315)',
    vr: 'CS',
    vm: 1,
    name: 'ReconstructionAlgorithm'
  },
  x00189316: {
    tag: '(0018,9316)',
    vr: 'CS',
    vm: 1,
    name: 'ConvolutionKernelGroup'
  },
  x00189317: {
    tag: '(0018,9317)',
    vr: 'FD',
    vm: 2,
    name: 'ReconstructionFieldOfView'
  },
  x00189318: {
    tag: '(0018,9318)',
    vr: 'FD',
    vm: 3,
    name: 'ReconstructionTargetCenterPatient'
  },
  x00189319: {
    tag: '(0018,9319)',
    vr: 'FD',
    vm: 1,
    name: 'ReconstructionAngle'
  },
  x00189320: {
    tag: '(0018,9320)',
    vr: 'SH',
    vm: 1,
    name: 'ImageFilter'
  },
  x00189321: {
    tag: '(0018,9321)',
    vr: 'SQ',
    vm: 1,
    name: 'CTExposureSequence'
  },
  x00189322: {
    tag: '(0018,9322)',
    vr: 'FD',
    vm: 2,
    name: 'ReconstructionPixelSpacing'
  },
  x00189323: {
    tag: '(0018,9323)',
    vr: 'CS',
    vm: 1,
    name: 'ExposureModulationType'
  },
  x00189324: {
    tag: '(0018,9324)',
    vr: 'FD',
    vm: 1,
    name: 'EstimatedDoseSaving'
  },
  x00189325: {
    tag: '(0018,9325)',
    vr: 'SQ',
    vm: 1,
    name: 'CTXRayDetailsSequence'
  },
  x00189326: {
    tag: '(0018,9326)',
    vr: 'SQ',
    vm: 1,
    name: 'CTPositionSequence'
  },
  x00189327: {
    tag: '(0018,9327)',
    vr: 'FD',
    vm: 1,
    name: 'TablePosition'
  },
  x00189328: {
    tag: '(0018,9328)',
    vr: 'FD',
    vm: 1,
    name: 'ExposureTimeInms'
  },
  x00189329: {
    tag: '(0018,9329)',
    vr: 'SQ',
    vm: 1,
    name: 'CTImageFrameTypeSequence'
  },
  x00189330: {
    tag: '(0018,9330)',
    vr: 'FD',
    vm: 1,
    name: 'XRayTubeCurrentinma'
  },
  x00189332: {
    tag: '(0018,9332)',
    vr: 'FD',
    vm: 1,
    name: 'ExposureInmAs'
  },
  x00189333: {
    tag: '(0018,9333)',
    vr: 'CS',
    vm: 1,
    name: 'ConstantVolumeFlag'
  },
  x00189334: {
    tag: '(0018,9334)',
    vr: 'CS',
    vm: 1,
    name: 'FluoroscopyFlag'
  },
  x00189335: {
    tag: '(0018,9335)',
    vr: 'FD',
    vm: 1,
    name: 'DistanceSourceToDataCollectionCenter'
  },
  x00189337: {
    tag: '(0018,9337)',
    vr: 'US',
    vm: 1,
    name: 'ContrastBolusAgentNumber'
  },
  x00189338: {
    tag: '(0018,9338)',
    vr: 'SQ',
    vm: 1,
    name: 'ContrastBolusIngredientCodeSequence'
  },
  x00189340: {
    tag: '(0018,9340)',
    vr: 'SQ',
    vm: 1,
    name: 'ContrastAdministrationProfileSequence'
  },
  x00189341: {
    tag: '(0018,9341)',
    vr: 'SQ',
    vm: 1,
    name: 'ContrastBolusUsageSequence'
  },
  x00189342: {
    tag: '(0018,9342)',
    vr: 'CS',
    vm: 1,
    name: 'ContrastBolusAgentAdministered'
  },
  x00189343: {
    tag: '(0018,9343)',
    vr: 'CS',
    vm: 1,
    name: 'ContrastBolusAgentDetected'
  },
  x00189344: {
    tag: '(0018,9344)',
    vr: 'CS',
    vm: 1,
    name: 'ContrastBolusAgentPhase'
  },
  x00189345: {
    tag: '(0018,9345)',
    vr: 'FD',
    vm: 1,
    name: 'CTDIvol'
  },
  x00189346: {
    tag: '(0018,9346)',
    vr: 'SQ',
    vm: 1,
    name: 'CTDIPhantomTypeCodeSequence'
  },
  x00189351: {
    tag: '(0018,9351)',
    vr: 'FL',
    vm: 1,
    name: 'CalciumScoringMassFactorPatient'
  },
  x00189352: {
    tag: '(0018,9352)',
    vr: 'FL',
    vm: 3,
    name: 'CalciumScoringMassFactorDevice'
  },
  x00189353: {
    tag: '(0018,9353)',
    vr: 'FL',
    vm: 1,
    name: 'EnergyWeightingFactor'
  },
  x00189360: {
    tag: '(0018,9360)',
    vr: 'SQ',
    vm: 1,
    name: 'CTAdditionalXRaySourceSequence'
  },
  x00189401: {
    tag: '(0018,9401)',
    vr: 'SQ',
    vm: 1,
    name: 'ProjectionPixelCalibrationSequence'
  },
  x00189402: {
    tag: '(0018,9402)',
    vr: 'FL',
    vm: 1,
    name: 'DistanceSourceToIsocenter'
  },
  x00189403: {
    tag: '(0018,9403)',
    vr: 'FL',
    vm: 1,
    name: 'DistanceObjectToTableTop'
  },
  x00189404: {
    tag: '(0018,9404)',
    vr: 'FL',
    vm: 2,
    name: 'ObjectPixelSpacingInCenterOfBeam'
  },
  x00189405: {
    tag: '(0018,9405)',
    vr: 'SQ',
    vm: 1,
    name: 'PositionerPositionSequence'
  },
  x00189406: {
    tag: '(0018,9406)',
    vr: 'SQ',
    vm: 1,
    name: 'TablePositionSequence'
  },
  x00189407: {
    tag: '(0018,9407)',
    vr: 'SQ',
    vm: 1,
    name: 'CollimatorShapeSequence'
  },
  x00189410: {
    tag: '(0018,9410)',
    vr: 'CS',
    vm: 1,
    name: 'PlanesInAcquisition'
  },
  x00189412: {
    tag: '(0018,9412)',
    vr: 'SQ',
    vm: 1,
    name: 'xaxrfframecharacteristicssequence'
  },
  x00189417: {
    tag: '(0018,9417)',
    vr: 'SQ',
    vm: 1,
    name: 'FrameAcquisitionSequence'
  },
  x00189420: {
    tag: '(0018,9420)',
    vr: 'CS',
    vm: 1,
    name: 'xrayreceptortype'
  },
  x00189423: {
    tag: '(0018,9423)',
    vr: 'LO',
    vm: 1,
    name: 'AcquisitionProtocolName'
  },
  x00189424: {
    tag: '(0018,9424)',
    vr: 'LT',
    vm: 1,
    name: 'AcquisitionProtocolDescription'
  },
  x00189425: {
    tag: '(0018,9425)',
    vr: 'CS',
    vm: 1,
    name: 'ContrastBolusIngredientOpaque'
  },
  x00189426: {
    tag: '(0018,9426)',
    vr: 'FL',
    vm: 1,
    name: 'DistanceReceptorPlaneToDetectorHousing'
  },
  x00189427: {
    tag: '(0018,9427)',
    vr: 'CS',
    vm: 1,
    name: 'IntensifierActiveShape'
  },
  x00189428: {
    tag: '(0018,9428)',
    vr: 'FL',
    vm: '1-2',
    name: 'IntensifierActiveDimensions'
  },
  x00189429: {
    tag: '(0018,9429)',
    vr: 'FL',
    vm: 2,
    name: 'PhysicalDetectorSize'
  },
  x00189430: {
    tag: '(0018,9430)',
    vr: 'FL',
    vm: 2,
    name: 'PositionOfIsocenterProjection'
  },
  x00189432: {
    tag: '(0018,9432)',
    vr: 'SQ',
    vm: 1,
    name: 'FieldOfViewSequence'
  },
  x00189433: {
    tag: '(0018,9433)',
    vr: 'LO',
    vm: 1,
    name: 'FieldOfViewDescription'
  },
  x00189434: {
    tag: '(0018,9434)',
    vr: 'SQ',
    vm: 1,
    name: 'ExposureControlSensingRegionsSequence'
  },
  x00189435: {
    tag: '(0018,9435)',
    vr: 'CS',
    vm: 1,
    name: 'ExposureControlSensingRegionShape'
  },
  x00189436: {
    tag: '(0018,9436)',
    vr: 'SS',
    vm: 1,
    name: 'ExposureControlSensingRegionLeftVerticalEdge'
  },
  x00189437: {
    tag: '(0018,9437)',
    vr: 'SS',
    vm: 1,
    name: 'ExposureControlSensingRegionRightVerticalEdge'
  },
  x00189438: {
    tag: '(0018,9438)',
    vr: 'SS',
    vm: 1,
    name: 'ExposureControlSensingRegionUpperHorizontalEdge'
  },
  x00189439: {
    tag: '(0018,9439)',
    vr: 'SS',
    vm: 1,
    name: 'ExposureControlSensingRegionLowerHorizontalEdge'
  },
  x00189440: {
    tag: '(0018,9440)',
    vr: 'SS',
    vm: 2,
    name: 'CenterOfCircularExposureControlSensingRegion'
  },
  x00189441: {
    tag: '(0018,9441)',
    vr: 'US',
    vm: 1,
    name: 'RadiusOfCircularExposureControlSensingRegion'
  },
  x00189442: {
    tag: '(0018,9442)',
    vr: 'SS',
    vm: '2-n',
    name: 'VerticesOfThePolygonalExposureControlSensingRegion'
  },
  x00189447: {
    tag: '(0018,9447)',
    vr: 'FL',
    vm: 1,
    name: 'ColumnAngulationPatient'
  },
  x00189449: {
    tag: '(0018,9449)',
    vr: 'FL',
    vm: 1,
    name: 'BeamAngle'
  },
  x00189451: {
    tag: '(0018,9451)',
    vr: 'SQ',
    vm: 1,
    name: 'FrameDetectorParametersSequence'
  },
  x00189452: {
    tag: '(0018,9452)',
    vr: 'FL',
    vm: 1,
    name: 'CalculatedAnatomyThickness'
  },
  x00189455: {
    tag: '(0018,9455)',
    vr: 'SQ',
    vm: 1,
    name: 'CalibrationSequence'
  },
  x00189456: {
    tag: '(0018,9456)',
    vr: 'SQ',
    vm: 1,
    name: 'ObjectThicknessSequence'
  },
  x00189457: {
    tag: '(0018,9457)',
    vr: 'CS',
    vm: 1,
    name: 'PlaneIdentification'
  },
  x00189461: {
    tag: '(0018,9461)',
    vr: 'FL',
    vm: '1-2',
    name: 'FieldOfViewDimensionsInFloat'
  },
  x00189462: {
    tag: '(0018,9462)',
    vr: 'SQ',
    vm: 1,
    name: 'IsocenterReferenceSystemSequence'
  },
  x00189463: {
    tag: '(0018,9463)',
    vr: 'FL',
    vm: 1,
    name: 'PositionerIsocenterPrimaryAngle'
  },
  x00189464: {
    tag: '(0018,9464)',
    vr: 'FL',
    vm: 1,
    name: 'PositionerIsocenterSecondaryAngle'
  },
  x00189465: {
    tag: '(0018,9465)',
    vr: 'FL',
    vm: 1,
    name: 'PositionerIsocenterDetectorRotationAngle'
  },
  x00189466: {
    tag: '(0018,9466)',
    vr: 'FL',
    vm: 1,
    name: 'TableXPositionToIsocenter'
  },
  x00189467: {
    tag: '(0018,9467)',
    vr: 'FL',
    vm: 1,
    name: 'TableYPositionToIsocenter'
  },
  x00189468: {
    tag: '(0018,9468)',
    vr: 'FL',
    vm: 1,
    name: 'TableZPositionToIsocenter'
  },
  x00189469: {
    tag: '(0018,9469)',
    vr: 'FL',
    vm: 1,
    name: 'TableHorizontalRotationAngle'
  },
  x00189470: {
    tag: '(0018,9470)',
    vr: 'FL',
    vm: 1,
    name: 'TableHeadTiltAngle'
  },
  x00189471: {
    tag: '(0018,9471)',
    vr: 'FL',
    vm: 1,
    name: 'TableCradleTiltAngle'
  },
  x00189472: {
    tag: '(0018,9472)',
    vr: 'SQ',
    vm: 1,
    name: 'FrameDisplayShutterSequence'
  },
  x00189473: {
    tag: '(0018,9473)',
    vr: 'FL',
    vm: 1,
    name: 'AcquiredImageAreaDoseProduct'
  },
  x00189474: {
    tag: '(0018,9474)',
    vr: 'CS',
    vm: 1,
    name: 'CArmPositionerTabletopRelationship'
  },
  x00189476: {
    tag: '(0018,9476)',
    vr: 'SQ',
    vm: 1,
    name: 'xraygeometrysequence'
  },
  x00189477: {
    tag: '(0018,9477)',
    vr: 'SQ',
    vm: 1,
    name: 'IrradiationEventIdentificationSequence'
  },
  x00189504: {
    tag: '(0018,9504)',
    vr: 'SQ',
    vm: 1,
    name: 'xray3dframetypesequence'
  },
  x00189506: {
    tag: '(0018,9506)',
    vr: 'SQ',
    vm: 1,
    name: 'ContributingSourcesSequence'
  },
  x00189507: {
    tag: '(0018,9507)',
    vr: 'SQ',
    vm: 1,
    name: 'xray3dacquisitionsequence'
  },
  x00189508: {
    tag: '(0018,9508)',
    vr: 'FL',
    vm: 1,
    name: 'PrimaryPositionerScanArc'
  },
  x00189509: {
    tag: '(0018,9509)',
    vr: 'FL',
    vm: 1,
    name: 'SecondaryPositionerScanArc'
  },
  x00189510: {
    tag: '(0018,9510)',
    vr: 'FL',
    vm: 1,
    name: 'PrimaryPositionerScanStartAngle'
  },
  x00189511: {
    tag: '(0018,9511)',
    vr: 'FL',
    vm: 1,
    name: 'SecondaryPositionerScanStartAngle'
  },
  x00189514: {
    tag: '(0018,9514)',
    vr: 'FL',
    vm: 1,
    name: 'PrimaryPositionerIncrement'
  },
  x00189515: {
    tag: '(0018,9515)',
    vr: 'FL',
    vm: 1,
    name: 'SecondaryPositionerIncrement'
  },
  x00189516: {
    tag: '(0018,9516)',
    vr: 'DT',
    vm: 1,
    name: 'StartAcquisitionDateTime'
  },
  x00189517: {
    tag: '(0018,9517)',
    vr: 'DT',
    vm: 1,
    name: 'EndAcquisitionDateTime'
  },
  x00189524: {
    tag: '(0018,9524)',
    vr: 'LO',
    vm: 1,
    name: 'ApplicationName'
  },
  x00189525: {
    tag: '(0018,9525)',
    vr: 'LO',
    vm: 1,
    name: 'ApplicationVersion'
  },
  x00189526: {
    tag: '(0018,9526)',
    vr: 'LO',
    vm: 1,
    name: 'ApplicationManufacturer'
  },
  x00189527: {
    tag: '(0018,9527)',
    vr: 'CS',
    vm: 1,
    name: 'AlgorithmType'
  },
  x00189528: {
    tag: '(0018,9528)',
    vr: 'LO',
    vm: 1,
    name: 'AlgorithmDescription'
  },
  x00189530: {
    tag: '(0018,9530)',
    vr: 'SQ',
    vm: 1,
    name: 'xray3dreconstructionsequence'
  },
  x00189531: {
    tag: '(0018,9531)',
    vr: 'LO',
    vm: 1,
    name: 'ReconstructionDescription'
  },
  x00189538: {
    tag: '(0018,9538)',
    vr: 'SQ',
    vm: 1,
    name: 'PerProjectionAcquisitionSequence'
  },
  x00189601: {
    tag: '(0018,9601)',
    vr: 'SQ',
    vm: 1,
    name: 'DiffusionBMatrixSequence'
  },
  x00189602: {
    tag: '(0018,9602)',
    vr: 'FD',
    vm: 1,
    name: 'DiffusionBValueXX'
  },
  x00189603: {
    tag: '(0018,9603)',
    vr: 'FD',
    vm: 1,
    name: 'DiffusionBValueXY'
  },
  x00189604: {
    tag: '(0018,9604)',
    vr: 'FD',
    vm: 1,
    name: 'DiffusionBValueXZ'
  },
  x00189605: {
    tag: '(0018,9605)',
    vr: 'FD',
    vm: 1,
    name: 'DiffusionBValueYY'
  },
  x00189606: {
    tag: '(0018,9606)',
    vr: 'FD',
    vm: 1,
    name: 'DiffusionBValueYZ'
  },
  x00189607: {
    tag: '(0018,9607)',
    vr: 'FD',
    vm: 1,
    name: 'DiffusionBValueZZ'
  },
  x00189701: {
    tag: '(0018,9701)',
    vr: 'DT',
    vm: 1,
    name: 'DecayCorrectionDateTime'
  },
  x00189715: {
    tag: '(0018,9715)',
    vr: 'FD',
    vm: 1,
    name: 'StartDensityThreshold'
  },
  x00189716: {
    tag: '(0018,9716)',
    vr: 'FD',
    vm: 1,
    name: 'StartRelativeDensityDifferenceThreshold'
  },
  x00189717: {
    tag: '(0018,9717)',
    vr: 'FD',
    vm: 1,
    name: 'StartCardiacTriggerCountThreshold'
  },
  x00189718: {
    tag: '(0018,9718)',
    vr: 'FD',
    vm: 1,
    name: 'StartRespiratoryTriggerCountThreshold'
  },
  x00189719: {
    tag: '(0018,9719)',
    vr: 'FD',
    vm: 1,
    name: 'TerminationCountsThreshold'
  },
  x00189720: {
    tag: '(0018,9720)',
    vr: 'FD',
    vm: 1,
    name: 'TerminationDensityThreshold'
  },
  x00189721: {
    tag: '(0018,9721)',
    vr: 'FD',
    vm: 1,
    name: 'TerminationRelativeDensityThreshold'
  },
  x00189722: {
    tag: '(0018,9722)',
    vr: 'FD',
    vm: 1,
    name: 'TerminationTimeThreshold'
  },
  x00189723: {
    tag: '(0018,9723)',
    vr: 'FD',
    vm: 1,
    name: 'TerminationCardiacTriggerCountThreshold'
  },
  x00189724: {
    tag: '(0018,9724)',
    vr: 'FD',
    vm: 1,
    name: 'TerminationRespiratoryTriggerCountThreshold'
  },
  x00189725: {
    tag: '(0018,9725)',
    vr: 'CS',
    vm: 1,
    name: 'DetectorGeometry'
  },
  x00189726: {
    tag: '(0018,9726)',
    vr: 'FD',
    vm: 1,
    name: 'TransverseDetectorSeparation'
  },
  x00189727: {
    tag: '(0018,9727)',
    vr: 'FD',
    vm: 1,
    name: 'AxialDetectorDimension'
  },
  x00189729: {
    tag: '(0018,9729)',
    vr: 'US',
    vm: 1,
    name: 'RadiopharmaceuticalAgentNumber'
  },
  x00189732: {
    tag: '(0018,9732)',
    vr: 'SQ',
    vm: 1,
    name: 'PETFrameAcquisitionSequence'
  },
  x00189733: {
    tag: '(0018,9733)',
    vr: 'SQ',
    vm: 1,
    name: 'PETDetectorMotionDetailsSequence'
  },
  x00189734: {
    tag: '(0018,9734)',
    vr: 'SQ',
    vm: 1,
    name: 'PETTableDynamicsSequence'
  },
  x00189735: {
    tag: '(0018,9735)',
    vr: 'SQ',
    vm: 1,
    name: 'PETPositionSequence'
  },
  x00189736: {
    tag: '(0018,9736)',
    vr: 'SQ',
    vm: 1,
    name: 'PETFrameCorrectionFactorsSequence'
  },
  x00189737: {
    tag: '(0018,9737)',
    vr: 'SQ',
    vm: 1,
    name: 'RadiopharmaceuticalUsageSequence'
  },
  x00189738: {
    tag: '(0018,9738)',
    vr: 'CS',
    vm: 1,
    name: 'AttenuationCorrectionSource'
  },
  x00189739: {
    tag: '(0018,9739)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfIterations'
  },
  x00189740: {
    tag: '(0018,9740)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfSubsets'
  },
  x00189749: {
    tag: '(0018,9749)',
    vr: 'SQ',
    vm: 1,
    name: 'PETReconstructionSequence'
  },
  x00189751: {
    tag: '(0018,9751)',
    vr: 'SQ',
    vm: 1,
    name: 'PETFrameTypeSequence'
  },
  x00189755: {
    tag: '(0018,9755)',
    vr: 'CS',
    vm: 1,
    name: 'TimeOfFlightInformationUsed'
  },
  x00189756: {
    tag: '(0018,9756)',
    vr: 'CS',
    vm: 1,
    name: 'ReconstructionType'
  },
  x00189758: {
    tag: '(0018,9758)',
    vr: 'CS',
    vm: 1,
    name: 'DecayCorrected'
  },
  x00189759: {
    tag: '(0018,9759)',
    vr: 'CS',
    vm: 1,
    name: 'AttenuationCorrected'
  },
  x00189760: {
    tag: '(0018,9760)',
    vr: 'CS',
    vm: 1,
    name: 'ScatterCorrected'
  },
  x00189761: {
    tag: '(0018,9761)',
    vr: 'CS',
    vm: 1,
    name: 'DeadTimeCorrected'
  },
  x00189762: {
    tag: '(0018,9762)',
    vr: 'CS',
    vm: 1,
    name: 'GantryMotionCorrected'
  },
  x00189763: {
    tag: '(0018,9763)',
    vr: 'CS',
    vm: 1,
    name: 'PatientMotionCorrected'
  },
  x00189764: {
    tag: '(0018,9764)',
    vr: 'CS',
    vm: 1,
    name: 'CountLossNormalizationCorrected'
  },
  x00189765: {
    tag: '(0018,9765)',
    vr: 'CS',
    vm: 1,
    name: 'RandomsCorrected'
  },
  x00189766: {
    tag: '(0018,9766)',
    vr: 'CS',
    vm: 1,
    name: 'NonUniformRadialSamplingCorrected'
  },
  x00189767: {
    tag: '(0018,9767)',
    vr: 'CS',
    vm: 1,
    name: 'SensitivityCalibrated'
  },
  x00189768: {
    tag: '(0018,9768)',
    vr: 'CS',
    vm: 1,
    name: 'DetectorNormalizationCorrection'
  },
  x00189769: {
    tag: '(0018,9769)',
    vr: 'CS',
    vm: 1,
    name: 'IterativeReconstructionMethod'
  },
  x00189770: {
    tag: '(0018,9770)',
    vr: 'CS',
    vm: 1,
    name: 'AttenuationCorrectionTemporalRelationship'
  },
  x00189771: {
    tag: '(0018,9771)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientPhysiologicalStateSequence'
  },
  x00189772: {
    tag: '(0018,9772)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientPhysiologicalStateCodeSequence'
  },
  x00189801: {
    tag: '(0018,9801)',
    vr: 'FD',
    vm: '1-n',
    name: 'DepthsOfFocus'
  },
  x00189803: {
    tag: '(0018,9803)',
    vr: 'SQ',
    vm: 1,
    name: 'ExcludedIntervalsSequence'
  },
  x00189804: {
    tag: '(0018,9804)',
    vr: 'DT',
    vm: 1,
    name: 'ExclusionStartDatetime'
  },
  x00189805: {
    tag: '(0018,9805)',
    vr: 'FD',
    vm: 1,
    name: 'ExclusionDuration'
  },
  x00189806: {
    tag: '(0018,9806)',
    vr: 'SQ',
    vm: 1,
    name: 'USImageDescriptionSequence'
  },
  x00189807: {
    tag: '(0018,9807)',
    vr: 'SQ',
    vm: 1,
    name: 'ImageDataTypeSequence'
  },
  x00189808: {
    tag: '(0018,9808)',
    vr: 'CS',
    vm: 1,
    name: 'DataType'
  },
  x00189809: {
    tag: '(0018,9809)',
    vr: 'SQ',
    vm: 1,
    name: 'TransducerScanPatternCodeSequence'
  },
  x0018980b: {
    tag: '(0018,980B)',
    vr: 'CS',
    vm: 1,
    name: 'AliasedDataType'
  },
  x0018980c: {
    tag: '(0018,980C)',
    vr: 'CS',
    vm: 1,
    name: 'PositionMeasuringDeviceUsed'
  },
  x0018980d: {
    tag: '(0018,980D)',
    vr: 'SQ',
    vm: 1,
    name: 'TransducerGeometryCodeSequence'
  },
  x0018980e: {
    tag: '(0018,980E)',
    vr: 'SQ',
    vm: 1,
    name: 'TransducerBeamSteeringCodeSequence'
  },
  x0018980f: {
    tag: '(0018,980F)',
    vr: 'SQ',
    vm: 1,
    name: 'TransducerApplicationCodeSequence'
  },
  x0018a001: {
    tag: '(0018,A001)',
    vr: 'SQ',
    vm: 1,
    name: 'ContributingEquipmentSequence'
  },
  x0018a002: {
    tag: '(0018,A002)',
    vr: 'DT',
    vm: 1,
    name: 'ContributionDateTime'
  },
  x0018a003: {
    tag: '(0018,A003)',
    vr: 'ST',
    vm: 1,
    name: 'ContributionDescription'
  },
  x0020000d: {
    tag: '(0020,000D)',
    vr: 'UI',
    vm: 1,
    name: 'StudyInstanceUID'
  },
  x0020000e: {
    tag: '(0020,000E)',
    vr: 'UI',
    vm: 1,
    name: 'SeriesInstanceUID'
  },
  x00200010: {
    tag: '(0020,0010)',
    vr: 'SH',
    vm: 1,
    name: 'StudyID'
  },
  x00200011: {
    tag: '(0020,0011)',
    vr: 'IS',
    vm: 1,
    name: 'SeriesNumber'
  },
  x00200012: {
    tag: '(0020,0012)',
    vr: 'IS',
    vm: 1,
    name: 'AcquisitionNumber'
  },
  x00200013: {
    tag: '(0020,0013)',
    vr: 'IS',
    vm: 1,
    name: 'InstanceNumber'
  },
  x00200014: {
    tag: '(0020,0014)',
    vr: 'IS',
    vm: 1,
    name: 'IsotopeNumber'
  },
  x00200015: {
    tag: '(0020,0015)',
    vr: 'IS',
    vm: 1,
    name: 'PhaseNumber'
  },
  x00200016: {
    tag: '(0020,0016)',
    vr: 'IS',
    vm: 1,
    name: 'IntervalNumber'
  },
  x00200017: {
    tag: '(0020,0017)',
    vr: 'IS',
    vm: 1,
    name: 'TimeSlotNumber'
  },
  x00200018: {
    tag: '(0020,0018)',
    vr: 'IS',
    vm: 1,
    name: 'AngleNumber'
  },
  x00200019: {
    tag: '(0020,0019)',
    vr: 'IS',
    vm: 1,
    name: 'ItemNumber'
  },
  x00200020: {
    tag: '(0020,0020)',
    vr: 'CS',
    vm: 2,
    name: 'PatientOrientation'
  },
  x00200022: {
    tag: '(0020,0022)',
    vr: 'IS',
    vm: 1,
    name: 'OverlayNumber'
  },
  x00200024: {
    tag: '(0020,0024)',
    vr: 'IS',
    vm: 1,
    name: 'CurveNumber'
  },
  x00200026: {
    tag: '(0020,0026)',
    vr: 'IS',
    vm: 1,
    name: 'LUTNumber'
  },
  x00200030: {
    tag: '(0020,0030)',
    vr: 'DS',
    vm: 3,
    name: 'ImagePosition'
  },
  x00200032: {
    tag: '(0020,0032)',
    vr: 'DS',
    vm: 3,
    name: 'ImagePositionPatient'
  },
  x00200035: {
    tag: '(0020,0035)',
    vr: 'DS',
    vm: 6,
    name: 'ImageOrientation'
  },
  x00200037: {
    tag: '(0020,0037)',
    vr: 'DS',
    vm: 6,
    name: 'ImageOrientationPatient'
  },
  x00200050: {
    tag: '(0020,0050)',
    vr: 'DS',
    vm: 1,
    name: 'Location'
  },
  x00200052: {
    tag: '(0020,0052)',
    vr: 'UI',
    vm: 1,
    name: 'FrameOfReferenceUID'
  },
  x00200060: {
    tag: '(0020,0060)',
    vr: 'CS',
    vm: 1,
    name: 'Laterality'
  },
  x00200062: {
    tag: '(0020,0062)',
    vr: 'CS',
    vm: 1,
    name: 'ImageLaterality'
  },
  x00200070: {
    tag: '(0020,0070)',
    vr: 'LO',
    vm: 1,
    name: 'ImageGeometryType'
  },
  x00200080: {
    tag: '(0020,0080)',
    vr: 'CS',
    vm: '1-n',
    name: 'MaskingImage'
  },
  x002000aa: {
    tag: '(0020,00AA)',
    vr: 'IS',
    vm: 1,
    name: 'ReportNumber'
  },
  x00200100: {
    tag: '(0020,0100)',
    vr: 'IS',
    vm: 1,
    name: 'TemporalPositionIdentifier'
  },
  x00200105: {
    tag: '(0020,0105)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfTemporalPositions'
  },
  x00200110: {
    tag: '(0020,0110)',
    vr: 'DS',
    vm: 1,
    name: 'TemporalResolution'
  },
  x00200200: {
    tag: '(0020,0200)',
    vr: 'UI',
    vm: 1,
    name: 'SynchronizationFrameOfReferenceUID'
  },
  x00200242: {
    tag: '(0020,0242)',
    vr: 'UI',
    vm: 1,
    name: 'SOPInstanceUIDOfConcatenationSource'
  },
  x00201000: {
    tag: '(0020,1000)',
    vr: 'IS',
    vm: 1,
    name: 'SeriesInStudy'
  },
  x00201001: {
    tag: '(0020,1001)',
    vr: 'IS',
    vm: 1,
    name: 'AcquisitionsInSeries'
  },
  x00201002: {
    tag: '(0020,1002)',
    vr: 'IS',
    vm: 1,
    name: 'ImagesInAcquisition'
  },
  x00201003: {
    tag: '(0020,1003)',
    vr: 'IS',
    vm: 1,
    name: 'ImagesInSeries'
  },
  x00201004: {
    tag: '(0020,1004)',
    vr: 'IS',
    vm: 1,
    name: 'AcquisitionsInStudy'
  },
  x00201005: {
    tag: '(0020,1005)',
    vr: 'IS',
    vm: 1,
    name: 'ImagesInStudy'
  },
  x00201020: {
    tag: '(0020,1020)',
    vr: 'LO',
    vm: '1-n',
    name: 'Reference'
  },
  x00201040: {
    tag: '(0020,1040)',
    vr: 'LO',
    vm: 1,
    name: 'PositionReferenceIndicator'
  },
  x00201041: {
    tag: '(0020,1041)',
    vr: 'DS',
    vm: 1,
    name: 'SliceLocation'
  },
  x00201070: {
    tag: '(0020,1070)',
    vr: 'IS',
    vm: '1-n',
    name: 'OtherStudyNumbers'
  },
  x00201200: {
    tag: '(0020,1200)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfPatientRelatedStudies'
  },
  x00201202: {
    tag: '(0020,1202)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfPatientRelatedSeries'
  },
  x00201204: {
    tag: '(0020,1204)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfPatientRelatedInstances'
  },
  x00201206: {
    tag: '(0020,1206)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfStudyRelatedSeries'
  },
  x00201208: {
    tag: '(0020,1208)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfStudyRelatedInstances'
  },
  x00201209: {
    tag: '(0020,1209)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfSeriesRelatedInstances'
  },
  x002031xx: {
    tag: '(0020,31xx)',
    vr: 'CS',
    vm: '1-n',
    name: 'SourceImageIDs'
  },
  x00203401: {
    tag: '(0020,3401)',
    vr: 'CS',
    vm: 1,
    name: 'ModifyingDeviceID'
  },
  x00203402: {
    tag: '(0020,3402)',
    vr: 'CS',
    vm: 1,
    name: 'ModifiedImageID'
  },
  x00203403: {
    tag: '(0020,3403)',
    vr: 'DA',
    vm: 1,
    name: 'ModifiedImageDate'
  },
  x00203404: {
    tag: '(0020,3404)',
    vr: 'LO',
    vm: 1,
    name: 'ModifyingDeviceManufacturer'
  },
  x00203405: {
    tag: '(0020,3405)',
    vr: 'TM',
    vm: 1,
    name: 'ModifiedImageTime'
  },
  x00203406: {
    tag: '(0020,3406)',
    vr: 'LO',
    vm: 1,
    name: 'ModifiedImageDescription'
  },
  x00204000: {
    tag: '(0020,4000)',
    vr: 'LT',
    vm: 1,
    name: 'ImageComments'
  },
  x00205000: {
    tag: '(0020,5000)',
    vr: 'AT',
    vm: '1-n',
    name: 'OriginalImageIdentification'
  },
  x00205002: {
    tag: '(0020,5002)',
    vr: 'LO',
    vm: '1-n',
    name: 'OriginalImageIdentificationNomenclature'
  },
  x00209056: {
    tag: '(0020,9056)',
    vr: 'SH',
    vm: 1,
    name: 'StackID'
  },
  x00209057: {
    tag: '(0020,9057)',
    vr: 'UL',
    vm: 1,
    name: 'InStackPositionNumber'
  },
  x00209071: {
    tag: '(0020,9071)',
    vr: 'SQ',
    vm: 1,
    name: 'FrameAnatomySequence'
  },
  x00209072: {
    tag: '(0020,9072)',
    vr: 'CS',
    vm: 1,
    name: 'FrameLaterality'
  },
  x00209111: {
    tag: '(0020,9111)',
    vr: 'SQ',
    vm: 1,
    name: 'FrameContentSequence'
  },
  x00209113: {
    tag: '(0020,9113)',
    vr: 'SQ',
    vm: 1,
    name: 'PlanePositionSequence'
  },
  x00209116: {
    tag: '(0020,9116)',
    vr: 'SQ',
    vm: 1,
    name: 'PlaneOrientationSequence'
  },
  x00209128: {
    tag: '(0020,9128)',
    vr: 'UL',
    vm: 1,
    name: 'TemporalPositionIndex'
  },
  x00209153: {
    tag: '(0020,9153)',
    vr: 'FD',
    vm: 1,
    name: 'NominalCardiacTriggerDelayTime'
  },
  x00209154: {
    tag: '(0020,9154)',
    vr: 'FL',
    vm: 1,
    name: 'NominalCardiacTriggerTimePriorToRPeak'
  },
  x00209155: {
    tag: '(0020,9155)',
    vr: 'FL',
    vm: 1,
    name: 'ActualCardiacTriggerTimePriorToRPeak'
  },
  x00209156: {
    tag: '(0020,9156)',
    vr: 'US',
    vm: 1,
    name: 'FrameAcquisitionNumber'
  },
  x00209157: {
    tag: '(0020,9157)',
    vr: 'UL',
    vm: '1-n',
    name: 'DimensionIndexValues'
  },
  x00209158: {
    tag: '(0020,9158)',
    vr: 'LT',
    vm: 1,
    name: 'FrameComments'
  },
  x00209161: {
    tag: '(0020,9161)',
    vr: 'UI',
    vm: 1,
    name: 'ConcatenationUID'
  },
  x00209162: {
    tag: '(0020,9162)',
    vr: 'US',
    vm: 1,
    name: 'InConcatenationNumber'
  },
  x00209163: {
    tag: '(0020,9163)',
    vr: 'US',
    vm: 1,
    name: 'InConcatenationTotalNumber'
  },
  x00209164: {
    tag: '(0020,9164)',
    vr: 'UI',
    vm: 1,
    name: 'DimensionOrganizationUID'
  },
  x00209165: {
    tag: '(0020,9165)',
    vr: 'AT',
    vm: 1,
    name: 'DimensionIndexPointer'
  },
  x00209167: {
    tag: '(0020,9167)',
    vr: 'AT',
    vm: 1,
    name: 'FunctionalGroupPointer'
  },
  x00209213: {
    tag: '(0020,9213)',
    vr: 'LO',
    vm: 1,
    name: 'DimensionIndexPrivateCreator'
  },
  x00209221: {
    tag: '(0020,9221)',
    vr: 'SQ',
    vm: 1,
    name: 'DimensionOrganizationSequence'
  },
  x00209222: {
    tag: '(0020,9222)',
    vr: 'SQ',
    vm: 1,
    name: 'DimensionIndexSequence'
  },
  x00209228: {
    tag: '(0020,9228)',
    vr: 'UL',
    vm: 1,
    name: 'ConcatenationFrameOffsetNumber'
  },
  x00209238: {
    tag: '(0020,9238)',
    vr: 'LO',
    vm: 1,
    name: 'FunctionalGroupPrivateCreator'
  },
  x00209241: {
    tag: '(0020,9241)',
    vr: 'FL',
    vm: 1,
    name: 'NominalPercentageOfCardiacPhase'
  },
  x00209245: {
    tag: '(0020,9245)',
    vr: 'FL',
    vm: 1,
    name: 'NominalPercentageOfRespiratoryPhase'
  },
  x00209246: {
    tag: '(0020,9246)',
    vr: 'FL',
    vm: 1,
    name: 'StartingRespiratoryAmplitude'
  },
  x00209247: {
    tag: '(0020,9247)',
    vr: 'CS',
    vm: 1,
    name: 'StartingRespiratoryPhase'
  },
  x00209248: {
    tag: '(0020,9248)',
    vr: 'FL',
    vm: 1,
    name: 'EndingRespiratoryAmplitude'
  },
  x00209249: {
    tag: '(0020,9249)',
    vr: 'CS',
    vm: 1,
    name: 'EndingRespiratoryPhase'
  },
  x00209250: {
    tag: '(0020,9250)',
    vr: 'CS',
    vm: 1,
    name: 'RespiratoryTriggerType'
  },
  x00209251: {
    tag: '(0020,9251)',
    vr: 'FD',
    vm: 1,
    name: 'RRIntervalTimeNominal'
  },
  x00209252: {
    tag: '(0020,9252)',
    vr: 'FD',
    vm: 1,
    name: 'ActualCardiacTriggerDelayTime'
  },
  x00209253: {
    tag: '(0020,9253)',
    vr: 'SQ',
    vm: 1,
    name: 'RespiratorySynchronizationSequence'
  },
  x00209254: {
    tag: '(0020,9254)',
    vr: 'FD',
    vm: 1,
    name: 'RespiratoryIntervalTime'
  },
  x00209255: {
    tag: '(0020,9255)',
    vr: 'FD',
    vm: 1,
    name: 'NominalRespiratoryTriggerDelayTime'
  },
  x00209256: {
    tag: '(0020,9256)',
    vr: 'FD',
    vm: 1,
    name: 'RespiratoryTriggerDelayThreshold'
  },
  x00209257: {
    tag: '(0020,9257)',
    vr: 'FD',
    vm: 1,
    name: 'ActualRespiratoryTriggerDelayTime'
  },
  x00209301: {
    tag: '(0020,9301)',
    vr: 'FD',
    vm: 3,
    name: 'ImagePositionVolume'
  },
  x00209302: {
    tag: '(0020,9302)',
    vr: 'FD',
    vm: 6,
    name: 'ImageOrientationVolume'
  },
  x00209307: {
    tag: '(0020,9307)',
    vr: 'CS',
    vm: 1,
    name: 'UltrasoundAcquisitionGeometry'
  },
  x00209308: {
    tag: '(0020,9308)',
    vr: 'FD',
    vm: 3,
    name: 'ApexPosition'
  },
  x00209309: {
    tag: '(0020,9309)',
    vr: 'FD',
    vm: 16,
    name: 'VolumeToTransducerMappingMatrix'
  },
  x0020930a: {
    tag: '(0020,930A)',
    vr: 'FD',
    vm: 16,
    name: 'VolumeToTableMappingMatrix'
  },
  x0020930c: {
    tag: '(0020,930C)',
    vr: 'CS',
    vm: 1,
    name: 'PatientFrameOfReferenceSource'
  },
  x0020930d: {
    tag: '(0020,930D)',
    vr: 'FD',
    vm: 1,
    name: 'TemporalPositionTimeOffset'
  },
  x0020930e: {
    tag: '(0020,930E)',
    vr: 'SQ',
    vm: 1,
    name: 'PlanePositionVolumeSequence'
  },
  x0020930f: {
    tag: '(0020,930F)',
    vr: 'SQ',
    vm: 1,
    name: 'PlaneOrientationVolumeSequence'
  },
  x00209310: {
    tag: '(0020,9310)',
    vr: 'SQ',
    vm: 1,
    name: 'TemporalPositionSequence'
  },
  x00209311: {
    tag: '(0020,9311)',
    vr: 'CS',
    vm: 1,
    name: 'DimensionOrganizationType'
  },
  x00209312: {
    tag: '(0020,9312)',
    vr: 'UI',
    vm: 1,
    name: 'VolumeFrameOfReferenceUID'
  },
  x00209313: {
    tag: '(0020,9313)',
    vr: 'UI',
    vm: 1,
    name: 'TableFrameOfReferenceUID'
  },
  x00209421: {
    tag: '(0020,9421)',
    vr: 'LO',
    vm: 1,
    name: 'DimensionDescriptionLabel'
  },
  x00209450: {
    tag: '(0020,9450)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientOrientationInFrameSequence'
  },
  x00209453: {
    tag: '(0020,9453)',
    vr: 'LO',
    vm: 1,
    name: 'FrameLabel'
  },
  x00209518: {
    tag: '(0020,9518)',
    vr: 'US',
    vm: '1-n',
    name: 'AcquisitionIndex'
  },
  x00209529: {
    tag: '(0020,9529)',
    vr: 'SQ',
    vm: 1,
    name: 'ContributingSOPInstancesReferenceSequence'
  },
  x00209536: {
    tag: '(0020,9536)',
    vr: 'US',
    vm: 1,
    name: 'ReconstructionIndex'
  },
  x00220001: {
    tag: '(0022,0001)',
    vr: 'US',
    vm: 1,
    name: 'LightPathFilterPassThroughWavelength'
  },
  x00220002: {
    tag: '(0022,0002)',
    vr: 'US',
    vm: 2,
    name: 'LightPathFilterPassBand'
  },
  x00220003: {
    tag: '(0022,0003)',
    vr: 'US',
    vm: 1,
    name: 'ImagePathFilterPassThroughWavelength'
  },
  x00220004: {
    tag: '(0022,0004)',
    vr: 'US',
    vm: 2,
    name: 'ImagePathFilterPassBand'
  },
  x00220005: {
    tag: '(0022,0005)',
    vr: 'CS',
    vm: 1,
    name: 'PatientEyeMovementCommanded'
  },
  x00220006: {
    tag: '(0022,0006)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientEyeMovementCommandCodeSequence'
  },
  x00220007: {
    tag: '(0022,0007)',
    vr: 'FL',
    vm: 1,
    name: 'SphericalLensPower'
  },
  x00220008: {
    tag: '(0022,0008)',
    vr: 'FL',
    vm: 1,
    name: 'CylinderLensPower'
  },
  x00220009: {
    tag: '(0022,0009)',
    vr: 'FL',
    vm: 1,
    name: 'CylinderAxis'
  },
  x0022000a: {
    tag: '(0022,000A)',
    vr: 'FL',
    vm: 1,
    name: 'EmmetropicMagnification'
  },
  x0022000b: {
    tag: '(0022,000B)',
    vr: 'FL',
    vm: 1,
    name: 'IntraOcularPressure'
  },
  x0022000c: {
    tag: '(0022,000C)',
    vr: 'FL',
    vm: 1,
    name: 'HorizontalFieldOfView'
  },
  x0022000d: {
    tag: '(0022,000D)',
    vr: 'CS',
    vm: 1,
    name: 'PupilDilated'
  },
  x0022000e: {
    tag: '(0022,000E)',
    vr: 'FL',
    vm: 1,
    name: 'DegreeOfDilation'
  },
  x00220010: {
    tag: '(0022,0010)',
    vr: 'FL',
    vm: 1,
    name: 'StereoBaselineAngle'
  },
  x00220011: {
    tag: '(0022,0011)',
    vr: 'FL',
    vm: 1,
    name: 'StereoBaselineDisplacement'
  },
  x00220012: {
    tag: '(0022,0012)',
    vr: 'FL',
    vm: 1,
    name: 'StereoHorizontalPixelOffset'
  },
  x00220013: {
    tag: '(0022,0013)',
    vr: 'FL',
    vm: 1,
    name: 'StereoVerticalPixelOffset'
  },
  x00220014: {
    tag: '(0022,0014)',
    vr: 'FL',
    vm: 1,
    name: 'StereoRotation'
  },
  x00220015: {
    tag: '(0022,0015)',
    vr: 'SQ',
    vm: 1,
    name: 'AcquisitionDeviceTypeCodeSequence'
  },
  x00220016: {
    tag: '(0022,0016)',
    vr: 'SQ',
    vm: 1,
    name: 'IlluminationTypeCodeSequence'
  },
  x00220017: {
    tag: '(0022,0017)',
    vr: 'SQ',
    vm: 1,
    name: 'LightPathFilterTypeStackCodeSequence'
  },
  x00220018: {
    tag: '(0022,0018)',
    vr: 'SQ',
    vm: 1,
    name: 'ImagePathFilterTypeStackCodeSequence'
  },
  x00220019: {
    tag: '(0022,0019)',
    vr: 'SQ',
    vm: 1,
    name: 'LensesCodeSequence'
  },
  x0022001a: {
    tag: '(0022,001A)',
    vr: 'SQ',
    vm: 1,
    name: 'ChannelDescriptionCodeSequence'
  },
  x0022001b: {
    tag: '(0022,001B)',
    vr: 'SQ',
    vm: 1,
    name: 'RefractiveStateSequence'
  },
  x0022001c: {
    tag: '(0022,001C)',
    vr: 'SQ',
    vm: 1,
    name: 'MydriaticAgentCodeSequence'
  },
  x0022001d: {
    tag: '(0022,001D)',
    vr: 'SQ',
    vm: 1,
    name: 'RelativeImagePositionCodeSequence'
  },
  x0022001e: {
    tag: '(0022,001E)',
    vr: 'FL',
    vm: 1,
    name: 'CameraAngleOfView'
  },
  x00220020: {
    tag: '(0022,0020)',
    vr: 'SQ',
    vm: 1,
    name: 'StereoPairsSequence'
  },
  x00220021: {
    tag: '(0022,0021)',
    vr: 'SQ',
    vm: 1,
    name: 'LeftImageSequence'
  },
  x00220022: {
    tag: '(0022,0022)',
    vr: 'SQ',
    vm: 1,
    name: 'RightImageSequence'
  },
  x00220030: {
    tag: '(0022,0030)',
    vr: 'FL',
    vm: 1,
    name: 'AxialLengthOfTheEye'
  },
  x00220031: {
    tag: '(0022,0031)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicFrameLocationSequence'
  },
  x00220032: {
    tag: '(0022,0032)',
    vr: 'FL',
    vm: '2-2n',
    name: 'ReferenceCoordinates'
  },
  x00220035: {
    tag: '(0022,0035)',
    vr: 'FL',
    vm: 1,
    name: 'DepthSpatialResolution'
  },
  x00220036: {
    tag: '(0022,0036)',
    vr: 'FL',
    vm: 1,
    name: 'MaximumDepthDistortion'
  },
  x00220037: {
    tag: '(0022,0037)',
    vr: 'FL',
    vm: 1,
    name: 'AlongScanSpatialResolution'
  },
  x00220038: {
    tag: '(0022,0038)',
    vr: 'FL',
    vm: 1,
    name: 'MaximumAlongScanDistortion'
  },
  x00220039: {
    tag: '(0022,0039)',
    vr: 'CS',
    vm: 1,
    name: 'OphthalmicImageOrientation'
  },
  x00220041: {
    tag: '(0022,0041)',
    vr: 'FL',
    vm: 1,
    name: 'DepthOfTransverseImage'
  },
  x00220042: {
    tag: '(0022,0042)',
    vr: 'SQ',
    vm: 1,
    name: 'MydriaticAgentConcentrationUnitsSequence'
  },
  x00220048: {
    tag: '(0022,0048)',
    vr: 'FL',
    vm: 1,
    name: 'AcrossScanSpatialResolution'
  },
  x00220049: {
    tag: '(0022,0049)',
    vr: 'FL',
    vm: 1,
    name: 'MaximumAcrossScanDistortion'
  },
  x0022004e: {
    tag: '(0022,004E)',
    vr: 'DS',
    vm: 1,
    name: 'MydriaticAgentConcentration'
  },
  x00220055: {
    tag: '(0022,0055)',
    vr: 'FL',
    vm: 1,
    name: 'IlluminationWaveLength'
  },
  x00220056: {
    tag: '(0022,0056)',
    vr: 'FL',
    vm: 1,
    name: 'IlluminationPower'
  },
  x00220057: {
    tag: '(0022,0057)',
    vr: 'FL',
    vm: 1,
    name: 'IlluminationBandwidth'
  },
  x00220058: {
    tag: '(0022,0058)',
    vr: 'SQ',
    vm: 1,
    name: 'MydriaticAgentSequence'
  },
  x00221007: {
    tag: '(0022,1007)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialMeasurementsRightEyeSequence'
  },
  x00221008: {
    tag: '(0022,1008)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialMeasurementsLeftEyeSequence'
  },
  x00221010: {
    tag: '(0022,1010)',
    vr: 'CS',
    vm: 1,
    name: 'OphthalmicAxialLengthMeasurementsType'
  },
  x00221019: {
    tag: '(0022,1019)',
    vr: 'FL',
    vm: 1,
    name: 'OphthalmicAxialLength'
  },
  x00221024: {
    tag: '(0022,1024)',
    vr: 'SQ',
    vm: 1,
    name: 'LensStatusCodeSequence'
  },
  x00221025: {
    tag: '(0022,1025)',
    vr: 'SQ',
    vm: 1,
    name: 'VitreousStatusCodeSequence'
  },
  x00221028: {
    tag: '(0022,1028)',
    vr: 'SQ',
    vm: 1,
    name: 'IOLFormulaCodeSequence'
  },
  x00221029: {
    tag: '(0022,1029)',
    vr: 'LO',
    vm: 1,
    name: 'IOLFormulaDetail'
  },
  x00221033: {
    tag: '(0022,1033)',
    vr: 'FL',
    vm: 1,
    name: 'KeratometerIndex'
  },
  x00221035: {
    tag: '(0022,1035)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceOfOphthalmicAxialLengthCodeSequence'
  },
  x00221037: {
    tag: '(0022,1037)',
    vr: 'FL',
    vm: 1,
    name: 'TargetRefraction'
  },
  x00221039: {
    tag: '(0022,1039)',
    vr: 'CS',
    vm: 1,
    name: 'RefractiveProcedureOccurred'
  },
  x00221040: {
    tag: '(0022,1040)',
    vr: 'SQ',
    vm: 1,
    name: 'RefractiveSurgeryTypeCodeSequence'
  },
  x00221044: {
    tag: '(0022,1044)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicUltrasoundAxialMeasurementsTypeCodeSequence'
  },
  x00221050: {
    tag: '(0022,1050)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialLengthMeasurementsSequence'
  },
  x00221053: {
    tag: '(0022,1053)',
    vr: 'FL',
    vm: 1,
    name: 'IOLPower'
  },
  x00221054: {
    tag: '(0022,1054)',
    vr: 'FL',
    vm: 1,
    name: 'PredictedRefractiveError'
  },
  x00221059: {
    tag: '(0022,1059)',
    vr: 'FL',
    vm: 1,
    name: 'OphthalmicAxialLengthVelocity'
  },
  x00221065: {
    tag: '(0022,1065)',
    vr: 'LO',
    vm: 1,
    name: 'LensStatusDescription'
  },
  x00221066: {
    tag: '(0022,1066)',
    vr: 'LO',
    vm: 1,
    name: 'VitreousStatusDescription'
  },
  x00221090: {
    tag: '(0022,1090)',
    vr: 'SQ',
    vm: 1,
    name: 'IOLPowerSequence'
  },
  x00221092: {
    tag: '(0022,1092)',
    vr: 'SQ',
    vm: 1,
    name: 'LensConstantSequence'
  },
  x00221093: {
    tag: '(0022,1093)',
    vr: 'LO',
    vm: 1,
    name: 'IOLManufacturer'
  },
  x00221094: {
    tag: '(0022,1094)',
    vr: 'LO',
    vm: 1,
    name: 'LensConstantDescription'
  },
  x00221096: {
    tag: '(0022,1096)',
    vr: 'SQ',
    vm: 1,
    name: 'KeratometryMeasurementTypeCodeSequence'
  },
  x00221100: {
    tag: '(0022,1100)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedOphthalmicAxialMeasurementsSequence'
  },
  x00221101: {
    tag: '(0022,1101)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'
  },
  x00221103: {
    tag: '(0022,1103)',
    vr: 'SQ',
    vm: 1,
    name: 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'
  },
  x00221121: {
    tag: '(0022,1121)',
    vr: 'FL',
    vm: 1,
    name: 'IOLPowerForExactEmmetropia'
  },
  x00221122: {
    tag: '(0022,1122)',
    vr: 'FL',
    vm: 1,
    name: 'IOLPowerForExactTargetRefraction'
  },
  x00221125: {
    tag: '(0022,1125)',
    vr: 'SQ',
    vm: 1,
    name: 'AnteriorChamberDepthDefinitionCodeSequence'
  },
  x00221130: {
    tag: '(0022,1130)',
    vr: 'FL',
    vm: 1,
    name: 'LensThickness'
  },
  x00221131: {
    tag: '(0022,1131)',
    vr: 'FL',
    vm: 1,
    name: 'AnteriorChamberDepth'
  },
  x00221132: {
    tag: '(0022,1132)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceOfLensThicknessDataCodeSequence'
  },
  x00221133: {
    tag: '(0022,1133)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceOfAnteriorChamberDepthDataCodeSequence'
  },
  x00221135: {
    tag: '(0022,1135)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceOfRefractiveErrorDataCodeSequence'
  },
  x00221140: {
    tag: '(0022,1140)',
    vr: 'CS',
    vm: 1,
    name: 'OphthalmicAxialLengthMeasurementModified'
  },
  x00221150: {
    tag: '(0022,1150)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialLengthDataSourceCodeSequence'
  },
  x00221153: {
    tag: '(0022,1153)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'
  },
  x00221155: {
    tag: '(0022,1155)',
    vr: 'FL',
    vm: 1,
    name: 'SignalToNoiseRatio'
  },
  x00221159: {
    tag: '(0022,1159)',
    vr: 'LO',
    vm: 1,
    name: 'OphthalmicAxialLengthDataSourceDescription'
  },
  x00221210: {
    tag: '(0022,1210)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'
  },
  x00221211: {
    tag: '(0022,1211)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'
  },
  x00221212: {
    tag: '(0022,1212)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'
  },
  x00221220: {
    tag: '(0022,1220)',
    vr: 'SQ',
    vm: 1,
    name: 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'
  },
  x00221225: {
    tag: '(0022,1225)',
    vr: 'SQ',
    vm: 1,
    name: 'OpticalOphthalmicAxialLengthMeasurementsSequence'
  },
  x00221230: {
    tag: '(0022,1230)',
    vr: 'SQ',
    vm: 1,
    name: 'UltrasoundSelectedOphthalmicAxialLengthSequence'
  },
  x00221250: {
    tag: '(0022,1250)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialLengthSelectionMethodCodeSequence'
  },
  x00221255: {
    tag: '(0022,1255)',
    vr: 'SQ',
    vm: 1,
    name: 'OpticalSelectedOphthalmicAxialLengthSequence'
  },
  x00221257: {
    tag: '(0022,1257)',
    vr: 'SQ',
    vm: 1,
    name: 'SelectedSegmentalOphthalmicAxialLengthSequence'
  },
  x00221260: {
    tag: '(0022,1260)',
    vr: 'SQ',
    vm: 1,
    name: 'SelectedTotalOphthalmicAxialLengthSequence'
  },
  x00221262: {
    tag: '(0022,1262)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicAxialLengthQualityMetricSequence'
  },
  x00221273: {
    tag: '(0022,1273)',
    vr: 'LO',
    vm: 1,
    name: 'OphthalmicAxialLengthQualityMetricTypeDescription'
  },
  x00221300: {
    tag: '(0022,1300)',
    vr: 'SQ',
    vm: 1,
    name: 'IntraocularLensCalculationsRightEyeSequence'
  },
  x00221310: {
    tag: '(0022,1310)',
    vr: 'SQ',
    vm: 1,
    name: 'IntraocularLensCalculationsLeftEyeSequence'
  },
  x00221330: {
    tag: '(0022,1330)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'
  },
  x00240010: {
    tag: '(0024,0010)',
    vr: 'FL',
    vm: 1,
    name: 'VisualFieldHorizontalExtent'
  },
  x00240011: {
    tag: '(0024,0011)',
    vr: 'FL',
    vm: 1,
    name: 'VisualFieldVerticalExtent'
  },
  x00240012: {
    tag: '(0024,0012)',
    vr: 'CS',
    vm: 1,
    name: 'VisualFieldShape'
  },
  x00240016: {
    tag: '(0024,0016)',
    vr: 'SQ',
    vm: 1,
    name: 'ScreeningTestModeCodeSequence'
  },
  x00240018: {
    tag: '(0024,0018)',
    vr: 'FL',
    vm: 1,
    name: 'MaximumStimulusLuminance'
  },
  x00240020: {
    tag: '(0024,0020)',
    vr: 'FL',
    vm: 1,
    name: 'BackgroundLuminance'
  },
  x00240021: {
    tag: '(0024,0021)',
    vr: 'SQ',
    vm: 1,
    name: 'StimulusColorCodeSequence'
  },
  x00240024: {
    tag: '(0024,0024)',
    vr: 'SQ',
    vm: 1,
    name: 'BackgroundIlluminationColorCodeSequence'
  },
  x00240025: {
    tag: '(0024,0025)',
    vr: 'FL',
    vm: 1,
    name: 'StimulusArea'
  },
  x00240028: {
    tag: '(0024,0028)',
    vr: 'FL',
    vm: 1,
    name: 'StimulusPresentationTime'
  },
  x00240032: {
    tag: '(0024,0032)',
    vr: 'SQ',
    vm: 1,
    name: 'FixationSequence'
  },
  x00240033: {
    tag: '(0024,0033)',
    vr: 'SQ',
    vm: 1,
    name: 'FixationMonitoringCodeSequence'
  },
  x00240034: {
    tag: '(0024,0034)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualFieldCatchTrialSequence'
  },
  x00240035: {
    tag: '(0024,0035)',
    vr: 'US',
    vm: 1,
    name: 'FixationCheckedQuantity'
  },
  x00240036: {
    tag: '(0024,0036)',
    vr: 'US',
    vm: 1,
    name: 'PatientNotProperlyFixatedQuantity'
  },
  x00240037: {
    tag: '(0024,0037)',
    vr: 'CS',
    vm: 1,
    name: 'PresentedVisualStimuliDataFlag'
  },
  x00240038: {
    tag: '(0024,0038)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfVisualStimuli'
  },
  x00240039: {
    tag: '(0024,0039)',
    vr: 'CS',
    vm: 1,
    name: 'ExcessiveFixationLossesDataFlag'
  },
  x00240040: {
    tag: '(0024,0040)',
    vr: 'CS',
    vm: 1,
    name: 'ExcessiveFixationLosses'
  },
  x00240042: {
    tag: '(0024,0042)',
    vr: 'US',
    vm: 1,
    name: 'StimuliRetestingQuantity'
  },
  x00240044: {
    tag: '(0024,0044)',
    vr: 'LT',
    vm: 1,
    name: 'CommentsOnPatientPerformanceOfVisualField'
  },
  x00240045: {
    tag: '(0024,0045)',
    vr: 'CS',
    vm: 1,
    name: 'FalseNegativesEstimateFlag'
  },
  x00240046: {
    tag: '(0024,0046)',
    vr: 'FL',
    vm: 1,
    name: 'FalseNegativesEstimate'
  },
  x00240048: {
    tag: '(0024,0048)',
    vr: 'US',
    vm: 1,
    name: 'NegativeCatchTrialsQuantity'
  },
  x00240050: {
    tag: '(0024,0050)',
    vr: 'US',
    vm: 1,
    name: 'FalseNegativesQuantity'
  },
  x00240051: {
    tag: '(0024,0051)',
    vr: 'CS',
    vm: 1,
    name: 'ExcessiveFalseNegativesDataFlag'
  },
  x00240052: {
    tag: '(0024,0052)',
    vr: 'CS',
    vm: 1,
    name: 'ExcessiveFalseNegatives'
  },
  x00240053: {
    tag: '(0024,0053)',
    vr: 'CS',
    vm: 1,
    name: 'FalsePositivesEstimateFlag'
  },
  x00240054: {
    tag: '(0024,0054)',
    vr: 'FL',
    vm: 1,
    name: 'FalsePositivesEstimate'
  },
  x00240055: {
    tag: '(0024,0055)',
    vr: 'CS',
    vm: 1,
    name: 'CatchTrialsDataFlag'
  },
  x00240056: {
    tag: '(0024,0056)',
    vr: 'US',
    vm: 1,
    name: 'PositiveCatchTrialsQuantity'
  },
  x00240057: {
    tag: '(0024,0057)',
    vr: 'CS',
    vm: 1,
    name: 'TestPointNormalsDataFlag'
  },
  x00240058: {
    tag: '(0024,0058)',
    vr: 'SQ',
    vm: 1,
    name: 'TestPointNormalsSequence'
  },
  x00240059: {
    tag: '(0024,0059)',
    vr: 'CS',
    vm: 1,
    name: 'GlobalDeviationProbabilityNormalsFlag'
  },
  x00240060: {
    tag: '(0024,0060)',
    vr: 'US',
    vm: 1,
    name: 'FalsePositivesQuantity'
  },
  x00240061: {
    tag: '(0024,0061)',
    vr: 'CS',
    vm: 1,
    name: 'ExcessiveFalsePositivesDataFlag'
  },
  x00240062: {
    tag: '(0024,0062)',
    vr: 'CS',
    vm: 1,
    name: 'ExcessiveFalsePositives'
  },
  x00240063: {
    tag: '(0024,0063)',
    vr: 'CS',
    vm: 1,
    name: 'VisualFieldTestNormalsFlag'
  },
  x00240064: {
    tag: '(0024,0064)',
    vr: 'SQ',
    vm: 1,
    name: 'ResultsNormalsSequence'
  },
  x00240065: {
    tag: '(0024,0065)',
    vr: 'SQ',
    vm: 1,
    name: 'AgeCorrectedSensitivityDeviationAlgorithmSequence'
  },
  x00240066: {
    tag: '(0024,0066)',
    vr: 'FL',
    vm: 1,
    name: 'GlobalDeviationFromNormal'
  },
  x00240067: {
    tag: '(0024,0067)',
    vr: 'SQ',
    vm: 1,
    name: 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'
  },
  x00240068: {
    tag: '(0024,0068)',
    vr: 'FL',
    vm: 1,
    name: 'LocalizedDeviationfromNormal'
  },
  x00240069: {
    tag: '(0024,0069)',
    vr: 'LO',
    vm: 1,
    name: 'PatientReliabilityIndicator'
  },
  x00240070: {
    tag: '(0024,0070)',
    vr: 'FL',
    vm: 1,
    name: 'VisualFieldMeanSensitivity'
  },
  x00240071: {
    tag: '(0024,0071)',
    vr: 'FL',
    vm: 1,
    name: 'GlobalDeviationProbability'
  },
  x00240072: {
    tag: '(0024,0072)',
    vr: 'CS',
    vm: 1,
    name: 'LocalDeviationProbabilityNormalsFlag'
  },
  x00240073: {
    tag: '(0024,0073)',
    vr: 'FL',
    vm: 1,
    name: 'LocalizedDeviationProbability'
  },
  x00240074: {
    tag: '(0024,0074)',
    vr: 'CS',
    vm: 1,
    name: 'ShortTermFluctuationCalculated'
  },
  x00240075: {
    tag: '(0024,0075)',
    vr: 'FL',
    vm: 1,
    name: 'ShortTermFluctuation'
  },
  x00240076: {
    tag: '(0024,0076)',
    vr: 'CS',
    vm: 1,
    name: 'ShortTermFluctuationProbabilityCalculated'
  },
  x00240077: {
    tag: '(0024,0077)',
    vr: 'FL',
    vm: 1,
    name: 'ShortTermFluctuationProbability'
  },
  x00240078: {
    tag: '(0024,0078)',
    vr: 'CS',
    vm: 1,
    name: 'CorrectedLocalizedDeviationFromNormalCalculated'
  },
  x00240079: {
    tag: '(0024,0079)',
    vr: 'FL',
    vm: 1,
    name: 'CorrectedLocalizedDeviationFromNormal'
  },
  x00240080: {
    tag: '(0024,0080)',
    vr: 'CS',
    vm: 1,
    name: 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'
  },
  x00240081: {
    tag: '(0024,0081)',
    vr: 'FL',
    vm: 1,
    name: 'CorrectedLocalizedDeviationFromNormalProbability'
  },
  x00240083: {
    tag: '(0024,0083)',
    vr: 'SQ',
    vm: 1,
    name: 'GlobalDeviationProbabilitySequence'
  },
  x00240085: {
    tag: '(0024,0085)',
    vr: 'SQ',
    vm: 1,
    name: 'LocalizedDeviationProbabilitySequence'
  },
  x00240086: {
    tag: '(0024,0086)',
    vr: 'CS',
    vm: 1,
    name: 'FovealSensitivityMeasured'
  },
  x00240087: {
    tag: '(0024,0087)',
    vr: 'FL',
    vm: 1,
    name: 'FovealSensitivity'
  },
  x00240088: {
    tag: '(0024,0088)',
    vr: 'FL',
    vm: 1,
    name: 'VisualFieldTestDuration'
  },
  x00240089: {
    tag: '(0024,0089)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualFieldTestPointSequence'
  },
  x00240090: {
    tag: '(0024,0090)',
    vr: 'FL',
    vm: 1,
    name: 'VisualFieldTestPointXCoordinate'
  },
  x00240091: {
    tag: '(0024,0091)',
    vr: 'FL',
    vm: 1,
    name: 'VisualFieldTestPointYCoordinate'
  },
  x00240092: {
    tag: '(0024,0092)',
    vr: 'FL',
    vm: 1,
    name: 'AgeCorrectedSensitivityDeviationValue'
  },
  x00240093: {
    tag: '(0024,0093)',
    vr: 'CS',
    vm: 1,
    name: 'StimulusResults'
  },
  x00240094: {
    tag: '(0024,0094)',
    vr: 'FL',
    vm: 1,
    name: 'SensitivityValue'
  },
  x00240095: {
    tag: '(0024,0095)',
    vr: 'CS',
    vm: 1,
    name: 'RetestStimulusSeen'
  },
  x00240096: {
    tag: '(0024,0096)',
    vr: 'FL',
    vm: 1,
    name: 'RetestSensitivityValue'
  },
  x00240097: {
    tag: '(0024,0097)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualFieldTestPointNormalsSequence'
  },
  x00240098: {
    tag: '(0024,0098)',
    vr: 'FL',
    vm: 1,
    name: 'QuantifiedDefect'
  },
  x00240100: {
    tag: '(0024,0100)',
    vr: 'FL',
    vm: 1,
    name: 'AgeCorrectedSensitivityDeviationProbabilityValue'
  },
  x00240102: {
    tag: '(0024,0102)',
    vr: 'CS',
    vm: 1,
    name: 'GeneralizedDefectCorrectedSensitivityDeviationFlag '
  },
  x00240103: {
    tag: '(0024,0103)',
    vr: 'FL',
    vm: 1,
    name: 'GeneralizedDefectCorrectedSensitivityDeviationValue '
  },
  x00240104: {
    tag: '(0024,0104)',
    vr: 'FL',
    vm: 1,
    name: 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'
  },
  x00240105: {
    tag: '(0024,0105)',
    vr: 'FL',
    vm: 1,
    name: 'MinimumSensitivityValue'
  },
  x00240106: {
    tag: '(0024,0106)',
    vr: 'CS',
    vm: 1,
    name: 'BlindSpotLocalized'
  },
  x00240107: {
    tag: '(0024,0107)',
    vr: 'FL',
    vm: 1,
    name: 'BlindSpotXCoordinate'
  },
  x00240108: {
    tag: '(0024,0108)',
    vr: 'FL',
    vm: 1,
    name: 'BlindSpotYCoordinate '
  },
  x00240110: {
    tag: '(0024,0110)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualAcuityMeasurementSequence'
  },
  x00240112: {
    tag: '(0024,0112)',
    vr: 'SQ',
    vm: 1,
    name: 'RefractiveParametersUsedOnPatientSequence'
  },
  x00240113: {
    tag: '(0024,0113)',
    vr: 'CS',
    vm: 1,
    name: 'MeasurementLaterality'
  },
  x00240114: {
    tag: '(0024,0114)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicPatientClinicalInformationLeftEyeSequence'
  },
  x00240115: {
    tag: '(0024,0115)',
    vr: 'SQ',
    vm: 1,
    name: 'OphthalmicPatientClinicalInformationRightEyeSequence'
  },
  x00240117: {
    tag: '(0024,0117)',
    vr: 'CS',
    vm: 1,
    name: 'FovealPointNormativeDataFlag'
  },
  x00240118: {
    tag: '(0024,0118)',
    vr: 'FL',
    vm: 1,
    name: 'FovealPointProbabilityValue'
  },
  x00240120: {
    tag: '(0024,0120)',
    vr: 'CS',
    vm: 1,
    name: 'ScreeningBaselineMeasured'
  },
  x00240122: {
    tag: '(0024,0122)',
    vr: 'SQ',
    vm: 1,
    name: 'ScreeningBaselineMeasuredSequence'
  },
  x00240124: {
    tag: '(0024,0124)',
    vr: 'CS',
    vm: 1,
    name: 'ScreeningBaselineType'
  },
  x00240126: {
    tag: '(0024,0126)',
    vr: 'FL',
    vm: 1,
    name: 'ScreeningBaselineValue'
  },
  x00240202: {
    tag: '(0024,0202)',
    vr: 'LO',
    vm: 1,
    name: 'AlgorithmSource'
  },
  x00240306: {
    tag: '(0024,0306)',
    vr: 'LO',
    vm: 1,
    name: 'DataSetName'
  },
  x00240307: {
    tag: '(0024,0307)',
    vr: 'LO',
    vm: 1,
    name: 'DataSetVersion'
  },
  x00240308: {
    tag: '(0024,0308)',
    vr: 'LO',
    vm: 1,
    name: 'DataSetSource'
  },
  x00240309: {
    tag: '(0024,0309)',
    vr: 'LO',
    vm: 1,
    name: 'DataSetDescription'
  },
  x00240317: {
    tag: '(0024,0317)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualFieldTestReliabilityGlobalIndexSequence'
  },
  x00240320: {
    tag: '(0024,0320)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualFieldGlobalResultsIndexSequence'
  },
  x00240325: {
    tag: '(0024,0325)',
    vr: 'SQ',
    vm: 1,
    name: 'DataObservationSequence'
  },
  x00240338: {
    tag: '(0024,0338)',
    vr: 'CS',
    vm: 1,
    name: 'IndexNormalsFlag'
  },
  x00240341: {
    tag: '(0024,0341)',
    vr: 'FL',
    vm: 1,
    name: 'IndexProbability'
  },
  x00240344: {
    tag: '(0024,0344)',
    vr: 'SQ',
    vm: 1,
    name: 'IndexProbabilitySequence'
  },
  x00280002: {
    tag: '(0028,0002)',
    vr: 'US',
    vm: 1,
    name: 'SamplesPerPixel'
  },
  x00280003: {
    tag: '(0028,0003)',
    vr: 'US',
    vm: 1,
    name: 'SamplesPerPixelUsed'
  },
  x00280004: {
    tag: '(0028,0004)',
    vr: 'CS',
    vm: 1,
    name: 'PhotometricInterpretation'
  },
  x00280005: {
    tag: '(0028,0005)',
    vr: 'US',
    vm: 1,
    name: 'ImageDimensions'
  },
  x00280006: {
    tag: '(0028,0006)',
    vr: 'US',
    vm: 1,
    name: 'PlanarConfiguration'
  },
  x00280008: {
    tag: '(0028,0008)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfFrames'
  },
  x00280009: {
    tag: '(0028,0009)',
    vr: 'AT',
    vm: '1-n',
    name: 'FrameIncrementPointer'
  },
  x0028000a: {
    tag: '(0028,000A)',
    vr: 'AT',
    vm: '1-n',
    name: 'FrameDimensionPointer'
  },
  x00280010: {
    tag: '(0028,0010)',
    vr: 'US',
    vm: 1,
    name: 'Rows'
  },
  x00280011: {
    tag: '(0028,0011)',
    vr: 'US',
    vm: 1,
    name: 'Columns'
  },
  x00280012: {
    tag: '(0028,0012)',
    vr: 'US',
    vm: 1,
    name: 'Planes'
  },
  x00280014: {
    tag: '(0028,0014)',
    vr: 'US',
    vm: 1,
    name: 'UltrasoundColorDataPresent'
  },
  x00280030: {
    tag: '(0028,0030)',
    vr: 'DS',
    vm: 2,
    name: 'PixelSpacing'
  },
  x00280031: {
    tag: '(0028,0031)',
    vr: 'DS',
    vm: 2,
    name: 'ZoomFactor'
  },
  x00280032: {
    tag: '(0028,0032)',
    vr: 'DS',
    vm: 2,
    name: 'ZoomCenter'
  },
  x00280034: {
    tag: '(0028,0034)',
    vr: 'IS',
    vm: 2,
    name: 'PixelAspectRatio'
  },
  x00280040: {
    tag: '(0028,0040)',
    vr: 'CS',
    vm: 1,
    name: 'ImageFormat'
  },
  x00280050: {
    tag: '(0028,0050)',
    vr: 'LO',
    vm: '1-n',
    name: 'ManipulatedImage'
  },
  x00280051: {
    tag: '(0028,0051)',
    vr: 'CS',
    vm: '1-n',
    name: 'CorrectedImage'
  },
  x0028005f: {
    tag: '(0028,005F)',
    vr: 'LO',
    vm: 1,
    name: 'CompressionRecognitionCode'
  },
  x00280060: {
    tag: '(0028,0060)',
    vr: 'CS',
    vm: 1,
    name: 'CompressionCode'
  },
  x00280061: {
    tag: '(0028,0061)',
    vr: 'SH',
    vm: 1,
    name: 'CompressionOriginator'
  },
  x00280062: {
    tag: '(0028,0062)',
    vr: 'LO',
    vm: 1,
    name: 'CompressionLabel'
  },
  x00280063: {
    tag: '(0028,0063)',
    vr: 'SH',
    vm: 1,
    name: 'CompressionDescription'
  },
  x00280065: {
    tag: '(0028,0065)',
    vr: 'CS',
    vm: '1-n',
    name: 'CompressionSequence'
  },
  x00280066: {
    tag: '(0028,0066)',
    vr: 'AT',
    vm: '1-n',
    name: 'CompressionStepPointers'
  },
  x00280068: {
    tag: '(0028,0068)',
    vr: 'US',
    vm: 1,
    name: 'RepeatInterval'
  },
  x00280069: {
    tag: '(0028,0069)',
    vr: 'US',
    vm: 1,
    name: 'BitsGrouped'
  },
  x00280070: {
    tag: '(0028,0070)',
    vr: 'US',
    vm: '1-n',
    name: 'PerimeterTable'
  },
  x00280071: {
    tag: '(0028,0071)',
    vr: 'US|SS',
    vm: 1,
    name: 'PerimeterValue'
  },
  x00280080: {
    tag: '(0028,0080)',
    vr: 'US',
    vm: 1,
    name: 'PredictorRows'
  },
  x00280081: {
    tag: '(0028,0081)',
    vr: 'US',
    vm: 1,
    name: 'PredictorColumns'
  },
  x00280082: {
    tag: '(0028,0082)',
    vr: 'US',
    vm: '1-n',
    name: 'PredictorConstants'
  },
  x00280090: {
    tag: '(0028,0090)',
    vr: 'CS',
    vm: 1,
    name: 'BlockedPixels'
  },
  x00280091: {
    tag: '(0028,0091)',
    vr: 'US',
    vm: 1,
    name: 'BlockRows'
  },
  x00280092: {
    tag: '(0028,0092)',
    vr: 'US',
    vm: 1,
    name: 'BlockColumns'
  },
  x00280093: {
    tag: '(0028,0093)',
    vr: 'US',
    vm: 1,
    name: 'RowOverlap'
  },
  x00280094: {
    tag: '(0028,0094)',
    vr: 'US',
    vm: 1,
    name: 'ColumnOverlap'
  },
  x00280100: {
    tag: '(0028,0100)',
    vr: 'US',
    vm: 1,
    name: 'BitsAllocated'
  },
  x00280101: {
    tag: '(0028,0101)',
    vr: 'US',
    vm: 1,
    name: 'BitsStored'
  },
  x00280102: {
    tag: '(0028,0102)',
    vr: 'US',
    vm: 1,
    name: 'HighBit'
  },
  x00280103: {
    tag: '(0028,0103)',
    vr: 'US',
    vm: 1,
    name: 'PixelRepresentation'
  },
  x00280104: {
    tag: '(0028,0104)',
    vr: 'US|SS',
    vm: 1,
    name: 'SmallestValidPixelValue'
  },
  x00280105: {
    tag: '(0028,0105)',
    vr: 'US|SS',
    vm: 1,
    name: 'LargestValidPixelValue'
  },
  x00280106: {
    tag: '(0028,0106)',
    vr: 'US|SS',
    vm: 1,
    name: 'SmallestImagePixelValue'
  },
  x00280107: {
    tag: '(0028,0107)',
    vr: 'US|SS',
    vm: 1,
    name: 'LargestImagePixelValue'
  },
  x00280108: {
    tag: '(0028,0108)',
    vr: 'US|SS',
    vm: 1,
    name: 'SmallestPixelValueInSeries'
  },
  x00280109: {
    tag: '(0028,0109)',
    vr: 'US|SS',
    vm: 1,
    name: 'LargestPixelValueInSeries'
  },
  x00280110: {
    tag: '(0028,0110)',
    vr: 'US|SS',
    vm: 1,
    name: 'SmallestImagePixelValueInPlane'
  },
  x00280111: {
    tag: '(0028,0111)',
    vr: 'US|SS',
    vm: 1,
    name: 'LargestImagePixelValueInPlane'
  },
  x00280120: {
    tag: '(0028,0120)',
    vr: 'US|SS',
    vm: 1,
    name: 'PixelPaddingValue'
  },
  x00280121: {
    tag: '(0028,0121)',
    vr: 'US|SS',
    vm: 1,
    name: 'PixelPaddingRangeLimit'
  },
  x00280200: {
    tag: '(0028,0200)',
    vr: 'US',
    vm: 1,
    name: 'ImageLocation'
  },
  x00280300: {
    tag: '(0028,0300)',
    vr: 'CS',
    vm: 1,
    name: 'QualityControlImage'
  },
  x00280301: {
    tag: '(0028,0301)',
    vr: 'CS',
    vm: 1,
    name: 'BurnedInAnnotation'
  },
  x00280302: {
    tag: '(0028,0302)',
    vr: 'CS',
    vm: 1,
    name: 'RecognizableVisualFeatures'
  },
  x00280303: {
    tag: '(0028,0303)',
    vr: 'CS',
    vm: 1,
    name: 'LongitudinalTemporalInformationModified'
  },
  x00280400: {
    tag: '(0028,0400)',
    vr: 'LO',
    vm: 1,
    name: 'TransformLabel'
  },
  x00280401: {
    tag: '(0028,0401)',
    vr: 'LO',
    vm: 1,
    name: 'TransformVersionNumber'
  },
  x00280402: {
    tag: '(0028,0402)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfTransformSteps'
  },
  x00280403: {
    tag: '(0028,0403)',
    vr: 'LO',
    vm: '1-n',
    name: 'SequenceOfCompressedData'
  },
  x00280404: {
    tag: '(0028,0404)',
    vr: 'AT',
    vm: '1-n',
    name: 'DetailsOfCoefficients'
  },
  x002804x0: {
    tag: '(0028,04x0)',
    vr: 'US',
    vm: 1,
    name: 'RowsForNthOrderCoefficients'
  },
  x002804x1: {
    tag: '(0028,04x1)',
    vr: 'US',
    vm: 1,
    name: 'ColumnsForNthOrderCoefficients'
  },
  x002804x2: {
    tag: '(0028,04x2)',
    vr: 'LO',
    vm: '1-n',
    name: 'CoefficientCoding'
  },
  x002804x3: {
    tag: '(0028,04x3)',
    vr: 'AT',
    vm: '1-n',
    name: 'CoefficientCodingPointers'
  },
  x00280700: {
    tag: '(0028,0700)',
    vr: 'LO',
    vm: 1,
    name: 'DCTLabel'
  },
  x00280701: {
    tag: '(0028,0701)',
    vr: 'CS',
    vm: '1-n',
    name: 'DataBlockDescription'
  },
  x00280702: {
    tag: '(0028,0702)',
    vr: 'AT',
    vm: '1-n',
    name: 'DataBlock'
  },
  x00280710: {
    tag: '(0028,0710)',
    vr: 'US',
    vm: 1,
    name: 'NormalizationFactorFormat'
  },
  x00280720: {
    tag: '(0028,0720)',
    vr: 'US',
    vm: 1,
    name: 'ZonalMapNumberFormat'
  },
  x00280721: {
    tag: '(0028,0721)',
    vr: 'AT',
    vm: '1-n',
    name: 'ZonalMapLocation'
  },
  x00280722: {
    tag: '(0028,0722)',
    vr: 'US',
    vm: 1,
    name: 'ZonalMapFormat'
  },
  x00280730: {
    tag: '(0028,0730)',
    vr: 'US',
    vm: 1,
    name: 'AdaptiveMapFormat'
  },
  x00280740: {
    tag: '(0028,0740)',
    vr: 'US',
    vm: 1,
    name: 'CodeNumberFormat'
  },
  x002808x0: {
    tag: '(0028,08x0)',
    vr: 'CS',
    vm: '1-n',
    name: 'CodeLabel'
  },
  x002808x2: {
    tag: '(0028,08x2)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfTables'
  },
  x002808x3: {
    tag: '(0028,08x3)',
    vr: 'AT',
    vm: '1-n',
    name: 'CodeTableLocation'
  },
  x002808x4: {
    tag: '(0028,08x4)',
    vr: 'US',
    vm: 1,
    name: 'BitsForCodeWord'
  },
  x002808x8: {
    tag: '(0028,08x8)',
    vr: 'AT',
    vm: '1-n',
    name: 'ImageDataLocation'
  },
  x00280a02: {
    tag: '(0028,0A02)',
    vr: 'CS',
    vm: 1,
    name: 'PixelSpacingCalibrationType'
  },
  x00280a04: {
    tag: '(0028,0A04)',
    vr: 'LO',
    vm: 1,
    name: 'PixelSpacingCalibrationDescription'
  },
  x00281040: {
    tag: '(0028,1040)',
    vr: 'CS',
    vm: 1,
    name: 'PixelIntensityRelationship'
  },
  x00281041: {
    tag: '(0028,1041)',
    vr: 'SS',
    vm: 1,
    name: 'PixelIntensityRelationshipSign'
  },
  x00281050: {
    tag: '(0028,1050)',
    vr: 'DS',
    vm: '1-n',
    name: 'WindowCenter'
  },
  x00281051: {
    tag: '(0028,1051)',
    vr: 'DS',
    vm: '1-n',
    name: 'WindowWidth'
  },
  x00281052: {
    tag: '(0028,1052)',
    vr: 'DS',
    vm: 1,
    name: 'RescaleIntercept'
  },
  x00281053: {
    tag: '(0028,1053)',
    vr: 'DS',
    vm: 1,
    name: 'RescaleSlope'
  },
  x00281054: {
    tag: '(0028,1054)',
    vr: 'LO',
    vm: 1,
    name: 'RescaleType'
  },
  x00281055: {
    tag: '(0028,1055)',
    vr: 'LO',
    vm: '1-n',
    name: 'WindowCenterWidthExplanation'
  },
  x00281056: {
    tag: '(0028,1056)',
    vr: 'CS',
    vm: 1,
    name: 'VOILUTFunction'
  },
  x00281080: {
    tag: '(0028,1080)',
    vr: 'CS',
    vm: 1,
    name: 'GrayScale'
  },
  x00281090: {
    tag: '(0028,1090)',
    vr: 'CS',
    vm: 1,
    name: 'RecommendedViewingMode'
  },
  x00281100: {
    tag: '(0028,1100)',
    vr: 'US|SS',
    vm: 3,
    name: 'GrayLookupTableDescriptor'
  },
  x00281101: {
    tag: '(0028,1101)',
    vr: 'US|SS',
    vm: 3,
    name: 'RedPaletteColorLookupTableDescriptor'
  },
  x00281102: {
    tag: '(0028,1102)',
    vr: 'US|SS',
    vm: 3,
    name: 'GreenPaletteColorLookupTableDescriptor'
  },
  x00281103: {
    tag: '(0028,1103)',
    vr: 'US|SS',
    vm: 3,
    name: 'BluePaletteColorLookupTableDescriptor'
  },
  x00281104: {
    tag: '(0028,1104)',
    vr: 'US',
    vm: 3,
    name: 'AlphaPaletteColorLookupTableDescriptor'
  },
  x00281111: {
    tag: '(0028,1111)',
    vr: 'US|SS',
    vm: 4,
    name: 'LargeRedPaletteColorLookupTableDescriptor'
  },
  x00281112: {
    tag: '(0028,1112)',
    vr: 'US|SS',
    vm: 4,
    name: 'LargeGreenPaletteColorLookupTableDescriptor'
  },
  x00281113: {
    tag: '(0028,1113)',
    vr: 'US|SS',
    vm: 4,
    name: 'LargeBluePaletteColorLookupTableDescriptor'
  },
  x00281199: {
    tag: '(0028,1199)',
    vr: 'UI',
    vm: 1,
    name: 'PaletteColorLookupTableUID'
  },
  x00281200: {
    tag: '(0028,1200)',
    vr: 'US|SS|OW',
    vm: '1-n1',
    name: 'GrayLookupTableData'
  },
  x00281201: {
    tag: '(0028,1201)',
    vr: 'OW',
    vm: 1,
    name: 'RedPaletteColorLookupTableData'
  },
  x00281202: {
    tag: '(0028,1202)',
    vr: 'OW',
    vm: 1,
    name: 'GreenPaletteColorLookupTableData'
  },
  x00281203: {
    tag: '(0028,1203)',
    vr: 'OW',
    vm: 1,
    name: 'BluePaletteColorLookupTableData'
  },
  x00281204: {
    tag: '(0028,1204)',
    vr: 'OW',
    vm: 1,
    name: 'AlphaPaletteColorLookupTableData'
  },
  x00281211: {
    tag: '(0028,1211)',
    vr: 'OW',
    vm: 1,
    name: 'LargeRedPaletteColorLookupTableData'
  },
  x00281212: {
    tag: '(0028,1212)',
    vr: 'OW',
    vm: 1,
    name: 'LargeGreenPaletteColorLookupTableData'
  },
  x00281213: {
    tag: '(0028,1213)',
    vr: 'OW',
    vm: 1,
    name: 'LargeBluePaletteColorLookupTableData'
  },
  x00281214: {
    tag: '(0028,1214)',
    vr: 'UI',
    vm: 1,
    name: 'LargePaletteColorLookupTableUID'
  },
  x00281221: {
    tag: '(0028,1221)',
    vr: 'OW',
    vm: 1,
    name: 'SegmentedRedPaletteColorLookupTableData'
  },
  x00281222: {
    tag: '(0028,1222)',
    vr: 'OW',
    vm: 1,
    name: 'SegmentedGreenPaletteColorLookupTableData'
  },
  x00281223: {
    tag: '(0028,1223)',
    vr: 'OW',
    vm: 1,
    name: 'SegmentedBluePaletteColorLookupTableData'
  },
  x00281300: {
    tag: '(0028,1300)',
    vr: 'CS',
    vm: 1,
    name: 'BreastImplantPresent'
  },
  x00281350: {
    tag: '(0028,1350)',
    vr: 'CS',
    vm: 1,
    name: 'PartialView'
  },
  x00281351: {
    tag: '(0028,1351)',
    vr: 'ST',
    vm: 1,
    name: 'PartialViewDescription'
  },
  x00281352: {
    tag: '(0028,1352)',
    vr: 'SQ',
    vm: 1,
    name: 'PartialViewCodeSequence'
  },
  x0028135a: {
    tag: '(0028,135A)',
    vr: 'CS',
    vm: 1,
    name: 'SpatialLocationsPreserved'
  },
  x00281401: {
    tag: '(0028,1401)',
    vr: 'SQ',
    vm: 1,
    name: 'DataFrameAssignmentSequence'
  },
  x00281402: {
    tag: '(0028,1402)',
    vr: 'CS',
    vm: 1,
    name: 'DataPathAssignment'
  },
  x00281403: {
    tag: '(0028,1403)',
    vr: 'US',
    vm: 1,
    name: 'BitsMappedToColorLookupTable'
  },
  x00281404: {
    tag: '(0028,1404)',
    vr: 'SQ',
    vm: 1,
    name: 'BlendingLUT1Sequence'
  },
  x00281405: {
    tag: '(0028,1405)',
    vr: 'CS',
    vm: 1,
    name: 'BlendingLUT1TransferFunction'
  },
  x00281406: {
    tag: '(0028,1406)',
    vr: 'FD',
    vm: 1,
    name: 'BlendingWeightConstant'
  },
  x00281407: {
    tag: '(0028,1407)',
    vr: 'US',
    vm: 3,
    name: 'BlendingLookupTableDescriptor'
  },
  x00281408: {
    tag: '(0028,1408)',
    vr: 'OW',
    vm: 1,
    name: 'BlendingLookupTableData'
  },
  x0028140b: {
    tag: '(0028,140B)',
    vr: 'SQ',
    vm: 1,
    name: 'EnhancedPaletteColorLookupTableSequence'
  },
  x0028140c: {
    tag: '(0028,140C)',
    vr: 'SQ',
    vm: 1,
    name: 'BlendingLUT2Sequence'
  },
  x0028140d: {
    tag: '(0028,140D)',
    vr: 'CS',
    vm: 1,
    name: 'BlendingLUT2TransferFunction'
  },
  x0028140e: {
    tag: '(0028,140E)',
    vr: 'CS',
    vm: 1,
    name: 'DataPathID'
  },
  x0028140f: {
    tag: '(0028,140F)',
    vr: 'CS',
    vm: 1,
    name: 'RGBLUTTransferFunction'
  },
  x00281410: {
    tag: '(0028,1410)',
    vr: 'CS',
    vm: 1,
    name: 'AlphaLUTTransferFunction'
  },
  x00282000: {
    tag: '(0028,2000)',
    vr: 'OB',
    vm: 1,
    name: 'ICCProfile'
  },
  x00282110: {
    tag: '(0028,2110)',
    vr: 'CS',
    vm: 1,
    name: 'LossyImageCompression'
  },
  x00282112: {
    tag: '(0028,2112)',
    vr: 'DS',
    vm: '1-n',
    name: 'LossyImageCompressionRatio'
  },
  x00282114: {
    tag: '(0028,2114)',
    vr: 'CS',
    vm: '1-n',
    name: 'LossyImageCompressionMethod'
  },
  x00283000: {
    tag: '(0028,3000)',
    vr: 'SQ',
    vm: 1,
    name: 'ModalityLUTSequence'
  },
  x00283002: {
    tag: '(0028,3002)',
    vr: 'US|SS',
    vm: 3,
    name: 'LUTDescriptor'
  },
  x00283003: {
    tag: '(0028,3003)',
    vr: 'LO',
    vm: 1,
    name: 'LUTExplanation'
  },
  x00283004: {
    tag: '(0028,3004)',
    vr: 'LO',
    vm: 1,
    name: 'ModalityLUTType'
  },
  x00283006: {
    tag: '(0028,3006)',
    vr: 'US|OW',
    vm: '1-n1',
    name: 'LUTData'
  },
  x00283010: {
    tag: '(0028,3010)',
    vr: 'SQ',
    vm: 1,
    name: 'VOILUTSequence'
  },
  x00283110: {
    tag: '(0028,3110)',
    vr: 'SQ',
    vm: 1,
    name: 'SoftcopyVOILUTSequence'
  },
  x00284000: {
    tag: '(0028,4000)',
    vr: 'LT',
    vm: 1,
    name: 'ImagePresentationComments'
  },
  x00285000: {
    tag: '(0028,5000)',
    vr: 'SQ',
    vm: 1,
    name: 'BiPlaneAcquisitionSequence'
  },
  x00286010: {
    tag: '(0028,6010)',
    vr: 'US',
    vm: 1,
    name: 'RepresentativeFrameNumber'
  },
  x00286020: {
    tag: '(0028,6020)',
    vr: 'US',
    vm: '1-n',
    name: 'FrameNumbersOfInterest'
  },
  x00286022: {
    tag: '(0028,6022)',
    vr: 'LO',
    vm: '1-n',
    name: 'FrameOfInterestDescription'
  },
  x00286023: {
    tag: '(0028,6023)',
    vr: 'CS',
    vm: '1-n',
    name: 'FrameOfInterestType'
  },
  x00286030: {
    tag: '(0028,6030)',
    vr: 'US',
    vm: '1-n',
    name: 'MaskPointers'
  },
  x00286040: {
    tag: '(0028,6040)',
    vr: 'US',
    vm: '1-n',
    name: 'RWavePointer'
  },
  x00286100: {
    tag: '(0028,6100)',
    vr: 'SQ',
    vm: 1,
    name: 'MaskSubtractionSequence'
  },
  x00286101: {
    tag: '(0028,6101)',
    vr: 'CS',
    vm: 1,
    name: 'MaskOperation'
  },
  x00286102: {
    tag: '(0028,6102)',
    vr: 'US',
    vm: '2-2n',
    name: 'ApplicableFrameRange'
  },
  x00286110: {
    tag: '(0028,6110)',
    vr: 'US',
    vm: '1-n',
    name: 'MaskFrameNumbers'
  },
  x00286112: {
    tag: '(0028,6112)',
    vr: 'US',
    vm: 1,
    name: 'ContrastFrameAveraging'
  },
  x00286114: {
    tag: '(0028,6114)',
    vr: 'FL',
    vm: 2,
    name: 'MaskSubPixelShift'
  },
  x00286120: {
    tag: '(0028,6120)',
    vr: 'SS',
    vm: 1,
    name: 'TIDOffset'
  },
  x00286190: {
    tag: '(0028,6190)',
    vr: 'ST',
    vm: 1,
    name: 'MaskOperationExplanation'
  },
  x00287fe0: {
    tag: '(0028,7FE0)',
    vr: 'UT',
    vm: 1,
    name: 'PixelDataProviderURL'
  },
  x00289001: {
    tag: '(0028,9001)',
    vr: 'UL',
    vm: 1,
    name: 'DataPointRows'
  },
  x00289002: {
    tag: '(0028,9002)',
    vr: 'UL',
    vm: 1,
    name: 'DataPointColumns'
  },
  x00289003: {
    tag: '(0028,9003)',
    vr: 'CS',
    vm: 1,
    name: 'SignalDomainColumns'
  },
  x00289099: {
    tag: '(0028,9099)',
    vr: 'US',
    vm: 1,
    name: 'LargestMonochromePixelValue'
  },
  x00289108: {
    tag: '(0028,9108)',
    vr: 'CS',
    vm: 1,
    name: 'DataRepresentation'
  },
  x00289110: {
    tag: '(0028,9110)',
    vr: 'SQ',
    vm: 1,
    name: 'PixelMeasuresSequence'
  },
  x00289132: {
    tag: '(0028,9132)',
    vr: 'SQ',
    vm: 1,
    name: 'FrameVOILUTSequence'
  },
  x00289145: {
    tag: '(0028,9145)',
    vr: 'SQ',
    vm: 1,
    name: 'PixelValueTransformationSequence'
  },
  x00289235: {
    tag: '(0028,9235)',
    vr: 'CS',
    vm: 1,
    name: 'SignalDomainRows'
  },
  x00289411: {
    tag: '(0028,9411)',
    vr: 'FL',
    vm: 1,
    name: 'DisplayFilterPercentage'
  },
  x00289415: {
    tag: '(0028,9415)',
    vr: 'SQ',
    vm: 1,
    name: 'FramePixelShiftSequence'
  },
  x00289416: {
    tag: '(0028,9416)',
    vr: 'US',
    vm: 1,
    name: 'SubtractionItemID'
  },
  x00289422: {
    tag: '(0028,9422)',
    vr: 'SQ',
    vm: 1,
    name: 'PixelIntensityRelationshipLUTSequence'
  },
  x00289443: {
    tag: '(0028,9443)',
    vr: 'SQ',
    vm: 1,
    name: 'FramePixelDataPropertiesSequence'
  },
  x00289444: {
    tag: '(0028,9444)',
    vr: 'CS',
    vm: 1,
    name: 'GeometricalProperties'
  },
  x00289445: {
    tag: '(0028,9445)',
    vr: 'FL',
    vm: 1,
    name: 'GeometricMaximumDistortion'
  },
  x00289446: {
    tag: '(0028,9446)',
    vr: 'CS',
    vm: '1-n',
    name: 'ImageProcessingApplied'
  },
  x00289454: {
    tag: '(0028,9454)',
    vr: 'CS',
    vm: 1,
    name: 'MaskSelectionMode'
  },
  x00289474: {
    tag: '(0028,9474)',
    vr: 'CS',
    vm: 1,
    name: 'LUTFunction'
  },
  x00289478: {
    tag: '(0028,9478)',
    vr: 'FL',
    vm: 1,
    name: 'MaskVisibilityPercentage'
  },
  x00289501: {
    tag: '(0028,9501)',
    vr: 'SQ',
    vm: 1,
    name: 'PixelShiftSequence'
  },
  x00289502: {
    tag: '(0028,9502)',
    vr: 'SQ',
    vm: 1,
    name: 'RegionPixelShiftSequence'
  },
  x00289503: {
    tag: '(0028,9503)',
    vr: 'SS',
    vm: '2-2n',
    name: 'VerticesOfTheRegion'
  },
  x00289505: {
    tag: '(0028,9505)',
    vr: 'SQ',
    vm: 1,
    name: 'MultiFramePresentationSequence'
  },
  x00289506: {
    tag: '(0028,9506)',
    vr: 'US',
    vm: '2-2n',
    name: 'PixelShiftFrameRange'
  },
  x00289507: {
    tag: '(0028,9507)',
    vr: 'US',
    vm: '2-2n',
    name: 'LUTFrameRange'
  },
  x00289520: {
    tag: '(0028,9520)',
    vr: 'DS',
    vm: 16,
    name: 'ImageToEquipmentMappingMatrix'
  },
  x00289537: {
    tag: '(0028,9537)',
    vr: 'CS',
    vm: 1,
    name: 'EquipmentCoordinateSystemIdentification'
  },
  x0032000a: {
    tag: '(0032,000A)',
    vr: 'CS',
    vm: 1,
    name: 'StudyStatusID'
  },
  x0032000c: {
    tag: '(0032,000C)',
    vr: 'CS',
    vm: 1,
    name: 'StudyPriorityID'
  },
  x00320012: {
    tag: '(0032,0012)',
    vr: 'LO',
    vm: 1,
    name: 'StudyIDIssuer'
  },
  x00320032: {
    tag: '(0032,0032)',
    vr: 'DA',
    vm: 1,
    name: 'StudyVerifiedDate'
  },
  x00320033: {
    tag: '(0032,0033)',
    vr: 'TM',
    vm: 1,
    name: 'StudyVerifiedTime'
  },
  x00320034: {
    tag: '(0032,0034)',
    vr: 'DA',
    vm: 1,
    name: 'StudyReadDate'
  },
  x00320035: {
    tag: '(0032,0035)',
    vr: 'TM',
    vm: 1,
    name: 'StudyReadTime'
  },
  x00321000: {
    tag: '(0032,1000)',
    vr: 'DA',
    vm: 1,
    name: 'ScheduledStudyStartDate'
  },
  x00321001: {
    tag: '(0032,1001)',
    vr: 'TM',
    vm: 1,
    name: 'ScheduledStudyStartTime'
  },
  x00321010: {
    tag: '(0032,1010)',
    vr: 'DA',
    vm: 1,
    name: 'ScheduledStudyStopDate'
  },
  x00321011: {
    tag: '(0032,1011)',
    vr: 'TM',
    vm: 1,
    name: 'ScheduledStudyStopTime'
  },
  x00321020: {
    tag: '(0032,1020)',
    vr: 'LO',
    vm: 1,
    name: 'ScheduledStudyLocation'
  },
  x00321021: {
    tag: '(0032,1021)',
    vr: 'AE',
    vm: '1-n',
    name: 'ScheduledStudyLocationAETitle'
  },
  x00321030: {
    tag: '(0032,1030)',
    vr: 'LO',
    vm: 1,
    name: 'ReasonForStudy'
  },
  x00321031: {
    tag: '(0032,1031)',
    vr: 'SQ',
    vm: 1,
    name: 'RequestingPhysicianIdentificationSequence'
  },
  x00321032: {
    tag: '(0032,1032)',
    vr: 'PN',
    vm: 1,
    name: 'RequestingPhysician'
  },
  x00321033: {
    tag: '(0032,1033)',
    vr: 'LO',
    vm: 1,
    name: 'RequestingService'
  },
  x00321034: {
    tag: '(0032,1034)',
    vr: 'SQ',
    vm: 1,
    name: 'RequestingServiceCodeSequence'
  },
  x00321040: {
    tag: '(0032,1040)',
    vr: 'DA',
    vm: 1,
    name: 'StudyArrivalDate'
  },
  x00321041: {
    tag: '(0032,1041)',
    vr: 'TM',
    vm: 1,
    name: 'StudyArrivalTime'
  },
  x00321050: {
    tag: '(0032,1050)',
    vr: 'DA',
    vm: 1,
    name: 'StudyCompletionDate'
  },
  x00321051: {
    tag: '(0032,1051)',
    vr: 'TM',
    vm: 1,
    name: 'StudyCompletionTime'
  },
  x00321055: {
    tag: '(0032,1055)',
    vr: 'CS',
    vm: 1,
    name: 'StudyComponentStatusID'
  },
  x00321060: {
    tag: '(0032,1060)',
    vr: 'LO',
    vm: 1,
    name: 'RequestedProcedureDescription'
  },
  x00321064: {
    tag: '(0032,1064)',
    vr: 'SQ',
    vm: 1,
    name: 'RequestedProcedureCodeSequence'
  },
  x00321070: {
    tag: '(0032,1070)',
    vr: 'LO',
    vm: 1,
    name: 'RequestedContrastAgent'
  },
  x00324000: {
    tag: '(0032,4000)',
    vr: 'LT',
    vm: 1,
    name: 'StudyComments'
  },
  x00380004: {
    tag: '(0038,0004)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedPatientAliasSequence'
  },
  x00380008: {
    tag: '(0038,0008)',
    vr: 'CS',
    vm: 1,
    name: 'VisitStatusID'
  },
  x00380010: {
    tag: '(0038,0010)',
    vr: 'LO',
    vm: 1,
    name: 'AdmissionID'
  },
  x00380011: {
    tag: '(0038,0011)',
    vr: 'LO',
    vm: 1,
    name: 'IssuerOfAdmissionID'
  },
  x00380014: {
    tag: '(0038,0014)',
    vr: 'SQ',
    vm: 1,
    name: 'IssuerOfAdmissionIDSequence'
  },
  x00380016: {
    tag: '(0038,0016)',
    vr: 'LO',
    vm: 1,
    name: 'RouteOfAdmissions'
  },
  x0038001a: {
    tag: '(0038,001A)',
    vr: 'DA',
    vm: 1,
    name: 'ScheduledAdmissionDate'
  },
  x0038001b: {
    tag: '(0038,001B)',
    vr: 'TM',
    vm: 1,
    name: 'ScheduledAdmissionTime'
  },
  x0038001c: {
    tag: '(0038,001C)',
    vr: 'DA',
    vm: 1,
    name: 'ScheduledDischargeDate'
  },
  x0038001d: {
    tag: '(0038,001D)',
    vr: 'TM',
    vm: 1,
    name: 'ScheduledDischargeTime'
  },
  x0038001e: {
    tag: '(0038,001E)',
    vr: 'LO',
    vm: 1,
    name: 'ScheduledPatientInstitutionResidence'
  },
  x00380020: {
    tag: '(0038,0020)',
    vr: 'DA',
    vm: 1,
    name: 'AdmittingDate'
  },
  x00380021: {
    tag: '(0038,0021)',
    vr: 'TM',
    vm: 1,
    name: 'AdmittingTime'
  },
  x00380030: {
    tag: '(0038,0030)',
    vr: 'DA',
    vm: 1,
    name: 'DischargeDate'
  },
  x00380032: {
    tag: '(0038,0032)',
    vr: 'TM',
    vm: 1,
    name: 'DischargeTime'
  },
  x00380040: {
    tag: '(0038,0040)',
    vr: 'LO',
    vm: 1,
    name: 'DischargeDiagnosisDescription'
  },
  x00380044: {
    tag: '(0038,0044)',
    vr: 'SQ',
    vm: 1,
    name: 'DischargeDiagnosisCodeSequence'
  },
  x00380050: {
    tag: '(0038,0050)',
    vr: 'LO',
    vm: 1,
    name: 'SpecialNeeds'
  },
  x00380060: {
    tag: '(0038,0060)',
    vr: 'LO',
    vm: 1,
    name: 'ServiceEpisodeID'
  },
  x00380061: {
    tag: '(0038,0061)',
    vr: 'LO',
    vm: 1,
    name: 'IssuerOfServiceEpisodeID'
  },
  x00380062: {
    tag: '(0038,0062)',
    vr: 'LO',
    vm: 1,
    name: 'ServiceEpisodeDescription'
  },
  x00380064: {
    tag: '(0038,0064)',
    vr: 'SQ',
    vm: 1,
    name: 'IssuerOfServiceEpisodeIDSequence'
  },
  x00380100: {
    tag: '(0038,0100)',
    vr: 'SQ',
    vm: 1,
    name: 'PertinentDocumentsSequence'
  },
  x00380300: {
    tag: '(0038,0300)',
    vr: 'LO',
    vm: 1,
    name: 'CurrentPatientLocation'
  },
  x00380400: {
    tag: '(0038,0400)',
    vr: 'LO',
    vm: 1,
    name: 'PatientInstitutionResidence'
  },
  x00380500: {
    tag: '(0038,0500)',
    vr: 'LO',
    vm: 1,
    name: 'PatientState'
  },
  x00380502: {
    tag: '(0038,0502)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientClinicalTrialParticipationSequence'
  },
  x00384000: {
    tag: '(0038,4000)',
    vr: 'LT',
    vm: 1,
    name: 'VisitComments'
  },
  x003a0004: {
    tag: '(003A,0004)',
    vr: 'CS',
    vm: 1,
    name: 'WaveformOriginality'
  },
  x003a0005: {
    tag: '(003A,0005)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfWaveformChannels'
  },
  x003a0010: {
    tag: '(003A,0010)',
    vr: 'UL',
    vm: 1,
    name: 'NumberOfWaveformSamples'
  },
  x003a001a: {
    tag: '(003A,001A)',
    vr: 'DS',
    vm: 1,
    name: 'SamplingFrequency'
  },
  x003a0020: {
    tag: '(003A,0020)',
    vr: 'SH',
    vm: 1,
    name: 'MultiplexGroupLabel'
  },
  x003a0200: {
    tag: '(003A,0200)',
    vr: 'SQ',
    vm: 1,
    name: 'ChannelDefinitionSequence'
  },
  x003a0202: {
    tag: '(003A,0202)',
    vr: 'IS',
    vm: 1,
    name: 'WaveformChannelNumber'
  },
  x003a0203: {
    tag: '(003A,0203)',
    vr: 'SH',
    vm: 1,
    name: 'ChannelLabel'
  },
  x003a0205: {
    tag: '(003A,0205)',
    vr: 'CS',
    vm: '1-n',
    name: 'ChannelStatus'
  },
  x003a0208: {
    tag: '(003A,0208)',
    vr: 'SQ',
    vm: 1,
    name: 'ChannelSourceSequence'
  },
  x003a0209: {
    tag: '(003A,0209)',
    vr: 'SQ',
    vm: 1,
    name: 'ChannelSourceModifiersSequence'
  },
  x003a020a: {
    tag: '(003A,020A)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceWaveformSequence'
  },
  x003a020c: {
    tag: '(003A,020C)',
    vr: 'LO',
    vm: 1,
    name: 'ChannelDerivationDescription'
  },
  x003a0210: {
    tag: '(003A,0210)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelSensitivity'
  },
  x003a0211: {
    tag: '(003A,0211)',
    vr: 'SQ',
    vm: 1,
    name: 'ChannelSensitivityUnitsSequence'
  },
  x003a0212: {
    tag: '(003A,0212)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelSensitivityCorrectionFactor'
  },
  x003a0213: {
    tag: '(003A,0213)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelBaseline'
  },
  x003a0214: {
    tag: '(003A,0214)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelTimeSkew'
  },
  x003a0215: {
    tag: '(003A,0215)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelSampleSkew'
  },
  x003a0218: {
    tag: '(003A,0218)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelOffset'
  },
  x003a021a: {
    tag: '(003A,021A)',
    vr: 'US',
    vm: 1,
    name: 'WaveformBitsStored'
  },
  x003a0220: {
    tag: '(003A,0220)',
    vr: 'DS',
    vm: 1,
    name: 'FilterLowFrequency'
  },
  x003a0221: {
    tag: '(003A,0221)',
    vr: 'DS',
    vm: 1,
    name: 'FilterHighFrequency'
  },
  x003a0222: {
    tag: '(003A,0222)',
    vr: 'DS',
    vm: 1,
    name: 'NotchFilterFrequency'
  },
  x003a0223: {
    tag: '(003A,0223)',
    vr: 'DS',
    vm: 1,
    name: 'NotchFilterBandwidth'
  },
  x003a0230: {
    tag: '(003A,0230)',
    vr: 'FL',
    vm: 1,
    name: 'WaveformDataDisplayScale'
  },
  x003a0231: {
    tag: '(003A,0231)',
    vr: 'US',
    vm: 3,
    name: 'WaveformDisplayBackgroundCIELabValue'
  },
  x003a0240: {
    tag: '(003A,0240)',
    vr: 'SQ',
    vm: 1,
    name: 'WaveformPresentationGroupSequence'
  },
  x003a0241: {
    tag: '(003A,0241)',
    vr: 'US',
    vm: 1,
    name: 'PresentationGroupNumber'
  },
  x003a0242: {
    tag: '(003A,0242)',
    vr: 'SQ',
    vm: 1,
    name: 'ChannelDisplaySequence'
  },
  x003a0244: {
    tag: '(003A,0244)',
    vr: 'US',
    vm: 3,
    name: 'ChannelRecommendedDisplayCIELabValue'
  },
  x003a0245: {
    tag: '(003A,0245)',
    vr: 'FL',
    vm: 1,
    name: 'ChannelPosition'
  },
  x003a0246: {
    tag: '(003A,0246)',
    vr: 'CS',
    vm: 1,
    name: 'DisplayShadingFlag'
  },
  x003a0247: {
    tag: '(003A,0247)',
    vr: 'FL',
    vm: 1,
    name: 'FractionalChannelDisplayScale'
  },
  x003a0248: {
    tag: '(003A,0248)',
    vr: 'FL',
    vm: 1,
    name: 'AbsoluteChannelDisplayScale'
  },
  x003a0300: {
    tag: '(003A,0300)',
    vr: 'SQ',
    vm: 1,
    name: 'MultiplexedAudioChannelsDescriptionCodeSequence'
  },
  x003a0301: {
    tag: '(003A,0301)',
    vr: 'IS',
    vm: 1,
    name: 'ChannelIdentificationCode'
  },
  x003a0302: {
    tag: '(003A,0302)',
    vr: 'CS',
    vm: 1,
    name: 'ChannelMode'
  },
  x00400001: {
    tag: '(0040,0001)',
    vr: 'AE',
    vm: '1-n',
    name: 'ScheduledStationAETitle'
  },
  x00400002: {
    tag: '(0040,0002)',
    vr: 'DA',
    vm: 1,
    name: 'ScheduledProcedureStepStartDate'
  },
  x00400003: {
    tag: '(0040,0003)',
    vr: 'TM',
    vm: 1,
    name: 'ScheduledProcedureStepStartTime'
  },
  x00400004: {
    tag: '(0040,0004)',
    vr: 'DA',
    vm: 1,
    name: 'ScheduledProcedureStepEndDate'
  },
  x00400005: {
    tag: '(0040,0005)',
    vr: 'TM',
    vm: 1,
    name: 'ScheduledProcedureStepEndTime'
  },
  x00400006: {
    tag: '(0040,0006)',
    vr: 'PN',
    vm: 1,
    name: 'ScheduledPerformingPhysicianName'
  },
  x00400007: {
    tag: '(0040,0007)',
    vr: 'LO',
    vm: 1,
    name: 'ScheduledProcedureStepDescription'
  },
  x00400008: {
    tag: '(0040,0008)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledProtocolCodeSequence'
  },
  x00400009: {
    tag: '(0040,0009)',
    vr: 'SH',
    vm: 1,
    name: 'ScheduledProcedureStepID'
  },
  x0040000a: {
    tag: '(0040,000A)',
    vr: 'SQ',
    vm: 1,
    name: 'StageCodeSequence'
  },
  x0040000b: {
    tag: '(0040,000B)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledPerformingPhysicianIdentificationSequence'
  },
  x00400010: {
    tag: '(0040,0010)',
    vr: 'SH',
    vm: '1-n',
    name: 'ScheduledStationName'
  },
  x00400011: {
    tag: '(0040,0011)',
    vr: 'SH',
    vm: 1,
    name: 'ScheduledProcedureStepLocation'
  },
  x00400012: {
    tag: '(0040,0012)',
    vr: 'LO',
    vm: 1,
    name: 'PreMedication'
  },
  x00400020: {
    tag: '(0040,0020)',
    vr: 'CS',
    vm: 1,
    name: 'ScheduledProcedureStepStatus'
  },
  x00400026: {
    tag: '(0040,0026)',
    vr: 'SQ',
    vm: 1,
    name: 'OrderPlacerIdentifierSequence'
  },
  x00400027: {
    tag: '(0040,0027)',
    vr: 'SQ',
    vm: 1,
    name: 'OrderFillerIdentifierSequence'
  },
  x00400031: {
    tag: '(0040,0031)',
    vr: 'UT',
    vm: 1,
    name: 'LocalNamespaceEntityID'
  },
  x00400032: {
    tag: '(0040,0032)',
    vr: 'UT',
    vm: 1,
    name: 'UniversalEntityID'
  },
  x00400033: {
    tag: '(0040,0033)',
    vr: 'CS',
    vm: 1,
    name: 'UniversalEntityIDType'
  },
  x00400035: {
    tag: '(0040,0035)',
    vr: 'CS',
    vm: 1,
    name: 'IdentifierTypeCode'
  },
  x00400036: {
    tag: '(0040,0036)',
    vr: 'SQ',
    vm: 1,
    name: 'AssigningFacilitySequence'
  },
  x00400039: {
    tag: '(0040,0039)',
    vr: 'SQ',
    vm: 1,
    name: 'AssigningJurisdictionCodeSequence'
  },
  x0040003a: {
    tag: '(0040,003A)',
    vr: 'SQ',
    vm: 1,
    name: 'AssigningAgencyOrDepartmentCodeSequence'
  },
  x00400100: {
    tag: '(0040,0100)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledProcedureStepSequence'
  },
  x00400220: {
    tag: '(0040,0220)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedNonImageCompositeSOPInstanceSequence'
  },
  x00400241: {
    tag: '(0040,0241)',
    vr: 'AE',
    vm: 1,
    name: 'PerformedStationAETitle'
  },
  x00400242: {
    tag: '(0040,0242)',
    vr: 'SH',
    vm: 1,
    name: 'PerformedStationName'
  },
  x00400243: {
    tag: '(0040,0243)',
    vr: 'SH',
    vm: 1,
    name: 'PerformedLocation'
  },
  x00400244: {
    tag: '(0040,0244)',
    vr: 'DA',
    vm: 1,
    name: 'PerformedProcedureStepStartDate'
  },
  x00400245: {
    tag: '(0040,0245)',
    vr: 'TM',
    vm: 1,
    name: 'PerformedProcedureStepStartTime'
  },
  x00400250: {
    tag: '(0040,0250)',
    vr: 'DA',
    vm: 1,
    name: 'PerformedProcedureStepEndDate'
  },
  x00400251: {
    tag: '(0040,0251)',
    vr: 'TM',
    vm: 1,
    name: 'PerformedProcedureStepEndTime'
  },
  x00400252: {
    tag: '(0040,0252)',
    vr: 'CS',
    vm: 1,
    name: 'PerformedProcedureStepStatus'
  },
  x00400253: {
    tag: '(0040,0253)',
    vr: 'SH',
    vm: 1,
    name: 'PerformedProcedureStepID'
  },
  x00400254: {
    tag: '(0040,0254)',
    vr: 'LO',
    vm: 1,
    name: 'PerformedProcedureStepDescription'
  },
  x00400255: {
    tag: '(0040,0255)',
    vr: 'LO',
    vm: 1,
    name: 'PerformedProcedureTypeDescription'
  },
  x00400260: {
    tag: '(0040,0260)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedProtocolCodeSequence'
  },
  x00400261: {
    tag: '(0040,0261)',
    vr: 'CS',
    vm: 1,
    name: 'PerformedProtocolType'
  },
  x00400270: {
    tag: '(0040,0270)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledStepAttributesSequence'
  },
  x00400275: {
    tag: '(0040,0275)',
    vr: 'SQ',
    vm: 1,
    name: 'RequestAttributesSequence'
  },
  x00400280: {
    tag: '(0040,0280)',
    vr: 'ST',
    vm: 1,
    name: 'CommentsOnThePerformedProcedureStep'
  },
  x00400281: {
    tag: '(0040,0281)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedProcedureStepDiscontinuationReasonCodeSequence'
  },
  x00400293: {
    tag: '(0040,0293)',
    vr: 'SQ',
    vm: 1,
    name: 'QuantitySequence'
  },
  x00400294: {
    tag: '(0040,0294)',
    vr: 'DS',
    vm: 1,
    name: 'Quantity'
  },
  x00400295: {
    tag: '(0040,0295)',
    vr: 'SQ',
    vm: 1,
    name: 'MeasuringUnitsSequence'
  },
  x00400296: {
    tag: '(0040,0296)',
    vr: 'SQ',
    vm: 1,
    name: 'BillingItemSequence'
  },
  x00400300: {
    tag: '(0040,0300)',
    vr: 'US',
    vm: 1,
    name: 'TotalTimeOfFluoroscopy'
  },
  x00400301: {
    tag: '(0040,0301)',
    vr: 'US',
    vm: 1,
    name: 'TotalNumberOfExposures'
  },
  x00400302: {
    tag: '(0040,0302)',
    vr: 'US',
    vm: 1,
    name: 'EntranceDose'
  },
  x00400303: {
    tag: '(0040,0303)',
    vr: 'US',
    vm: '1-2',
    name: 'ExposedArea'
  },
  x00400306: {
    tag: '(0040,0306)',
    vr: 'DS',
    vm: 1,
    name: 'DistanceSourceToEntrance'
  },
  x00400307: {
    tag: '(0040,0307)',
    vr: 'DS',
    vm: 1,
    name: 'DistanceSourceToSupport'
  },
  x0040030e: {
    tag: '(0040,030E)',
    vr: 'SQ',
    vm: 1,
    name: 'ExposureDoseSequence'
  },
  x00400310: {
    tag: '(0040,0310)',
    vr: 'ST',
    vm: 1,
    name: 'CommentsOnRadiationDose'
  },
  x00400312: {
    tag: '(0040,0312)',
    vr: 'DS',
    vm: 1,
    name: 'xrayoutput'
  },
  x00400314: {
    tag: '(0040,0314)',
    vr: 'DS',
    vm: 1,
    name: 'HalfValueLayer'
  },
  x00400316: {
    tag: '(0040,0316)',
    vr: 'DS',
    vm: 1,
    name: 'OrganDose'
  },
  x00400318: {
    tag: '(0040,0318)',
    vr: 'CS',
    vm: 1,
    name: 'OrganExposed'
  },
  x00400320: {
    tag: '(0040,0320)',
    vr: 'SQ',
    vm: 1,
    name: 'BillingProcedureStepSequence'
  },
  x00400321: {
    tag: '(0040,0321)',
    vr: 'SQ',
    vm: 1,
    name: 'FilmConsumptionSequence'
  },
  x00400324: {
    tag: '(0040,0324)',
    vr: 'SQ',
    vm: 1,
    name: 'BillingSuppliesAndDevicesSequence'
  },
  x00400330: {
    tag: '(0040,0330)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedProcedureStepSequence'
  },
  x00400340: {
    tag: '(0040,0340)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedSeriesSequence'
  },
  x00400400: {
    tag: '(0040,0400)',
    vr: 'LT',
    vm: 1,
    name: 'CommentsOnTheScheduledProcedureStep'
  },
  x00400440: {
    tag: '(0040,0440)',
    vr: 'SQ',
    vm: 1,
    name: 'ProtocolContextSequence'
  },
  x00400441: {
    tag: '(0040,0441)',
    vr: 'SQ',
    vm: 1,
    name: 'ContentItemModifierSequence'
  },
  x00400500: {
    tag: '(0040,0500)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledSpecimenSequence'
  },
  x0040050a: {
    tag: '(0040,050A)',
    vr: 'LO',
    vm: 1,
    name: 'SpecimenAccessionNumber'
  },
  x00400512: {
    tag: '(0040,0512)',
    vr: 'LO',
    vm: 1,
    name: 'ContainerIdentifier'
  },
  x00400513: {
    tag: '(0040,0513)',
    vr: 'SQ',
    vm: 1,
    name: 'IssuerOfTheContainerIdentifierSequence'
  },
  x00400515: {
    tag: '(0040,0515)',
    vr: 'SQ',
    vm: 1,
    name: 'AlternateContainerIdentifierSequence'
  },
  x00400518: {
    tag: '(0040,0518)',
    vr: 'SQ',
    vm: 1,
    name: 'ContainerTypeCodeSequence'
  },
  x0040051a: {
    tag: '(0040,051A)',
    vr: 'LO',
    vm: 1,
    name: 'ContainerDescription'
  },
  x00400520: {
    tag: '(0040,0520)',
    vr: 'SQ',
    vm: 1,
    name: 'ContainerComponentSequence'
  },
  x00400550: {
    tag: '(0040,0550)',
    vr: 'SQ',
    vm: 1,
    name: 'SpecimenSequence'
  },
  x00400551: {
    tag: '(0040,0551)',
    vr: 'LO',
    vm: 1,
    name: 'SpecimenIdentifier'
  },
  x00400552: {
    tag: '(0040,0552)',
    vr: 'SQ',
    vm: 1,
    name: 'SpecimenDescriptionSequenceTrial'
  },
  x00400553: {
    tag: '(0040,0553)',
    vr: 'ST',
    vm: 1,
    name: 'SpecimenDescriptionTrial'
  },
  x00400554: {
    tag: '(0040,0554)',
    vr: 'UI',
    vm: 1,
    name: 'SpecimenUID'
  },
  x00400555: {
    tag: '(0040,0555)',
    vr: 'SQ',
    vm: 1,
    name: 'AcquisitionContextSequence'
  },
  x00400556: {
    tag: '(0040,0556)',
    vr: 'ST',
    vm: 1,
    name: 'AcquisitionContextDescription'
  },
  x00400560: {
    tag: '(0040,0560)',
    vr: 'SQ',
    vm: 1,
    name: 'SpecimenDescriptionSequence'
  },
  x00400562: {
    tag: '(0040,0562)',
    vr: 'SQ',
    vm: 1,
    name: 'IssuerOfTheSpecimenIdentifierSequence'
  },
  x0040059a: {
    tag: '(0040,059A)',
    vr: 'SQ',
    vm: 1,
    name: 'SpecimenTypeCodeSequence'
  },
  x00400600: {
    tag: '(0040,0600)',
    vr: 'LO',
    vm: 1,
    name: 'SpecimenShortDescription'
  },
  x00400602: {
    tag: '(0040,0602)',
    vr: 'UT',
    vm: 1,
    name: 'SpecimenDetailedDescription'
  },
  x00400610: {
    tag: '(0040,0610)',
    vr: 'SQ',
    vm: 1,
    name: 'SpecimenPreparationSequence'
  },
  x00400612: {
    tag: '(0040,0612)',
    vr: 'SQ',
    vm: 1,
    name: 'SpecimenPreparationStepContentItemSequence'
  },
  x00400620: {
    tag: '(0040,0620)',
    vr: 'SQ',
    vm: 1,
    name: 'SpecimenLocalizationContentItemSequence'
  },
  x004006fa: {
    tag: '(0040,06FA)',
    vr: 'LO',
    vm: 1,
    name: 'SlideIdentifier'
  },
  x0040071a: {
    tag: '(0040,071A)',
    vr: 'SQ',
    vm: 1,
    name: 'ImageCenterPointCoordinatesSequence'
  },
  x0040072a: {
    tag: '(0040,072A)',
    vr: 'DS',
    vm: 1,
    name: 'xoffsetinslidecoordinatesystem'
  },
  x0040073a: {
    tag: '(0040,073A)',
    vr: 'DS',
    vm: 1,
    name: 'YOffsetInSlideCoordinateSystem'
  },
  x0040074a: {
    tag: '(0040,074A)',
    vr: 'DS',
    vm: 1,
    name: 'ZOffsetInSlideCoordinateSystem'
  },
  x004008d8: {
    tag: '(0040,08D8)',
    vr: 'SQ',
    vm: 1,
    name: 'PixelSpacingSequence'
  },
  x004008da: {
    tag: '(0040,08DA)',
    vr: 'SQ',
    vm: 1,
    name: 'CoordinateSystemAxisCodeSequence'
  },
  x004008ea: {
    tag: '(0040,08EA)',
    vr: 'SQ',
    vm: 1,
    name: 'MeasurementUnitsCodeSequence'
  },
  x004009f8: {
    tag: '(0040,09F8)',
    vr: 'SQ',
    vm: 1,
    name: 'VitalStainCodeSequenceTrial'
  },
  x00401001: {
    tag: '(0040,1001)',
    vr: 'SH',
    vm: 1,
    name: 'RequestedProcedureID'
  },
  x00401002: {
    tag: '(0040,1002)',
    vr: 'LO',
    vm: 1,
    name: 'ReasonForTheRequestedProcedure'
  },
  x00401003: {
    tag: '(0040,1003)',
    vr: 'SH',
    vm: 1,
    name: 'RequestedProcedurePriority'
  },
  x00401004: {
    tag: '(0040,1004)',
    vr: 'LO',
    vm: 1,
    name: 'PatientTransportArrangements'
  },
  x00401005: {
    tag: '(0040,1005)',
    vr: 'LO',
    vm: 1,
    name: 'RequestedProcedureLocation'
  },
  x00401006: {
    tag: '(0040,1006)',
    vr: 'SH',
    vm: 1,
    name: 'PlacerOrderNumberProcedure'
  },
  x00401007: {
    tag: '(0040,1007)',
    vr: 'SH',
    vm: 1,
    name: 'FillerOrderNumberProcedure'
  },
  x00401008: {
    tag: '(0040,1008)',
    vr: 'LO',
    vm: 1,
    name: 'ConfidentialityCode'
  },
  x00401009: {
    tag: '(0040,1009)',
    vr: 'SH',
    vm: 1,
    name: 'ReportingPriority'
  },
  x0040100a: {
    tag: '(0040,100A)',
    vr: 'SQ',
    vm: 1,
    name: 'ReasonForRequestedProcedureCodeSequence'
  },
  x00401010: {
    tag: '(0040,1010)',
    vr: 'PN',
    vm: '1-n',
    name: 'NamesOfIntendedRecipientsOfResults'
  },
  x00401011: {
    tag: '(0040,1011)',
    vr: 'SQ',
    vm: 1,
    name: 'IntendedRecipientsOfResultsIdentificationSequence'
  },
  x00401012: {
    tag: '(0040,1012)',
    vr: 'SQ',
    vm: 1,
    name: 'ReasonForPerformedProcedureCodeSequence'
  },
  x00401060: {
    tag: '(0040,1060)',
    vr: 'LO',
    vm: 1,
    name: 'RequestedProcedureDescriptionTrial'
  },
  x00401101: {
    tag: '(0040,1101)',
    vr: 'SQ',
    vm: 1,
    name: 'PersonIdentificationCodeSequence'
  },
  x00401102: {
    tag: '(0040,1102)',
    vr: 'ST',
    vm: 1,
    name: 'PersonAddress'
  },
  x00401103: {
    tag: '(0040,1103)',
    vr: 'LO',
    vm: '1-n',
    name: 'PersonTelephoneNumbers'
  },
  x00401400: {
    tag: '(0040,1400)',
    vr: 'LT',
    vm: 1,
    name: 'RequestedProcedureComments'
  },
  x00402001: {
    tag: '(0040,2001)',
    vr: 'LO',
    vm: 1,
    name: 'ReasonForTheImagingServiceRequest'
  },
  x00402004: {
    tag: '(0040,2004)',
    vr: 'DA',
    vm: 1,
    name: 'IssueDateOfImagingServiceRequest'
  },
  x00402005: {
    tag: '(0040,2005)',
    vr: 'TM',
    vm: 1,
    name: 'IssueTimeOfImagingServiceRequest'
  },
  x00402006: {
    tag: '(0040,2006)',
    vr: 'SH',
    vm: 1,
    name: 'PlacerOrderNumberImagingServiceRequestRetired'
  },
  x00402007: {
    tag: '(0040,2007)',
    vr: 'SH',
    vm: 1,
    name: 'FillerOrderNumberImagingServiceRequestRetired'
  },
  x00402008: {
    tag: '(0040,2008)',
    vr: 'PN',
    vm: 1,
    name: 'OrderEnteredBy'
  },
  x00402009: {
    tag: '(0040,2009)',
    vr: 'SH',
    vm: 1,
    name: 'OrderEntererLocation'
  },
  x00402010: {
    tag: '(0040,2010)',
    vr: 'SH',
    vm: 1,
    name: 'OrderCallbackPhoneNumber'
  },
  x00402016: {
    tag: '(0040,2016)',
    vr: 'LO',
    vm: 1,
    name: 'PlacerOrderNumberImagingServiceRequest'
  },
  x00402017: {
    tag: '(0040,2017)',
    vr: 'LO',
    vm: 1,
    name: 'FillerOrderNumberImagingServiceRequest'
  },
  x00402400: {
    tag: '(0040,2400)',
    vr: 'LT',
    vm: 1,
    name: 'ImagingServiceRequestComments'
  },
  x00403001: {
    tag: '(0040,3001)',
    vr: 'LO',
    vm: 1,
    name: 'ConfidentialityConstraintOnPatientDataDescription'
  },
  x00404001: {
    tag: '(0040,4001)',
    vr: 'CS',
    vm: 1,
    name: 'GeneralPurposeScheduledProcedureStepStatus'
  },
  x00404002: {
    tag: '(0040,4002)',
    vr: 'CS',
    vm: 1,
    name: 'GeneralPurposePerformedProcedureStepStatus'
  },
  x00404003: {
    tag: '(0040,4003)',
    vr: 'CS',
    vm: 1,
    name: 'GeneralPurposeScheduledProcedureStepPriority'
  },
  x00404004: {
    tag: '(0040,4004)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledProcessingApplicationsCodeSequence'
  },
  x00404005: {
    tag: '(0040,4005)',
    vr: 'DT',
    vm: 1,
    name: 'ScheduledProcedureStepStartDateTime'
  },
  x00404006: {
    tag: '(0040,4006)',
    vr: 'CS',
    vm: 1,
    name: 'MultipleCopiesFlag'
  },
  x00404007: {
    tag: '(0040,4007)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedProcessingApplicationsCodeSequence'
  },
  x00404009: {
    tag: '(0040,4009)',
    vr: 'SQ',
    vm: 1,
    name: 'HumanPerformerCodeSequence'
  },
  x00404010: {
    tag: '(0040,4010)',
    vr: 'DT',
    vm: 1,
    name: 'ScheduledProcedureStepModificationDateTime'
  },
  x00404011: {
    tag: '(0040,4011)',
    vr: 'DT',
    vm: 1,
    name: 'ExpectedCompletionDateTime'
  },
  x00404015: {
    tag: '(0040,4015)',
    vr: 'SQ',
    vm: 1,
    name: 'ResultingGeneralPurposePerformedProcedureStepsSequence'
  },
  x00404016: {
    tag: '(0040,4016)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedGeneralPurposeScheduledProcedureStepSequence'
  },
  x00404018: {
    tag: '(0040,4018)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledWorkitemCodeSequence'
  },
  x00404019: {
    tag: '(0040,4019)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedWorkitemCodeSequence'
  },
  x00404020: {
    tag: '(0040,4020)',
    vr: 'CS',
    vm: 1,
    name: 'InputAvailabilityFlag'
  },
  x00404021: {
    tag: '(0040,4021)',
    vr: 'SQ',
    vm: 1,
    name: 'InputInformationSequence'
  },
  x00404022: {
    tag: '(0040,4022)',
    vr: 'SQ',
    vm: 1,
    name: 'RelevantInformationSequence'
  },
  x00404023: {
    tag: '(0040,4023)',
    vr: 'UI',
    vm: 1,
    name: 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'
  },
  x00404025: {
    tag: '(0040,4025)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledStationNameCodeSequence'
  },
  x00404026: {
    tag: '(0040,4026)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledStationClassCodeSequence'
  },
  x00404027: {
    tag: '(0040,4027)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledStationGeographicLocationCodeSequence'
  },
  x00404028: {
    tag: '(0040,4028)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedStationNameCodeSequence'
  },
  x00404029: {
    tag: '(0040,4029)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedStationClassCodeSequence'
  },
  x00404030: {
    tag: '(0040,4030)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedStationGeographicLocationCodeSequence'
  },
  x00404031: {
    tag: '(0040,4031)',
    vr: 'SQ',
    vm: 1,
    name: 'RequestedSubsequentWorkitemCodeSequence'
  },
  x00404032: {
    tag: '(0040,4032)',
    vr: 'SQ',
    vm: 1,
    name: 'NonDICOMOutputCodeSequence'
  },
  x00404033: {
    tag: '(0040,4033)',
    vr: 'SQ',
    vm: 1,
    name: 'OutputInformationSequence'
  },
  x00404034: {
    tag: '(0040,4034)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledHumanPerformersSequence'
  },
  x00404035: {
    tag: '(0040,4035)',
    vr: 'SQ',
    vm: 1,
    name: 'ActualHumanPerformersSequence'
  },
  x00404036: {
    tag: '(0040,4036)',
    vr: 'LO',
    vm: 1,
    name: 'HumanPerformerOrganization'
  },
  x00404037: {
    tag: '(0040,4037)',
    vr: 'PN',
    vm: 1,
    name: 'HumanPerformerName'
  },
  x00404040: {
    tag: '(0040,4040)',
    vr: 'CS',
    vm: 1,
    name: 'RawDataHandling'
  },
  x00404041: {
    tag: '(0040,4041)',
    vr: 'CS',
    vm: 1,
    name: 'InputReadinessState'
  },
  x00404050: {
    tag: '(0040,4050)',
    vr: 'DT',
    vm: 1,
    name: 'PerformedProcedureStepStartDateTime'
  },
  x00404051: {
    tag: '(0040,4051)',
    vr: 'DT',
    vm: 1,
    name: 'PerformedProcedureStepEndDateTime'
  },
  x00404052: {
    tag: '(0040,4052)',
    vr: 'DT',
    vm: 1,
    name: 'ProcedureStepCancellationDateTime'
  },
  x00408302: {
    tag: '(0040,8302)',
    vr: 'DS',
    vm: 1,
    name: 'EntranceDoseInmGy'
  },
  x00409094: {
    tag: '(0040,9094)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedImageRealWorldValueMappingSequence'
  },
  x00409096: {
    tag: '(0040,9096)',
    vr: 'SQ',
    vm: 1,
    name: 'RealWorldValueMappingSequence'
  },
  x00409098: {
    tag: '(0040,9098)',
    vr: 'SQ',
    vm: 1,
    name: 'PixelValueMappingCodeSequence'
  },
  x00409210: {
    tag: '(0040,9210)',
    vr: 'SH',
    vm: 1,
    name: 'LUTLabel'
  },
  x00409211: {
    tag: '(0040,9211)',
    vr: 'US|SS',
    vm: 1,
    name: 'RealWorldValueLastValueMapped'
  },
  x00409212: {
    tag: '(0040,9212)',
    vr: 'FD',
    vm: '1-n',
    name: 'RealWorldValueLUTData'
  },
  x00409216: {
    tag: '(0040,9216)',
    vr: 'US|SS',
    vm: 1,
    name: 'RealWorldValueFirstValueMapped'
  },
  x00409224: {
    tag: '(0040,9224)',
    vr: 'FD',
    vm: 1,
    name: 'RealWorldValueIntercept'
  },
  x00409225: {
    tag: '(0040,9225)',
    vr: 'FD',
    vm: 1,
    name: 'RealWorldValueSlope'
  },
  x0040a007: {
    tag: '(0040,A007)',
    vr: 'CS',
    vm: 1,
    name: 'FindingsFlagTrial'
  },
  x0040a010: {
    tag: '(0040,A010)',
    vr: 'CS',
    vm: 1,
    name: 'RelationshipType'
  },
  x0040a020: {
    tag: '(0040,A020)',
    vr: 'SQ',
    vm: 1,
    name: 'FindingsSequenceTrial'
  },
  x0040a021: {
    tag: '(0040,A021)',
    vr: 'UI',
    vm: 1,
    name: 'FindingsGroupUIDTrial'
  },
  x0040a022: {
    tag: '(0040,A022)',
    vr: 'UI',
    vm: 1,
    name: 'ReferencedFindingsGroupUIDTrial'
  },
  x0040a023: {
    tag: '(0040,A023)',
    vr: 'DA',
    vm: 1,
    name: 'FindingsGroupRecordingDateTrial'
  },
  x0040a024: {
    tag: '(0040,A024)',
    vr: 'TM',
    vm: 1,
    name: 'FindingsGroupRecordingTimeTrial'
  },
  x0040a026: {
    tag: '(0040,A026)',
    vr: 'SQ',
    vm: 1,
    name: 'FindingsSourceCategoryCodeSequenceTrial'
  },
  x0040a027: {
    tag: '(0040,A027)',
    vr: 'LO',
    vm: 1,
    name: 'VerifyingOrganization'
  },
  x0040a028: {
    tag: '(0040,A028)',
    vr: 'SQ',
    vm: 1,
    name: 'DocumentingOrganizationIdentifierCodeSequenceTrial'
  },
  x0040a030: {
    tag: '(0040,A030)',
    vr: 'DT',
    vm: 1,
    name: 'VerificationDateTime'
  },
  x0040a032: {
    tag: '(0040,A032)',
    vr: 'DT',
    vm: 1,
    name: 'ObservationDateTime'
  },
  x0040a040: {
    tag: '(0040,A040)',
    vr: 'CS',
    vm: 1,
    name: 'ValueType'
  },
  x0040a043: {
    tag: '(0040,A043)',
    vr: 'SQ',
    vm: 1,
    name: 'ConceptNameCodeSequence'
  },
  x0040a047: {
    tag: '(0040,A047)',
    vr: 'LO',
    vm: 1,
    name: 'MeasurementPrecisionDescriptionTrial'
  },
  x0040a050: {
    tag: '(0040,A050)',
    vr: 'CS',
    vm: 1,
    name: 'ContinuityOfContent'
  },
  x0040a057: {
    tag: '(0040,A057)',
    vr: 'CS',
    vm: '1-n',
    name: 'UrgencyOrPriorityAlertsTrial'
  },
  x0040a060: {
    tag: '(0040,A060)',
    vr: 'LO',
    vm: 1,
    name: 'SequencingIndicatorTrial'
  },
  x0040a066: {
    tag: '(0040,A066)',
    vr: 'SQ',
    vm: 1,
    name: 'DocumentIdentifierCodeSequenceTrial'
  },
  x0040a067: {
    tag: '(0040,A067)',
    vr: 'PN',
    vm: 1,
    name: 'DocumentAuthorTrial'
  },
  x0040a068: {
    tag: '(0040,A068)',
    vr: 'SQ',
    vm: 1,
    name: 'DocumentAuthorIdentifierCodeSequenceTrial'
  },
  x0040a070: {
    tag: '(0040,A070)',
    vr: 'SQ',
    vm: 1,
    name: 'IdentifierCodeSequenceTrial'
  },
  x0040a073: {
    tag: '(0040,A073)',
    vr: 'SQ',
    vm: 1,
    name: 'VerifyingObserverSequence'
  },
  x0040a074: {
    tag: '(0040,A074)',
    vr: 'OB',
    vm: 1,
    name: 'ObjectBinaryIdentifierTrial'
  },
  x0040a075: {
    tag: '(0040,A075)',
    vr: 'PN',
    vm: 1,
    name: 'VerifyingObserverName'
  },
  x0040a076: {
    tag: '(0040,A076)',
    vr: 'SQ',
    vm: 1,
    name: 'DocumentingObserverIdentifierCodeSequenceTrial'
  },
  x0040a078: {
    tag: '(0040,A078)',
    vr: 'SQ',
    vm: 1,
    name: 'AuthorObserverSequence'
  },
  x0040a07a: {
    tag: '(0040,A07A)',
    vr: 'SQ',
    vm: 1,
    name: 'ParticipantSequence'
  },
  x0040a07c: {
    tag: '(0040,A07C)',
    vr: 'SQ',
    vm: 1,
    name: 'CustodialOrganizationSequence'
  },
  x0040a080: {
    tag: '(0040,A080)',
    vr: 'CS',
    vm: 1,
    name: 'ParticipationType'
  },
  x0040a082: {
    tag: '(0040,A082)',
    vr: 'DT',
    vm: 1,
    name: 'ParticipationDateTime'
  },
  x0040a084: {
    tag: '(0040,A084)',
    vr: 'CS',
    vm: 1,
    name: 'ObserverType'
  },
  x0040a085: {
    tag: '(0040,A085)',
    vr: 'SQ',
    vm: 1,
    name: 'ProcedureIdentifierCodeSequenceTrial'
  },
  x0040a088: {
    tag: '(0040,A088)',
    vr: 'SQ',
    vm: 1,
    name: 'VerifyingObserverIdentificationCodeSequence'
  },
  x0040a089: {
    tag: '(0040,A089)',
    vr: 'OB',
    vm: 1,
    name: 'ObjectDirectoryBinaryIdentifierTrial'
  },
  x0040a090: {
    tag: '(0040,A090)',
    vr: 'SQ',
    vm: 1,
    name: 'EquivalentCDADocumentSequence'
  },
  x0040a0b0: {
    tag: '(0040,A0B0)',
    vr: 'US',
    vm: '2-2n',
    name: 'ReferencedWaveformChannels'
  },
  x0040a110: {
    tag: '(0040,A110)',
    vr: 'DA',
    vm: 1,
    name: 'DateOfDocumentOrVerbalTransactionTrial'
  },
  x0040a112: {
    tag: '(0040,A112)',
    vr: 'TM',
    vm: 1,
    name: 'TimeOfDocumentCreationOrVerbalTransactionTrial'
  },
  x0040a120: {
    tag: '(0040,A120)',
    vr: 'DT',
    vm: 1,
    name: 'DateTime'
  },
  x0040a121: {
    tag: '(0040,A121)',
    vr: 'DA',
    vm: 1,
    name: 'Date'
  },
  x0040a122: {
    tag: '(0040,A122)',
    vr: 'TM',
    vm: 1,
    name: 'Time'
  },
  x0040a123: {
    tag: '(0040,A123)',
    vr: 'PN',
    vm: 1,
    name: 'PersonName'
  },
  x0040a124: {
    tag: '(0040,A124)',
    vr: 'UI',
    vm: 1,
    name: 'UID'
  },
  x0040a125: {
    tag: '(0040,A125)',
    vr: 'CS',
    vm: 2,
    name: 'ReportStatusIDTrial'
  },
  x0040a130: {
    tag: '(0040,A130)',
    vr: 'CS',
    vm: 1,
    name: 'TemporalRangeType'
  },
  x0040a132: {
    tag: '(0040,A132)',
    vr: 'UL',
    vm: '1-n',
    name: 'ReferencedSamplePositions'
  },
  x0040a136: {
    tag: '(0040,A136)',
    vr: 'US',
    vm: '1-n',
    name: 'ReferencedFrameNumbers'
  },
  x0040a138: {
    tag: '(0040,A138)',
    vr: 'DS',
    vm: '1-n',
    name: 'ReferencedTimeOffsets'
  },
  x0040a13a: {
    tag: '(0040,A13A)',
    vr: 'DT',
    vm: '1-n',
    name: 'ReferencedDateTime'
  },
  x0040a160: {
    tag: '(0040,A160)',
    vr: 'UT',
    vm: 1,
    name: 'TextValue'
  },
  x0040a167: {
    tag: '(0040,A167)',
    vr: 'SQ',
    vm: 1,
    name: 'ObservationCategoryCodeSequenceTrial'
  },
  x0040a168: {
    tag: '(0040,A168)',
    vr: 'SQ',
    vm: 1,
    name: 'ConceptCodeSequence'
  },
  x0040a16a: {
    tag: '(0040,A16A)',
    vr: 'ST',
    vm: 1,
    name: 'BibliographicCitationTrial'
  },
  x0040a170: {
    tag: '(0040,A170)',
    vr: 'SQ',
    vm: 1,
    name: 'PurposeOfReferenceCodeSequence'
  },
  x0040a171: {
    tag: '(0040,A171)',
    vr: 'UI',
    vm: 1,
    name: 'ObservationUIDTrial'
  },
  x0040a172: {
    tag: '(0040,A172)',
    vr: 'UI',
    vm: 1,
    name: 'ReferencedObservationUIDTrial'
  },
  x0040a173: {
    tag: '(0040,A173)',
    vr: 'CS',
    vm: 1,
    name: 'ReferencedObservationClassTrial'
  },
  x0040a174: {
    tag: '(0040,A174)',
    vr: 'CS',
    vm: 1,
    name: 'ReferencedObjectObservationClassTrial'
  },
  x0040a180: {
    tag: '(0040,A180)',
    vr: 'US',
    vm: 1,
    name: 'AnnotationGroupNumber'
  },
  x0040a192: {
    tag: '(0040,A192)',
    vr: 'DA',
    vm: 1,
    name: 'ObservationDateTrial'
  },
  x0040a193: {
    tag: '(0040,A193)',
    vr: 'TM',
    vm: 1,
    name: 'ObservationTimeTrial'
  },
  x0040a194: {
    tag: '(0040,A194)',
    vr: 'CS',
    vm: 1,
    name: 'MeasurementAutomationTrial'
  },
  x0040a195: {
    tag: '(0040,A195)',
    vr: 'SQ',
    vm: 1,
    name: 'ModifierCodeSequence'
  },
  x0040a224: {
    tag: '(0040,A224)',
    vr: 'ST',
    vm: 1,
    name: 'IdentificationDescriptionTrial'
  },
  x0040a290: {
    tag: '(0040,A290)',
    vr: 'CS',
    vm: 1,
    name: 'CoordinatesSetGeometricTypeTrial'
  },
  x0040a296: {
    tag: '(0040,A296)',
    vr: 'SQ',
    vm: 1,
    name: 'AlgorithmCodeSequenceTrial'
  },
  x0040a297: {
    tag: '(0040,A297)',
    vr: 'ST',
    vm: 1,
    name: 'AlgorithmDescriptionTrial'
  },
  x0040a29a: {
    tag: '(0040,A29A)',
    vr: 'SL',
    vm: '2-2n',
    name: 'PixelCoordinatesSetTrial'
  },
  x0040a300: {
    tag: '(0040,A300)',
    vr: 'SQ',
    vm: 1,
    name: 'MeasuredValueSequence'
  },
  x0040a301: {
    tag: '(0040,A301)',
    vr: 'SQ',
    vm: 1,
    name: 'NumericValueQualifierCodeSequence'
  },
  x0040a307: {
    tag: '(0040,A307)',
    vr: 'PN',
    vm: 1,
    name: 'CurrentObserverTrial'
  },
  x0040a30a: {
    tag: '(0040,A30A)',
    vr: 'DS',
    vm: '1-n',
    name: 'NumericValue'
  },
  x0040a313: {
    tag: '(0040,A313)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedAccessionSequenceTrial'
  },
  x0040a33a: {
    tag: '(0040,A33A)',
    vr: 'ST',
    vm: 1,
    name: 'ReportStatusCommentTrial'
  },
  x0040a340: {
    tag: '(0040,A340)',
    vr: 'SQ',
    vm: 1,
    name: 'ProcedureContextSequenceTrial'
  },
  x0040a352: {
    tag: '(0040,A352)',
    vr: 'PN',
    vm: 1,
    name: 'VerbalSourceTrial'
  },
  x0040a353: {
    tag: '(0040,A353)',
    vr: 'ST',
    vm: 1,
    name: 'AddressTrial'
  },
  x0040a354: {
    tag: '(0040,A354)',
    vr: 'LO',
    vm: 1,
    name: 'TelephoneNumberTrial'
  },
  x0040a358: {
    tag: '(0040,A358)',
    vr: 'SQ',
    vm: 1,
    name: 'VerbalSourceIdentifierCodeSequenceTrial'
  },
  x0040a360: {
    tag: '(0040,A360)',
    vr: 'SQ',
    vm: 1,
    name: 'PredecessorDocumentsSequence'
  },
  x0040a370: {
    tag: '(0040,A370)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedRequestSequence'
  },
  x0040a372: {
    tag: '(0040,A372)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedProcedureCodeSequence'
  },
  x0040a375: {
    tag: '(0040,A375)',
    vr: 'SQ',
    vm: 1,
    name: 'CurrentRequestedProcedureEvidenceSequence'
  },
  x0040a380: {
    tag: '(0040,A380)',
    vr: 'SQ',
    vm: 1,
    name: 'ReportDetailSequenceTrial'
  },
  x0040a385: {
    tag: '(0040,A385)',
    vr: 'SQ',
    vm: 1,
    name: 'PertinentOtherEvidenceSequence'
  },
  x0040a390: {
    tag: '(0040,A390)',
    vr: 'SQ',
    vm: 1,
    name: 'HL7StructuredDocumentReferenceSequence'
  },
  x0040a402: {
    tag: '(0040,A402)',
    vr: 'UI',
    vm: 1,
    name: 'ObservationSubjectUIDTrial'
  },
  x0040a403: {
    tag: '(0040,A403)',
    vr: 'CS',
    vm: 1,
    name: 'ObservationSubjectClassTrial'
  },
  x0040a404: {
    tag: '(0040,A404)',
    vr: 'SQ',
    vm: 1,
    name: 'ObservationSubjectTypeCodeSequenceTrial'
  },
  x0040a491: {
    tag: '(0040,A491)',
    vr: 'CS',
    vm: 1,
    name: 'CompletionFlag'
  },
  x0040a492: {
    tag: '(0040,A492)',
    vr: 'LO',
    vm: 1,
    name: 'CompletionFlagDescription'
  },
  x0040a493: {
    tag: '(0040,A493)',
    vr: 'CS',
    vm: 1,
    name: 'VerificationFlag'
  },
  x0040a494: {
    tag: '(0040,A494)',
    vr: 'CS',
    vm: 1,
    name: 'ArchiveRequested'
  },
  x0040a496: {
    tag: '(0040,A496)',
    vr: 'CS',
    vm: 1,
    name: 'PreliminaryFlag'
  },
  x0040a504: {
    tag: '(0040,A504)',
    vr: 'SQ',
    vm: 1,
    name: 'ContentTemplateSequence'
  },
  x0040a525: {
    tag: '(0040,A525)',
    vr: 'SQ',
    vm: 1,
    name: 'IdenticalDocumentsSequence'
  },
  x0040a600: {
    tag: '(0040,A600)',
    vr: 'CS',
    vm: 1,
    name: 'ObservationSubjectContextFlagTrial'
  },
  x0040a601: {
    tag: '(0040,A601)',
    vr: 'CS',
    vm: 1,
    name: 'ObserverContextFlagTrial'
  },
  x0040a603: {
    tag: '(0040,A603)',
    vr: 'CS',
    vm: 1,
    name: 'ProcedureContextFlagTrial'
  },
  x0040a730: {
    tag: '(0040,A730)',
    vr: 'SQ',
    vm: 1,
    name: 'ContentSequence'
  },
  x0040a731: {
    tag: '(0040,A731)',
    vr: 'SQ',
    vm: 1,
    name: 'RelationshipSequenceTrial'
  },
  x0040a732: {
    tag: '(0040,A732)',
    vr: 'SQ',
    vm: 1,
    name: 'RelationshipTypeCodeSequenceTrial'
  },
  x0040a744: {
    tag: '(0040,A744)',
    vr: 'SQ',
    vm: 1,
    name: 'LanguageCodeSequenceTrial'
  },
  x0040a992: {
    tag: '(0040,A992)',
    vr: 'ST',
    vm: 1,
    name: 'UniformResourceLocatorTrial'
  },
  x0040b020: {
    tag: '(0040,B020)',
    vr: 'SQ',
    vm: 1,
    name: 'WaveformAnnotationSequence'
  },
  x0040db00: {
    tag: '(0040,DB00)',
    vr: 'CS',
    vm: 1,
    name: 'TemplateIdentifier'
  },
  x0040db06: {
    tag: '(0040,DB06)',
    vr: 'DT',
    vm: 1,
    name: 'TemplateVersion'
  },
  x0040db07: {
    tag: '(0040,DB07)',
    vr: 'DT',
    vm: 1,
    name: 'TemplateLocalVersion'
  },
  x0040db0b: {
    tag: '(0040,DB0B)',
    vr: 'CS',
    vm: 1,
    name: 'TemplateExtensionFlag'
  },
  x0040db0c: {
    tag: '(0040,DB0C)',
    vr: 'UI',
    vm: 1,
    name: 'TemplateExtensionOrganizationUID'
  },
  x0040db0d: {
    tag: '(0040,DB0D)',
    vr: 'UI',
    vm: 1,
    name: 'TemplateExtensionCreatorUID'
  },
  x0040db73: {
    tag: '(0040,DB73)',
    vr: 'UL',
    vm: '1-n',
    name: 'ReferencedContentItemIdentifier'
  },
  x0040e001: {
    tag: '(0040,E001)',
    vr: 'ST',
    vm: 1,
    name: 'HL7InstanceIdentifier'
  },
  x0040e004: {
    tag: '(0040,E004)',
    vr: 'DT',
    vm: 1,
    name: 'HL7DocumentEffectiveTime'
  },
  x0040e006: {
    tag: '(0040,E006)',
    vr: 'SQ',
    vm: 1,
    name: 'HL7DocumentTypeCodeSequence'
  },
  x0040e008: {
    tag: '(0040,E008)',
    vr: 'SQ',
    vm: 1,
    name: 'DocumentClassCodeSequence'
  },
  x0040e010: {
    tag: '(0040,E010)',
    vr: 'UT',
    vm: 1,
    name: 'RetrieveURI'
  },
  x0040e011: {
    tag: '(0040,E011)',
    vr: 'UI',
    vm: 1,
    name: 'RetrieveLocationUID'
  },
  x0040e020: {
    tag: '(0040,E020)',
    vr: 'CS',
    vm: 1,
    name: 'TypeOfInstances'
  },
  x0040e021: {
    tag: '(0040,E021)',
    vr: 'SQ',
    vm: 1,
    name: 'DICOMRetrievalSequence'
  },
  x0040e022: {
    tag: '(0040,E022)',
    vr: 'SQ',
    vm: 1,
    name: 'DICOMMediaRetrievalSequence'
  },
  x0040e023: {
    tag: '(0040,E023)',
    vr: 'SQ',
    vm: 1,
    name: 'WADORetrievalSequence'
  },
  x0040e024: {
    tag: '(0040,E024)',
    vr: 'SQ',
    vm: 1,
    name: 'xdsretrievalsequence'
  },
  x0040e030: {
    tag: '(0040,E030)',
    vr: 'UI',
    vm: 1,
    name: 'RepositoryUniqueID'
  },
  x0040e031: {
    tag: '(0040,E031)',
    vr: 'UI',
    vm: 1,
    name: 'HomeCommunityID'
  },
  x00420010: {
    tag: '(0042,0010)',
    vr: 'ST',
    vm: 1,
    name: 'DocumentTitle'
  },
  x00420011: {
    tag: '(0042,0011)',
    vr: 'OB',
    vm: 1,
    name: 'EncapsulatedDocument'
  },
  x00420012: {
    tag: '(0042,0012)',
    vr: 'LO',
    vm: 1,
    name: 'MIMETypeOfEncapsulatedDocument'
  },
  x00420013: {
    tag: '(0042,0013)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceInstanceSequence'
  },
  x00420014: {
    tag: '(0042,0014)',
    vr: 'LO',
    vm: '1-n',
    name: 'ListOfMIMETypes'
  },
  x00440001: {
    tag: '(0044,0001)',
    vr: 'ST',
    vm: 1,
    name: 'ProductPackageIdentifier'
  },
  x00440002: {
    tag: '(0044,0002)',
    vr: 'CS',
    vm: 1,
    name: 'SubstanceAdministrationApproval'
  },
  x00440003: {
    tag: '(0044,0003)',
    vr: 'LT',
    vm: 1,
    name: 'ApprovalStatusFurtherDescription'
  },
  x00440004: {
    tag: '(0044,0004)',
    vr: 'DT',
    vm: 1,
    name: 'ApprovalStatusDateTime'
  },
  x00440007: {
    tag: '(0044,0007)',
    vr: 'SQ',
    vm: 1,
    name: 'ProductTypeCodeSequence'
  },
  x00440008: {
    tag: '(0044,0008)',
    vr: 'LO',
    vm: '1-n',
    name: 'ProductName'
  },
  x00440009: {
    tag: '(0044,0009)',
    vr: 'LT',
    vm: 1,
    name: 'ProductDescription'
  },
  x0044000a: {
    tag: '(0044,000A)',
    vr: 'LO',
    vm: 1,
    name: 'ProductLotIdentifier'
  },
  x0044000b: {
    tag: '(0044,000B)',
    vr: 'DT',
    vm: 1,
    name: 'ProductExpirationDateTime'
  },
  x00440010: {
    tag: '(0044,0010)',
    vr: 'DT',
    vm: 1,
    name: 'SubstanceAdministrationDateTime'
  },
  x00440011: {
    tag: '(0044,0011)',
    vr: 'LO',
    vm: 1,
    name: 'SubstanceAdministrationNotes'
  },
  x00440012: {
    tag: '(0044,0012)',
    vr: 'LO',
    vm: 1,
    name: 'SubstanceAdministrationDeviceID'
  },
  x00440013: {
    tag: '(0044,0013)',
    vr: 'SQ',
    vm: 1,
    name: 'ProductParameterSequence'
  },
  x00440019: {
    tag: '(0044,0019)',
    vr: 'SQ',
    vm: 1,
    name: 'SubstanceAdministrationParameterSequence'
  },
  x00460012: {
    tag: '(0046,0012)',
    vr: 'LO',
    vm: 1,
    name: 'LensDescription'
  },
  x00460014: {
    tag: '(0046,0014)',
    vr: 'SQ',
    vm: 1,
    name: 'RightLensSequence'
  },
  x00460015: {
    tag: '(0046,0015)',
    vr: 'SQ',
    vm: 1,
    name: 'LeftLensSequence'
  },
  x00460016: {
    tag: '(0046,0016)',
    vr: 'SQ',
    vm: 1,
    name: 'UnspecifiedLateralityLensSequence'
  },
  x00460018: {
    tag: '(0046,0018)',
    vr: 'SQ',
    vm: 1,
    name: 'CylinderSequence'
  },
  x00460028: {
    tag: '(0046,0028)',
    vr: 'SQ',
    vm: 1,
    name: 'PrismSequence'
  },
  x00460030: {
    tag: '(0046,0030)',
    vr: 'FD',
    vm: 1,
    name: 'HorizontalPrismPower'
  },
  x00460032: {
    tag: '(0046,0032)',
    vr: 'CS',
    vm: 1,
    name: 'HorizontalPrismBase'
  },
  x00460034: {
    tag: '(0046,0034)',
    vr: 'FD',
    vm: 1,
    name: 'VerticalPrismPower'
  },
  x00460036: {
    tag: '(0046,0036)',
    vr: 'CS',
    vm: 1,
    name: 'VerticalPrismBase'
  },
  x00460038: {
    tag: '(0046,0038)',
    vr: 'CS',
    vm: 1,
    name: 'LensSegmentType'
  },
  x00460040: {
    tag: '(0046,0040)',
    vr: 'FD',
    vm: 1,
    name: 'OpticalTransmittance'
  },
  x00460042: {
    tag: '(0046,0042)',
    vr: 'FD',
    vm: 1,
    name: 'ChannelWidth'
  },
  x00460044: {
    tag: '(0046,0044)',
    vr: 'FD',
    vm: 1,
    name: 'PupilSize'
  },
  x00460046: {
    tag: '(0046,0046)',
    vr: 'FD',
    vm: 1,
    name: 'CornealSize'
  },
  x00460050: {
    tag: '(0046,0050)',
    vr: 'SQ',
    vm: 1,
    name: 'AutorefractionRightEyeSequence'
  },
  x00460052: {
    tag: '(0046,0052)',
    vr: 'SQ',
    vm: 1,
    name: 'AutorefractionLeftEyeSequence'
  },
  x00460060: {
    tag: '(0046,0060)',
    vr: 'FD',
    vm: 1,
    name: 'DistancePupillaryDistance'
  },
  x00460062: {
    tag: '(0046,0062)',
    vr: 'FD',
    vm: 1,
    name: 'NearPupillaryDistance'
  },
  x00460063: {
    tag: '(0046,0063)',
    vr: 'FD',
    vm: 1,
    name: 'IntermediatePupillaryDistance'
  },
  x00460064: {
    tag: '(0046,0064)',
    vr: 'FD',
    vm: 1,
    name: 'OtherPupillaryDistance'
  },
  x00460070: {
    tag: '(0046,0070)',
    vr: 'SQ',
    vm: 1,
    name: 'KeratometryRightEyeSequence'
  },
  x00460071: {
    tag: '(0046,0071)',
    vr: 'SQ',
    vm: 1,
    name: 'KeratometryLeftEyeSequence'
  },
  x00460074: {
    tag: '(0046,0074)',
    vr: 'SQ',
    vm: 1,
    name: 'SteepKeratometricAxisSequence'
  },
  x00460075: {
    tag: '(0046,0075)',
    vr: 'FD',
    vm: 1,
    name: 'RadiusOfCurvature'
  },
  x00460076: {
    tag: '(0046,0076)',
    vr: 'FD',
    vm: 1,
    name: 'KeratometricPower'
  },
  x00460077: {
    tag: '(0046,0077)',
    vr: 'FD',
    vm: 1,
    name: 'KeratometricAxis'
  },
  x00460080: {
    tag: '(0046,0080)',
    vr: 'SQ',
    vm: 1,
    name: 'FlatKeratometricAxisSequence'
  },
  x00460092: {
    tag: '(0046,0092)',
    vr: 'CS',
    vm: 1,
    name: 'BackgroundColor'
  },
  x00460094: {
    tag: '(0046,0094)',
    vr: 'CS',
    vm: 1,
    name: 'Optotype'
  },
  x00460095: {
    tag: '(0046,0095)',
    vr: 'CS',
    vm: 1,
    name: 'OptotypePresentation'
  },
  x00460097: {
    tag: '(0046,0097)',
    vr: 'SQ',
    vm: 1,
    name: 'SubjectiveRefractionRightEyeSequence'
  },
  x00460098: {
    tag: '(0046,0098)',
    vr: 'SQ',
    vm: 1,
    name: 'SubjectiveRefractionLeftEyeSequence'
  },
  x00460100: {
    tag: '(0046,0100)',
    vr: 'SQ',
    vm: 1,
    name: 'AddNearSequence'
  },
  x00460101: {
    tag: '(0046,0101)',
    vr: 'SQ',
    vm: 1,
    name: 'AddIntermediateSequence'
  },
  x00460102: {
    tag: '(0046,0102)',
    vr: 'SQ',
    vm: 1,
    name: 'AddOtherSequence'
  },
  x00460104: {
    tag: '(0046,0104)',
    vr: 'FD',
    vm: 1,
    name: 'AddPower'
  },
  x00460106: {
    tag: '(0046,0106)',
    vr: 'FD',
    vm: 1,
    name: 'ViewingDistance'
  },
  x00460121: {
    tag: '(0046,0121)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualAcuityTypeCodeSequence'
  },
  x00460122: {
    tag: '(0046,0122)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualAcuityRightEyeSequence'
  },
  x00460123: {
    tag: '(0046,0123)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualAcuityLeftEyeSequence'
  },
  x00460124: {
    tag: '(0046,0124)',
    vr: 'SQ',
    vm: 1,
    name: 'VisualAcuityBothEyesOpenSequence'
  },
  x00460125: {
    tag: '(0046,0125)',
    vr: 'CS',
    vm: 1,
    name: 'ViewingDistanceType'
  },
  x00460135: {
    tag: '(0046,0135)',
    vr: 'SS',
    vm: 2,
    name: 'VisualAcuityModifiers'
  },
  x00460137: {
    tag: '(0046,0137)',
    vr: 'FD',
    vm: 1,
    name: 'DecimalVisualAcuity'
  },
  x00460139: {
    tag: '(0046,0139)',
    vr: 'LO',
    vm: 1,
    name: 'OptotypeDetailedDefinition'
  },
  x00460145: {
    tag: '(0046,0145)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedRefractiveMeasurementsSequence'
  },
  x00460146: {
    tag: '(0046,0146)',
    vr: 'FD',
    vm: 1,
    name: 'SpherePower'
  },
  x00460147: {
    tag: '(0046,0147)',
    vr: 'FD',
    vm: 1,
    name: 'CylinderPower'
  },
  x00480001: {
    tag: '(0048,0001)',
    vr: 'FL',
    vm: 1,
    name: 'ImagedVolumeWidth'
  },
  x00480002: {
    tag: '(0048,0002)',
    vr: 'FL',
    vm: 1,
    name: 'ImagedVolumeHeight'
  },
  x00480003: {
    tag: '(0048,0003)',
    vr: 'FL',
    vm: 1,
    name: 'ImagedVolumeDepth'
  },
  x00480006: {
    tag: '(0048,0006)',
    vr: 'UL',
    vm: 1,
    name: 'TotalPixelMatrixColumns'
  },
  x00480007: {
    tag: '(0048,0007)',
    vr: 'UL',
    vm: 1,
    name: 'TotalPixelMatrixRows'
  },
  x00480008: {
    tag: '(0048,0008)',
    vr: 'SQ',
    vm: 1,
    name: 'TotalPixelMatrixOriginSequence'
  },
  x00480010: {
    tag: '(0048,0010)',
    vr: 'CS',
    vm: 1,
    name: 'SpecimenLabelInImage'
  },
  x00480011: {
    tag: '(0048,0011)',
    vr: 'CS',
    vm: 1,
    name: 'FocusMethod'
  },
  x00480012: {
    tag: '(0048,0012)',
    vr: 'CS',
    vm: 1,
    name: 'ExtendedDepthOfField'
  },
  x00480013: {
    tag: '(0048,0013)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfFocalPlanes'
  },
  x00480014: {
    tag: '(0048,0014)',
    vr: 'FL',
    vm: 1,
    name: 'DistanceBetweenFocalPlanes'
  },
  x00480015: {
    tag: '(0048,0015)',
    vr: 'US',
    vm: 3,
    name: 'RecommendedAbsentPixelCIELabValue'
  },
  x00480100: {
    tag: '(0048,0100)',
    vr: 'SQ',
    vm: 1,
    name: 'IlluminatorTypeCodeSequence'
  },
  x00480102: {
    tag: '(0048,0102)',
    vr: 'DS',
    vm: 6,
    name: 'ImageOrientationSlide'
  },
  x00480105: {
    tag: '(0048,0105)',
    vr: 'SQ',
    vm: 1,
    name: 'OpticalPathSequence'
  },
  x00480106: {
    tag: '(0048,0106)',
    vr: 'SH',
    vm: 1,
    name: 'OpticalPathIdentifier'
  },
  x00480107: {
    tag: '(0048,0107)',
    vr: 'ST',
    vm: 1,
    name: 'OpticalPathDescription'
  },
  x00480108: {
    tag: '(0048,0108)',
    vr: 'SQ',
    vm: 1,
    name: 'IlluminationColorCodeSequence'
  },
  x00480110: {
    tag: '(0048,0110)',
    vr: 'SQ',
    vm: 1,
    name: 'SpecimenReferenceSequence'
  },
  x00480111: {
    tag: '(0048,0111)',
    vr: 'DS',
    vm: 1,
    name: 'CondenserLensPower'
  },
  x00480112: {
    tag: '(0048,0112)',
    vr: 'DS',
    vm: 1,
    name: 'ObjectiveLensPower'
  },
  x00480113: {
    tag: '(0048,0113)',
    vr: 'DS',
    vm: 1,
    name: 'ObjectiveLensNumericalAperture'
  },
  x00480120: {
    tag: '(0048,0120)',
    vr: 'SQ',
    vm: 1,
    name: 'PaletteColorLookupTableSequence'
  },
  x00480200: {
    tag: '(0048,0200)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedImageNavigationSequence'
  },
  x00480201: {
    tag: '(0048,0201)',
    vr: 'US',
    vm: 2,
    name: 'TopLeftHandCornerOfLocalizerArea'
  },
  x00480202: {
    tag: '(0048,0202)',
    vr: 'US',
    vm: 2,
    name: 'BottomRightHandCornerOfLocalizerArea'
  },
  x00480207: {
    tag: '(0048,0207)',
    vr: 'SQ',
    vm: 1,
    name: 'OpticalPathIdentificationSequence'
  },
  x0048021a: {
    tag: '(0048,021A)',
    vr: 'SQ',
    vm: 1,
    name: 'PlanePositionSlideSequence'
  },
  x0048021e: {
    tag: '(0048,021E)',
    vr: 'SL',
    vm: 1,
    name: 'RowPositionInTotalImagePixelMatrix'
  },
  x0048021f: {
    tag: '(0048,021F)',
    vr: 'SL',
    vm: 1,
    name: 'ColumnPositionInTotalImagePixelMatrix'
  },
  x00480301: {
    tag: '(0048,0301)',
    vr: 'CS',
    vm: 1,
    name: 'PixelOriginInterpretation'
  },
  x00500004: {
    tag: '(0050,0004)',
    vr: 'CS',
    vm: 1,
    name: 'CalibrationImage'
  },
  x00500010: {
    tag: '(0050,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'DeviceSequence'
  },
  x00500012: {
    tag: '(0050,0012)',
    vr: 'SQ',
    vm: 1,
    name: 'ContainerComponentTypeCodeSequence'
  },
  x00500013: {
    tag: '(0050,0013)',
    vr: 'FD',
    vm: 1,
    name: 'ContainerComponentThickness'
  },
  x00500014: {
    tag: '(0050,0014)',
    vr: 'DS',
    vm: 1,
    name: 'DeviceLength'
  },
  x00500015: {
    tag: '(0050,0015)',
    vr: 'FD',
    vm: 1,
    name: 'ContainerComponentWidth'
  },
  x00500016: {
    tag: '(0050,0016)',
    vr: 'DS',
    vm: 1,
    name: 'DeviceDiameter'
  },
  x00500017: {
    tag: '(0050,0017)',
    vr: 'CS',
    vm: 1,
    name: 'DeviceDiameterUnits'
  },
  x00500018: {
    tag: '(0050,0018)',
    vr: 'DS',
    vm: 1,
    name: 'DeviceVolume'
  },
  x00500019: {
    tag: '(0050,0019)',
    vr: 'DS',
    vm: 1,
    name: 'InterMarkerDistance'
  },
  x0050001a: {
    tag: '(0050,001A)',
    vr: 'CS',
    vm: 1,
    name: 'ContainerComponentMaterial'
  },
  x0050001b: {
    tag: '(0050,001B)',
    vr: 'LO',
    vm: 1,
    name: 'ContainerComponentID'
  },
  x0050001c: {
    tag: '(0050,001C)',
    vr: 'FD',
    vm: 1,
    name: 'ContainerComponentLength'
  },
  x0050001d: {
    tag: '(0050,001D)',
    vr: 'FD',
    vm: 1,
    name: 'ContainerComponentDiameter'
  },
  x0050001e: {
    tag: '(0050,001E)',
    vr: 'LO',
    vm: 1,
    name: 'ContainerComponentDescription'
  },
  x00500020: {
    tag: '(0050,0020)',
    vr: 'LO',
    vm: 1,
    name: 'DeviceDescription'
  },
  x00520001: {
    tag: '(0052,0001)',
    vr: 'FL',
    vm: 1,
    name: 'ContrastBolusIngredientPercentByVolume'
  },
  x00520002: {
    tag: '(0052,0002)',
    vr: 'FD',
    vm: 1,
    name: 'OCTFocalDistance'
  },
  x00520003: {
    tag: '(0052,0003)',
    vr: 'FD',
    vm: 1,
    name: 'BeamSpotSize'
  },
  x00520004: {
    tag: '(0052,0004)',
    vr: 'FD',
    vm: 1,
    name: 'EffectiveRefractiveIndex'
  },
  x00520006: {
    tag: '(0052,0006)',
    vr: 'CS',
    vm: 1,
    name: 'OCTAcquisitionDomain'
  },
  x00520007: {
    tag: '(0052,0007)',
    vr: 'FD',
    vm: 1,
    name: 'OCTOpticalCenterWavelength'
  },
  x00520008: {
    tag: '(0052,0008)',
    vr: 'FD',
    vm: 1,
    name: 'AxialResolution'
  },
  x00520009: {
    tag: '(0052,0009)',
    vr: 'FD',
    vm: 1,
    name: 'RangingDepth'
  },
  x00520011: {
    tag: '(0052,0011)',
    vr: 'FD',
    vm: 1,
    name: 'ALineRate'
  },
  x00520012: {
    tag: '(0052,0012)',
    vr: 'US',
    vm: 1,
    name: 'ALinesPerFrame'
  },
  x00520013: {
    tag: '(0052,0013)',
    vr: 'FD',
    vm: 1,
    name: 'CatheterRotationalRate'
  },
  x00520014: {
    tag: '(0052,0014)',
    vr: 'FD',
    vm: 1,
    name: 'ALinePixelSpacing'
  },
  x00520016: {
    tag: '(0052,0016)',
    vr: 'SQ',
    vm: 1,
    name: 'ModeOfPercutaneousAccessSequence'
  },
  x00520025: {
    tag: '(0052,0025)',
    vr: 'SQ',
    vm: 1,
    name: 'IntravascularOCTFrameTypeSequence'
  },
  x00520026: {
    tag: '(0052,0026)',
    vr: 'CS',
    vm: 1,
    name: 'OCTZOffsetApplied'
  },
  x00520027: {
    tag: '(0052,0027)',
    vr: 'SQ',
    vm: 1,
    name: 'IntravascularFrameContentSequence'
  },
  x00520028: {
    tag: '(0052,0028)',
    vr: 'FD',
    vm: 1,
    name: 'IntravascularLongitudinalDistance'
  },
  x00520029: {
    tag: '(0052,0029)',
    vr: 'SQ',
    vm: 1,
    name: 'IntravascularOCTFrameContentSequence'
  },
  x00520030: {
    tag: '(0052,0030)',
    vr: 'SS',
    vm: 1,
    name: 'OCTZOffsetCorrection'
  },
  x00520031: {
    tag: '(0052,0031)',
    vr: 'CS',
    vm: 1,
    name: 'CatheterDirectionOfRotation'
  },
  x00520033: {
    tag: '(0052,0033)',
    vr: 'FD',
    vm: 1,
    name: 'SeamLineLocation'
  },
  x00520034: {
    tag: '(0052,0034)',
    vr: 'FD',
    vm: 1,
    name: 'FirstALineLocation'
  },
  x00520036: {
    tag: '(0052,0036)',
    vr: 'US',
    vm: 1,
    name: 'SeamLineIndex'
  },
  x00520038: {
    tag: '(0052,0038)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfPaddedAlines'
  },
  x00520039: {
    tag: '(0052,0039)',
    vr: 'CS',
    vm: 1,
    name: 'InterpolationType'
  },
  x0052003a: {
    tag: '(0052,003A)',
    vr: 'CS',
    vm: 1,
    name: 'RefractiveIndexApplied'
  },
  x00540011: {
    tag: '(0054,0011)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfEnergyWindows'
  },
  x00540012: {
    tag: '(0054,0012)',
    vr: 'SQ',
    vm: 1,
    name: 'EnergyWindowInformationSequence'
  },
  x00540013: {
    tag: '(0054,0013)',
    vr: 'SQ',
    vm: 1,
    name: 'EnergyWindowRangeSequence'
  },
  x00540014: {
    tag: '(0054,0014)',
    vr: 'DS',
    vm: 1,
    name: 'EnergyWindowLowerLimit'
  },
  x00540015: {
    tag: '(0054,0015)',
    vr: 'DS',
    vm: 1,
    name: 'EnergyWindowUpperLimit'
  },
  x00540016: {
    tag: '(0054,0016)',
    vr: 'SQ',
    vm: 1,
    name: 'RadiopharmaceuticalInformationSequence'
  },
  x00540017: {
    tag: '(0054,0017)',
    vr: 'IS',
    vm: 1,
    name: 'ResidualSyringeCounts'
  },
  x00540018: {
    tag: '(0054,0018)',
    vr: 'SH',
    vm: 1,
    name: 'EnergyWindowName'
  },
  x00540020: {
    tag: '(0054,0020)',
    vr: 'US',
    vm: '1-n',
    name: 'DetectorVector'
  },
  x00540021: {
    tag: '(0054,0021)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfDetectors'
  },
  x00540022: {
    tag: '(0054,0022)',
    vr: 'SQ',
    vm: 1,
    name: 'DetectorInformationSequence'
  },
  x00540030: {
    tag: '(0054,0030)',
    vr: 'US',
    vm: '1-n',
    name: 'PhaseVector'
  },
  x00540031: {
    tag: '(0054,0031)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfPhases'
  },
  x00540032: {
    tag: '(0054,0032)',
    vr: 'SQ',
    vm: 1,
    name: 'PhaseInformationSequence'
  },
  x00540033: {
    tag: '(0054,0033)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfFramesInPhase'
  },
  x00540036: {
    tag: '(0054,0036)',
    vr: 'IS',
    vm: 1,
    name: 'PhaseDelay'
  },
  x00540038: {
    tag: '(0054,0038)',
    vr: 'IS',
    vm: 1,
    name: 'PauseBetweenFrames'
  },
  x00540039: {
    tag: '(0054,0039)',
    vr: 'CS',
    vm: 1,
    name: 'PhaseDescription'
  },
  x00540050: {
    tag: '(0054,0050)',
    vr: 'US',
    vm: '1-n',
    name: 'RotationVector'
  },
  x00540051: {
    tag: '(0054,0051)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfRotations'
  },
  x00540052: {
    tag: '(0054,0052)',
    vr: 'SQ',
    vm: 1,
    name: 'RotationInformationSequence'
  },
  x00540053: {
    tag: '(0054,0053)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfFramesInRotation'
  },
  x00540060: {
    tag: '(0054,0060)',
    vr: 'US',
    vm: '1-n',
    name: 'RRIntervalVector'
  },
  x00540061: {
    tag: '(0054,0061)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfRRIntervals'
  },
  x00540062: {
    tag: '(0054,0062)',
    vr: 'SQ',
    vm: 1,
    name: 'GatedInformationSequence'
  },
  x00540063: {
    tag: '(0054,0063)',
    vr: 'SQ',
    vm: 1,
    name: 'DataInformationSequence'
  },
  x00540070: {
    tag: '(0054,0070)',
    vr: 'US',
    vm: '1-n',
    name: 'TimeSlotVector'
  },
  x00540071: {
    tag: '(0054,0071)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfTimeSlots'
  },
  x00540072: {
    tag: '(0054,0072)',
    vr: 'SQ',
    vm: 1,
    name: 'TimeSlotInformationSequence'
  },
  x00540073: {
    tag: '(0054,0073)',
    vr: 'DS',
    vm: 1,
    name: 'TimeSlotTime'
  },
  x00540080: {
    tag: '(0054,0080)',
    vr: 'US',
    vm: '1-n',
    name: 'SliceVector'
  },
  x00540081: {
    tag: '(0054,0081)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfSlices'
  },
  x00540090: {
    tag: '(0054,0090)',
    vr: 'US',
    vm: '1-n',
    name: 'AngularViewVector'
  },
  x00540100: {
    tag: '(0054,0100)',
    vr: 'US',
    vm: '1-n',
    name: 'TimeSliceVector'
  },
  x00540101: {
    tag: '(0054,0101)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfTimeSlices'
  },
  x00540200: {
    tag: '(0054,0200)',
    vr: 'DS',
    vm: 1,
    name: 'StartAngle'
  },
  x00540202: {
    tag: '(0054,0202)',
    vr: 'CS',
    vm: 1,
    name: 'TypeOfDetectorMotion'
  },
  x00540210: {
    tag: '(0054,0210)',
    vr: 'IS',
    vm: '1-n',
    name: 'TriggerVector'
  },
  x00540211: {
    tag: '(0054,0211)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfTriggersInPhase'
  },
  x00540220: {
    tag: '(0054,0220)',
    vr: 'SQ',
    vm: 1,
    name: 'ViewCodeSequence'
  },
  x00540222: {
    tag: '(0054,0222)',
    vr: 'SQ',
    vm: 1,
    name: 'ViewModifierCodeSequence'
  },
  x00540300: {
    tag: '(0054,0300)',
    vr: 'SQ',
    vm: 1,
    name: 'RadionuclideCodeSequence'
  },
  x00540302: {
    tag: '(0054,0302)',
    vr: 'SQ',
    vm: 1,
    name: 'AdministrationRouteCodeSequence'
  },
  x00540304: {
    tag: '(0054,0304)',
    vr: 'SQ',
    vm: 1,
    name: 'RadiopharmaceuticalCodeSequence'
  },
  x00540306: {
    tag: '(0054,0306)',
    vr: 'SQ',
    vm: 1,
    name: 'CalibrationDataSequence'
  },
  x00540308: {
    tag: '(0054,0308)',
    vr: 'US',
    vm: 1,
    name: 'EnergyWindowNumber'
  },
  x00540400: {
    tag: '(0054,0400)',
    vr: 'SH',
    vm: 1,
    name: 'ImageID'
  },
  x00540410: {
    tag: '(0054,0410)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientOrientationCodeSequence'
  },
  x00540412: {
    tag: '(0054,0412)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientOrientationModifierCodeSequence'
  },
  x00540414: {
    tag: '(0054,0414)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientGantryRelationshipCodeSequence'
  },
  x00540500: {
    tag: '(0054,0500)',
    vr: 'CS',
    vm: 1,
    name: 'SliceProgressionDirection'
  },
  x00541000: {
    tag: '(0054,1000)',
    vr: 'CS',
    vm: 2,
    name: 'SeriesType'
  },
  x00541001: {
    tag: '(0054,1001)',
    vr: 'CS',
    vm: 1,
    name: 'Units'
  },
  x00541002: {
    tag: '(0054,1002)',
    vr: 'CS',
    vm: 1,
    name: 'CountsSource'
  },
  x00541004: {
    tag: '(0054,1004)',
    vr: 'CS',
    vm: 1,
    name: 'ReprojectionMethod'
  },
  x00541006: {
    tag: '(0054,1006)',
    vr: 'CS',
    vm: 1,
    name: 'SUVType'
  },
  x00541100: {
    tag: '(0054,1100)',
    vr: 'CS',
    vm: 1,
    name: 'RandomsCorrectionMethod'
  },
  x00541101: {
    tag: '(0054,1101)',
    vr: 'LO',
    vm: 1,
    name: 'AttenuationCorrectionMethod'
  },
  x00541102: {
    tag: '(0054,1102)',
    vr: 'CS',
    vm: 1,
    name: 'DecayCorrection'
  },
  x00541103: {
    tag: '(0054,1103)',
    vr: 'LO',
    vm: 1,
    name: 'ReconstructionMethod'
  },
  x00541104: {
    tag: '(0054,1104)',
    vr: 'LO',
    vm: 1,
    name: 'DetectorLinesOfResponseUsed'
  },
  x00541105: {
    tag: '(0054,1105)',
    vr: 'LO',
    vm: 1,
    name: 'ScatterCorrectionMethod'
  },
  x00541200: {
    tag: '(0054,1200)',
    vr: 'DS',
    vm: 1,
    name: 'AxialAcceptance'
  },
  x00541201: {
    tag: '(0054,1201)',
    vr: 'IS',
    vm: 2,
    name: 'AxialMash'
  },
  x00541202: {
    tag: '(0054,1202)',
    vr: 'IS',
    vm: 1,
    name: 'TransverseMash'
  },
  x00541203: {
    tag: '(0054,1203)',
    vr: 'DS',
    vm: 2,
    name: 'DetectorElementSize'
  },
  x00541210: {
    tag: '(0054,1210)',
    vr: 'DS',
    vm: 1,
    name: 'CoincidenceWindowWidth'
  },
  x00541220: {
    tag: '(0054,1220)',
    vr: 'CS',
    vm: '1-n',
    name: 'SecondaryCountsType'
  },
  x00541300: {
    tag: '(0054,1300)',
    vr: 'DS',
    vm: 1,
    name: 'FrameReferenceTime'
  },
  x00541310: {
    tag: '(0054,1310)',
    vr: 'IS',
    vm: 1,
    name: 'PrimaryPromptsCountsAccumulated'
  },
  x00541311: {
    tag: '(0054,1311)',
    vr: 'IS',
    vm: '1-n',
    name: 'SecondaryCountsAccumulated'
  },
  x00541320: {
    tag: '(0054,1320)',
    vr: 'DS',
    vm: 1,
    name: 'SliceSensitivityFactor'
  },
  x00541321: {
    tag: '(0054,1321)',
    vr: 'DS',
    vm: 1,
    name: 'DecayFactor'
  },
  x00541322: {
    tag: '(0054,1322)',
    vr: 'DS',
    vm: 1,
    name: 'DoseCalibrationFactor'
  },
  x00541323: {
    tag: '(0054,1323)',
    vr: 'DS',
    vm: 1,
    name: 'ScatterFractionFactor'
  },
  x00541324: {
    tag: '(0054,1324)',
    vr: 'DS',
    vm: 1,
    name: 'DeadTimeFactor'
  },
  x00541330: {
    tag: '(0054,1330)',
    vr: 'US',
    vm: 1,
    name: 'ImageIndex'
  },
  x00541400: {
    tag: '(0054,1400)',
    vr: 'CS',
    vm: '1-n',
    name: 'CountsIncluded'
  },
  x00541401: {
    tag: '(0054,1401)',
    vr: 'CS',
    vm: 1,
    name: 'DeadTimeCorrectionFlag'
  },
  x00603000: {
    tag: '(0060,3000)',
    vr: 'SQ',
    vm: 1,
    name: 'HistogramSequence'
  },
  x00603002: {
    tag: '(0060,3002)',
    vr: 'US',
    vm: 1,
    name: 'HistogramNumberOfBins'
  },
  x00603004: {
    tag: '(0060,3004)',
    vr: 'US|SS',
    vm: 1,
    name: 'HistogramFirstBinValue'
  },
  x00603006: {
    tag: '(0060,3006)',
    vr: 'US|SS',
    vm: 1,
    name: 'HistogramLastBinValue'
  },
  x00603008: {
    tag: '(0060,3008)',
    vr: 'US',
    vm: 1,
    name: 'HistogramBinWidth'
  },
  x00603010: {
    tag: '(0060,3010)',
    vr: 'LO',
    vm: 1,
    name: 'HistogramExplanation'
  },
  x00603020: {
    tag: '(0060,3020)',
    vr: 'UL',
    vm: '1-n',
    name: 'HistogramData'
  },
  x00620001: {
    tag: '(0062,0001)',
    vr: 'CS',
    vm: 1,
    name: 'SegmentationType'
  },
  x00620002: {
    tag: '(0062,0002)',
    vr: 'SQ',
    vm: 1,
    name: 'SegmentSequence'
  },
  x00620003: {
    tag: '(0062,0003)',
    vr: 'SQ',
    vm: 1,
    name: 'SegmentedPropertyCategoryCodeSequence'
  },
  x00620004: {
    tag: '(0062,0004)',
    vr: 'US',
    vm: 1,
    name: 'SegmentNumber'
  },
  x00620005: {
    tag: '(0062,0005)',
    vr: 'LO',
    vm: 1,
    name: 'SegmentLabel'
  },
  x00620006: {
    tag: '(0062,0006)',
    vr: 'ST',
    vm: 1,
    name: 'SegmentDescription'
  },
  x00620008: {
    tag: '(0062,0008)',
    vr: 'CS',
    vm: 1,
    name: 'SegmentAlgorithmType'
  },
  x00620009: {
    tag: '(0062,0009)',
    vr: 'LO',
    vm: 1,
    name: 'SegmentAlgorithmName'
  },
  x0062000a: {
    tag: '(0062,000A)',
    vr: 'SQ',
    vm: 1,
    name: 'SegmentIdentificationSequence'
  },
  x0062000b: {
    tag: '(0062,000B)',
    vr: 'US',
    vm: '1-n',
    name: 'ReferencedSegmentNumber'
  },
  x0062000c: {
    tag: '(0062,000C)',
    vr: 'US',
    vm: 1,
    name: 'RecommendedDisplayGrayscaleValue'
  },
  x0062000d: {
    tag: '(0062,000D)',
    vr: 'US',
    vm: 3,
    name: 'RecommendedDisplayCIELabValue'
  },
  x0062000e: {
    tag: '(0062,000E)',
    vr: 'US',
    vm: 1,
    name: 'MaximumFractionalValue'
  },
  x0062000f: {
    tag: '(0062,000F)',
    vr: 'SQ',
    vm: 1,
    name: 'SegmentedPropertyTypeCodeSequence'
  },
  x00620010: {
    tag: '(0062,0010)',
    vr: 'CS',
    vm: 1,
    name: 'SegmentationFractionalType'
  },
  x00640002: {
    tag: '(0064,0002)',
    vr: 'SQ',
    vm: 1,
    name: 'DeformableRegistrationSequence'
  },
  x00640003: {
    tag: '(0064,0003)',
    vr: 'UI',
    vm: 1,
    name: 'SourceFrameOfReferenceUID'
  },
  x00640005: {
    tag: '(0064,0005)',
    vr: 'SQ',
    vm: 1,
    name: 'DeformableRegistrationGridSequence'
  },
  x00640007: {
    tag: '(0064,0007)',
    vr: 'UL',
    vm: 3,
    name: 'GridDimensions'
  },
  x00640008: {
    tag: '(0064,0008)',
    vr: 'FD',
    vm: 3,
    name: 'GridResolution'
  },
  x00640009: {
    tag: '(0064,0009)',
    vr: 'OF',
    vm: 1,
    name: 'VectorGridData'
  },
  x0064000f: {
    tag: '(0064,000F)',
    vr: 'SQ',
    vm: 1,
    name: 'PreDeformationMatrixRegistrationSequence'
  },
  x00640010: {
    tag: '(0064,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'PostDeformationMatrixRegistrationSequence'
  },
  x00660001: {
    tag: '(0066,0001)',
    vr: 'UL',
    vm: 1,
    name: 'NumberOfSurfaces'
  },
  x00660002: {
    tag: '(0066,0002)',
    vr: 'SQ',
    vm: 1,
    name: 'SurfaceSequence'
  },
  x00660003: {
    tag: '(0066,0003)',
    vr: 'UL',
    vm: 1,
    name: 'SurfaceNumber'
  },
  x00660004: {
    tag: '(0066,0004)',
    vr: 'LT',
    vm: 1,
    name: 'SurfaceComments'
  },
  x00660009: {
    tag: '(0066,0009)',
    vr: 'CS',
    vm: 1,
    name: 'SurfaceProcessing'
  },
  x0066000a: {
    tag: '(0066,000A)',
    vr: 'FL',
    vm: 1,
    name: 'SurfaceProcessingRatio'
  },
  x0066000b: {
    tag: '(0066,000B)',
    vr: 'LO',
    vm: 1,
    name: 'SurfaceProcessingDescription'
  },
  x0066000c: {
    tag: '(0066,000C)',
    vr: 'FL',
    vm: 1,
    name: 'RecommendedPresentationOpacity'
  },
  x0066000d: {
    tag: '(0066,000D)',
    vr: 'CS',
    vm: 1,
    name: 'RecommendedPresentationType'
  },
  x0066000e: {
    tag: '(0066,000E)',
    vr: 'CS',
    vm: 1,
    name: 'FiniteVolume'
  },
  x00660010: {
    tag: '(0066,0010)',
    vr: 'CS',
    vm: 1,
    name: 'Manifold'
  },
  x00660011: {
    tag: '(0066,0011)',
    vr: 'SQ',
    vm: 1,
    name: 'SurfacePointsSequence'
  },
  x00660012: {
    tag: '(0066,0012)',
    vr: 'SQ',
    vm: 1,
    name: 'SurfacePointsNormalsSequence'
  },
  x00660013: {
    tag: '(0066,0013)',
    vr: 'SQ',
    vm: 1,
    name: 'SurfaceMeshPrimitivesSequence'
  },
  x00660015: {
    tag: '(0066,0015)',
    vr: 'UL',
    vm: 1,
    name: 'NumberOfSurfacePoints'
  },
  x00660016: {
    tag: '(0066,0016)',
    vr: 'OF',
    vm: 1,
    name: 'PointCoordinatesData'
  },
  x00660017: {
    tag: '(0066,0017)',
    vr: 'FL',
    vm: 3,
    name: 'PointPositionAccuracy'
  },
  x00660018: {
    tag: '(0066,0018)',
    vr: 'FL',
    vm: 1,
    name: 'MeanPointDistance'
  },
  x00660019: {
    tag: '(0066,0019)',
    vr: 'FL',
    vm: 1,
    name: 'MaximumPointDistance'
  },
  x0066001a: {
    tag: '(0066,001A)',
    vr: 'FL',
    vm: 6,
    name: 'PointsBoundingBoxCoordinates'
  },
  x0066001b: {
    tag: '(0066,001B)',
    vr: 'FL',
    vm: 3,
    name: 'AxisOfRotation'
  },
  x0066001c: {
    tag: '(0066,001C)',
    vr: 'FL',
    vm: 3,
    name: 'CenterOfRotation'
  },
  x0066001e: {
    tag: '(0066,001E)',
    vr: 'UL',
    vm: 1,
    name: 'NumberOfVectors'
  },
  x0066001f: {
    tag: '(0066,001F)',
    vr: 'US',
    vm: 1,
    name: 'VectorDimensionality'
  },
  x00660020: {
    tag: '(0066,0020)',
    vr: 'FL',
    vm: '1-n',
    name: 'VectorAccuracy'
  },
  x00660021: {
    tag: '(0066,0021)',
    vr: 'OF',
    vm: 1,
    name: 'VectorCoordinateData'
  },
  x00660023: {
    tag: '(0066,0023)',
    vr: 'OW',
    vm: 1,
    name: 'TrianglePointIndexList'
  },
  x00660024: {
    tag: '(0066,0024)',
    vr: 'OW',
    vm: 1,
    name: 'EdgePointIndexList'
  },
  x00660025: {
    tag: '(0066,0025)',
    vr: 'OW',
    vm: 1,
    name: 'VertexPointIndexList'
  },
  x00660026: {
    tag: '(0066,0026)',
    vr: 'SQ',
    vm: 1,
    name: 'TriangleStripSequence'
  },
  x00660027: {
    tag: '(0066,0027)',
    vr: 'SQ',
    vm: 1,
    name: 'TriangleFanSequence'
  },
  x00660028: {
    tag: '(0066,0028)',
    vr: 'SQ',
    vm: 1,
    name: 'LineSequence'
  },
  x00660029: {
    tag: '(0066,0029)',
    vr: 'OW',
    vm: 1,
    name: 'PrimitivePointIndexList'
  },
  x0066002a: {
    tag: '(0066,002A)',
    vr: 'UL',
    vm: 1,
    name: 'SurfaceCount'
  },
  x0066002b: {
    tag: '(0066,002B)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedSurfaceSequence'
  },
  x0066002c: {
    tag: '(0066,002C)',
    vr: 'UL',
    vm: 1,
    name: 'ReferencedSurfaceNumber'
  },
  x0066002d: {
    tag: '(0066,002D)',
    vr: 'SQ',
    vm: 1,
    name: 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'
  },
  x0066002e: {
    tag: '(0066,002E)',
    vr: 'SQ',
    vm: 1,
    name: 'SegmentSurfaceSourceInstanceSequence'
  },
  x0066002f: {
    tag: '(0066,002F)',
    vr: 'SQ',
    vm: 1,
    name: 'AlgorithmFamilyCodeSequence'
  },
  x00660030: {
    tag: '(0066,0030)',
    vr: 'SQ',
    vm: 1,
    name: 'AlgorithmNameCodeSequence'
  },
  x00660031: {
    tag: '(0066,0031)',
    vr: 'LO',
    vm: 1,
    name: 'AlgorithmVersion'
  },
  x00660032: {
    tag: '(0066,0032)',
    vr: 'LT',
    vm: 1,
    name: 'AlgorithmParameters'
  },
  x00660034: {
    tag: '(0066,0034)',
    vr: 'SQ',
    vm: 1,
    name: 'FacetSequence'
  },
  x00660035: {
    tag: '(0066,0035)',
    vr: 'SQ',
    vm: 1,
    name: 'SurfaceProcessingAlgorithmIdentificationSequence'
  },
  x00660036: {
    tag: '(0066,0036)',
    vr: 'LO',
    vm: 1,
    name: 'AlgorithmName'
  },
  x00686210: {
    tag: '(0068,6210)',
    vr: 'LO',
    vm: 1,
    name: 'ImplantSize'
  },
  x00686221: {
    tag: '(0068,6221)',
    vr: 'LO',
    vm: 1,
    name: 'ImplantTemplateVersion'
  },
  x00686222: {
    tag: '(0068,6222)',
    vr: 'SQ',
    vm: 1,
    name: 'ReplacedImplantTemplateSequence'
  },
  x00686223: {
    tag: '(0068,6223)',
    vr: 'CS',
    vm: 1,
    name: 'ImplantType'
  },
  x00686224: {
    tag: '(0068,6224)',
    vr: 'SQ',
    vm: 1,
    name: 'DerivationImplantTemplateSequence'
  },
  x00686225: {
    tag: '(0068,6225)',
    vr: 'SQ',
    vm: 1,
    name: 'OriginalImplantTemplateSequence'
  },
  x00686226: {
    tag: '(0068,6226)',
    vr: 'DT',
    vm: 1,
    name: 'EffectiveDateTime'
  },
  x00686230: {
    tag: '(0068,6230)',
    vr: 'SQ',
    vm: 1,
    name: 'ImplantTargetAnatomySequence'
  },
  x00686260: {
    tag: '(0068,6260)',
    vr: 'SQ',
    vm: 1,
    name: 'InformationFromManufacturerSequence'
  },
  x00686265: {
    tag: '(0068,6265)',
    vr: 'SQ',
    vm: 1,
    name: 'NotificationFromManufacturerSequence'
  },
  x00686270: {
    tag: '(0068,6270)',
    vr: 'DT',
    vm: 1,
    name: 'InformationIssueDateTime'
  },
  x00686280: {
    tag: '(0068,6280)',
    vr: 'ST',
    vm: 1,
    name: 'InformationSummary'
  },
  x006862a0: {
    tag: '(0068,62A0)',
    vr: 'SQ',
    vm: 1,
    name: 'ImplantRegulatoryDisapprovalCodeSequence'
  },
  x006862a5: {
    tag: '(0068,62A5)',
    vr: 'FD',
    vm: 1,
    name: 'OverallTemplateSpatialTolerance'
  },
  x006862c0: {
    tag: '(0068,62C0)',
    vr: 'SQ',
    vm: 1,
    name: 'HPGLDocumentSequence'
  },
  x006862d0: {
    tag: '(0068,62D0)',
    vr: 'US',
    vm: 1,
    name: 'HPGLDocumentID'
  },
  x006862d5: {
    tag: '(0068,62D5)',
    vr: 'LO',
    vm: 1,
    name: 'HPGLDocumentLabel'
  },
  x006862e0: {
    tag: '(0068,62E0)',
    vr: 'SQ',
    vm: 1,
    name: 'ViewOrientationCodeSequence'
  },
  x006862f0: {
    tag: '(0068,62F0)',
    vr: 'FD',
    vm: 9,
    name: 'ViewOrientationModifier'
  },
  x006862f2: {
    tag: '(0068,62F2)',
    vr: 'FD',
    vm: 1,
    name: 'HPGLDocumentScaling'
  },
  x00686300: {
    tag: '(0068,6300)',
    vr: 'OB',
    vm: 1,
    name: 'HPGLDocument'
  },
  x00686310: {
    tag: '(0068,6310)',
    vr: 'US',
    vm: 1,
    name: 'HPGLContourPenNumber'
  },
  x00686320: {
    tag: '(0068,6320)',
    vr: 'SQ',
    vm: 1,
    name: 'HPGLPenSequence'
  },
  x00686330: {
    tag: '(0068,6330)',
    vr: 'US',
    vm: 1,
    name: 'HPGLPenNumber'
  },
  x00686340: {
    tag: '(0068,6340)',
    vr: 'LO',
    vm: 1,
    name: 'HPGLPenLabel'
  },
  x00686345: {
    tag: '(0068,6345)',
    vr: 'ST',
    vm: 1,
    name: 'HPGLPenDescription'
  },
  x00686346: {
    tag: '(0068,6346)',
    vr: 'FD',
    vm: 2,
    name: 'RecommendedRotationPoint'
  },
  x00686347: {
    tag: '(0068,6347)',
    vr: 'FD',
    vm: 4,
    name: 'BoundingRectangle'
  },
  x00686350: {
    tag: '(0068,6350)',
    vr: 'US',
    vm: '1-n',
    name: 'ImplantTemplate3DModelSurfaceNumber'
  },
  x00686360: {
    tag: '(0068,6360)',
    vr: 'SQ',
    vm: 1,
    name: 'SurfaceModelDescriptionSequence'
  },
  x00686380: {
    tag: '(0068,6380)',
    vr: 'LO',
    vm: 1,
    name: 'SurfaceModelLabel'
  },
  x00686390: {
    tag: '(0068,6390)',
    vr: 'FD',
    vm: 1,
    name: 'SurfaceModelScalingFactor'
  },
  x006863a0: {
    tag: '(0068,63A0)',
    vr: 'SQ',
    vm: 1,
    name: 'MaterialsCodeSequence'
  },
  x006863a4: {
    tag: '(0068,63A4)',
    vr: 'SQ',
    vm: 1,
    name: 'CoatingMaterialsCodeSequence'
  },
  x006863a8: {
    tag: '(0068,63A8)',
    vr: 'SQ',
    vm: 1,
    name: 'ImplantTypeCodeSequence'
  },
  x006863ac: {
    tag: '(0068,63AC)',
    vr: 'SQ',
    vm: 1,
    name: 'FixationMethodCodeSequence'
  },
  x006863b0: {
    tag: '(0068,63B0)',
    vr: 'SQ',
    vm: 1,
    name: 'MatingFeatureSetsSequence'
  },
  x006863c0: {
    tag: '(0068,63C0)',
    vr: 'US',
    vm: 1,
    name: 'MatingFeatureSetID'
  },
  x006863d0: {
    tag: '(0068,63D0)',
    vr: 'LO',
    vm: 1,
    name: 'MatingFeatureSetLabel'
  },
  x006863e0: {
    tag: '(0068,63E0)',
    vr: 'SQ',
    vm: 1,
    name: 'MatingFeatureSequence'
  },
  x006863f0: {
    tag: '(0068,63F0)',
    vr: 'US',
    vm: 1,
    name: 'MatingFeatureID'
  },
  x00686400: {
    tag: '(0068,6400)',
    vr: 'SQ',
    vm: 1,
    name: 'MatingFeatureDegreeOfFreedomSequence'
  },
  x00686410: {
    tag: '(0068,6410)',
    vr: 'US',
    vm: 1,
    name: 'DegreeOfFreedomID'
  },
  x00686420: {
    tag: '(0068,6420)',
    vr: 'CS',
    vm: 1,
    name: 'DegreeOfFreedomType'
  },
  x00686430: {
    tag: '(0068,6430)',
    vr: 'SQ',
    vm: 1,
    name: 'TwoDMatingFeatureCoordinatesSequence'
  },
  x00686440: {
    tag: '(0068,6440)',
    vr: 'US',
    vm: 1,
    name: 'ReferencedHPGLDocumentID'
  },
  x00686450: {
    tag: '(0068,6450)',
    vr: 'FD',
    vm: 2,
    name: 'TwoDMatingPoint'
  },
  x00686460: {
    tag: '(0068,6460)',
    vr: 'FD',
    vm: 4,
    name: 'TwoDMatingAxes'
  },
  x00686470: {
    tag: '(0068,6470)',
    vr: 'SQ',
    vm: 1,
    name: 'TwoDDegreeOfFreedomSequence'
  },
  x00686490: {
    tag: '(0068,6490)',
    vr: 'FD',
    vm: 3,
    name: 'ThreeDDegreeOfFreedomAxis'
  },
  x006864a0: {
    tag: '(0068,64A0)',
    vr: 'FD',
    vm: 2,
    name: 'RangeOfFreedom'
  },
  x006864c0: {
    tag: '(0068,64C0)',
    vr: 'FD',
    vm: 3,
    name: 'ThreeDMatingPoint'
  },
  x006864d0: {
    tag: '(0068,64D0)',
    vr: 'FD',
    vm: 9,
    name: 'ThreeDMatingAxes'
  },
  x006864f0: {
    tag: '(0068,64F0)',
    vr: 'FD',
    vm: 3,
    name: 'TwoDDegreeOfFreedomAxis'
  },
  x00686500: {
    tag: '(0068,6500)',
    vr: 'SQ',
    vm: 1,
    name: 'PlanningLandmarkPointSequence'
  },
  x00686510: {
    tag: '(0068,6510)',
    vr: 'SQ',
    vm: 1,
    name: 'PlanningLandmarkLineSequence'
  },
  x00686520: {
    tag: '(0068,6520)',
    vr: 'SQ',
    vm: 1,
    name: 'PlanningLandmarkPlaneSequence'
  },
  x00686530: {
    tag: '(0068,6530)',
    vr: 'US',
    vm: 1,
    name: 'PlanningLandmarkID'
  },
  x00686540: {
    tag: '(0068,6540)',
    vr: 'LO',
    vm: 1,
    name: 'PlanningLandmarkDescription'
  },
  x00686545: {
    tag: '(0068,6545)',
    vr: 'SQ',
    vm: 1,
    name: 'PlanningLandmarkIdentificationCodeSequence'
  },
  x00686550: {
    tag: '(0068,6550)',
    vr: 'SQ',
    vm: 1,
    name: 'TwoDPointCoordinatesSequence'
  },
  x00686560: {
    tag: '(0068,6560)',
    vr: 'FD',
    vm: 2,
    name: 'TwoDPointCoordinates'
  },
  x00686590: {
    tag: '(0068,6590)',
    vr: 'FD',
    vm: 3,
    name: 'ThreeDPointCoordinates'
  },
  x006865a0: {
    tag: '(0068,65A0)',
    vr: 'SQ',
    vm: 1,
    name: 'TwoDLineCoordinatesSequence'
  },
  x006865b0: {
    tag: '(0068,65B0)',
    vr: 'FD',
    vm: 4,
    name: 'TwoDLineCoordinates'
  },
  x006865d0: {
    tag: '(0068,65D0)',
    vr: 'FD',
    vm: 6,
    name: 'ThreeDLineCoordinates'
  },
  x006865e0: {
    tag: '(0068,65E0)',
    vr: 'SQ',
    vm: 1,
    name: 'TwoDPlaneCoordinatesSequence'
  },
  x006865f0: {
    tag: '(0068,65F0)',
    vr: 'FD',
    vm: 4,
    name: 'TwoDPlaneIntersection'
  },
  x00686610: {
    tag: '(0068,6610)',
    vr: 'FD',
    vm: 3,
    name: 'ThreeDPlaneOrigin'
  },
  x00686620: {
    tag: '(0068,6620)',
    vr: 'FD',
    vm: 3,
    name: 'ThreeDPlaneNormal'
  },
  x00700001: {
    tag: '(0070,0001)',
    vr: 'SQ',
    vm: 1,
    name: 'GraphicAnnotationSequence'
  },
  x00700002: {
    tag: '(0070,0002)',
    vr: 'CS',
    vm: 1,
    name: 'GraphicLayer'
  },
  x00700003: {
    tag: '(0070,0003)',
    vr: 'CS',
    vm: 1,
    name: 'BoundingBoxAnnotationUnits'
  },
  x00700004: {
    tag: '(0070,0004)',
    vr: 'CS',
    vm: 1,
    name: 'AnchorPointAnnotationUnits'
  },
  x00700005: {
    tag: '(0070,0005)',
    vr: 'CS',
    vm: 1,
    name: 'GraphicAnnotationUnits'
  },
  x00700006: {
    tag: '(0070,0006)',
    vr: 'ST',
    vm: 1,
    name: 'UnformattedTextValue'
  },
  x00700008: {
    tag: '(0070,0008)',
    vr: 'SQ',
    vm: 1,
    name: 'TextObjectSequence'
  },
  x00700009: {
    tag: '(0070,0009)',
    vr: 'SQ',
    vm: 1,
    name: 'GraphicObjectSequence'
  },
  x00700010: {
    tag: '(0070,0010)',
    vr: 'FL',
    vm: 2,
    name: 'BoundingBoxTopLeftHandCorner'
  },
  x00700011: {
    tag: '(0070,0011)',
    vr: 'FL',
    vm: 2,
    name: 'BoundingBoxBottomRightHandCorner'
  },
  x00700012: {
    tag: '(0070,0012)',
    vr: 'CS',
    vm: 1,
    name: 'BoundingBoxTextHorizontalJustification'
  },
  x00700014: {
    tag: '(0070,0014)',
    vr: 'FL',
    vm: 2,
    name: 'AnchorPoint'
  },
  x00700015: {
    tag: '(0070,0015)',
    vr: 'CS',
    vm: 1,
    name: 'AnchorPointVisibility'
  },
  x00700020: {
    tag: '(0070,0020)',
    vr: 'US',
    vm: 1,
    name: 'GraphicDimensions'
  },
  x00700021: {
    tag: '(0070,0021)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfGraphicPoints'
  },
  x00700022: {
    tag: '(0070,0022)',
    vr: 'FL',
    vm: '2-n',
    name: 'GraphicData'
  },
  x00700023: {
    tag: '(0070,0023)',
    vr: 'CS',
    vm: 1,
    name: 'GraphicType'
  },
  x00700024: {
    tag: '(0070,0024)',
    vr: 'CS',
    vm: 1,
    name: 'GraphicFilled'
  },
  x00700040: {
    tag: '(0070,0040)',
    vr: 'IS',
    vm: 1,
    name: 'ImageRotationRetired'
  },
  x00700041: {
    tag: '(0070,0041)',
    vr: 'CS',
    vm: 1,
    name: 'ImageHorizontalFlip'
  },
  x00700042: {
    tag: '(0070,0042)',
    vr: 'US',
    vm: 1,
    name: 'ImageRotation'
  },
  x00700050: {
    tag: '(0070,0050)',
    vr: 'US',
    vm: 2,
    name: 'DisplayedAreaTopLeftHandCornerTrial'
  },
  x00700051: {
    tag: '(0070,0051)',
    vr: 'US',
    vm: 2,
    name: 'DisplayedAreaBottomRightHandCornerTrial'
  },
  x00700052: {
    tag: '(0070,0052)',
    vr: 'SL',
    vm: 2,
    name: 'DisplayedAreaTopLeftHandCorner'
  },
  x00700053: {
    tag: '(0070,0053)',
    vr: 'SL',
    vm: 2,
    name: 'DisplayedAreaBottomRightHandCorner'
  },
  x0070005a: {
    tag: '(0070,005A)',
    vr: 'SQ',
    vm: 1,
    name: 'DisplayedAreaSelectionSequence'
  },
  x00700060: {
    tag: '(0070,0060)',
    vr: 'SQ',
    vm: 1,
    name: 'GraphicLayerSequence'
  },
  x00700062: {
    tag: '(0070,0062)',
    vr: 'IS',
    vm: 1,
    name: 'GraphicLayerOrder'
  },
  x00700066: {
    tag: '(0070,0066)',
    vr: 'US',
    vm: 1,
    name: 'GraphicLayerRecommendedDisplayGrayscaleValue'
  },
  x00700067: {
    tag: '(0070,0067)',
    vr: 'US',
    vm: 3,
    name: 'GraphicLayerRecommendedDisplayRGBValue'
  },
  x00700068: {
    tag: '(0070,0068)',
    vr: 'LO',
    vm: 1,
    name: 'GraphicLayerDescription'
  },
  x00700080: {
    tag: '(0070,0080)',
    vr: 'CS',
    vm: 1,
    name: 'ContentLabel'
  },
  x00700081: {
    tag: '(0070,0081)',
    vr: 'LO',
    vm: 1,
    name: 'ContentDescription'
  },
  x00700082: {
    tag: '(0070,0082)',
    vr: 'DA',
    vm: 1,
    name: 'PresentationCreationDate'
  },
  x00700083: {
    tag: '(0070,0083)',
    vr: 'TM',
    vm: 1,
    name: 'PresentationCreationTime'
  },
  x00700084: {
    tag: '(0070,0084)',
    vr: 'PN',
    vm: 1,
    name: 'ContentCreatorName'
  },
  x00700086: {
    tag: '(0070,0086)',
    vr: 'SQ',
    vm: 1,
    name: 'ContentCreatorIdentificationCodeSequence'
  },
  x00700087: {
    tag: '(0070,0087)',
    vr: 'SQ',
    vm: 1,
    name: 'AlternateContentDescriptionSequence'
  },
  x00700100: {
    tag: '(0070,0100)',
    vr: 'CS',
    vm: 1,
    name: 'PresentationSizeMode'
  },
  x00700101: {
    tag: '(0070,0101)',
    vr: 'DS',
    vm: 2,
    name: 'PresentationPixelSpacing'
  },
  x00700102: {
    tag: '(0070,0102)',
    vr: 'IS',
    vm: 2,
    name: 'PresentationPixelAspectRatio'
  },
  x00700103: {
    tag: '(0070,0103)',
    vr: 'FL',
    vm: 1,
    name: 'PresentationPixelMagnificationRatio'
  },
  x00700207: {
    tag: '(0070,0207)',
    vr: 'LO',
    vm: 1,
    name: 'GraphicGroupLabel'
  },
  x00700208: {
    tag: '(0070,0208)',
    vr: 'ST',
    vm: 1,
    name: 'GraphicGroupDescription'
  },
  x00700209: {
    tag: '(0070,0209)',
    vr: 'SQ',
    vm: 1,
    name: 'CompoundGraphicSequence'
  },
  x00700226: {
    tag: '(0070,0226)',
    vr: 'UL',
    vm: 1,
    name: 'CompoundGraphicInstanceID'
  },
  x00700227: {
    tag: '(0070,0227)',
    vr: 'LO',
    vm: 1,
    name: 'FontName'
  },
  x00700228: {
    tag: '(0070,0228)',
    vr: 'CS',
    vm: 1,
    name: 'FontNameType'
  },
  x00700229: {
    tag: '(0070,0229)',
    vr: 'LO',
    vm: 1,
    name: 'CSSFontName'
  },
  x00700230: {
    tag: '(0070,0230)',
    vr: 'FD',
    vm: 1,
    name: 'RotationAngle'
  },
  x00700231: {
    tag: '(0070,0231)',
    vr: 'SQ',
    vm: 1,
    name: 'TextStyleSequence'
  },
  x00700232: {
    tag: '(0070,0232)',
    vr: 'SQ',
    vm: 1,
    name: 'LineStyleSequence'
  },
  x00700233: {
    tag: '(0070,0233)',
    vr: 'SQ',
    vm: 1,
    name: 'FillStyleSequence'
  },
  x00700234: {
    tag: '(0070,0234)',
    vr: 'SQ',
    vm: 1,
    name: 'GraphicGroupSequence'
  },
  x00700241: {
    tag: '(0070,0241)',
    vr: 'US',
    vm: 3,
    name: 'TextColorCIELabValue'
  },
  x00700242: {
    tag: '(0070,0242)',
    vr: 'CS',
    vm: 1,
    name: 'HorizontalAlignment'
  },
  x00700243: {
    tag: '(0070,0243)',
    vr: 'CS',
    vm: 1,
    name: 'VerticalAlignment'
  },
  x00700244: {
    tag: '(0070,0244)',
    vr: 'CS',
    vm: 1,
    name: 'ShadowStyle'
  },
  x00700245: {
    tag: '(0070,0245)',
    vr: 'FL',
    vm: 1,
    name: 'ShadowOffsetX'
  },
  x00700246: {
    tag: '(0070,0246)',
    vr: 'FL',
    vm: 1,
    name: 'ShadowOffsetY'
  },
  x00700247: {
    tag: '(0070,0247)',
    vr: 'US',
    vm: 3,
    name: 'ShadowColorCIELabValue'
  },
  x00700248: {
    tag: '(0070,0248)',
    vr: 'CS',
    vm: 1,
    name: 'Underlined'
  },
  x00700249: {
    tag: '(0070,0249)',
    vr: 'CS',
    vm: 1,
    name: 'Bold'
  },
  x00700250: {
    tag: '(0070,0250)',
    vr: 'CS',
    vm: 1,
    name: 'Italic'
  },
  x00700251: {
    tag: '(0070,0251)',
    vr: 'US',
    vm: 3,
    name: 'PatternOnColorCIELabValue'
  },
  x00700252: {
    tag: '(0070,0252)',
    vr: 'US',
    vm: 3,
    name: 'PatternOffColorCIELabValue'
  },
  x00700253: {
    tag: '(0070,0253)',
    vr: 'FL',
    vm: 1,
    name: 'LineThickness'
  },
  x00700254: {
    tag: '(0070,0254)',
    vr: 'CS',
    vm: 1,
    name: 'LineDashingStyle'
  },
  x00700255: {
    tag: '(0070,0255)',
    vr: 'UL',
    vm: 1,
    name: 'LinePattern'
  },
  x00700256: {
    tag: '(0070,0256)',
    vr: 'OB',
    vm: 1,
    name: 'FillPattern'
  },
  x00700257: {
    tag: '(0070,0257)',
    vr: 'CS',
    vm: 1,
    name: 'FillMode'
  },
  x00700258: {
    tag: '(0070,0258)',
    vr: 'FL',
    vm: 1,
    name: 'ShadowOpacity'
  },
  x00700261: {
    tag: '(0070,0261)',
    vr: 'FL',
    vm: 1,
    name: 'GapLength'
  },
  x00700262: {
    tag: '(0070,0262)',
    vr: 'FL',
    vm: 1,
    name: 'DiameterOfVisibility'
  },
  x00700273: {
    tag: '(0070,0273)',
    vr: 'FL',
    vm: 2,
    name: 'RotationPoint'
  },
  x00700274: {
    tag: '(0070,0274)',
    vr: 'CS',
    vm: 1,
    name: 'TickAlignment'
  },
  x00700278: {
    tag: '(0070,0278)',
    vr: 'CS',
    vm: 1,
    name: 'ShowTickLabel'
  },
  x00700279: {
    tag: '(0070,0279)',
    vr: 'CS',
    vm: 1,
    name: 'TickLabelAlignment'
  },
  x00700282: {
    tag: '(0070,0282)',
    vr: 'CS',
    vm: 1,
    name: 'CompoundGraphicUnits'
  },
  x00700284: {
    tag: '(0070,0284)',
    vr: 'FL',
    vm: 1,
    name: 'PatternOnOpacity'
  },
  x00700285: {
    tag: '(0070,0285)',
    vr: 'FL',
    vm: 1,
    name: 'PatternOffOpacity'
  },
  x00700287: {
    tag: '(0070,0287)',
    vr: 'SQ',
    vm: 1,
    name: 'MajorTicksSequence'
  },
  x00700288: {
    tag: '(0070,0288)',
    vr: 'FL',
    vm: 1,
    name: 'TickPosition'
  },
  x00700289: {
    tag: '(0070,0289)',
    vr: 'SH',
    vm: 1,
    name: 'TickLabel'
  },
  x00700294: {
    tag: '(0070,0294)',
    vr: 'CS',
    vm: 1,
    name: 'CompoundGraphicType'
  },
  x00700295: {
    tag: '(0070,0295)',
    vr: 'UL',
    vm: 1,
    name: 'GraphicGroupID'
  },
  x00700306: {
    tag: '(0070,0306)',
    vr: 'CS',
    vm: 1,
    name: 'ShapeType'
  },
  x00700308: {
    tag: '(0070,0308)',
    vr: 'SQ',
    vm: 1,
    name: 'RegistrationSequence'
  },
  x00700309: {
    tag: '(0070,0309)',
    vr: 'SQ',
    vm: 1,
    name: 'MatrixRegistrationSequence'
  },
  x0070030a: {
    tag: '(0070,030A)',
    vr: 'SQ',
    vm: 1,
    name: 'MatrixSequence'
  },
  x0070030c: {
    tag: '(0070,030C)',
    vr: 'CS',
    vm: 1,
    name: 'FrameOfReferenceTransformationMatrixType'
  },
  x0070030d: {
    tag: '(0070,030D)',
    vr: 'SQ',
    vm: 1,
    name: 'RegistrationTypeCodeSequence'
  },
  x0070030f: {
    tag: '(0070,030F)',
    vr: 'ST',
    vm: 1,
    name: 'FiducialDescription'
  },
  x00700310: {
    tag: '(0070,0310)',
    vr: 'SH',
    vm: 1,
    name: 'FiducialIdentifier'
  },
  x00700311: {
    tag: '(0070,0311)',
    vr: 'SQ',
    vm: 1,
    name: 'FiducialIdentifierCodeSequence'
  },
  x00700312: {
    tag: '(0070,0312)',
    vr: 'FD',
    vm: 1,
    name: 'ContourUncertaintyRadius'
  },
  x00700314: {
    tag: '(0070,0314)',
    vr: 'SQ',
    vm: 1,
    name: 'UsedFiducialsSequence'
  },
  x00700318: {
    tag: '(0070,0318)',
    vr: 'SQ',
    vm: 1,
    name: 'GraphicCoordinatesDataSequence'
  },
  x0070031a: {
    tag: '(0070,031A)',
    vr: 'UI',
    vm: 1,
    name: 'FiducialUID'
  },
  x0070031c: {
    tag: '(0070,031C)',
    vr: 'SQ',
    vm: 1,
    name: 'FiducialSetSequence'
  },
  x0070031e: {
    tag: '(0070,031E)',
    vr: 'SQ',
    vm: 1,
    name: 'FiducialSequence'
  },
  x00700401: {
    tag: '(0070,0401)',
    vr: 'US',
    vm: 3,
    name: 'GraphicLayerRecommendedDisplayCIELabValue'
  },
  x00700402: {
    tag: '(0070,0402)',
    vr: 'SQ',
    vm: 1,
    name: 'BlendingSequence'
  },
  x00700403: {
    tag: '(0070,0403)',
    vr: 'FL',
    vm: 1,
    name: 'RelativeOpacity'
  },
  x00700404: {
    tag: '(0070,0404)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedSpatialRegistrationSequence'
  },
  x00700405: {
    tag: '(0070,0405)',
    vr: 'CS',
    vm: 1,
    name: 'BlendingPosition'
  },
  x00720002: {
    tag: '(0072,0002)',
    vr: 'SH',
    vm: 1,
    name: 'HangingProtocolName'
  },
  x00720004: {
    tag: '(0072,0004)',
    vr: 'LO',
    vm: 1,
    name: 'HangingProtocolDescription'
  },
  x00720006: {
    tag: '(0072,0006)',
    vr: 'CS',
    vm: 1,
    name: 'HangingProtocolLevel'
  },
  x00720008: {
    tag: '(0072,0008)',
    vr: 'LO',
    vm: 1,
    name: 'HangingProtocolCreator'
  },
  x0072000a: {
    tag: '(0072,000A)',
    vr: 'DT',
    vm: 1,
    name: 'HangingProtocolCreationDateTime'
  },
  x0072000c: {
    tag: '(0072,000C)',
    vr: 'SQ',
    vm: 1,
    name: 'HangingProtocolDefinitionSequence'
  },
  x0072000e: {
    tag: '(0072,000E)',
    vr: 'SQ',
    vm: 1,
    name: 'HangingProtocolUserIdentificationCodeSequence'
  },
  x00720010: {
    tag: '(0072,0010)',
    vr: 'LO',
    vm: 1,
    name: 'HangingProtocolUserGroupName'
  },
  x00720012: {
    tag: '(0072,0012)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceHangingProtocolSequence'
  },
  x00720014: {
    tag: '(0072,0014)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfPriorsReferenced'
  },
  x00720020: {
    tag: '(0072,0020)',
    vr: 'SQ',
    vm: 1,
    name: 'ImageSetsSequence'
  },
  x00720022: {
    tag: '(0072,0022)',
    vr: 'SQ',
    vm: 1,
    name: 'ImageSetSelectorSequence'
  },
  x00720024: {
    tag: '(0072,0024)',
    vr: 'CS',
    vm: 1,
    name: 'ImageSetSelectorUsageFlag'
  },
  x00720026: {
    tag: '(0072,0026)',
    vr: 'AT',
    vm: 1,
    name: 'SelectorAttribute'
  },
  x00720028: {
    tag: '(0072,0028)',
    vr: 'US',
    vm: 1,
    name: 'SelectorValueNumber'
  },
  x00720030: {
    tag: '(0072,0030)',
    vr: 'SQ',
    vm: 1,
    name: 'TimeBasedImageSetsSequence'
  },
  x00720032: {
    tag: '(0072,0032)',
    vr: 'US',
    vm: 1,
    name: 'ImageSetNumber'
  },
  x00720034: {
    tag: '(0072,0034)',
    vr: 'CS',
    vm: 1,
    name: 'ImageSetSelectorCategory'
  },
  x00720038: {
    tag: '(0072,0038)',
    vr: 'US',
    vm: 2,
    name: 'RelativeTime'
  },
  x0072003a: {
    tag: '(0072,003A)',
    vr: 'CS',
    vm: 1,
    name: 'RelativeTimeUnits'
  },
  x0072003c: {
    tag: '(0072,003C)',
    vr: 'SS',
    vm: 2,
    name: 'AbstractPriorValue'
  },
  x0072003e: {
    tag: '(0072,003E)',
    vr: 'SQ',
    vm: 1,
    name: 'AbstractPriorCodeSequence'
  },
  x00720040: {
    tag: '(0072,0040)',
    vr: 'LO',
    vm: 1,
    name: 'ImageSetLabel'
  },
  x00720050: {
    tag: '(0072,0050)',
    vr: 'CS',
    vm: 1,
    name: 'SelectorAttributeVR'
  },
  x00720052: {
    tag: '(0072,0052)',
    vr: 'AT',
    vm: '1-n',
    name: 'SelectorSequencePointer'
  },
  x00720054: {
    tag: '(0072,0054)',
    vr: 'LO',
    vm: '1-n',
    name: 'SelectorSequencePointerPrivateCreator'
  },
  x00720056: {
    tag: '(0072,0056)',
    vr: 'LO',
    vm: 1,
    name: 'SelectorAttributePrivateCreator'
  },
  x00720060: {
    tag: '(0072,0060)',
    vr: 'AT',
    vm: '1-n',
    name: 'SelectorATValue'
  },
  x00720062: {
    tag: '(0072,0062)',
    vr: 'CS',
    vm: '1-n',
    name: 'SelectorCSValue'
  },
  x00720064: {
    tag: '(0072,0064)',
    vr: 'IS',
    vm: '1-n',
    name: 'SelectorISValue'
  },
  x00720066: {
    tag: '(0072,0066)',
    vr: 'LO',
    vm: '1-n',
    name: 'SelectorLOValue'
  },
  x00720068: {
    tag: '(0072,0068)',
    vr: 'LT',
    vm: 1,
    name: 'SelectorLTValue'
  },
  x0072006a: {
    tag: '(0072,006A)',
    vr: 'PN',
    vm: '1-n',
    name: 'SelectorPNValue'
  },
  x0072006c: {
    tag: '(0072,006C)',
    vr: 'SH',
    vm: '1-n',
    name: 'SelectorSHValue'
  },
  x0072006e: {
    tag: '(0072,006E)',
    vr: 'ST',
    vm: 1,
    name: 'SelectorSTValue'
  },
  x00720070: {
    tag: '(0072,0070)',
    vr: 'UT',
    vm: 1,
    name: 'SelectorUTValue'
  },
  x00720072: {
    tag: '(0072,0072)',
    vr: 'DS',
    vm: '1-n',
    name: 'SelectorDSValue'
  },
  x00720074: {
    tag: '(0072,0074)',
    vr: 'FD',
    vm: '1-n',
    name: 'SelectorFDValue'
  },
  x00720076: {
    tag: '(0072,0076)',
    vr: 'FL',
    vm: '1-n',
    name: 'SelectorFLValue'
  },
  x00720078: {
    tag: '(0072,0078)',
    vr: 'UL',
    vm: '1-n',
    name: 'SelectorULValue'
  },
  x0072007a: {
    tag: '(0072,007A)',
    vr: 'US',
    vm: '1-n',
    name: 'SelectorUSValue'
  },
  x0072007c: {
    tag: '(0072,007C)',
    vr: 'SL',
    vm: '1-n',
    name: 'SelectorSLValue'
  },
  x0072007e: {
    tag: '(0072,007E)',
    vr: 'SS',
    vm: '1-n',
    name: 'SelectorSSValue'
  },
  x00720080: {
    tag: '(0072,0080)',
    vr: 'SQ',
    vm: 1,
    name: 'SelectorCodeSequenceValue'
  },
  x00720100: {
    tag: '(0072,0100)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfScreens'
  },
  x00720102: {
    tag: '(0072,0102)',
    vr: 'SQ',
    vm: 1,
    name: 'NominalScreenDefinitionSequence'
  },
  x00720104: {
    tag: '(0072,0104)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfVerticalPixels'
  },
  x00720106: {
    tag: '(0072,0106)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfHorizontalPixels'
  },
  x00720108: {
    tag: '(0072,0108)',
    vr: 'FD',
    vm: 4,
    name: 'DisplayEnvironmentSpatialPosition'
  },
  x0072010a: {
    tag: '(0072,010A)',
    vr: 'US',
    vm: 1,
    name: 'ScreenMinimumGrayscaleBitDepth'
  },
  x0072010c: {
    tag: '(0072,010C)',
    vr: 'US',
    vm: 1,
    name: 'ScreenMinimumColorBitDepth'
  },
  x0072010e: {
    tag: '(0072,010E)',
    vr: 'US',
    vm: 1,
    name: 'ApplicationMaximumRepaintTime'
  },
  x00720200: {
    tag: '(0072,0200)',
    vr: 'SQ',
    vm: 1,
    name: 'DisplaySetsSequence'
  },
  x00720202: {
    tag: '(0072,0202)',
    vr: 'US',
    vm: 1,
    name: 'DisplaySetNumber'
  },
  x00720203: {
    tag: '(0072,0203)',
    vr: 'LO',
    vm: 1,
    name: 'DisplaySetLabel'
  },
  x00720204: {
    tag: '(0072,0204)',
    vr: 'US',
    vm: 1,
    name: 'DisplaySetPresentationGroup'
  },
  x00720206: {
    tag: '(0072,0206)',
    vr: 'LO',
    vm: 1,
    name: 'DisplaySetPresentationGroupDescription'
  },
  x00720208: {
    tag: '(0072,0208)',
    vr: 'CS',
    vm: 1,
    name: 'PartialDataDisplayHandling'
  },
  x00720210: {
    tag: '(0072,0210)',
    vr: 'SQ',
    vm: 1,
    name: 'SynchronizedScrollingSequence'
  },
  x00720212: {
    tag: '(0072,0212)',
    vr: 'US',
    vm: '2-n',
    name: 'DisplaySetScrollingGroup'
  },
  x00720214: {
    tag: '(0072,0214)',
    vr: 'SQ',
    vm: 1,
    name: 'NavigationIndicatorSequence'
  },
  x00720216: {
    tag: '(0072,0216)',
    vr: 'US',
    vm: 1,
    name: 'NavigationDisplaySet'
  },
  x00720218: {
    tag: '(0072,0218)',
    vr: 'US',
    vm: '1-n',
    name: 'ReferenceDisplaySets'
  },
  x00720300: {
    tag: '(0072,0300)',
    vr: 'SQ',
    vm: 1,
    name: 'ImageBoxesSequence'
  },
  x00720302: {
    tag: '(0072,0302)',
    vr: 'US',
    vm: 1,
    name: 'ImageBoxNumber'
  },
  x00720304: {
    tag: '(0072,0304)',
    vr: 'CS',
    vm: 1,
    name: 'ImageBoxLayoutType'
  },
  x00720306: {
    tag: '(0072,0306)',
    vr: 'US',
    vm: 1,
    name: 'ImageBoxTileHorizontalDimension'
  },
  x00720308: {
    tag: '(0072,0308)',
    vr: 'US',
    vm: 1,
    name: 'ImageBoxTileVerticalDimension'
  },
  x00720310: {
    tag: '(0072,0310)',
    vr: 'CS',
    vm: 1,
    name: 'ImageBoxScrollDirection'
  },
  x00720312: {
    tag: '(0072,0312)',
    vr: 'CS',
    vm: 1,
    name: 'ImageBoxSmallScrollType'
  },
  x00720314: {
    tag: '(0072,0314)',
    vr: 'US',
    vm: 1,
    name: 'ImageBoxSmallScrollAmount'
  },
  x00720316: {
    tag: '(0072,0316)',
    vr: 'CS',
    vm: 1,
    name: 'ImageBoxLargeScrollType'
  },
  x00720318: {
    tag: '(0072,0318)',
    vr: 'US',
    vm: 1,
    name: 'ImageBoxLargeScrollAmount'
  },
  x00720320: {
    tag: '(0072,0320)',
    vr: 'US',
    vm: 1,
    name: 'ImageBoxOverlapPriority'
  },
  x00720330: {
    tag: '(0072,0330)',
    vr: 'FD',
    vm: 1,
    name: 'CineRelativeToRealTime'
  },
  x00720400: {
    tag: '(0072,0400)',
    vr: 'SQ',
    vm: 1,
    name: 'FilterOperationsSequence'
  },
  x00720402: {
    tag: '(0072,0402)',
    vr: 'CS',
    vm: 1,
    name: 'FilterByCategory'
  },
  x00720404: {
    tag: '(0072,0404)',
    vr: 'CS',
    vm: 1,
    name: 'FilterByAttributePresence'
  },
  x00720406: {
    tag: '(0072,0406)',
    vr: 'CS',
    vm: 1,
    name: 'FilterByOperator'
  },
  x00720420: {
    tag: '(0072,0420)',
    vr: 'US',
    vm: 3,
    name: 'StructuredDisplayBackgroundCIELabValue'
  },
  x00720421: {
    tag: '(0072,0421)',
    vr: 'US',
    vm: 3,
    name: 'EmptyImageBoxCIELabValue'
  },
  x00720422: {
    tag: '(0072,0422)',
    vr: 'SQ',
    vm: 1,
    name: 'StructuredDisplayImageBoxSequence'
  },
  x00720424: {
    tag: '(0072,0424)',
    vr: 'SQ',
    vm: 1,
    name: 'StructuredDisplayTextBoxSequence'
  },
  x00720427: {
    tag: '(0072,0427)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedFirstFrameSequence'
  },
  x00720430: {
    tag: '(0072,0430)',
    vr: 'SQ',
    vm: 1,
    name: 'ImageBoxSynchronizationSequence'
  },
  x00720432: {
    tag: '(0072,0432)',
    vr: 'US',
    vm: '2-n',
    name: 'SynchronizedImageBoxList'
  },
  x00720434: {
    tag: '(0072,0434)',
    vr: 'CS',
    vm: 1,
    name: 'TypeOfSynchronization'
  },
  x00720500: {
    tag: '(0072,0500)',
    vr: 'CS',
    vm: 1,
    name: 'BlendingOperationType'
  },
  x00720510: {
    tag: '(0072,0510)',
    vr: 'CS',
    vm: 1,
    name: 'ReformattingOperationType'
  },
  x00720512: {
    tag: '(0072,0512)',
    vr: 'FD',
    vm: 1,
    name: 'ReformattingThickness'
  },
  x00720514: {
    tag: '(0072,0514)',
    vr: 'FD',
    vm: 1,
    name: 'ReformattingInterval'
  },
  x00720516: {
    tag: '(0072,0516)',
    vr: 'CS',
    vm: 1,
    name: 'ReformattingOperationInitialViewDirection'
  },
  x00720520: {
    tag: '(0072,0520)',
    vr: 'CS',
    vm: '1-n',
    name: 'ThreeDRenderingType'
  },
  x00720600: {
    tag: '(0072,0600)',
    vr: 'SQ',
    vm: 1,
    name: 'SortingOperationsSequence'
  },
  x00720602: {
    tag: '(0072,0602)',
    vr: 'CS',
    vm: 1,
    name: 'SortByCategory'
  },
  x00720604: {
    tag: '(0072,0604)',
    vr: 'CS',
    vm: 1,
    name: 'SortingDirection'
  },
  x00720700: {
    tag: '(0072,0700)',
    vr: 'CS',
    vm: 2,
    name: 'DisplaySetPatientOrientation'
  },
  x00720702: {
    tag: '(0072,0702)',
    vr: 'CS',
    vm: 1,
    name: 'VOIType'
  },
  x00720704: {
    tag: '(0072,0704)',
    vr: 'CS',
    vm: 1,
    name: 'PseudoColorType'
  },
  x00720705: {
    tag: '(0072,0705)',
    vr: 'SQ',
    vm: 1,
    name: 'PseudoColorPaletteInstanceReferenceSequence'
  },
  x00720706: {
    tag: '(0072,0706)',
    vr: 'CS',
    vm: 1,
    name: 'ShowGrayscaleInverted'
  },
  x00720710: {
    tag: '(0072,0710)',
    vr: 'CS',
    vm: 1,
    name: 'ShowImageTrueSizeFlag'
  },
  x00720712: {
    tag: '(0072,0712)',
    vr: 'CS',
    vm: 1,
    name: 'ShowGraphicAnnotationFlag'
  },
  x00720714: {
    tag: '(0072,0714)',
    vr: 'CS',
    vm: 1,
    name: 'ShowPatientDemographicsFlag'
  },
  x00720716: {
    tag: '(0072,0716)',
    vr: 'CS',
    vm: 1,
    name: 'ShowAcquisitionTechniquesFlag'
  },
  x00720717: {
    tag: '(0072,0717)',
    vr: 'CS',
    vm: 1,
    name: 'DisplaySetHorizontalJustification'
  },
  x00720718: {
    tag: '(0072,0718)',
    vr: 'CS',
    vm: 1,
    name: 'DisplaySetVerticalJustification'
  },
  x00740120: {
    tag: '(0074,0120)',
    vr: 'FD',
    vm: 1,
    name: 'ContinuationStartMeterset'
  },
  x00740121: {
    tag: '(0074,0121)',
    vr: 'FD',
    vm: 1,
    name: 'ContinuationEndMeterset'
  },
  x00741000: {
    tag: '(0074,1000)',
    vr: 'CS',
    vm: 1,
    name: 'ProcedureStepState'
  },
  x00741002: {
    tag: '(0074,1002)',
    vr: 'SQ',
    vm: 1,
    name: 'ProcedureStepProgressInformationSequence'
  },
  x00741004: {
    tag: '(0074,1004)',
    vr: 'DS',
    vm: 1,
    name: 'ProcedureStepProgress'
  },
  x00741006: {
    tag: '(0074,1006)',
    vr: 'ST',
    vm: 1,
    name: 'ProcedureStepProgressDescription'
  },
  x00741008: {
    tag: '(0074,1008)',
    vr: 'SQ',
    vm: 1,
    name: 'ProcedureStepCommunicationsURISequence'
  },
  x0074100a: {
    tag: '(0074,100a)',
    vr: 'ST',
    vm: 1,
    name: 'ContactURI'
  },
  x0074100c: {
    tag: '(0074,100c)',
    vr: 'LO',
    vm: 1,
    name: 'ContactDisplayName'
  },
  x0074100e: {
    tag: '(0074,100e)',
    vr: 'SQ',
    vm: 1,
    name: 'ProcedureStepDiscontinuationReasonCodeSequence'
  },
  x00741020: {
    tag: '(0074,1020)',
    vr: 'SQ',
    vm: 1,
    name: 'BeamTaskSequence'
  },
  x00741022: {
    tag: '(0074,1022)',
    vr: 'CS',
    vm: 1,
    name: 'BeamTaskType'
  },
  x00741024: {
    tag: '(0074,1024)',
    vr: 'IS',
    vm: 1,
    name: 'BeamOrderIndexTrial'
  },
  x00741026: {
    tag: '(0074,1026)',
    vr: 'FD',
    vm: 1,
    name: 'TableTopVerticalAdjustedPosition'
  },
  x00741027: {
    tag: '(0074,1027)',
    vr: 'FD',
    vm: 1,
    name: 'TableTopLongitudinalAdjustedPosition'
  },
  x00741028: {
    tag: '(0074,1028)',
    vr: 'FD',
    vm: 1,
    name: 'TableTopLateralAdjustedPosition'
  },
  x0074102a: {
    tag: '(0074,102A)',
    vr: 'FD',
    vm: 1,
    name: 'PatientSupportAdjustedAngle'
  },
  x0074102b: {
    tag: '(0074,102B)',
    vr: 'FD',
    vm: 1,
    name: 'TableTopEccentricAdjustedAngle'
  },
  x0074102c: {
    tag: '(0074,102C)',
    vr: 'FD',
    vm: 1,
    name: 'TableTopPitchAdjustedAngle'
  },
  x0074102d: {
    tag: '(0074,102D)',
    vr: 'FD',
    vm: 1,
    name: 'TableTopRollAdjustedAngle'
  },
  x00741030: {
    tag: '(0074,1030)',
    vr: 'SQ',
    vm: 1,
    name: 'DeliveryVerificationImageSequence'
  },
  x00741032: {
    tag: '(0074,1032)',
    vr: 'CS',
    vm: 1,
    name: 'VerificationImageTiming'
  },
  x00741034: {
    tag: '(0074,1034)',
    vr: 'CS',
    vm: 1,
    name: 'DoubleExposureFlag'
  },
  x00741036: {
    tag: '(0074,1036)',
    vr: 'CS',
    vm: 1,
    name: 'DoubleExposureOrdering'
  },
  x00741038: {
    tag: '(0074,1038)',
    vr: 'DS',
    vm: 1,
    name: 'DoubleExposureMetersetTrial'
  },
  x0074103a: {
    tag: '(0074,103A)',
    vr: 'DS',
    vm: 4,
    name: 'DoubleExposureFieldDeltaTrial'
  },
  x00741040: {
    tag: '(0074,1040)',
    vr: 'SQ',
    vm: 1,
    name: 'RelatedReferenceRTImageSequence'
  },
  x00741042: {
    tag: '(0074,1042)',
    vr: 'SQ',
    vm: 1,
    name: 'GeneralMachineVerificationSequence'
  },
  x00741044: {
    tag: '(0074,1044)',
    vr: 'SQ',
    vm: 1,
    name: 'ConventionalMachineVerificationSequence'
  },
  x00741046: {
    tag: '(0074,1046)',
    vr: 'SQ',
    vm: 1,
    name: 'IonMachineVerificationSequence'
  },
  x00741048: {
    tag: '(0074,1048)',
    vr: 'SQ',
    vm: 1,
    name: 'FailedAttributesSequence'
  },
  x0074104a: {
    tag: '(0074,104A)',
    vr: 'SQ',
    vm: 1,
    name: 'OverriddenAttributesSequence'
  },
  x0074104c: {
    tag: '(0074,104C)',
    vr: 'SQ',
    vm: 1,
    name: 'ConventionalControlPointVerificationSequence'
  },
  x0074104e: {
    tag: '(0074,104E)',
    vr: 'SQ',
    vm: 1,
    name: 'IonControlPointVerificationSequence'
  },
  x00741050: {
    tag: '(0074,1050)',
    vr: 'SQ',
    vm: 1,
    name: 'AttributeOccurrenceSequence'
  },
  x00741052: {
    tag: '(0074,1052)',
    vr: 'AT',
    vm: 1,
    name: 'AttributeOccurrencePointer'
  },
  x00741054: {
    tag: '(0074,1054)',
    vr: 'UL',
    vm: 1,
    name: 'AttributeItemSelector'
  },
  x00741056: {
    tag: '(0074,1056)',
    vr: 'LO',
    vm: 1,
    name: 'AttributeOccurrencePrivateCreator'
  },
  x00741057: {
    tag: '(0074,1057)',
    vr: 'IS',
    vm: '1-n',
    name: 'SelectorSequencePointerItems'
  },
  x00741200: {
    tag: '(0074,1200)',
    vr: 'CS',
    vm: 1,
    name: 'ScheduledProcedureStepPriority'
  },
  x00741202: {
    tag: '(0074,1202)',
    vr: 'LO',
    vm: 1,
    name: 'WorklistLabel'
  },
  x00741204: {
    tag: '(0074,1204)',
    vr: 'LO',
    vm: 1,
    name: 'ProcedureStepLabel'
  },
  x00741210: {
    tag: '(0074,1210)',
    vr: 'SQ',
    vm: 1,
    name: 'ScheduledProcessingParametersSequence'
  },
  x00741212: {
    tag: '(0074,1212)',
    vr: 'SQ',
    vm: 1,
    name: 'PerformedProcessingParametersSequence'
  },
  x00741216: {
    tag: '(0074,1216)',
    vr: 'SQ',
    vm: 1,
    name: 'UnifiedProcedureStepPerformedProcedureSequence'
  },
  x00741220: {
    tag: '(0074,1220)',
    vr: 'SQ',
    vm: 1,
    name: 'RelatedProcedureStepSequence'
  },
  x00741222: {
    tag: '(0074,1222)',
    vr: 'LO',
    vm: 1,
    name: 'ProcedureStepRelationshipType'
  },
  x00741224: {
    tag: '(0074,1224)',
    vr: 'SQ',
    vm: 1,
    name: 'ReplacedProcedureStepSequence'
  },
  x00741230: {
    tag: '(0074,1230)',
    vr: 'LO',
    vm: 1,
    name: 'DeletionLock'
  },
  x00741234: {
    tag: '(0074,1234)',
    vr: 'AE',
    vm: 1,
    name: 'ReceivingAE'
  },
  x00741236: {
    tag: '(0074,1236)',
    vr: 'AE',
    vm: 1,
    name: 'RequestingAE'
  },
  x00741238: {
    tag: '(0074,1238)',
    vr: 'LT',
    vm: 1,
    name: 'ReasonForCancellation'
  },
  x00741242: {
    tag: '(0074,1242)',
    vr: 'CS',
    vm: 1,
    name: 'SCPStatus'
  },
  x00741244: {
    tag: '(0074,1244)',
    vr: 'CS',
    vm: 1,
    name: 'SubscriptionListStatus'
  },
  x00741246: {
    tag: '(0074,1246)',
    vr: 'CS',
    vm: 1,
    name: 'UnifiedProcedureStepListStatus'
  },
  x00741324: {
    tag: '(0074,1324)',
    vr: 'UL',
    vm: 1,
    name: 'BeamOrderIndex'
  },
  x00741338: {
    tag: '(0074,1338)',
    vr: 'FD',
    vm: 1,
    name: 'DoubleExposureMeterset'
  },
  x0074133a: {
    tag: '(0074,133A)',
    vr: 'FD',
    vm: 4,
    name: 'DoubleExposureFieldDelta'
  },
  x00760001: {
    tag: '(0076,0001)',
    vr: 'LO',
    vm: 1,
    name: 'ImplantAssemblyTemplateName'
  },
  x00760003: {
    tag: '(0076,0003)',
    vr: 'LO',
    vm: 1,
    name: 'ImplantAssemblyTemplateIssuer'
  },
  x00760006: {
    tag: '(0076,0006)',
    vr: 'LO',
    vm: 1,
    name: 'ImplantAssemblyTemplateVersion'
  },
  x00760008: {
    tag: '(0076,0008)',
    vr: 'SQ',
    vm: 1,
    name: 'ReplacedImplantAssemblyTemplateSequence'
  },
  x0076000a: {
    tag: '(0076,000A)',
    vr: 'CS',
    vm: 1,
    name: 'ImplantAssemblyTemplateType'
  },
  x0076000c: {
    tag: '(0076,000C)',
    vr: 'SQ',
    vm: 1,
    name: 'OriginalImplantAssemblyTemplateSequence'
  },
  x0076000e: {
    tag: '(0076,000E)',
    vr: 'SQ',
    vm: 1,
    name: 'DerivationImplantAssemblyTemplateSequence'
  },
  x00760010: {
    tag: '(0076,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'ImplantAssemblyTemplateTargetAnatomySequence'
  },
  x00760020: {
    tag: '(0076,0020)',
    vr: 'SQ',
    vm: 1,
    name: 'ProcedureTypeCodeSequence'
  },
  x00760030: {
    tag: '(0076,0030)',
    vr: 'LO',
    vm: 1,
    name: 'SurgicalTechnique'
  },
  x00760032: {
    tag: '(0076,0032)',
    vr: 'SQ',
    vm: 1,
    name: 'ComponentTypesSequence'
  },
  x00760034: {
    tag: '(0076,0034)',
    vr: 'CS',
    vm: 1,
    name: 'ComponentTypeCodeSequence'
  },
  x00760036: {
    tag: '(0076,0036)',
    vr: 'CS',
    vm: 1,
    name: 'ExclusiveComponentType'
  },
  x00760038: {
    tag: '(0076,0038)',
    vr: 'CS',
    vm: 1,
    name: 'MandatoryComponentType'
  },
  x00760040: {
    tag: '(0076,0040)',
    vr: 'SQ',
    vm: 1,
    name: 'ComponentSequence'
  },
  x00760055: {
    tag: '(0076,0055)',
    vr: 'US',
    vm: 1,
    name: 'ComponentID'
  },
  x00760060: {
    tag: '(0076,0060)',
    vr: 'SQ',
    vm: 1,
    name: 'ComponentAssemblySequence'
  },
  x00760070: {
    tag: '(0076,0070)',
    vr: 'US',
    vm: 1,
    name: 'Component1ReferencedID'
  },
  x00760080: {
    tag: '(0076,0080)',
    vr: 'US',
    vm: 1,
    name: 'Component1ReferencedMatingFeatureSetID'
  },
  x00760090: {
    tag: '(0076,0090)',
    vr: 'US',
    vm: 1,
    name: 'Component1ReferencedMatingFeatureID'
  },
  x007600a0: {
    tag: '(0076,00A0)',
    vr: 'US',
    vm: 1,
    name: 'Component2ReferencedID'
  },
  x007600b0: {
    tag: '(0076,00B0)',
    vr: 'US',
    vm: 1,
    name: 'Component2ReferencedMatingFeatureSetID'
  },
  x007600c0: {
    tag: '(0076,00C0)',
    vr: 'US',
    vm: 1,
    name: 'Component2ReferencedMatingFeatureID'
  },
  x00780001: {
    tag: '(0078,0001)',
    vr: 'LO',
    vm: 1,
    name: 'ImplantTemplateGroupName'
  },
  x00780010: {
    tag: '(0078,0010)',
    vr: 'ST',
    vm: 1,
    name: 'ImplantTemplateGroupDescription'
  },
  x00780020: {
    tag: '(0078,0020)',
    vr: 'LO',
    vm: 1,
    name: 'ImplantTemplateGroupIssuer'
  },
  x00780024: {
    tag: '(0078,0024)',
    vr: 'LO',
    vm: 1,
    name: 'ImplantTemplateGroupVersion'
  },
  x00780026: {
    tag: '(0078,0026)',
    vr: 'SQ',
    vm: 1,
    name: 'ReplacedImplantTemplateGroupSequence'
  },
  x00780028: {
    tag: '(0078,0028)',
    vr: 'SQ',
    vm: 1,
    name: 'ImplantTemplateGroupTargetAnatomySequence'
  },
  x0078002a: {
    tag: '(0078,002A)',
    vr: 'SQ',
    vm: 1,
    name: 'ImplantTemplateGroupMembersSequence'
  },
  x0078002e: {
    tag: '(0078,002E)',
    vr: 'US',
    vm: 1,
    name: 'ImplantTemplateGroupMemberID'
  },
  x00780050: {
    tag: '(0078,0050)',
    vr: 'FD',
    vm: 3,
    name: 'ThreeDImplantTemplateGroupMemberMatchingPoint'
  },
  x00780060: {
    tag: '(0078,0060)',
    vr: 'FD',
    vm: 9,
    name: 'ThreeDImplantTemplateGroupMemberMatchingAxes'
  },
  x00780070: {
    tag: '(0078,0070)',
    vr: 'SQ',
    vm: 1,
    name: 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'
  },
  x00780090: {
    tag: '(0078,0090)',
    vr: 'FD',
    vm: 2,
    name: 'TwoDImplantTemplateGroupMemberMatchingPoint'
  },
  x007800a0: {
    tag: '(0078,00A0)',
    vr: 'FD',
    vm: 4,
    name: 'TwoDImplantTemplateGroupMemberMatchingAxes'
  },
  x007800b0: {
    tag: '(0078,00B0)',
    vr: 'SQ',
    vm: 1,
    name: 'ImplantTemplateGroupVariationDimensionSequence'
  },
  x007800b2: {
    tag: '(0078,00B2)',
    vr: 'LO',
    vm: 1,
    name: 'ImplantTemplateGroupVariationDimensionName'
  },
  x007800b4: {
    tag: '(0078,00B4)',
    vr: 'SQ',
    vm: 1,
    name: 'ImplantTemplateGroupVariationDimensionRankSequence'
  },
  x007800b6: {
    tag: '(0078,00B6)',
    vr: 'US',
    vm: 1,
    name: 'ReferencedImplantTemplateGroupMemberID'
  },
  x007800b8: {
    tag: '(0078,00B8)',
    vr: 'US',
    vm: 1,
    name: 'ImplantTemplateGroupVariationDimensionRank'
  },
  x00880130: {
    tag: '(0088,0130)',
    vr: 'SH',
    vm: 1,
    name: 'StorageMediaFileSetID'
  },
  x00880140: {
    tag: '(0088,0140)',
    vr: 'UI',
    vm: 1,
    name: 'StorageMediaFileSetUID'
  },
  x00880200: {
    tag: '(0088,0200)',
    vr: 'SQ',
    vm: 1,
    name: 'IconImageSequence'
  },
  x00880904: {
    tag: '(0088,0904)',
    vr: 'LO',
    vm: 1,
    name: 'TopicTitle'
  },
  x00880906: {
    tag: '(0088,0906)',
    vr: 'ST',
    vm: 1,
    name: 'TopicSubject'
  },
  x00880910: {
    tag: '(0088,0910)',
    vr: 'LO',
    vm: 1,
    name: 'TopicAuthor'
  },
  x00880912: {
    tag: '(0088,0912)',
    vr: 'LO',
    vm: '1-32',
    name: 'TopicKeywords'
  },
  x01000410: {
    tag: '(0100,0410)',
    vr: 'CS',
    vm: 1,
    name: 'SOPInstanceStatus'
  },
  x01000420: {
    tag: '(0100,0420)',
    vr: 'DT',
    vm: 1,
    name: 'SOPAuthorizationDateTime'
  },
  x01000424: {
    tag: '(0100,0424)',
    vr: 'LT',
    vm: 1,
    name: 'SOPAuthorizationComment'
  },
  x01000426: {
    tag: '(0100,0426)',
    vr: 'LO',
    vm: 1,
    name: 'AuthorizationEquipmentCertificationNumber'
  },
  x04000005: {
    tag: '(0400,0005)',
    vr: 'US',
    vm: 1,
    name: 'MACIDNumber'
  },
  x04000010: {
    tag: '(0400,0010)',
    vr: 'UI',
    vm: 1,
    name: 'MACCalculationTransferSyntaxUID'
  },
  x04000015: {
    tag: '(0400,0015)',
    vr: 'CS',
    vm: 1,
    name: 'MACAlgorithm'
  },
  x04000020: {
    tag: '(0400,0020)',
    vr: 'AT',
    vm: '1-n',
    name: 'DataElementsSigned'
  },
  x04000100: {
    tag: '(0400,0100)',
    vr: 'UI',
    vm: 1,
    name: 'DigitalSignatureUID'
  },
  x04000105: {
    tag: '(0400,0105)',
    vr: 'DT',
    vm: 1,
    name: 'DigitalSignatureDateTime'
  },
  x04000110: {
    tag: '(0400,0110)',
    vr: 'CS',
    vm: 1,
    name: 'CertificateType'
  },
  x04000115: {
    tag: '(0400,0115)',
    vr: 'OB',
    vm: 1,
    name: 'CertificateOfSigner'
  },
  x04000120: {
    tag: '(0400,0120)',
    vr: 'OB',
    vm: 1,
    name: 'Signature'
  },
  x04000305: {
    tag: '(0400,0305)',
    vr: 'CS',
    vm: 1,
    name: 'CertifiedTimestampType'
  },
  x04000310: {
    tag: '(0400,0310)',
    vr: 'OB',
    vm: 1,
    name: 'CertifiedTimestamp'
  },
  x04000401: {
    tag: '(0400,0401)',
    vr: 'SQ',
    vm: 1,
    name: 'DigitalSignaturePurposeCodeSequence'
  },
  x04000402: {
    tag: '(0400,0402)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedDigitalSignatureSequence'
  },
  x04000403: {
    tag: '(0400,0403)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedSOPInstanceMACSequence'
  },
  x04000404: {
    tag: '(0400,0404)',
    vr: 'OB',
    vm: 1,
    name: 'MAC'
  },
  x04000500: {
    tag: '(0400,0500)',
    vr: 'SQ',
    vm: 1,
    name: 'EncryptedAttributesSequence'
  },
  x04000510: {
    tag: '(0400,0510)',
    vr: 'UI',
    vm: 1,
    name: 'EncryptedContentTransferSyntaxUID'
  },
  x04000520: {
    tag: '(0400,0520)',
    vr: 'OB',
    vm: 1,
    name: 'EncryptedContent'
  },
  x04000550: {
    tag: '(0400,0550)',
    vr: 'SQ',
    vm: 1,
    name: 'ModifiedAttributesSequence'
  },
  x04000561: {
    tag: '(0400,0561)',
    vr: 'SQ',
    vm: 1,
    name: 'OriginalAttributesSequence'
  },
  x04000562: {
    tag: '(0400,0562)',
    vr: 'DT',
    vm: 1,
    name: 'AttributeModificationDateTime'
  },
  x04000563: {
    tag: '(0400,0563)',
    vr: 'LO',
    vm: 1,
    name: 'ModifyingSystem'
  },
  x04000564: {
    tag: '(0400,0564)',
    vr: 'LO',
    vm: 1,
    name: 'SourceOfPreviousValues'
  },
  x04000565: {
    tag: '(0400,0565)',
    vr: 'CS',
    vm: 1,
    name: 'ReasonForTheAttributeModification'
  },
  x1000xxx0: {
    tag: '(1000,xxx0)',
    vr: 'US',
    vm: 3,
    name: 'EscapeTriplet'
  },
  x1000xxx1: {
    tag: '(1000,xxx1)',
    vr: 'US',
    vm: 3,
    name: 'RunLengthTriplet'
  },
  x1000xxx2: {
    tag: '(1000,xxx2)',
    vr: 'US',
    vm: 1,
    name: 'HuffmanTableSize'
  },
  x1000xxx3: {
    tag: '(1000,xxx3)',
    vr: 'US',
    vm: 3,
    name: 'HuffmanTableTriplet'
  },
  x1000xxx4: {
    tag: '(1000,xxx4)',
    vr: 'US',
    vm: 1,
    name: 'ShiftTableSize'
  },
  x1000xxx5: {
    tag: '(1000,xxx5)',
    vr: 'US',
    vm: 3,
    name: 'ShiftTableTriplet'
  },
  x1010xxxx: {
    tag: '(1010,xxxx)',
    vr: 'US',
    vm: '1-n',
    name: 'ZonalMap'
  },
  x20000010: {
    tag: '(2000,0010)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfCopies'
  },
  x2000001e: {
    tag: '(2000,001E)',
    vr: 'SQ',
    vm: 1,
    name: 'PrinterConfigurationSequence'
  },
  x20000020: {
    tag: '(2000,0020)',
    vr: 'CS',
    vm: 1,
    name: 'PrintPriority'
  },
  x20000030: {
    tag: '(2000,0030)',
    vr: 'CS',
    vm: 1,
    name: 'MediumType'
  },
  x20000040: {
    tag: '(2000,0040)',
    vr: 'CS',
    vm: 1,
    name: 'FilmDestination'
  },
  x20000050: {
    tag: '(2000,0050)',
    vr: 'LO',
    vm: 1,
    name: 'FilmSessionLabel'
  },
  x20000060: {
    tag: '(2000,0060)',
    vr: 'IS',
    vm: 1,
    name: 'MemoryAllocation'
  },
  x20000061: {
    tag: '(2000,0061)',
    vr: 'IS',
    vm: 1,
    name: 'MaximumMemoryAllocation'
  },
  x20000062: {
    tag: '(2000,0062)',
    vr: 'CS',
    vm: 1,
    name: 'ColorImagePrintingFlag'
  },
  x20000063: {
    tag: '(2000,0063)',
    vr: 'CS',
    vm: 1,
    name: 'CollationFlag'
  },
  x20000065: {
    tag: '(2000,0065)',
    vr: 'CS',
    vm: 1,
    name: 'AnnotationFlag'
  },
  x20000067: {
    tag: '(2000,0067)',
    vr: 'CS',
    vm: 1,
    name: 'ImageOverlayFlag'
  },
  x20000069: {
    tag: '(2000,0069)',
    vr: 'CS',
    vm: 1,
    name: 'PresentationLUTFlag'
  },
  x2000006a: {
    tag: '(2000,006A)',
    vr: 'CS',
    vm: 1,
    name: 'ImageBoxPresentationLUTFlag'
  },
  x200000a0: {
    tag: '(2000,00A0)',
    vr: 'US',
    vm: 1,
    name: 'MemoryBitDepth'
  },
  x200000a1: {
    tag: '(2000,00A1)',
    vr: 'US',
    vm: 1,
    name: 'PrintingBitDepth'
  },
  x200000a2: {
    tag: '(2000,00A2)',
    vr: 'SQ',
    vm: 1,
    name: 'MediaInstalledSequence'
  },
  x200000a4: {
    tag: '(2000,00A4)',
    vr: 'SQ',
    vm: 1,
    name: 'OtherMediaAvailableSequence'
  },
  x200000a8: {
    tag: '(2000,00A8)',
    vr: 'SQ',
    vm: 1,
    name: 'SupportedImageDisplayFormatsSequence'
  },
  x20000500: {
    tag: '(2000,0500)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedFilmBoxSequence'
  },
  x20000510: {
    tag: '(2000,0510)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedStoredPrintSequence'
  },
  x20100010: {
    tag: '(2010,0010)',
    vr: 'ST',
    vm: 1,
    name: 'ImageDisplayFormat'
  },
  x20100030: {
    tag: '(2010,0030)',
    vr: 'CS',
    vm: 1,
    name: 'AnnotationDisplayFormatID'
  },
  x20100040: {
    tag: '(2010,0040)',
    vr: 'CS',
    vm: 1,
    name: 'FilmOrientation'
  },
  x20100050: {
    tag: '(2010,0050)',
    vr: 'CS',
    vm: 1,
    name: 'FilmSizeID'
  },
  x20100052: {
    tag: '(2010,0052)',
    vr: 'CS',
    vm: 1,
    name: 'PrinterResolutionID'
  },
  x20100054: {
    tag: '(2010,0054)',
    vr: 'CS',
    vm: 1,
    name: 'DefaultPrinterResolutionID'
  },
  x20100060: {
    tag: '(2010,0060)',
    vr: 'CS',
    vm: 1,
    name: 'MagnificationType'
  },
  x20100080: {
    tag: '(2010,0080)',
    vr: 'CS',
    vm: 1,
    name: 'SmoothingType'
  },
  x201000a6: {
    tag: '(2010,00A6)',
    vr: 'CS',
    vm: 1,
    name: 'DefaultMagnificationType'
  },
  x201000a7: {
    tag: '(2010,00A7)',
    vr: 'CS',
    vm: '1-n',
    name: 'OtherMagnificationTypesAvailable'
  },
  x201000a8: {
    tag: '(2010,00A8)',
    vr: 'CS',
    vm: 1,
    name: 'DefaultSmoothingType'
  },
  x201000a9: {
    tag: '(2010,00A9)',
    vr: 'CS',
    vm: '1-n',
    name: 'OtherSmoothingTypesAvailable'
  },
  x20100100: {
    tag: '(2010,0100)',
    vr: 'CS',
    vm: 1,
    name: 'BorderDensity'
  },
  x20100110: {
    tag: '(2010,0110)',
    vr: 'CS',
    vm: 1,
    name: 'EmptyImageDensity'
  },
  x20100120: {
    tag: '(2010,0120)',
    vr: 'US',
    vm: 1,
    name: 'MinDensity'
  },
  x20100130: {
    tag: '(2010,0130)',
    vr: 'US',
    vm: 1,
    name: 'MaxDensity'
  },
  x20100140: {
    tag: '(2010,0140)',
    vr: 'CS',
    vm: 1,
    name: 'Trim'
  },
  x20100150: {
    tag: '(2010,0150)',
    vr: 'ST',
    vm: 1,
    name: 'ConfigurationInformation'
  },
  x20100152: {
    tag: '(2010,0152)',
    vr: 'LT',
    vm: 1,
    name: 'ConfigurationInformationDescription'
  },
  x20100154: {
    tag: '(2010,0154)',
    vr: 'IS',
    vm: 1,
    name: 'MaximumCollatedFilms'
  },
  x2010015e: {
    tag: '(2010,015E)',
    vr: 'US',
    vm: 1,
    name: 'Illumination'
  },
  x20100160: {
    tag: '(2010,0160)',
    vr: 'US',
    vm: 1,
    name: 'ReflectedAmbientLight'
  },
  x20100376: {
    tag: '(2010,0376)',
    vr: 'DS',
    vm: 2,
    name: 'PrinterPixelSpacing'
  },
  x20100500: {
    tag: '(2010,0500)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedFilmSessionSequence'
  },
  x20100510: {
    tag: '(2010,0510)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedImageBoxSequence'
  },
  x20100520: {
    tag: '(2010,0520)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedBasicAnnotationBoxSequence'
  },
  x20200010: {
    tag: '(2020,0010)',
    vr: 'US',
    vm: 1,
    name: 'ImageBoxPosition'
  },
  x20200020: {
    tag: '(2020,0020)',
    vr: 'CS',
    vm: 1,
    name: 'Polarity'
  },
  x20200030: {
    tag: '(2020,0030)',
    vr: 'DS',
    vm: 1,
    name: 'RequestedImageSize'
  },
  x20200040: {
    tag: '(2020,0040)',
    vr: 'CS',
    vm: 1,
    name: 'RequestedDecimateCropBehavior'
  },
  x20200050: {
    tag: '(2020,0050)',
    vr: 'CS',
    vm: 1,
    name: 'RequestedResolutionID'
  },
  x202000a0: {
    tag: '(2020,00A0)',
    vr: 'CS',
    vm: 1,
    name: 'RequestedImageSizeFlag'
  },
  x202000a2: {
    tag: '(2020,00A2)',
    vr: 'CS',
    vm: 1,
    name: 'DecimateCropResult'
  },
  x20200110: {
    tag: '(2020,0110)',
    vr: 'SQ',
    vm: 1,
    name: 'BasicGrayscaleImageSequence'
  },
  x20200111: {
    tag: '(2020,0111)',
    vr: 'SQ',
    vm: 1,
    name: 'BasicColorImageSequence'
  },
  x20200130: {
    tag: '(2020,0130)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedImageOverlayBoxSequence'
  },
  x20200140: {
    tag: '(2020,0140)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedVOILUTBoxSequence'
  },
  x20300010: {
    tag: '(2030,0010)',
    vr: 'US',
    vm: 1,
    name: 'AnnotationPosition'
  },
  x20300020: {
    tag: '(2030,0020)',
    vr: 'LO',
    vm: 1,
    name: 'TextString'
  },
  x20400010: {
    tag: '(2040,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedOverlayPlaneSequence'
  },
  x20400011: {
    tag: '(2040,0011)',
    vr: 'US',
    vm: '1-99',
    name: 'ReferencedOverlayPlaneGroups'
  },
  x20400020: {
    tag: '(2040,0020)',
    vr: 'SQ',
    vm: 1,
    name: 'OverlayPixelDataSequence'
  },
  x20400060: {
    tag: '(2040,0060)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayMagnificationType'
  },
  x20400070: {
    tag: '(2040,0070)',
    vr: 'CS',
    vm: 1,
    name: 'OverlaySmoothingType'
  },
  x20400072: {
    tag: '(2040,0072)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayOrImageMagnification'
  },
  x20400074: {
    tag: '(2040,0074)',
    vr: 'US',
    vm: 1,
    name: 'MagnifyToNumberOfColumns'
  },
  x20400080: {
    tag: '(2040,0080)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayForegroundDensity'
  },
  x20400082: {
    tag: '(2040,0082)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayBackgroundDensity'
  },
  x20400090: {
    tag: '(2040,0090)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayMode'
  },
  x20400100: {
    tag: '(2040,0100)',
    vr: 'CS',
    vm: 1,
    name: 'ThresholdDensity'
  },
  x20400500: {
    tag: '(2040,0500)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedImageBoxSequenceRetired'
  },
  x20500010: {
    tag: '(2050,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'PresentationLUTSequence'
  },
  x20500020: {
    tag: '(2050,0020)',
    vr: 'CS',
    vm: 1,
    name: 'PresentationLUTShape'
  },
  x20500500: {
    tag: '(2050,0500)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedPresentationLUTSequence'
  },
  x21000010: {
    tag: '(2100,0010)',
    vr: 'SH',
    vm: 1,
    name: 'PrintJobID'
  },
  x21000020: {
    tag: '(2100,0020)',
    vr: 'CS',
    vm: 1,
    name: 'ExecutionStatus'
  },
  x21000030: {
    tag: '(2100,0030)',
    vr: 'CS',
    vm: 1,
    name: 'ExecutionStatusInfo'
  },
  x21000040: {
    tag: '(2100,0040)',
    vr: 'DA',
    vm: 1,
    name: 'CreationDate'
  },
  x21000050: {
    tag: '(2100,0050)',
    vr: 'TM',
    vm: 1,
    name: 'CreationTime'
  },
  x21000070: {
    tag: '(2100,0070)',
    vr: 'AE',
    vm: 1,
    name: 'Originator'
  },
  x21000140: {
    tag: '(2100,0140)',
    vr: 'AE',
    vm: 1,
    name: 'DestinationAE'
  },
  x21000160: {
    tag: '(2100,0160)',
    vr: 'SH',
    vm: 1,
    name: 'OwnerID'
  },
  x21000170: {
    tag: '(2100,0170)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfFilms'
  },
  x21000500: {
    tag: '(2100,0500)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedPrintJobSequencePullStoredPrint'
  },
  x21100010: {
    tag: '(2110,0010)',
    vr: 'CS',
    vm: 1,
    name: 'PrinterStatus'
  },
  x21100020: {
    tag: '(2110,0020)',
    vr: 'CS',
    vm: 1,
    name: 'PrinterStatusInfo'
  },
  x21100030: {
    tag: '(2110,0030)',
    vr: 'LO',
    vm: 1,
    name: 'PrinterName'
  },
  x21100099: {
    tag: '(2110,0099)',
    vr: 'SH',
    vm: 1,
    name: 'PrintQueueID'
  },
  x21200010: {
    tag: '(2120,0010)',
    vr: 'CS',
    vm: 1,
    name: 'QueueStatus'
  },
  x21200050: {
    tag: '(2120,0050)',
    vr: 'SQ',
    vm: 1,
    name: 'PrintJobDescriptionSequence'
  },
  x21200070: {
    tag: '(2120,0070)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedPrintJobSequence'
  },
  x21300010: {
    tag: '(2130,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'PrintManagementCapabilitiesSequence'
  },
  x21300015: {
    tag: '(2130,0015)',
    vr: 'SQ',
    vm: 1,
    name: 'PrinterCharacteristicsSequence'
  },
  x21300030: {
    tag: '(2130,0030)',
    vr: 'SQ',
    vm: 1,
    name: 'FilmBoxContentSequence'
  },
  x21300040: {
    tag: '(2130,0040)',
    vr: 'SQ',
    vm: 1,
    name: 'ImageBoxContentSequence'
  },
  x21300050: {
    tag: '(2130,0050)',
    vr: 'SQ',
    vm: 1,
    name: 'AnnotationContentSequence'
  },
  x21300060: {
    tag: '(2130,0060)',
    vr: 'SQ',
    vm: 1,
    name: 'ImageOverlayBoxContentSequence'
  },
  x21300080: {
    tag: '(2130,0080)',
    vr: 'SQ',
    vm: 1,
    name: 'PresentationLUTContentSequence'
  },
  x213000a0: {
    tag: '(2130,00A0)',
    vr: 'SQ',
    vm: 1,
    name: 'ProposedStudySequence'
  },
  x213000c0: {
    tag: '(2130,00C0)',
    vr: 'SQ',
    vm: 1,
    name: 'OriginalImageSequence'
  },
  x22000001: {
    tag: '(2200,0001)',
    vr: 'CS',
    vm: 1,
    name: 'LabelUsingInformationExtractedFromInstances'
  },
  x22000002: {
    tag: '(2200,0002)',
    vr: 'UT',
    vm: 1,
    name: 'LabelText'
  },
  x22000003: {
    tag: '(2200,0003)',
    vr: 'CS',
    vm: 1,
    name: 'LabelStyleSelection'
  },
  x22000004: {
    tag: '(2200,0004)',
    vr: 'LT',
    vm: 1,
    name: 'MediaDisposition'
  },
  x22000005: {
    tag: '(2200,0005)',
    vr: 'LT',
    vm: 1,
    name: 'BarcodeValue'
  },
  x22000006: {
    tag: '(2200,0006)',
    vr: 'CS',
    vm: 1,
    name: 'BarcodeSymbology'
  },
  x22000007: {
    tag: '(2200,0007)',
    vr: 'CS',
    vm: 1,
    name: 'AllowMediaSplitting'
  },
  x22000008: {
    tag: '(2200,0008)',
    vr: 'CS',
    vm: 1,
    name: 'IncludeNonDICOMObjects'
  },
  x22000009: {
    tag: '(2200,0009)',
    vr: 'CS',
    vm: 1,
    name: 'IncludeDisplayApplication'
  },
  x2200000a: {
    tag: '(2200,000A)',
    vr: 'CS',
    vm: 1,
    name: 'PreserveCompositeInstancesAfterMediaCreation'
  },
  x2200000b: {
    tag: '(2200,000B)',
    vr: 'US',
    vm: 1,
    name: 'TotalNumberOfPiecesOfMediaCreated'
  },
  x2200000c: {
    tag: '(2200,000C)',
    vr: 'LO',
    vm: 1,
    name: 'RequestedMediaApplicationProfile'
  },
  x2200000d: {
    tag: '(2200,000D)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedStorageMediaSequence'
  },
  x2200000e: {
    tag: '(2200,000E)',
    vr: 'AT',
    vm: '1-n',
    name: 'FailureAttributes'
  },
  x2200000f: {
    tag: '(2200,000F)',
    vr: 'CS',
    vm: 1,
    name: 'AllowLossyCompression'
  },
  x22000020: {
    tag: '(2200,0020)',
    vr: 'CS',
    vm: 1,
    name: 'RequestPriority'
  },
  x30020002: {
    tag: '(3002,0002)',
    vr: 'SH',
    vm: 1,
    name: 'RTImageLabel'
  },
  x30020003: {
    tag: '(3002,0003)',
    vr: 'LO',
    vm: 1,
    name: 'RTImageName'
  },
  x30020004: {
    tag: '(3002,0004)',
    vr: 'ST',
    vm: 1,
    name: 'RTImageDescription'
  },
  x3002000a: {
    tag: '(3002,000A)',
    vr: 'CS',
    vm: 1,
    name: 'ReportedValuesOrigin'
  },
  x3002000c: {
    tag: '(3002,000C)',
    vr: 'CS',
    vm: 1,
    name: 'RTImagePlane'
  },
  x3002000d: {
    tag: '(3002,000D)',
    vr: 'DS',
    vm: 3,
    name: 'xrayimagereceptortranslation'
  },
  x3002000e: {
    tag: '(3002,000E)',
    vr: 'DS',
    vm: 1,
    name: 'xrayimagereceptorangle'
  },
  x30020010: {
    tag: '(3002,0010)',
    vr: 'DS',
    vm: 6,
    name: 'RTImageOrientation'
  },
  x30020011: {
    tag: '(3002,0011)',
    vr: 'DS',
    vm: 2,
    name: 'ImagePlanePixelSpacing'
  },
  x30020012: {
    tag: '(3002,0012)',
    vr: 'DS',
    vm: 2,
    name: 'RTImagePosition'
  },
  x30020020: {
    tag: '(3002,0020)',
    vr: 'SH',
    vm: 1,
    name: 'RadiationMachineName'
  },
  x30020022: {
    tag: '(3002,0022)',
    vr: 'DS',
    vm: 1,
    name: 'RadiationMachineSAD'
  },
  x30020024: {
    tag: '(3002,0024)',
    vr: 'DS',
    vm: 1,
    name: 'RadiationMachineSSD'
  },
  x30020026: {
    tag: '(3002,0026)',
    vr: 'DS',
    vm: 1,
    name: 'RTImageSID'
  },
  x30020028: {
    tag: '(3002,0028)',
    vr: 'DS',
    vm: 1,
    name: 'SourceToReferenceObjectDistance'
  },
  x30020029: {
    tag: '(3002,0029)',
    vr: 'IS',
    vm: 1,
    name: 'FractionNumber'
  },
  x30020030: {
    tag: '(3002,0030)',
    vr: 'SQ',
    vm: 1,
    name: 'ExposureSequence'
  },
  x30020032: {
    tag: '(3002,0032)',
    vr: 'DS',
    vm: 1,
    name: 'MetersetExposure'
  },
  x30020034: {
    tag: '(3002,0034)',
    vr: 'DS',
    vm: 4,
    name: 'DiaphragmPosition'
  },
  x30020040: {
    tag: '(3002,0040)',
    vr: 'SQ',
    vm: 1,
    name: 'FluenceMapSequence'
  },
  x30020041: {
    tag: '(3002,0041)',
    vr: 'CS',
    vm: 1,
    name: 'FluenceDataSource'
  },
  x30020042: {
    tag: '(3002,0042)',
    vr: 'DS',
    vm: 1,
    name: 'FluenceDataScale'
  },
  x30020050: {
    tag: '(3002,0050)',
    vr: 'SQ',
    vm: 1,
    name: 'PrimaryFluenceModeSequence'
  },
  x30020051: {
    tag: '(3002,0051)',
    vr: 'CS',
    vm: 1,
    name: 'FluenceMode'
  },
  x30020052: {
    tag: '(3002,0052)',
    vr: 'SH',
    vm: 1,
    name: 'FluenceModeID'
  },
  x30040001: {
    tag: '(3004,0001)',
    vr: 'CS',
    vm: 1,
    name: 'DVHType'
  },
  x30040002: {
    tag: '(3004,0002)',
    vr: 'CS',
    vm: 1,
    name: 'DoseUnits'
  },
  x30040004: {
    tag: '(3004,0004)',
    vr: 'CS',
    vm: 1,
    name: 'DoseType'
  },
  x30040006: {
    tag: '(3004,0006)',
    vr: 'LO',
    vm: 1,
    name: 'DoseComment'
  },
  x30040008: {
    tag: '(3004,0008)',
    vr: 'DS',
    vm: 3,
    name: 'NormalizationPoint'
  },
  x3004000a: {
    tag: '(3004,000A)',
    vr: 'CS',
    vm: 1,
    name: 'DoseSummationType'
  },
  x3004000c: {
    tag: '(3004,000C)',
    vr: 'DS',
    vm: '2-n',
    name: 'GridFrameOffsetVector'
  },
  x3004000e: {
    tag: '(3004,000E)',
    vr: 'DS',
    vm: 1,
    name: 'DoseGridScaling'
  },
  x30040010: {
    tag: '(3004,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'RTDoseROISequence'
  },
  x30040012: {
    tag: '(3004,0012)',
    vr: 'DS',
    vm: 1,
    name: 'DoseValue'
  },
  x30040014: {
    tag: '(3004,0014)',
    vr: 'CS',
    vm: '1-3',
    name: 'TissueHeterogeneityCorrection'
  },
  x30040040: {
    tag: '(3004,0040)',
    vr: 'DS',
    vm: 3,
    name: 'DVHNormalizationPoint'
  },
  x30040042: {
    tag: '(3004,0042)',
    vr: 'DS',
    vm: 1,
    name: 'DVHNormalizationDoseValue'
  },
  x30040050: {
    tag: '(3004,0050)',
    vr: 'SQ',
    vm: 1,
    name: 'DVHSequence'
  },
  x30040052: {
    tag: '(3004,0052)',
    vr: 'DS',
    vm: 1,
    name: 'DVHDoseScaling'
  },
  x30040054: {
    tag: '(3004,0054)',
    vr: 'CS',
    vm: 1,
    name: 'DVHVolumeUnits'
  },
  x30040056: {
    tag: '(3004,0056)',
    vr: 'IS',
    vm: 1,
    name: 'DVHNumberOfBins'
  },
  x30040058: {
    tag: '(3004,0058)',
    vr: 'DS',
    vm: '2-2n',
    name: 'DVHData'
  },
  x30040060: {
    tag: '(3004,0060)',
    vr: 'SQ',
    vm: 1,
    name: 'DVHReferencedROISequence'
  },
  x30040062: {
    tag: '(3004,0062)',
    vr: 'CS',
    vm: 1,
    name: 'DVHROIContributionType'
  },
  x30040070: {
    tag: '(3004,0070)',
    vr: 'DS',
    vm: 1,
    name: 'DVHMinimumDose'
  },
  x30040072: {
    tag: '(3004,0072)',
    vr: 'DS',
    vm: 1,
    name: 'DVHMaximumDose'
  },
  x30040074: {
    tag: '(3004,0074)',
    vr: 'DS',
    vm: 1,
    name: 'DVHMeanDose'
  },
  x30060002: {
    tag: '(3006,0002)',
    vr: 'SH',
    vm: 1,
    name: 'StructureSetLabel'
  },
  x30060004: {
    tag: '(3006,0004)',
    vr: 'LO',
    vm: 1,
    name: 'StructureSetName'
  },
  x30060006: {
    tag: '(3006,0006)',
    vr: 'ST',
    vm: 1,
    name: 'StructureSetDescription'
  },
  x30060008: {
    tag: '(3006,0008)',
    vr: 'DA',
    vm: 1,
    name: 'StructureSetDate'
  },
  x30060009: {
    tag: '(3006,0009)',
    vr: 'TM',
    vm: 1,
    name: 'StructureSetTime'
  },
  x30060010: {
    tag: '(3006,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedFrameOfReferenceSequence'
  },
  x30060012: {
    tag: '(3006,0012)',
    vr: 'SQ',
    vm: 1,
    name: 'RTReferencedStudySequence'
  },
  x30060014: {
    tag: '(3006,0014)',
    vr: 'SQ',
    vm: 1,
    name: 'RTReferencedSeriesSequence'
  },
  x30060016: {
    tag: '(3006,0016)',
    vr: 'SQ',
    vm: 1,
    name: 'ContourImageSequence'
  },
  x30060020: {
    tag: '(3006,0020)',
    vr: 'SQ',
    vm: 1,
    name: 'StructureSetROISequence'
  },
  x30060022: {
    tag: '(3006,0022)',
    vr: 'IS',
    vm: 1,
    name: 'ROINumber'
  },
  x30060024: {
    tag: '(3006,0024)',
    vr: 'UI',
    vm: 1,
    name: 'ReferencedFrameOfReferenceUID'
  },
  x30060026: {
    tag: '(3006,0026)',
    vr: 'LO',
    vm: 1,
    name: 'ROIName'
  },
  x30060028: {
    tag: '(3006,0028)',
    vr: 'ST',
    vm: 1,
    name: 'ROIDescription'
  },
  x3006002a: {
    tag: '(3006,002A)',
    vr: 'IS',
    vm: 3,
    name: 'ROIDisplayColor'
  },
  x3006002c: {
    tag: '(3006,002C)',
    vr: 'DS',
    vm: 1,
    name: 'ROIVolume'
  },
  x30060030: {
    tag: '(3006,0030)',
    vr: 'SQ',
    vm: 1,
    name: 'RTRelatedROISequence'
  },
  x30060033: {
    tag: '(3006,0033)',
    vr: 'CS',
    vm: 1,
    name: 'RTROIRelationship'
  },
  x30060036: {
    tag: '(3006,0036)',
    vr: 'CS',
    vm: 1,
    name: 'ROIGenerationAlgorithm'
  },
  x30060038: {
    tag: '(3006,0038)',
    vr: 'LO',
    vm: 1,
    name: 'ROIGenerationDescription'
  },
  x30060039: {
    tag: '(3006,0039)',
    vr: 'SQ',
    vm: 1,
    name: 'ROIContourSequence'
  },
  x30060040: {
    tag: '(3006,0040)',
    vr: 'SQ',
    vm: 1,
    name: 'ContourSequence'
  },
  x30060042: {
    tag: '(3006,0042)',
    vr: 'CS',
    vm: 1,
    name: 'ContourGeometricType'
  },
  x30060044: {
    tag: '(3006,0044)',
    vr: 'DS',
    vm: 1,
    name: 'ContourSlabThickness'
  },
  x30060045: {
    tag: '(3006,0045)',
    vr: 'DS',
    vm: 3,
    name: 'ContourOffsetVector'
  },
  x30060046: {
    tag: '(3006,0046)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfContourPoints'
  },
  x30060048: {
    tag: '(3006,0048)',
    vr: 'IS',
    vm: 1,
    name: 'ContourNumber'
  },
  x30060049: {
    tag: '(3006,0049)',
    vr: 'IS',
    vm: '1-n',
    name: 'AttachedContours'
  },
  x30060050: {
    tag: '(3006,0050)',
    vr: 'DS',
    vm: '3-3n',
    name: 'ContourData'
  },
  x30060080: {
    tag: '(3006,0080)',
    vr: 'SQ',
    vm: 1,
    name: 'RTROIObservationsSequence'
  },
  x30060082: {
    tag: '(3006,0082)',
    vr: 'IS',
    vm: 1,
    name: 'ObservationNumber'
  },
  x30060084: {
    tag: '(3006,0084)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedROINumber'
  },
  x30060085: {
    tag: '(3006,0085)',
    vr: 'SH',
    vm: 1,
    name: 'ROIObservationLabel'
  },
  x30060086: {
    tag: '(3006,0086)',
    vr: 'SQ',
    vm: 1,
    name: 'RTROIIdentificationCodeSequence'
  },
  x30060088: {
    tag: '(3006,0088)',
    vr: 'ST',
    vm: 1,
    name: 'ROIObservationDescription'
  },
  x300600a0: {
    tag: '(3006,00A0)',
    vr: 'SQ',
    vm: 1,
    name: 'RelatedRTROIObservationsSequence'
  },
  x300600a4: {
    tag: '(3006,00A4)',
    vr: 'CS',
    vm: 1,
    name: 'RTROIInterpretedType'
  },
  x300600a6: {
    tag: '(3006,00A6)',
    vr: 'PN',
    vm: 1,
    name: 'ROIInterpreter'
  },
  x300600b0: {
    tag: '(3006,00B0)',
    vr: 'SQ',
    vm: 1,
    name: 'ROIPhysicalPropertiesSequence'
  },
  x300600b2: {
    tag: '(3006,00B2)',
    vr: 'CS',
    vm: 1,
    name: 'ROIPhysicalProperty'
  },
  x300600b4: {
    tag: '(3006,00B4)',
    vr: 'DS',
    vm: 1,
    name: 'ROIPhysicalPropertyValue'
  },
  x300600b6: {
    tag: '(3006,00B6)',
    vr: 'SQ',
    vm: 1,
    name: 'ROIElementalCompositionSequence'
  },
  x300600b7: {
    tag: '(3006,00B7)',
    vr: 'US',
    vm: 1,
    name: 'ROIElementalCompositionAtomicNumber'
  },
  x300600b8: {
    tag: '(3006,00B8)',
    vr: 'FL',
    vm: 1,
    name: 'ROIElementalCompositionAtomicMassFraction'
  },
  x300600c0: {
    tag: '(3006,00C0)',
    vr: 'SQ',
    vm: 1,
    name: 'FrameOfReferenceRelationshipSequence'
  },
  x300600c2: {
    tag: '(3006,00C2)',
    vr: 'UI',
    vm: 1,
    name: 'RelatedFrameOfReferenceUID'
  },
  x300600c4: {
    tag: '(3006,00C4)',
    vr: 'CS',
    vm: 1,
    name: 'FrameOfReferenceTransformationType'
  },
  x300600c6: {
    tag: '(3006,00C6)',
    vr: 'DS',
    vm: 16,
    name: 'FrameOfReferenceTransformationMatrix'
  },
  x300600c8: {
    tag: '(3006,00C8)',
    vr: 'LO',
    vm: 1,
    name: 'FrameOfReferenceTransformationComment'
  },
  x30080010: {
    tag: '(3008,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'MeasuredDoseReferenceSequence'
  },
  x30080012: {
    tag: '(3008,0012)',
    vr: 'ST',
    vm: 1,
    name: 'MeasuredDoseDescription'
  },
  x30080014: {
    tag: '(3008,0014)',
    vr: 'CS',
    vm: 1,
    name: 'MeasuredDoseType'
  },
  x30080016: {
    tag: '(3008,0016)',
    vr: 'DS',
    vm: 1,
    name: 'MeasuredDoseValue'
  },
  x30080020: {
    tag: '(3008,0020)',
    vr: 'SQ',
    vm: 1,
    name: 'TreatmentSessionBeamSequence'
  },
  x30080021: {
    tag: '(3008,0021)',
    vr: 'SQ',
    vm: 1,
    name: 'TreatmentSessionIonBeamSequence'
  },
  x30080022: {
    tag: '(3008,0022)',
    vr: 'IS',
    vm: 1,
    name: 'CurrentFractionNumber'
  },
  x30080024: {
    tag: '(3008,0024)',
    vr: 'DA',
    vm: 1,
    name: 'TreatmentControlPointDate'
  },
  x30080025: {
    tag: '(3008,0025)',
    vr: 'TM',
    vm: 1,
    name: 'TreatmentControlPointTime'
  },
  x3008002a: {
    tag: '(3008,002A)',
    vr: 'CS',
    vm: 1,
    name: 'TreatmentTerminationStatus'
  },
  x3008002b: {
    tag: '(3008,002B)',
    vr: 'SH',
    vm: 1,
    name: 'TreatmentTerminationCode'
  },
  x3008002c: {
    tag: '(3008,002C)',
    vr: 'CS',
    vm: 1,
    name: 'TreatmentVerificationStatus'
  },
  x30080030: {
    tag: '(3008,0030)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedTreatmentRecordSequence'
  },
  x30080032: {
    tag: '(3008,0032)',
    vr: 'DS',
    vm: 1,
    name: 'SpecifiedPrimaryMeterset'
  },
  x30080033: {
    tag: '(3008,0033)',
    vr: 'DS',
    vm: 1,
    name: 'SpecifiedSecondaryMeterset'
  },
  x30080036: {
    tag: '(3008,0036)',
    vr: 'DS',
    vm: 1,
    name: 'DeliveredPrimaryMeterset'
  },
  x30080037: {
    tag: '(3008,0037)',
    vr: 'DS',
    vm: 1,
    name: 'DeliveredSecondaryMeterset'
  },
  x3008003a: {
    tag: '(3008,003A)',
    vr: 'DS',
    vm: 1,
    name: 'SpecifiedTreatmentTime'
  },
  x3008003b: {
    tag: '(3008,003B)',
    vr: 'DS',
    vm: 1,
    name: 'DeliveredTreatmentTime'
  },
  x30080040: {
    tag: '(3008,0040)',
    vr: 'SQ',
    vm: 1,
    name: 'ControlPointDeliverySequence'
  },
  x30080041: {
    tag: '(3008,0041)',
    vr: 'SQ',
    vm: 1,
    name: 'IonControlPointDeliverySequence'
  },
  x30080042: {
    tag: '(3008,0042)',
    vr: 'DS',
    vm: 1,
    name: 'SpecifiedMeterset'
  },
  x30080044: {
    tag: '(3008,0044)',
    vr: 'DS',
    vm: 1,
    name: 'DeliveredMeterset'
  },
  x30080045: {
    tag: '(3008,0045)',
    vr: 'FL',
    vm: 1,
    name: 'MetersetRateSet'
  },
  x30080046: {
    tag: '(3008,0046)',
    vr: 'FL',
    vm: 1,
    name: 'MetersetRateDelivered'
  },
  x30080047: {
    tag: '(3008,0047)',
    vr: 'FL',
    vm: '1-n',
    name: 'ScanSpotMetersetsDelivered'
  },
  x30080048: {
    tag: '(3008,0048)',
    vr: 'DS',
    vm: 1,
    name: 'DoseRateDelivered'
  },
  x30080050: {
    tag: '(3008,0050)',
    vr: 'SQ',
    vm: 1,
    name: 'TreatmentSummaryCalculatedDoseReferenceSequence'
  },
  x30080052: {
    tag: '(3008,0052)',
    vr: 'DS',
    vm: 1,
    name: 'CumulativeDoseToDoseReference'
  },
  x30080054: {
    tag: '(3008,0054)',
    vr: 'DA',
    vm: 1,
    name: 'FirstTreatmentDate'
  },
  x30080056: {
    tag: '(3008,0056)',
    vr: 'DA',
    vm: 1,
    name: 'MostRecentTreatmentDate'
  },
  x3008005a: {
    tag: '(3008,005A)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfFractionsDelivered'
  },
  x30080060: {
    tag: '(3008,0060)',
    vr: 'SQ',
    vm: 1,
    name: 'OverrideSequence'
  },
  x30080061: {
    tag: '(3008,0061)',
    vr: 'AT',
    vm: 1,
    name: 'ParameterSequencePointer'
  },
  x30080062: {
    tag: '(3008,0062)',
    vr: 'AT',
    vm: 1,
    name: 'OverrideParameterPointer'
  },
  x30080063: {
    tag: '(3008,0063)',
    vr: 'IS',
    vm: 1,
    name: 'ParameterItemIndex'
  },
  x30080064: {
    tag: '(3008,0064)',
    vr: 'IS',
    vm: 1,
    name: 'MeasuredDoseReferenceNumber'
  },
  x30080065: {
    tag: '(3008,0065)',
    vr: 'AT',
    vm: 1,
    name: 'ParameterPointer'
  },
  x30080066: {
    tag: '(3008,0066)',
    vr: 'ST',
    vm: 1,
    name: 'OverrideReason'
  },
  x30080068: {
    tag: '(3008,0068)',
    vr: 'SQ',
    vm: 1,
    name: 'CorrectedParameterSequence'
  },
  x3008006a: {
    tag: '(3008,006A)',
    vr: 'FL',
    vm: 1,
    name: 'CorrectionValue'
  },
  x30080070: {
    tag: '(3008,0070)',
    vr: 'SQ',
    vm: 1,
    name: 'CalculatedDoseReferenceSequence'
  },
  x30080072: {
    tag: '(3008,0072)',
    vr: 'IS',
    vm: 1,
    name: 'CalculatedDoseReferenceNumber'
  },
  x30080074: {
    tag: '(3008,0074)',
    vr: 'ST',
    vm: 1,
    name: 'CalculatedDoseReferenceDescription'
  },
  x30080076: {
    tag: '(3008,0076)',
    vr: 'DS',
    vm: 1,
    name: 'CalculatedDoseReferenceDoseValue'
  },
  x30080078: {
    tag: '(3008,0078)',
    vr: 'DS',
    vm: 1,
    name: 'StartMeterset'
  },
  x3008007a: {
    tag: '(3008,007A)',
    vr: 'DS',
    vm: 1,
    name: 'EndMeterset'
  },
  x30080080: {
    tag: '(3008,0080)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedMeasuredDoseReferenceSequence'
  },
  x30080082: {
    tag: '(3008,0082)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedMeasuredDoseReferenceNumber'
  },
  x30080090: {
    tag: '(3008,0090)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedCalculatedDoseReferenceSequence'
  },
  x30080092: {
    tag: '(3008,0092)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedCalculatedDoseReferenceNumber'
  },
  x300800a0: {
    tag: '(3008,00A0)',
    vr: 'SQ',
    vm: 1,
    name: 'BeamLimitingDeviceLeafPairsSequence'
  },
  x300800b0: {
    tag: '(3008,00B0)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedWedgeSequence'
  },
  x300800c0: {
    tag: '(3008,00C0)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedCompensatorSequence'
  },
  x300800d0: {
    tag: '(3008,00D0)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedBlockSequence'
  },
  x300800e0: {
    tag: '(3008,00E0)',
    vr: 'SQ',
    vm: 1,
    name: 'TreatmentSummaryMeasuredDoseReferenceSequence'
  },
  x300800f0: {
    tag: '(3008,00F0)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedSnoutSequence'
  },
  x300800f2: {
    tag: '(3008,00F2)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedRangeShifterSequence'
  },
  x300800f4: {
    tag: '(3008,00F4)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedLateralSpreadingDeviceSequence'
  },
  x300800f6: {
    tag: '(3008,00F6)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedRangeModulatorSequence'
  },
  x30080100: {
    tag: '(3008,0100)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedSourceSequence'
  },
  x30080105: {
    tag: '(3008,0105)',
    vr: 'LO',
    vm: 1,
    name: 'SourceSerialNumber'
  },
  x30080110: {
    tag: '(3008,0110)',
    vr: 'SQ',
    vm: 1,
    name: 'TreatmentSessionApplicationSetupSequence'
  },
  x30080116: {
    tag: '(3008,0116)',
    vr: 'CS',
    vm: 1,
    name: 'ApplicationSetupCheck'
  },
  x30080120: {
    tag: '(3008,0120)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedBrachyAccessoryDeviceSequence'
  },
  x30080122: {
    tag: '(3008,0122)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedBrachyAccessoryDeviceNumber'
  },
  x30080130: {
    tag: '(3008,0130)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedChannelSequence'
  },
  x30080132: {
    tag: '(3008,0132)',
    vr: 'DS',
    vm: 1,
    name: 'SpecifiedChannelTotalTime'
  },
  x30080134: {
    tag: '(3008,0134)',
    vr: 'DS',
    vm: 1,
    name: 'DeliveredChannelTotalTime'
  },
  x30080136: {
    tag: '(3008,0136)',
    vr: 'IS',
    vm: 1,
    name: 'SpecifiedNumberOfPulses'
  },
  x30080138: {
    tag: '(3008,0138)',
    vr: 'IS',
    vm: 1,
    name: 'DeliveredNumberOfPulses'
  },
  x3008013a: {
    tag: '(3008,013A)',
    vr: 'DS',
    vm: 1,
    name: 'SpecifiedPulseRepetitionInterval'
  },
  x3008013c: {
    tag: '(3008,013C)',
    vr: 'DS',
    vm: 1,
    name: 'DeliveredPulseRepetitionInterval'
  },
  x30080140: {
    tag: '(3008,0140)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedSourceApplicatorSequence'
  },
  x30080142: {
    tag: '(3008,0142)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedSourceApplicatorNumber'
  },
  x30080150: {
    tag: '(3008,0150)',
    vr: 'SQ',
    vm: 1,
    name: 'RecordedChannelShieldSequence'
  },
  x30080152: {
    tag: '(3008,0152)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedChannelShieldNumber'
  },
  x30080160: {
    tag: '(3008,0160)',
    vr: 'SQ',
    vm: 1,
    name: 'BrachyControlPointDeliveredSequence'
  },
  x30080162: {
    tag: '(3008,0162)',
    vr: 'DA',
    vm: 1,
    name: 'SafePositionExitDate'
  },
  x30080164: {
    tag: '(3008,0164)',
    vr: 'TM',
    vm: 1,
    name: 'SafePositionExitTime'
  },
  x30080166: {
    tag: '(3008,0166)',
    vr: 'DA',
    vm: 1,
    name: 'SafePositionReturnDate'
  },
  x30080168: {
    tag: '(3008,0168)',
    vr: 'TM',
    vm: 1,
    name: 'SafePositionReturnTime'
  },
  x30080200: {
    tag: '(3008,0200)',
    vr: 'CS',
    vm: 1,
    name: 'CurrentTreatmentStatus'
  },
  x30080202: {
    tag: '(3008,0202)',
    vr: 'ST',
    vm: 1,
    name: 'TreatmentStatusComment'
  },
  x30080220: {
    tag: '(3008,0220)',
    vr: 'SQ',
    vm: 1,
    name: 'FractionGroupSummarySequence'
  },
  x30080223: {
    tag: '(3008,0223)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedFractionNumber'
  },
  x30080224: {
    tag: '(3008,0224)',
    vr: 'CS',
    vm: 1,
    name: 'FractionGroupType'
  },
  x30080230: {
    tag: '(3008,0230)',
    vr: 'CS',
    vm: 1,
    name: 'BeamStopperPosition'
  },
  x30080240: {
    tag: '(3008,0240)',
    vr: 'SQ',
    vm: 1,
    name: 'FractionStatusSummarySequence'
  },
  x30080250: {
    tag: '(3008,0250)',
    vr: 'DA',
    vm: 1,
    name: 'TreatmentDate'
  },
  x30080251: {
    tag: '(3008,0251)',
    vr: 'TM',
    vm: 1,
    name: 'TreatmentTime'
  },
  x300a0002: {
    tag: '(300A,0002)',
    vr: 'SH',
    vm: 1,
    name: 'RTPlanLabel'
  },
  x300a0003: {
    tag: '(300A,0003)',
    vr: 'LO',
    vm: 1,
    name: 'RTPlanName'
  },
  x300a0004: {
    tag: '(300A,0004)',
    vr: 'ST',
    vm: 1,
    name: 'RTPlanDescription'
  },
  x300a0006: {
    tag: '(300A,0006)',
    vr: 'DA',
    vm: 1,
    name: 'RTPlanDate'
  },
  x300a0007: {
    tag: '(300A,0007)',
    vr: 'TM',
    vm: 1,
    name: 'RTPlanTime'
  },
  x300a0009: {
    tag: '(300A,0009)',
    vr: 'LO',
    vm: '1-n',
    name: 'TreatmentProtocols'
  },
  x300a000a: {
    tag: '(300A,000A)',
    vr: 'CS',
    vm: 1,
    name: 'PlanIntent'
  },
  x300a000b: {
    tag: '(300A,000B)',
    vr: 'LO',
    vm: '1-n',
    name: 'TreatmentSites'
  },
  x300a000c: {
    tag: '(300A,000C)',
    vr: 'CS',
    vm: 1,
    name: 'RTPlanGeometry'
  },
  x300a000e: {
    tag: '(300A,000E)',
    vr: 'ST',
    vm: 1,
    name: 'PrescriptionDescription'
  },
  x300a0010: {
    tag: '(300A,0010)',
    vr: 'SQ',
    vm: 1,
    name: 'DoseReferenceSequence'
  },
  x300a0012: {
    tag: '(300A,0012)',
    vr: 'IS',
    vm: 1,
    name: 'DoseReferenceNumber'
  },
  x300a0013: {
    tag: '(300A,0013)',
    vr: 'UI',
    vm: 1,
    name: 'DoseReferenceUID'
  },
  x300a0014: {
    tag: '(300A,0014)',
    vr: 'CS',
    vm: 1,
    name: 'DoseReferenceStructureType'
  },
  x300a0015: {
    tag: '(300A,0015)',
    vr: 'CS',
    vm: 1,
    name: 'NominalBeamEnergyUnit'
  },
  x300a0016: {
    tag: '(300A,0016)',
    vr: 'LO',
    vm: 1,
    name: 'DoseReferenceDescription'
  },
  x300a0018: {
    tag: '(300A,0018)',
    vr: 'DS',
    vm: 3,
    name: 'DoseReferencePointCoordinates'
  },
  x300a001a: {
    tag: '(300A,001A)',
    vr: 'DS',
    vm: 1,
    name: 'NominalPriorDose'
  },
  x300a0020: {
    tag: '(300A,0020)',
    vr: 'CS',
    vm: 1,
    name: 'DoseReferenceType'
  },
  x300a0021: {
    tag: '(300A,0021)',
    vr: 'DS',
    vm: 1,
    name: 'ConstraintWeight'
  },
  x300a0022: {
    tag: '(300A,0022)',
    vr: 'DS',
    vm: 1,
    name: 'DeliveryWarningDose'
  },
  x300a0023: {
    tag: '(300A,0023)',
    vr: 'DS',
    vm: 1,
    name: 'DeliveryMaximumDose'
  },
  x300a0025: {
    tag: '(300A,0025)',
    vr: 'DS',
    vm: 1,
    name: 'TargetMinimumDose'
  },
  x300a0026: {
    tag: '(300A,0026)',
    vr: 'DS',
    vm: 1,
    name: 'TargetPrescriptionDose'
  },
  x300a0027: {
    tag: '(300A,0027)',
    vr: 'DS',
    vm: 1,
    name: 'TargetMaximumDose'
  },
  x300a0028: {
    tag: '(300A,0028)',
    vr: 'DS',
    vm: 1,
    name: 'TargetUnderdoseVolumeFraction'
  },
  x300a002a: {
    tag: '(300A,002A)',
    vr: 'DS',
    vm: 1,
    name: 'OrganAtRiskFullVolumeDose'
  },
  x300a002b: {
    tag: '(300A,002B)',
    vr: 'DS',
    vm: 1,
    name: 'OrganAtRiskLimitDose'
  },
  x300a002c: {
    tag: '(300A,002C)',
    vr: 'DS',
    vm: 1,
    name: 'OrganAtRiskMaximumDose'
  },
  x300a002d: {
    tag: '(300A,002D)',
    vr: 'DS',
    vm: 1,
    name: 'OrganAtRiskOverdoseVolumeFraction'
  },
  x300a0040: {
    tag: '(300A,0040)',
    vr: 'SQ',
    vm: 1,
    name: 'ToleranceTableSequence'
  },
  x300a0042: {
    tag: '(300A,0042)',
    vr: 'IS',
    vm: 1,
    name: 'ToleranceTableNumber'
  },
  x300a0043: {
    tag: '(300A,0043)',
    vr: 'SH',
    vm: 1,
    name: 'ToleranceTableLabel'
  },
  x300a0044: {
    tag: '(300A,0044)',
    vr: 'DS',
    vm: 1,
    name: 'GantryAngleTolerance'
  },
  x300a0046: {
    tag: '(300A,0046)',
    vr: 'DS',
    vm: 1,
    name: 'BeamLimitingDeviceAngleTolerance'
  },
  x300a0048: {
    tag: '(300A,0048)',
    vr: 'SQ',
    vm: 1,
    name: 'BeamLimitingDeviceToleranceSequence'
  },
  x300a004a: {
    tag: '(300A,004A)',
    vr: 'DS',
    vm: 1,
    name: 'BeamLimitingDevicePositionTolerance'
  },
  x300a004b: {
    tag: '(300A,004B)',
    vr: 'FL',
    vm: 1,
    name: 'SnoutPositionTolerance'
  },
  x300a004c: {
    tag: '(300A,004C)',
    vr: 'DS',
    vm: 1,
    name: 'PatientSupportAngleTolerance'
  },
  x300a004e: {
    tag: '(300A,004E)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopEccentricAngleTolerance'
  },
  x300a004f: {
    tag: '(300A,004F)',
    vr: 'FL',
    vm: 1,
    name: 'TableTopPitchAngleTolerance'
  },
  x300a0050: {
    tag: '(300A,0050)',
    vr: 'FL',
    vm: 1,
    name: 'TableTopRollAngleTolerance'
  },
  x300a0051: {
    tag: '(300A,0051)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopVerticalPositionTolerance'
  },
  x300a0052: {
    tag: '(300A,0052)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopLongitudinalPositionTolerance'
  },
  x300a0053: {
    tag: '(300A,0053)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopLateralPositionTolerance'
  },
  x300a0055: {
    tag: '(300A,0055)',
    vr: 'CS',
    vm: 1,
    name: 'RTPlanRelationship'
  },
  x300a0070: {
    tag: '(300A,0070)',
    vr: 'SQ',
    vm: 1,
    name: 'FractionGroupSequence'
  },
  x300a0071: {
    tag: '(300A,0071)',
    vr: 'IS',
    vm: 1,
    name: 'FractionGroupNumber'
  },
  x300a0072: {
    tag: '(300A,0072)',
    vr: 'LO',
    vm: 1,
    name: 'FractionGroupDescription'
  },
  x300a0078: {
    tag: '(300A,0078)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfFractionsPlanned'
  },
  x300a0079: {
    tag: '(300A,0079)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfFractionPatternDigitsPerDay'
  },
  x300a007a: {
    tag: '(300A,007A)',
    vr: 'IS',
    vm: 1,
    name: 'RepeatFractionCycleLength'
  },
  x300a007b: {
    tag: '(300A,007B)',
    vr: 'LT',
    vm: 1,
    name: 'FractionPattern'
  },
  x300a0080: {
    tag: '(300A,0080)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfBeams'
  },
  x300a0082: {
    tag: '(300A,0082)',
    vr: 'DS',
    vm: 3,
    name: 'BeamDoseSpecificationPoint'
  },
  x300a0084: {
    tag: '(300A,0084)',
    vr: 'DS',
    vm: 1,
    name: 'BeamDose'
  },
  x300a0086: {
    tag: '(300A,0086)',
    vr: 'DS',
    vm: 1,
    name: 'BeamMeterset'
  },
  x300a0088: {
    tag: '(300A,0088)',
    vr: 'FL',
    vm: 1,
    name: 'BeamDosePointDepth'
  },
  x300a0089: {
    tag: '(300A,0089)',
    vr: 'FL',
    vm: 1,
    name: 'BeamDosePointEquivalentDepth'
  },
  x300a008a: {
    tag: '(300A,008A)',
    vr: 'FL',
    vm: 1,
    name: 'BeamDosePointSSD'
  },
  x300a00a0: {
    tag: '(300A,00A0)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfBrachyApplicationSetups'
  },
  x300a00a2: {
    tag: '(300A,00A2)',
    vr: 'DS',
    vm: 3,
    name: 'BrachyApplicationSetupDoseSpecificationPoint'
  },
  x300a00a4: {
    tag: '(300A,00A4)',
    vr: 'DS',
    vm: 1,
    name: 'BrachyApplicationSetupDose'
  },
  x300a00b0: {
    tag: '(300A,00B0)',
    vr: 'SQ',
    vm: 1,
    name: 'BeamSequence'
  },
  x300a00b2: {
    tag: '(300A,00B2)',
    vr: 'SH',
    vm: 1,
    name: 'TreatmentMachineName'
  },
  x300a00b3: {
    tag: '(300A,00B3)',
    vr: 'CS',
    vm: 1,
    name: 'PrimaryDosimeterUnit'
  },
  x300a00b4: {
    tag: '(300A,00B4)',
    vr: 'DS',
    vm: 1,
    name: 'SourceAxisDistance'
  },
  x300a00b6: {
    tag: '(300A,00B6)',
    vr: 'SQ',
    vm: 1,
    name: 'BeamLimitingDeviceSequence'
  },
  x300a00b8: {
    tag: '(300A,00B8)',
    vr: 'CS',
    vm: 1,
    name: 'RTBeamLimitingDeviceType'
  },
  x300a00ba: {
    tag: '(300A,00BA)',
    vr: 'DS',
    vm: 1,
    name: 'SourceToBeamLimitingDeviceDistance'
  },
  x300a00bb: {
    tag: '(300A,00BB)',
    vr: 'FL',
    vm: 1,
    name: 'IsocenterToBeamLimitingDeviceDistance'
  },
  x300a00bc: {
    tag: '(300A,00BC)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfLeafJawPairs'
  },
  x300a00be: {
    tag: '(300A,00BE)',
    vr: 'DS',
    vm: '3-n',
    name: 'LeafPositionBoundaries'
  },
  x300a00c0: {
    tag: '(300A,00C0)',
    vr: 'IS',
    vm: 1,
    name: 'BeamNumber'
  },
  x300a00c2: {
    tag: '(300A,00C2)',
    vr: 'LO',
    vm: 1,
    name: 'BeamName'
  },
  x300a00c3: {
    tag: '(300A,00C3)',
    vr: 'ST',
    vm: 1,
    name: 'BeamDescription'
  },
  x300a00c4: {
    tag: '(300A,00C4)',
    vr: 'CS',
    vm: 1,
    name: 'BeamType'
  },
  x300a00c6: {
    tag: '(300A,00C6)',
    vr: 'CS',
    vm: 1,
    name: 'RadiationType'
  },
  x300a00c7: {
    tag: '(300A,00C7)',
    vr: 'CS',
    vm: 1,
    name: 'HighDoseTechniqueType'
  },
  x300a00c8: {
    tag: '(300A,00C8)',
    vr: 'IS',
    vm: 1,
    name: 'ReferenceImageNumber'
  },
  x300a00ca: {
    tag: '(300A,00CA)',
    vr: 'SQ',
    vm: 1,
    name: 'PlannedVerificationImageSequence'
  },
  x300a00cc: {
    tag: '(300A,00CC)',
    vr: 'LO',
    vm: '1-n',
    name: 'ImagingDeviceSpecificAcquisitionParameters'
  },
  x300a00ce: {
    tag: '(300A,00CE)',
    vr: 'CS',
    vm: 1,
    name: 'TreatmentDeliveryType'
  },
  x300a00d0: {
    tag: '(300A,00D0)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfWedges'
  },
  x300a00d1: {
    tag: '(300A,00D1)',
    vr: 'SQ',
    vm: 1,
    name: 'WedgeSequence'
  },
  x300a00d2: {
    tag: '(300A,00D2)',
    vr: 'IS',
    vm: 1,
    name: 'WedgeNumber'
  },
  x300a00d3: {
    tag: '(300A,00D3)',
    vr: 'CS',
    vm: 1,
    name: 'WedgeType'
  },
  x300a00d4: {
    tag: '(300A,00D4)',
    vr: 'SH',
    vm: 1,
    name: 'WedgeID'
  },
  x300a00d5: {
    tag: '(300A,00D5)',
    vr: 'IS',
    vm: 1,
    name: 'WedgeAngle'
  },
  x300a00d6: {
    tag: '(300A,00D6)',
    vr: 'DS',
    vm: 1,
    name: 'WedgeFactor'
  },
  x300a00d7: {
    tag: '(300A,00D7)',
    vr: 'FL',
    vm: 1,
    name: 'TotalWedgeTrayWaterEquivalentThickness'
  },
  x300a00d8: {
    tag: '(300A,00D8)',
    vr: 'DS',
    vm: 1,
    name: 'WedgeOrientation'
  },
  x300a00d9: {
    tag: '(300A,00D9)',
    vr: 'FL',
    vm: 1,
    name: 'IsocenterToWedgeTrayDistance'
  },
  x300a00da: {
    tag: '(300A,00DA)',
    vr: 'DS',
    vm: 1,
    name: 'SourceToWedgeTrayDistance'
  },
  x300a00db: {
    tag: '(300A,00DB)',
    vr: 'FL',
    vm: 1,
    name: 'WedgeThinEdgePosition'
  },
  x300a00dc: {
    tag: '(300A,00DC)',
    vr: 'SH',
    vm: 1,
    name: 'BolusID'
  },
  x300a00dd: {
    tag: '(300A,00DD)',
    vr: 'ST',
    vm: 1,
    name: 'BolusDescription'
  },
  x300a00e0: {
    tag: '(300A,00E0)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfCompensators'
  },
  x300a00e1: {
    tag: '(300A,00E1)',
    vr: 'SH',
    vm: 1,
    name: 'MaterialID'
  },
  x300a00e2: {
    tag: '(300A,00E2)',
    vr: 'DS',
    vm: 1,
    name: 'TotalCompensatorTrayFactor'
  },
  x300a00e3: {
    tag: '(300A,00E3)',
    vr: 'SQ',
    vm: 1,
    name: 'CompensatorSequence'
  },
  x300a00e4: {
    tag: '(300A,00E4)',
    vr: 'IS',
    vm: 1,
    name: 'CompensatorNumber'
  },
  x300a00e5: {
    tag: '(300A,00E5)',
    vr: 'SH',
    vm: 1,
    name: 'CompensatorID'
  },
  x300a00e6: {
    tag: '(300A,00E6)',
    vr: 'DS',
    vm: 1,
    name: 'SourceToCompensatorTrayDistance'
  },
  x300a00e7: {
    tag: '(300A,00E7)',
    vr: 'IS',
    vm: 1,
    name: 'CompensatorRows'
  },
  x300a00e8: {
    tag: '(300A,00E8)',
    vr: 'IS',
    vm: 1,
    name: 'CompensatorColumns'
  },
  x300a00e9: {
    tag: '(300A,00E9)',
    vr: 'DS',
    vm: 2,
    name: 'CompensatorPixelSpacing'
  },
  x300a00ea: {
    tag: '(300A,00EA)',
    vr: 'DS',
    vm: 2,
    name: 'CompensatorPosition'
  },
  x300a00eb: {
    tag: '(300A,00EB)',
    vr: 'DS',
    vm: '1-n',
    name: 'CompensatorTransmissionData'
  },
  x300a00ec: {
    tag: '(300A,00EC)',
    vr: 'DS',
    vm: '1-n',
    name: 'CompensatorThicknessData'
  },
  x300a00ed: {
    tag: '(300A,00ED)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfBoli'
  },
  x300a00ee: {
    tag: '(300A,00EE)',
    vr: 'CS',
    vm: 1,
    name: 'CompensatorType'
  },
  x300a00f0: {
    tag: '(300A,00F0)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfBlocks'
  },
  x300a00f2: {
    tag: '(300A,00F2)',
    vr: 'DS',
    vm: 1,
    name: 'TotalBlockTrayFactor'
  },
  x300a00f3: {
    tag: '(300A,00F3)',
    vr: 'FL',
    vm: 1,
    name: 'TotalBlockTrayWaterEquivalentThickness'
  },
  x300a00f4: {
    tag: '(300A,00F4)',
    vr: 'SQ',
    vm: 1,
    name: 'BlockSequence'
  },
  x300a00f5: {
    tag: '(300A,00F5)',
    vr: 'SH',
    vm: 1,
    name: 'BlockTrayID'
  },
  x300a00f6: {
    tag: '(300A,00F6)',
    vr: 'DS',
    vm: 1,
    name: 'SourceToBlockTrayDistance'
  },
  x300a00f7: {
    tag: '(300A,00F7)',
    vr: 'FL',
    vm: 1,
    name: 'IsocenterToBlockTrayDistance'
  },
  x300a00f8: {
    tag: '(300A,00F8)',
    vr: 'CS',
    vm: 1,
    name: 'BlockType'
  },
  x300a00f9: {
    tag: '(300A,00F9)',
    vr: 'LO',
    vm: 1,
    name: 'AccessoryCode'
  },
  x300a00fa: {
    tag: '(300A,00FA)',
    vr: 'CS',
    vm: 1,
    name: 'BlockDivergence'
  },
  x300a00fb: {
    tag: '(300A,00FB)',
    vr: 'CS',
    vm: 1,
    name: 'BlockMountingPosition'
  },
  x300a00fc: {
    tag: '(300A,00FC)',
    vr: 'IS',
    vm: 1,
    name: 'BlockNumber'
  },
  x300a00fe: {
    tag: '(300A,00FE)',
    vr: 'LO',
    vm: 1,
    name: 'BlockName'
  },
  x300a0100: {
    tag: '(300A,0100)',
    vr: 'DS',
    vm: 1,
    name: 'BlockThickness'
  },
  x300a0102: {
    tag: '(300A,0102)',
    vr: 'DS',
    vm: 1,
    name: 'BlockTransmission'
  },
  x300a0104: {
    tag: '(300A,0104)',
    vr: 'IS',
    vm: 1,
    name: 'BlockNumberOfPoints'
  },
  x300a0106: {
    tag: '(300A,0106)',
    vr: 'DS',
    vm: '2-2n',
    name: 'BlockData'
  },
  x300a0107: {
    tag: '(300A,0107)',
    vr: 'SQ',
    vm: 1,
    name: 'ApplicatorSequence'
  },
  x300a0108: {
    tag: '(300A,0108)',
    vr: 'SH',
    vm: 1,
    name: 'ApplicatorID'
  },
  x300a0109: {
    tag: '(300A,0109)',
    vr: 'CS',
    vm: 1,
    name: 'ApplicatorType'
  },
  x300a010a: {
    tag: '(300A,010A)',
    vr: 'LO',
    vm: 1,
    name: 'ApplicatorDescription'
  },
  x300a010c: {
    tag: '(300A,010C)',
    vr: 'DS',
    vm: 1,
    name: 'CumulativeDoseReferenceCoefficient'
  },
  x300a010e: {
    tag: '(300A,010E)',
    vr: 'DS',
    vm: 1,
    name: 'FinalCumulativeMetersetWeight'
  },
  x300a0110: {
    tag: '(300A,0110)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfControlPoints'
  },
  x300a0111: {
    tag: '(300A,0111)',
    vr: 'SQ',
    vm: 1,
    name: 'ControlPointSequence'
  },
  x300a0112: {
    tag: '(300A,0112)',
    vr: 'IS',
    vm: 1,
    name: 'ControlPointIndex'
  },
  x300a0114: {
    tag: '(300A,0114)',
    vr: 'DS',
    vm: 1,
    name: 'NominalBeamEnergy'
  },
  x300a0115: {
    tag: '(300A,0115)',
    vr: 'DS',
    vm: 1,
    name: 'DoseRateSet'
  },
  x300a0116: {
    tag: '(300A,0116)',
    vr: 'SQ',
    vm: 1,
    name: 'WedgePositionSequence'
  },
  x300a0118: {
    tag: '(300A,0118)',
    vr: 'CS',
    vm: 1,
    name: 'WedgePosition'
  },
  x300a011a: {
    tag: '(300A,011A)',
    vr: 'SQ',
    vm: 1,
    name: 'BeamLimitingDevicePositionSequence'
  },
  x300a011c: {
    tag: '(300A,011C)',
    vr: 'DS',
    vm: '2-2n',
    name: 'LeafJawPositions'
  },
  x300a011e: {
    tag: '(300A,011E)',
    vr: 'DS',
    vm: 1,
    name: 'GantryAngle'
  },
  x300a011f: {
    tag: '(300A,011F)',
    vr: 'CS',
    vm: 1,
    name: 'GantryRotationDirection'
  },
  x300a0120: {
    tag: '(300A,0120)',
    vr: 'DS',
    vm: 1,
    name: 'BeamLimitingDeviceAngle'
  },
  x300a0121: {
    tag: '(300A,0121)',
    vr: 'CS',
    vm: 1,
    name: 'BeamLimitingDeviceRotationDirection'
  },
  x300a0122: {
    tag: '(300A,0122)',
    vr: 'DS',
    vm: 1,
    name: 'PatientSupportAngle'
  },
  x300a0123: {
    tag: '(300A,0123)',
    vr: 'CS',
    vm: 1,
    name: 'PatientSupportRotationDirection'
  },
  x300a0124: {
    tag: '(300A,0124)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopEccentricAxisDistance'
  },
  x300a0125: {
    tag: '(300A,0125)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopEccentricAngle'
  },
  x300a0126: {
    tag: '(300A,0126)',
    vr: 'CS',
    vm: 1,
    name: 'TableTopEccentricRotationDirection'
  },
  x300a0128: {
    tag: '(300A,0128)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopVerticalPosition'
  },
  x300a0129: {
    tag: '(300A,0129)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopLongitudinalPosition'
  },
  x300a012a: {
    tag: '(300A,012A)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopLateralPosition'
  },
  x300a012c: {
    tag: '(300A,012C)',
    vr: 'DS',
    vm: 3,
    name: 'IsocenterPosition'
  },
  x300a012e: {
    tag: '(300A,012E)',
    vr: 'DS',
    vm: 3,
    name: 'SurfaceEntryPoint'
  },
  x300a0130: {
    tag: '(300A,0130)',
    vr: 'DS',
    vm: 1,
    name: 'SourceToSurfaceDistance'
  },
  x300a0134: {
    tag: '(300A,0134)',
    vr: 'DS',
    vm: 1,
    name: 'CumulativeMetersetWeight'
  },
  x300a0140: {
    tag: '(300A,0140)',
    vr: 'FL',
    vm: 1,
    name: 'TableTopPitchAngle'
  },
  x300a0142: {
    tag: '(300A,0142)',
    vr: 'CS',
    vm: 1,
    name: 'TableTopPitchRotationDirection'
  },
  x300a0144: {
    tag: '(300A,0144)',
    vr: 'FL',
    vm: 1,
    name: 'TableTopRollAngle'
  },
  x300a0146: {
    tag: '(300A,0146)',
    vr: 'CS',
    vm: 1,
    name: 'TableTopRollRotationDirection'
  },
  x300a0148: {
    tag: '(300A,0148)',
    vr: 'FL',
    vm: 1,
    name: 'HeadFixationAngle'
  },
  x300a014a: {
    tag: '(300A,014A)',
    vr: 'FL',
    vm: 1,
    name: 'GantryPitchAngle'
  },
  x300a014c: {
    tag: '(300A,014C)',
    vr: 'CS',
    vm: 1,
    name: 'GantryPitchRotationDirection'
  },
  x300a014e: {
    tag: '(300A,014E)',
    vr: 'FL',
    vm: 1,
    name: 'GantryPitchAngleTolerance'
  },
  x300a0180: {
    tag: '(300A,0180)',
    vr: 'SQ',
    vm: 1,
    name: 'PatientSetupSequence'
  },
  x300a0182: {
    tag: '(300A,0182)',
    vr: 'IS',
    vm: 1,
    name: 'PatientSetupNumber'
  },
  x300a0183: {
    tag: '(300A,0183)',
    vr: 'LO',
    vm: 1,
    name: 'PatientSetupLabel'
  },
  x300a0184: {
    tag: '(300A,0184)',
    vr: 'LO',
    vm: 1,
    name: 'PatientAdditionalPosition'
  },
  x300a0190: {
    tag: '(300A,0190)',
    vr: 'SQ',
    vm: 1,
    name: 'FixationDeviceSequence'
  },
  x300a0192: {
    tag: '(300A,0192)',
    vr: 'CS',
    vm: 1,
    name: 'FixationDeviceType'
  },
  x300a0194: {
    tag: '(300A,0194)',
    vr: 'SH',
    vm: 1,
    name: 'FixationDeviceLabel'
  },
  x300a0196: {
    tag: '(300A,0196)',
    vr: 'ST',
    vm: 1,
    name: 'FixationDeviceDescription'
  },
  x300a0198: {
    tag: '(300A,0198)',
    vr: 'SH',
    vm: 1,
    name: 'FixationDevicePosition'
  },
  x300a0199: {
    tag: '(300A,0199)',
    vr: 'FL',
    vm: 1,
    name: 'FixationDevicePitchAngle'
  },
  x300a019a: {
    tag: '(300A,019A)',
    vr: 'FL',
    vm: 1,
    name: 'FixationDeviceRollAngle'
  },
  x300a01a0: {
    tag: '(300A,01A0)',
    vr: 'SQ',
    vm: 1,
    name: 'ShieldingDeviceSequence'
  },
  x300a01a2: {
    tag: '(300A,01A2)',
    vr: 'CS',
    vm: 1,
    name: 'ShieldingDeviceType'
  },
  x300a01a4: {
    tag: '(300A,01A4)',
    vr: 'SH',
    vm: 1,
    name: 'ShieldingDeviceLabel'
  },
  x300a01a6: {
    tag: '(300A,01A6)',
    vr: 'ST',
    vm: 1,
    name: 'ShieldingDeviceDescription'
  },
  x300a01a8: {
    tag: '(300A,01A8)',
    vr: 'SH',
    vm: 1,
    name: 'ShieldingDevicePosition'
  },
  x300a01b0: {
    tag: '(300A,01B0)',
    vr: 'CS',
    vm: 1,
    name: 'SetupTechnique'
  },
  x300a01b2: {
    tag: '(300A,01B2)',
    vr: 'ST',
    vm: 1,
    name: 'SetupTechniqueDescription'
  },
  x300a01b4: {
    tag: '(300A,01B4)',
    vr: 'SQ',
    vm: 1,
    name: 'SetupDeviceSequence'
  },
  x300a01b6: {
    tag: '(300A,01B6)',
    vr: 'CS',
    vm: 1,
    name: 'SetupDeviceType'
  },
  x300a01b8: {
    tag: '(300A,01B8)',
    vr: 'SH',
    vm: 1,
    name: 'SetupDeviceLabel'
  },
  x300a01ba: {
    tag: '(300A,01BA)',
    vr: 'ST',
    vm: 1,
    name: 'SetupDeviceDescription'
  },
  x300a01bc: {
    tag: '(300A,01BC)',
    vr: 'DS',
    vm: 1,
    name: 'SetupDeviceParameter'
  },
  x300a01d0: {
    tag: '(300A,01D0)',
    vr: 'ST',
    vm: 1,
    name: 'SetupReferenceDescription'
  },
  x300a01d2: {
    tag: '(300A,01D2)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopVerticalSetupDisplacement'
  },
  x300a01d4: {
    tag: '(300A,01D4)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopLongitudinalSetupDisplacement'
  },
  x300a01d6: {
    tag: '(300A,01D6)',
    vr: 'DS',
    vm: 1,
    name: 'TableTopLateralSetupDisplacement'
  },
  x300a0200: {
    tag: '(300A,0200)',
    vr: 'CS',
    vm: 1,
    name: 'BrachyTreatmentTechnique'
  },
  x300a0202: {
    tag: '(300A,0202)',
    vr: 'CS',
    vm: 1,
    name: 'BrachyTreatmentType'
  },
  x300a0206: {
    tag: '(300A,0206)',
    vr: 'SQ',
    vm: 1,
    name: 'TreatmentMachineSequence'
  },
  x300a0210: {
    tag: '(300A,0210)',
    vr: 'SQ',
    vm: 1,
    name: 'SourceSequence'
  },
  x300a0212: {
    tag: '(300A,0212)',
    vr: 'IS',
    vm: 1,
    name: 'SourceNumber'
  },
  x300a0214: {
    tag: '(300A,0214)',
    vr: 'CS',
    vm: 1,
    name: 'SourceType'
  },
  x300a0216: {
    tag: '(300A,0216)',
    vr: 'LO',
    vm: 1,
    name: 'SourceManufacturer'
  },
  x300a0218: {
    tag: '(300A,0218)',
    vr: 'DS',
    vm: 1,
    name: 'ActiveSourceDiameter'
  },
  x300a021a: {
    tag: '(300A,021A)',
    vr: 'DS',
    vm: 1,
    name: 'ActiveSourceLength'
  },
  x300a0222: {
    tag: '(300A,0222)',
    vr: 'DS',
    vm: 1,
    name: 'SourceEncapsulationNominalThickness'
  },
  x300a0224: {
    tag: '(300A,0224)',
    vr: 'DS',
    vm: 1,
    name: 'SourceEncapsulationNominalTransmission'
  },
  x300a0226: {
    tag: '(300A,0226)',
    vr: 'LO',
    vm: 1,
    name: 'SourceIsotopeName'
  },
  x300a0228: {
    tag: '(300A,0228)',
    vr: 'DS',
    vm: 1,
    name: 'SourceIsotopeHalfLife'
  },
  x300a0229: {
    tag: '(300A,0229)',
    vr: 'CS',
    vm: 1,
    name: 'SourceStrengthUnits'
  },
  x300a022a: {
    tag: '(300A,022A)',
    vr: 'DS',
    vm: 1,
    name: 'ReferenceAirKermaRate'
  },
  x300a022b: {
    tag: '(300A,022B)',
    vr: 'DS',
    vm: 1,
    name: 'SourceStrength'
  },
  x300a022c: {
    tag: '(300A,022C)',
    vr: 'DA',
    vm: 1,
    name: 'SourceStrengthReferenceDate'
  },
  x300a022e: {
    tag: '(300A,022E)',
    vr: 'TM',
    vm: 1,
    name: 'SourceStrengthReferenceTime'
  },
  x300a0230: {
    tag: '(300A,0230)',
    vr: 'SQ',
    vm: 1,
    name: 'ApplicationSetupSequence'
  },
  x300a0232: {
    tag: '(300A,0232)',
    vr: 'CS',
    vm: 1,
    name: 'ApplicationSetupType'
  },
  x300a0234: {
    tag: '(300A,0234)',
    vr: 'IS',
    vm: 1,
    name: 'ApplicationSetupNumber'
  },
  x300a0236: {
    tag: '(300A,0236)',
    vr: 'LO',
    vm: 1,
    name: 'ApplicationSetupName'
  },
  x300a0238: {
    tag: '(300A,0238)',
    vr: 'LO',
    vm: 1,
    name: 'ApplicationSetupManufacturer'
  },
  x300a0240: {
    tag: '(300A,0240)',
    vr: 'IS',
    vm: 1,
    name: 'TemplateNumber'
  },
  x300a0242: {
    tag: '(300A,0242)',
    vr: 'SH',
    vm: 1,
    name: 'TemplateType'
  },
  x300a0244: {
    tag: '(300A,0244)',
    vr: 'LO',
    vm: 1,
    name: 'TemplateName'
  },
  x300a0250: {
    tag: '(300A,0250)',
    vr: 'DS',
    vm: 1,
    name: 'TotalReferenceAirKerma'
  },
  x300a0260: {
    tag: '(300A,0260)',
    vr: 'SQ',
    vm: 1,
    name: 'BrachyAccessoryDeviceSequence'
  },
  x300a0262: {
    tag: '(300A,0262)',
    vr: 'IS',
    vm: 1,
    name: 'BrachyAccessoryDeviceNumber'
  },
  x300a0263: {
    tag: '(300A,0263)',
    vr: 'SH',
    vm: 1,
    name: 'BrachyAccessoryDeviceID'
  },
  x300a0264: {
    tag: '(300A,0264)',
    vr: 'CS',
    vm: 1,
    name: 'BrachyAccessoryDeviceType'
  },
  x300a0266: {
    tag: '(300A,0266)',
    vr: 'LO',
    vm: 1,
    name: 'BrachyAccessoryDeviceName'
  },
  x300a026a: {
    tag: '(300A,026A)',
    vr: 'DS',
    vm: 1,
    name: 'BrachyAccessoryDeviceNominalThickness'
  },
  x300a026c: {
    tag: '(300A,026C)',
    vr: 'DS',
    vm: 1,
    name: 'BrachyAccessoryDeviceNominalTransmission'
  },
  x300a0280: {
    tag: '(300A,0280)',
    vr: 'SQ',
    vm: 1,
    name: 'ChannelSequence'
  },
  x300a0282: {
    tag: '(300A,0282)',
    vr: 'IS',
    vm: 1,
    name: 'ChannelNumber'
  },
  x300a0284: {
    tag: '(300A,0284)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelLength'
  },
  x300a0286: {
    tag: '(300A,0286)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelTotalTime'
  },
  x300a0288: {
    tag: '(300A,0288)',
    vr: 'CS',
    vm: 1,
    name: 'SourceMovementType'
  },
  x300a028a: {
    tag: '(300A,028A)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfPulses'
  },
  x300a028c: {
    tag: '(300A,028C)',
    vr: 'DS',
    vm: 1,
    name: 'PulseRepetitionInterval'
  },
  x300a0290: {
    tag: '(300A,0290)',
    vr: 'IS',
    vm: 1,
    name: 'SourceApplicatorNumber'
  },
  x300a0291: {
    tag: '(300A,0291)',
    vr: 'SH',
    vm: 1,
    name: 'SourceApplicatorID'
  },
  x300a0292: {
    tag: '(300A,0292)',
    vr: 'CS',
    vm: 1,
    name: 'SourceApplicatorType'
  },
  x300a0294: {
    tag: '(300A,0294)',
    vr: 'LO',
    vm: 1,
    name: 'SourceApplicatorName'
  },
  x300a0296: {
    tag: '(300A,0296)',
    vr: 'DS',
    vm: 1,
    name: 'SourceApplicatorLength'
  },
  x300a0298: {
    tag: '(300A,0298)',
    vr: 'LO',
    vm: 1,
    name: 'SourceApplicatorManufacturer'
  },
  x300a029c: {
    tag: '(300A,029C)',
    vr: 'DS',
    vm: 1,
    name: 'SourceApplicatorWallNominalThickness'
  },
  x300a029e: {
    tag: '(300A,029E)',
    vr: 'DS',
    vm: 1,
    name: 'SourceApplicatorWallNominalTransmission'
  },
  x300a02a0: {
    tag: '(300A,02A0)',
    vr: 'DS',
    vm: 1,
    name: 'SourceApplicatorStepSize'
  },
  x300a02a2: {
    tag: '(300A,02A2)',
    vr: 'IS',
    vm: 1,
    name: 'TransferTubeNumber'
  },
  x300a02a4: {
    tag: '(300A,02A4)',
    vr: 'DS',
    vm: 1,
    name: 'TransferTubeLength'
  },
  x300a02b0: {
    tag: '(300A,02B0)',
    vr: 'SQ',
    vm: 1,
    name: 'ChannelShieldSequence'
  },
  x300a02b2: {
    tag: '(300A,02B2)',
    vr: 'IS',
    vm: 1,
    name: 'ChannelShieldNumber'
  },
  x300a02b3: {
    tag: '(300A,02B3)',
    vr: 'SH',
    vm: 1,
    name: 'ChannelShieldID'
  },
  x300a02b4: {
    tag: '(300A,02B4)',
    vr: 'LO',
    vm: 1,
    name: 'ChannelShieldName'
  },
  x300a02b8: {
    tag: '(300A,02B8)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelShieldNominalThickness'
  },
  x300a02ba: {
    tag: '(300A,02BA)',
    vr: 'DS',
    vm: 1,
    name: 'ChannelShieldNominalTransmission'
  },
  x300a02c8: {
    tag: '(300A,02C8)',
    vr: 'DS',
    vm: 1,
    name: 'FinalCumulativeTimeWeight'
  },
  x300a02d0: {
    tag: '(300A,02D0)',
    vr: 'SQ',
    vm: 1,
    name: 'BrachyControlPointSequence'
  },
  x300a02d2: {
    tag: '(300A,02D2)',
    vr: 'DS',
    vm: 1,
    name: 'ControlPointRelativePosition'
  },
  x300a02d4: {
    tag: '(300A,02D4)',
    vr: 'DS',
    vm: 3,
    name: 'ControlPoint3DPosition'
  },
  x300a02d6: {
    tag: '(300A,02D6)',
    vr: 'DS',
    vm: 1,
    name: 'CumulativeTimeWeight'
  },
  x300a02e0: {
    tag: '(300A,02E0)',
    vr: 'CS',
    vm: 1,
    name: 'CompensatorDivergence'
  },
  x300a02e1: {
    tag: '(300A,02E1)',
    vr: 'CS',
    vm: 1,
    name: 'CompensatorMountingPosition'
  },
  x300a02e2: {
    tag: '(300A,02E2)',
    vr: 'DS',
    vm: '1-n',
    name: 'SourceToCompensatorDistance'
  },
  x300a02e3: {
    tag: '(300A,02E3)',
    vr: 'FL',
    vm: 1,
    name: 'TotalCompensatorTrayWaterEquivalentThickness'
  },
  x300a02e4: {
    tag: '(300A,02E4)',
    vr: 'FL',
    vm: 1,
    name: 'IsocenterToCompensatorTrayDistance'
  },
  x300a02e5: {
    tag: '(300A,02E5)',
    vr: 'FL',
    vm: 1,
    name: 'CompensatorColumnOffset'
  },
  x300a02e6: {
    tag: '(300A,02E6)',
    vr: 'FL',
    vm: '1-n',
    name: 'IsocenterToCompensatorDistances'
  },
  x300a02e7: {
    tag: '(300A,02E7)',
    vr: 'FL',
    vm: 1,
    name: 'CompensatorRelativeStoppingPowerRatio'
  },
  x300a02e8: {
    tag: '(300A,02E8)',
    vr: 'FL',
    vm: 1,
    name: 'CompensatorMillingToolDiameter'
  },
  x300a02ea: {
    tag: '(300A,02EA)',
    vr: 'SQ',
    vm: 1,
    name: 'IonRangeCompensatorSequence'
  },
  x300a02eb: {
    tag: '(300A,02EB)',
    vr: 'LT',
    vm: 1,
    name: 'CompensatorDescription'
  },
  x300a0302: {
    tag: '(300A,0302)',
    vr: 'IS',
    vm: 1,
    name: 'RadiationMassNumber'
  },
  x300a0304: {
    tag: '(300A,0304)',
    vr: 'IS',
    vm: 1,
    name: 'RadiationAtomicNumber'
  },
  x300a0306: {
    tag: '(300A,0306)',
    vr: 'SS',
    vm: 1,
    name: 'RadiationChargeState'
  },
  x300a0308: {
    tag: '(300A,0308)',
    vr: 'CS',
    vm: 1,
    name: 'ScanMode'
  },
  x300a030a: {
    tag: '(300A,030A)',
    vr: 'FL',
    vm: 2,
    name: 'VirtualSourceAxisDistances'
  },
  x300a030c: {
    tag: '(300A,030C)',
    vr: 'SQ',
    vm: 1,
    name: 'SnoutSequence'
  },
  x300a030d: {
    tag: '(300A,030D)',
    vr: 'FL',
    vm: 1,
    name: 'SnoutPosition'
  },
  x300a030f: {
    tag: '(300A,030F)',
    vr: 'SH',
    vm: 1,
    name: 'SnoutID'
  },
  x300a0312: {
    tag: '(300A,0312)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfRangeShifters'
  },
  x300a0314: {
    tag: '(300A,0314)',
    vr: 'SQ',
    vm: 1,
    name: 'RangeShifterSequence'
  },
  x300a0316: {
    tag: '(300A,0316)',
    vr: 'IS',
    vm: 1,
    name: 'RangeShifterNumber'
  },
  x300a0318: {
    tag: '(300A,0318)',
    vr: 'SH',
    vm: 1,
    name: 'RangeShifterID'
  },
  x300a0320: {
    tag: '(300A,0320)',
    vr: 'CS',
    vm: 1,
    name: 'RangeShifterType'
  },
  x300a0322: {
    tag: '(300A,0322)',
    vr: 'LO',
    vm: 1,
    name: 'RangeShifterDescription'
  },
  x300a0330: {
    tag: '(300A,0330)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfLateralSpreadingDevices'
  },
  x300a0332: {
    tag: '(300A,0332)',
    vr: 'SQ',
    vm: 1,
    name: 'LateralSpreadingDeviceSequence'
  },
  x300a0334: {
    tag: '(300A,0334)',
    vr: 'IS',
    vm: 1,
    name: 'LateralSpreadingDeviceNumber'
  },
  x300a0336: {
    tag: '(300A,0336)',
    vr: 'SH',
    vm: 1,
    name: 'LateralSpreadingDeviceID'
  },
  x300a0338: {
    tag: '(300A,0338)',
    vr: 'CS',
    vm: 1,
    name: 'LateralSpreadingDeviceType'
  },
  x300a033a: {
    tag: '(300A,033A)',
    vr: 'LO',
    vm: 1,
    name: 'LateralSpreadingDeviceDescription'
  },
  x300a033c: {
    tag: '(300A,033C)',
    vr: 'FL',
    vm: 1,
    name: 'LateralSpreadingDeviceWaterEquivalentThickness'
  },
  x300a0340: {
    tag: '(300A,0340)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfRangeModulators'
  },
  x300a0342: {
    tag: '(300A,0342)',
    vr: 'SQ',
    vm: 1,
    name: 'RangeModulatorSequence'
  },
  x300a0344: {
    tag: '(300A,0344)',
    vr: 'IS',
    vm: 1,
    name: 'RangeModulatorNumber'
  },
  x300a0346: {
    tag: '(300A,0346)',
    vr: 'SH',
    vm: 1,
    name: 'RangeModulatorID'
  },
  x300a0348: {
    tag: '(300A,0348)',
    vr: 'CS',
    vm: 1,
    name: 'RangeModulatorType'
  },
  x300a034a: {
    tag: '(300A,034A)',
    vr: 'LO',
    vm: 1,
    name: 'RangeModulatorDescription'
  },
  x300a034c: {
    tag: '(300A,034C)',
    vr: 'SH',
    vm: 1,
    name: 'BeamCurrentModulationID'
  },
  x300a0350: {
    tag: '(300A,0350)',
    vr: 'CS',
    vm: 1,
    name: 'PatientSupportType'
  },
  x300a0352: {
    tag: '(300A,0352)',
    vr: 'SH',
    vm: 1,
    name: 'PatientSupportID'
  },
  x300a0354: {
    tag: '(300A,0354)',
    vr: 'LO',
    vm: 1,
    name: 'PatientSupportAccessoryCode'
  },
  x300a0356: {
    tag: '(300A,0356)',
    vr: 'FL',
    vm: 1,
    name: 'FixationLightAzimuthalAngle'
  },
  x300a0358: {
    tag: '(300A,0358)',
    vr: 'FL',
    vm: 1,
    name: 'FixationLightPolarAngle'
  },
  x300a035a: {
    tag: '(300A,035A)',
    vr: 'FL',
    vm: 1,
    name: 'MetersetRate'
  },
  x300a0360: {
    tag: '(300A,0360)',
    vr: 'SQ',
    vm: 1,
    name: 'RangeShifterSettingsSequence'
  },
  x300a0362: {
    tag: '(300A,0362)',
    vr: 'LO',
    vm: 1,
    name: 'RangeShifterSetting'
  },
  x300a0364: {
    tag: '(300A,0364)',
    vr: 'FL',
    vm: 1,
    name: 'IsocenterToRangeShifterDistance'
  },
  x300a0366: {
    tag: '(300A,0366)',
    vr: 'FL',
    vm: 1,
    name: 'RangeShifterWaterEquivalentThickness'
  },
  x300a0370: {
    tag: '(300A,0370)',
    vr: 'SQ',
    vm: 1,
    name: 'LateralSpreadingDeviceSettingsSequence'
  },
  x300a0372: {
    tag: '(300A,0372)',
    vr: 'LO',
    vm: 1,
    name: 'LateralSpreadingDeviceSetting'
  },
  x300a0374: {
    tag: '(300A,0374)',
    vr: 'FL',
    vm: 1,
    name: 'IsocenterToLateralSpreadingDeviceDistance'
  },
  x300a0380: {
    tag: '(300A,0380)',
    vr: 'SQ',
    vm: 1,
    name: 'RangeModulatorSettingsSequence'
  },
  x300a0382: {
    tag: '(300A,0382)',
    vr: 'FL',
    vm: 1,
    name: 'RangeModulatorGatingStartValue'
  },
  x300a0384: {
    tag: '(300A,0384)',
    vr: 'FL',
    vm: 1,
    name: 'RangeModulatorGatingStopValue'
  },
  x300a0386: {
    tag: '(300A,0386)',
    vr: 'FL',
    vm: 1,
    name: 'RangeModulatorGatingStartWaterEquivalentThickness'
  },
  x300a0388: {
    tag: '(300A,0388)',
    vr: 'FL',
    vm: 1,
    name: 'RangeModulatorGatingStopWaterEquivalentThickness'
  },
  x300a038a: {
    tag: '(300A,038A)',
    vr: 'FL',
    vm: 1,
    name: 'IsocenterToRangeModulatorDistance'
  },
  x300a0390: {
    tag: '(300A,0390)',
    vr: 'SH',
    vm: 1,
    name: 'ScanSpotTuneID'
  },
  x300a0392: {
    tag: '(300A,0392)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfScanSpotPositions'
  },
  x300a0394: {
    tag: '(300A,0394)',
    vr: 'FL',
    vm: '1-n',
    name: 'ScanSpotPositionMap'
  },
  x300a0396: {
    tag: '(300A,0396)',
    vr: 'FL',
    vm: '1-n',
    name: 'ScanSpotMetersetWeights'
  },
  x300a0398: {
    tag: '(300A,0398)',
    vr: 'FL',
    vm: 2,
    name: 'ScanningSpotSize'
  },
  x300a039a: {
    tag: '(300A,039A)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfPaintings'
  },
  x300a03a0: {
    tag: '(300A,03A0)',
    vr: 'SQ',
    vm: 1,
    name: 'IonToleranceTableSequence'
  },
  x300a03a2: {
    tag: '(300A,03A2)',
    vr: 'SQ',
    vm: 1,
    name: 'IonBeamSequence'
  },
  x300a03a4: {
    tag: '(300A,03A4)',
    vr: 'SQ',
    vm: 1,
    name: 'IonBeamLimitingDeviceSequence'
  },
  x300a03a6: {
    tag: '(300A,03A6)',
    vr: 'SQ',
    vm: 1,
    name: 'IonBlockSequence'
  },
  x300a03a8: {
    tag: '(300A,03A8)',
    vr: 'SQ',
    vm: 1,
    name: 'IonControlPointSequence'
  },
  x300a03aa: {
    tag: '(300A,03AA)',
    vr: 'SQ',
    vm: 1,
    name: 'IonWedgeSequence'
  },
  x300a03ac: {
    tag: '(300A,03AC)',
    vr: 'SQ',
    vm: 1,
    name: 'IonWedgePositionSequence'
  },
  x300a0401: {
    tag: '(300A,0401)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedSetupImageSequence'
  },
  x300a0402: {
    tag: '(300A,0402)',
    vr: 'ST',
    vm: 1,
    name: 'SetupImageComment'
  },
  x300a0410: {
    tag: '(300A,0410)',
    vr: 'SQ',
    vm: 1,
    name: 'MotionSynchronizationSequence'
  },
  x300a0412: {
    tag: '(300A,0412)',
    vr: 'FL',
    vm: 3,
    name: 'ControlPointOrientation'
  },
  x300a0420: {
    tag: '(300A,0420)',
    vr: 'SQ',
    vm: 1,
    name: 'GeneralAccessorySequence'
  },
  x300a0421: {
    tag: '(300A,0421)',
    vr: 'SH',
    vm: 1,
    name: 'GeneralAccessoryID'
  },
  x300a0422: {
    tag: '(300A,0422)',
    vr: 'ST',
    vm: 1,
    name: 'GeneralAccessoryDescription'
  },
  x300a0423: {
    tag: '(300A,0423)',
    vr: 'CS',
    vm: 1,
    name: 'GeneralAccessoryType'
  },
  x300a0424: {
    tag: '(300A,0424)',
    vr: 'IS',
    vm: 1,
    name: 'GeneralAccessoryNumber'
  },
  x300a0431: {
    tag: '(300A,0431)',
    vr: 'SQ',
    vm: 1,
    name: 'ApplicatorGeometrySequence'
  },
  x300a0432: {
    tag: '(300A,0432)',
    vr: 'CS',
    vm: 1,
    name: 'ApplicatorApertureShape'
  },
  x300a0433: {
    tag: '(300A,0433)',
    vr: 'FL',
    vm: 1,
    name: 'ApplicatorOpening'
  },
  x300a0434: {
    tag: '(300A,0434)',
    vr: 'FL',
    vm: 1,
    name: 'ApplicatorOpeningX'
  },
  x300a0435: {
    tag: '(300A,0435)',
    vr: 'FL',
    vm: 1,
    name: 'ApplicatorOpeningY'
  },
  x300a0436: {
    tag: '(300A,0436)',
    vr: 'FL',
    vm: 1,
    name: 'SourceToApplicatorMountingPositionDistance'
  },
  x300c0002: {
    tag: '(300C,0002)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedRTPlanSequence'
  },
  x300c0004: {
    tag: '(300C,0004)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedBeamSequence'
  },
  x300c0006: {
    tag: '(300C,0006)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedBeamNumber'
  },
  x300c0007: {
    tag: '(300C,0007)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedReferenceImageNumber'
  },
  x300c0008: {
    tag: '(300C,0008)',
    vr: 'DS',
    vm: 1,
    name: 'StartCumulativeMetersetWeight'
  },
  x300c0009: {
    tag: '(300C,0009)',
    vr: 'DS',
    vm: 1,
    name: 'EndCumulativeMetersetWeight'
  },
  x300c000a: {
    tag: '(300C,000A)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedBrachyApplicationSetupSequence'
  },
  x300c000c: {
    tag: '(300C,000C)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedBrachyApplicationSetupNumber'
  },
  x300c000e: {
    tag: '(300C,000E)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedSourceNumber'
  },
  x300c0020: {
    tag: '(300C,0020)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedFractionGroupSequence'
  },
  x300c0022: {
    tag: '(300C,0022)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedFractionGroupNumber'
  },
  x300c0040: {
    tag: '(300C,0040)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedVerificationImageSequence'
  },
  x300c0042: {
    tag: '(300C,0042)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedReferenceImageSequence'
  },
  x300c0050: {
    tag: '(300C,0050)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedDoseReferenceSequence'
  },
  x300c0051: {
    tag: '(300C,0051)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedDoseReferenceNumber'
  },
  x300c0055: {
    tag: '(300C,0055)',
    vr: 'SQ',
    vm: 1,
    name: 'BrachyReferencedDoseReferenceSequence'
  },
  x300c0060: {
    tag: '(300C,0060)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedStructureSetSequence'
  },
  x300c006a: {
    tag: '(300C,006A)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedPatientSetupNumber'
  },
  x300c0080: {
    tag: '(300C,0080)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedDoseSequence'
  },
  x300c00a0: {
    tag: '(300C,00A0)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedToleranceTableNumber'
  },
  x300c00b0: {
    tag: '(300C,00B0)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedBolusSequence'
  },
  x300c00c0: {
    tag: '(300C,00C0)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedWedgeNumber'
  },
  x300c00d0: {
    tag: '(300C,00D0)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedCompensatorNumber'
  },
  x300c00e0: {
    tag: '(300C,00E0)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedBlockNumber'
  },
  x300c00f0: {
    tag: '(300C,00F0)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedControlPointIndex'
  },
  x300c00f2: {
    tag: '(300C,00F2)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedControlPointSequence'
  },
  x300c00f4: {
    tag: '(300C,00F4)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedStartControlPointIndex'
  },
  x300c00f6: {
    tag: '(300C,00F6)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedStopControlPointIndex'
  },
  x300c0100: {
    tag: '(300C,0100)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedRangeShifterNumber'
  },
  x300c0102: {
    tag: '(300C,0102)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedLateralSpreadingDeviceNumber'
  },
  x300c0104: {
    tag: '(300C,0104)',
    vr: 'IS',
    vm: 1,
    name: 'ReferencedRangeModulatorNumber'
  },
  x300e0002: {
    tag: '(300E,0002)',
    vr: 'CS',
    vm: 1,
    name: 'ApprovalStatus'
  },
  x300e0004: {
    tag: '(300E,0004)',
    vr: 'DA',
    vm: 1,
    name: 'ReviewDate'
  },
  x300e0005: {
    tag: '(300E,0005)',
    vr: 'TM',
    vm: 1,
    name: 'ReviewTime'
  },
  x300e0008: {
    tag: '(300E,0008)',
    vr: 'PN',
    vm: 1,
    name: 'ReviewerName'
  },
  x40000010: {
    tag: '(4000,0010)',
    vr: 'LT',
    vm: 1,
    name: 'Arbitrary'
  },
  x40004000: {
    tag: '(4000,4000)',
    vr: 'LT',
    vm: 1,
    name: 'TextComments'
  },
  x40080040: {
    tag: '(4008,0040)',
    vr: 'SH',
    vm: 1,
    name: 'ResultsID'
  },
  x40080042: {
    tag: '(4008,0042)',
    vr: 'LO',
    vm: 1,
    name: 'ResultsIDIssuer'
  },
  x40080050: {
    tag: '(4008,0050)',
    vr: 'SQ',
    vm: 1,
    name: 'ReferencedInterpretationSequence'
  },
  x400800ff: {
    tag: '(4008,00FF)',
    vr: 'CS',
    vm: 1,
    name: 'ReportProductionStatusTrial'
  },
  x40080100: {
    tag: '(4008,0100)',
    vr: 'DA',
    vm: 1,
    name: 'InterpretationRecordedDate'
  },
  x40080101: {
    tag: '(4008,0101)',
    vr: 'TM',
    vm: 1,
    name: 'InterpretationRecordedTime'
  },
  x40080102: {
    tag: '(4008,0102)',
    vr: 'PN',
    vm: 1,
    name: 'InterpretationRecorder'
  },
  x40080103: {
    tag: '(4008,0103)',
    vr: 'LO',
    vm: 1,
    name: 'ReferenceToRecordedSound'
  },
  x40080108: {
    tag: '(4008,0108)',
    vr: 'DA',
    vm: 1,
    name: 'InterpretationTranscriptionDate'
  },
  x40080109: {
    tag: '(4008,0109)',
    vr: 'TM',
    vm: 1,
    name: 'InterpretationTranscriptionTime'
  },
  x4008010a: {
    tag: '(4008,010A)',
    vr: 'PN',
    vm: 1,
    name: 'InterpretationTranscriber'
  },
  x4008010b: {
    tag: '(4008,010B)',
    vr: 'ST',
    vm: 1,
    name: 'InterpretationText'
  },
  x4008010c: {
    tag: '(4008,010C)',
    vr: 'PN',
    vm: 1,
    name: 'InterpretationAuthor'
  },
  x40080111: {
    tag: '(4008,0111)',
    vr: 'SQ',
    vm: 1,
    name: 'InterpretationApproverSequence'
  },
  x40080112: {
    tag: '(4008,0112)',
    vr: 'DA',
    vm: 1,
    name: 'InterpretationApprovalDate'
  },
  x40080113: {
    tag: '(4008,0113)',
    vr: 'TM',
    vm: 1,
    name: 'InterpretationApprovalTime'
  },
  x40080114: {
    tag: '(4008,0114)',
    vr: 'PN',
    vm: 1,
    name: 'PhysicianApprovingInterpretation'
  },
  x40080115: {
    tag: '(4008,0115)',
    vr: 'LT',
    vm: 1,
    name: 'InterpretationDiagnosisDescription'
  },
  x40080117: {
    tag: '(4008,0117)',
    vr: 'SQ',
    vm: 1,
    name: 'InterpretationDiagnosisCodeSequence'
  },
  x40080118: {
    tag: '(4008,0118)',
    vr: 'SQ',
    vm: 1,
    name: 'ResultsDistributionListSequence'
  },
  x40080119: {
    tag: '(4008,0119)',
    vr: 'PN',
    vm: 1,
    name: 'DistributionName'
  },
  x4008011a: {
    tag: '(4008,011A)',
    vr: 'LO',
    vm: 1,
    name: 'DistributionAddress'
  },
  x40080200: {
    tag: '(4008,0200)',
    vr: 'SH',
    vm: 1,
    name: 'InterpretationID'
  },
  x40080202: {
    tag: '(4008,0202)',
    vr: 'LO',
    vm: 1,
    name: 'InterpretationIDIssuer'
  },
  x40080210: {
    tag: '(4008,0210)',
    vr: 'CS',
    vm: 1,
    name: 'InterpretationTypeID'
  },
  x40080212: {
    tag: '(4008,0212)',
    vr: 'CS',
    vm: 1,
    name: 'InterpretationStatusID'
  },
  x40080300: {
    tag: '(4008,0300)',
    vr: 'ST',
    vm: 1,
    name: 'Impressions'
  },
  x40084000: {
    tag: '(4008,4000)',
    vr: 'ST',
    vm: '1 ',
    name: 'ResultsComments'
  },
  x40100001: {
    tag: '(4010,0001)',
    vr: 'CS',
    vm: 1,
    name: 'LowEnergyDetectors'
  },
  x40100002: {
    tag: '(4010,0002)',
    vr: 'CS',
    vm: 1,
    name: 'HighEnergyDetectors'
  },
  x40100004: {
    tag: '(4010,0004)',
    vr: 'SQ',
    vm: 1,
    name: 'DetectorGeometrySequence'
  },
  x40101001: {
    tag: '(4010,1001)',
    vr: 'SQ',
    vm: 1,
    name: 'ThreatROIVoxelSequence'
  },
  x40101004: {
    tag: '(4010,1004)',
    vr: 'FL',
    vm: 3,
    name: 'ThreatROIBase'
  },
  x40101005: {
    tag: '(4010,1005)',
    vr: 'FL',
    vm: 3,
    name: 'ThreatROIExtents'
  },
  x40101006: {
    tag: '(4010,1006)',
    vr: 'OB',
    vm: 1,
    name: 'ThreatROIBitmap'
  },
  x40101007: {
    tag: '(4010,1007)',
    vr: 'SH',
    vm: 1,
    name: 'RouteSegmentID'
  },
  x40101008: {
    tag: '(4010,1008)',
    vr: 'CS',
    vm: 1,
    name: 'GantryType'
  },
  x40101009: {
    tag: '(4010,1009)',
    vr: 'CS',
    vm: 1,
    name: 'OOIOwnerType'
  },
  x4010100a: {
    tag: '(4010,100A)',
    vr: 'SQ',
    vm: 1,
    name: 'RouteSegmentSequence'
  },
  x40101010: {
    tag: '(4010,1010)',
    vr: 'US',
    vm: 1,
    name: 'PotentialThreatObjectID'
  },
  x40101011: {
    tag: '(4010,1011)',
    vr: 'SQ',
    vm: 1,
    name: 'ThreatSequence'
  },
  x40101012: {
    tag: '(4010,1012)',
    vr: 'CS',
    vm: 1,
    name: 'ThreatCategory'
  },
  x40101013: {
    tag: '(4010,1013)',
    vr: 'LT',
    vm: 1,
    name: 'ThreatCategoryDescription'
  },
  x40101014: {
    tag: '(4010,1014)',
    vr: 'CS',
    vm: 1,
    name: 'ATDAbilityAssessment'
  },
  x40101015: {
    tag: '(4010,1015)',
    vr: 'CS',
    vm: 1,
    name: 'ATDAssessmentFlag'
  },
  x40101016: {
    tag: '(4010,1016)',
    vr: 'FL',
    vm: 1,
    name: 'ATDAssessmentProbability'
  },
  x40101017: {
    tag: '(4010,1017)',
    vr: 'FL',
    vm: 1,
    name: 'Mass'
  },
  x40101018: {
    tag: '(4010,1018)',
    vr: 'FL',
    vm: 1,
    name: 'Density'
  },
  x40101019: {
    tag: '(4010,1019)',
    vr: 'FL',
    vm: 1,
    name: 'ZEffective'
  },
  x4010101a: {
    tag: '(4010,101A)',
    vr: 'SH',
    vm: 1,
    name: 'BoardingPassID'
  },
  x4010101b: {
    tag: '(4010,101B)',
    vr: 'FL',
    vm: 3,
    name: 'CenterOfMass'
  },
  x4010101c: {
    tag: '(4010,101C)',
    vr: 'FL',
    vm: 3,
    name: 'CenterOfPTO'
  },
  x4010101d: {
    tag: '(4010,101D)',
    vr: 'FL',
    vm: '6-n',
    name: 'BoundingPolygon'
  },
  x4010101e: {
    tag: '(4010,101E)',
    vr: 'SH',
    vm: 1,
    name: 'RouteSegmentStartLocationID'
  },
  x4010101f: {
    tag: '(4010,101F)',
    vr: 'SH',
    vm: 1,
    name: 'RouteSegmentEndLocationID'
  },
  x40101020: {
    tag: '(4010,1020)',
    vr: 'CS',
    vm: 1,
    name: 'RouteSegmentLocationIDType'
  },
  x40101021: {
    tag: '(4010,1021)',
    vr: 'CS',
    vm: '1-n',
    name: 'AbortReason'
  },
  x40101023: {
    tag: '(4010,1023)',
    vr: 'FL',
    vm: 1,
    name: 'VolumeOfPTO'
  },
  x40101024: {
    tag: '(4010,1024)',
    vr: 'CS',
    vm: 1,
    name: 'AbortFlag'
  },
  x40101025: {
    tag: '(4010,1025)',
    vr: 'DT',
    vm: 1,
    name: 'RouteSegmentStartTime'
  },
  x40101026: {
    tag: '(4010,1026)',
    vr: 'DT',
    vm: 1,
    name: 'RouteSegmentEndTime'
  },
  x40101027: {
    tag: '(4010,1027)',
    vr: 'CS',
    vm: 1,
    name: 'TDRType'
  },
  x40101028: {
    tag: '(4010,1028)',
    vr: 'CS',
    vm: 1,
    name: 'InternationalRouteSegment'
  },
  x40101029: {
    tag: '(4010,1029)',
    vr: 'LO',
    vm: '1-n',
    name: 'ThreatDetectionAlgorithmandVersion'
  },
  x4010102a: {
    tag: '(4010,102A)',
    vr: 'SH',
    vm: 1,
    name: 'AssignedLocation'
  },
  x4010102b: {
    tag: '(4010,102B)',
    vr: 'DT',
    vm: 1,
    name: 'AlarmDecisionTime'
  },
  x40101031: {
    tag: '(4010,1031)',
    vr: 'CS',
    vm: 1,
    name: 'AlarmDecision'
  },
  x40101033: {
    tag: '(4010,1033)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfTotalObjects'
  },
  x40101034: {
    tag: '(4010,1034)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfAlarmObjects'
  },
  x40101037: {
    tag: '(4010,1037)',
    vr: 'SQ',
    vm: 1,
    name: 'PTORepresentationSequence'
  },
  x40101038: {
    tag: '(4010,1038)',
    vr: 'SQ',
    vm: 1,
    name: 'ATDAssessmentSequence'
  },
  x40101039: {
    tag: '(4010,1039)',
    vr: 'CS',
    vm: 1,
    name: 'TIPType'
  },
  x4010103a: {
    tag: '(4010,103A)',
    vr: 'CS',
    vm: 1,
    name: 'DICOSVersion'
  },
  x40101041: {
    tag: '(4010,1041)',
    vr: 'DT',
    vm: 1,
    name: 'OOIOwnerCreationTime'
  },
  x40101042: {
    tag: '(4010,1042)',
    vr: 'CS',
    vm: 1,
    name: 'OOIType'
  },
  x40101043: {
    tag: '(4010,1043)',
    vr: 'FL',
    vm: 3,
    name: 'OOISize'
  },
  x40101044: {
    tag: '(4010,1044)',
    vr: 'CS',
    vm: 1,
    name: 'AcquisitionStatus'
  },
  x40101045: {
    tag: '(4010,1045)',
    vr: 'SQ',
    vm: 1,
    name: 'BasisMaterialsCodeSequence'
  },
  x40101046: {
    tag: '(4010,1046)',
    vr: 'CS',
    vm: 1,
    name: 'PhantomType'
  },
  x40101047: {
    tag: '(4010,1047)',
    vr: 'SQ',
    vm: 1,
    name: 'OOIOwnerSequence'
  },
  x40101048: {
    tag: '(4010,1048)',
    vr: 'CS',
    vm: 1,
    name: 'ScanType'
  },
  x40101051: {
    tag: '(4010,1051)',
    vr: 'LO',
    vm: 1,
    name: 'ItineraryID'
  },
  x40101052: {
    tag: '(4010,1052)',
    vr: 'SH',
    vm: 1,
    name: 'ItineraryIDType'
  },
  x40101053: {
    tag: '(4010,1053)',
    vr: 'LO',
    vm: 1,
    name: 'ItineraryIDAssigningAuthority'
  },
  x40101054: {
    tag: '(4010,1054)',
    vr: 'SH',
    vm: 1,
    name: 'RouteID'
  },
  x40101055: {
    tag: '(4010,1055)',
    vr: 'SH',
    vm: 1,
    name: 'RouteIDAssigningAuthority'
  },
  x40101056: {
    tag: '(4010,1056)',
    vr: 'CS',
    vm: 1,
    name: 'InboundArrivalType'
  },
  x40101058: {
    tag: '(4010,1058)',
    vr: 'SH',
    vm: 1,
    name: 'CarrierID'
  },
  x40101059: {
    tag: '(4010,1059)',
    vr: 'CS',
    vm: 1,
    name: 'CarrierIDAssigningAuthority'
  },
  x40101060: {
    tag: '(4010,1060)',
    vr: 'FL',
    vm: 3,
    name: 'SourceOrientation'
  },
  x40101061: {
    tag: '(4010,1061)',
    vr: 'FL',
    vm: 3,
    name: 'SourcePosition'
  },
  x40101062: {
    tag: '(4010,1062)',
    vr: 'FL',
    vm: 1,
    name: 'BeltHeight'
  },
  x40101064: {
    tag: '(4010,1064)',
    vr: 'SQ',
    vm: 1,
    name: 'AlgorithmRoutingCodeSequence'
  },
  x40101067: {
    tag: '(4010,1067)',
    vr: 'CS',
    vm: 1,
    name: 'TransportClassification'
  },
  x40101068: {
    tag: '(4010,1068)',
    vr: 'LT',
    vm: 1,
    name: 'OOITypeDescriptor'
  },
  x40101069: {
    tag: '(4010,1069)',
    vr: 'FL',
    vm: 1,
    name: 'TotalProcessingTime'
  },
  x4010106c: {
    tag: '(4010,106C)',
    vr: 'OB',
    vm: 1,
    name: 'DetectorCalibrationData'
  },
  x4ffe0001: {
    tag: '(4FFE,0001)',
    vr: 'SQ',
    vm: 1,
    name: 'MACParametersSequence'
  },
  x50xx0005: {
    tag: '(50xx,0005)',
    vr: 'US',
    vm: 1,
    name: 'CurveDimensions'
  },
  x50xx0010: {
    tag: '(50xx,0010)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfPoints'
  },
  x50xx0020: {
    tag: '(50xx,0020)',
    vr: 'CS',
    vm: 1,
    name: 'TypeOfData'
  },
  x50xx0022: {
    tag: '(50xx,0022)',
    vr: 'LO',
    vm: 1,
    name: 'CurveDescription'
  },
  x50xx0030: {
    tag: '(50xx,0030)',
    vr: 'SH',
    vm: '1-n',
    name: 'AxisUnits'
  },
  x50xx0040: {
    tag: '(50xx,0040)',
    vr: 'SH',
    vm: '1-n',
    name: 'AxisLabels'
  },
  x50xx0103: {
    tag: '(50xx,0103)',
    vr: 'US',
    vm: 1,
    name: 'DataValueRepresentation'
  },
  x50xx0104: {
    tag: '(50xx,0104)',
    vr: 'US',
    vm: '1-n',
    name: 'MinimumCoordinateValue'
  },
  x50xx0105: {
    tag: '(50xx,0105)',
    vr: 'US',
    vm: '1-n',
    name: 'MaximumCoordinateValue'
  },
  x50xx0106: {
    tag: '(50xx,0106)',
    vr: 'SH',
    vm: '1-n',
    name: 'CurveRange'
  },
  x50xx0110: {
    tag: '(50xx,0110)',
    vr: 'US',
    vm: '1-n',
    name: 'CurveDataDescriptor'
  },
  x50xx0112: {
    tag: '(50xx,0112)',
    vr: 'US',
    vm: '1-n',
    name: 'CoordinateStartValue'
  },
  x50xx0114: {
    tag: '(50xx,0114)',
    vr: 'US',
    vm: '1-n',
    name: 'CoordinateStepValue'
  },
  x50xx1001: {
    tag: '(50xx,1001)',
    vr: 'CS',
    vm: 1,
    name: 'CurveActivationLayer'
  },
  x50xx2000: {
    tag: '(50xx,2000)',
    vr: 'US',
    vm: 1,
    name: 'AudioType'
  },
  x50xx2002: {
    tag: '(50xx,2002)',
    vr: 'US',
    vm: 1,
    name: 'AudioSampleFormat'
  },
  x50xx2004: {
    tag: '(50xx,2004)',
    vr: 'US',
    vm: 1,
    name: 'NumberOfChannels'
  },
  x50xx2006: {
    tag: '(50xx,2006)',
    vr: 'UL',
    vm: 1,
    name: 'NumberOfSamples'
  },
  x50xx2008: {
    tag: '(50xx,2008)',
    vr: 'UL',
    vm: 1,
    name: 'SampleRate'
  },
  x50xx200a: {
    tag: '(50xx,200A)',
    vr: 'UL',
    vm: 1,
    name: 'TotalTime'
  },
  x50xx200c: {
    tag: '(50xx,200C)',
    vr: 'OW|OB',
    vm: 1,
    name: 'AudioSampleData'
  },
  x50xx200e: {
    tag: '(50xx,200E)',
    vr: 'LT',
    vm: '1 ',
    name: 'AudioComments'
  },
  x50xx2500: {
    tag: '(50xx,2500)',
    vr: 'LO',
    vm: 1,
    name: 'CurveLabel'
  },
  x50xx2600: {
    tag: '(50xx,2600)',
    vr: 'SQ',
    vm: 1,
    name: 'CurveReferencedOverlaySequence'
  },
  x50xx2610: {
    tag: '(50xx,2610)',
    vr: 'US',
    vm: 1,
    name: 'CurveReferencedOverlayGroup'
  },
  x50xx3000: {
    tag: '(50xx,3000)',
    vr: 'OW|OB',
    vm: 1,
    name: 'CurveData'
  },
  x52009229: {
    tag: '(5200,9229)',
    vr: 'SQ',
    vm: 1,
    name: 'SharedFunctionalGroupsSequence'
  },
  x52009230: {
    tag: '(5200,9230)',
    vr: 'SQ',
    vm: 1,
    name: 'PerFrameFunctionalGroupsSequence'
  },
  x54000100: {
    tag: '(5400,0100)',
    vr: 'SQ',
    vm: 1,
    name: 'WaveformSequence'
  },
  x54000110: {
    tag: '(5400,0110)',
    vr: 'OB|OW',
    vm: 1,
    name: 'ChannelMinimumValue'
  },
  x54000112: {
    tag: '(5400,0112)',
    vr: 'OB|OW',
    vm: 1,
    name: 'ChannelMaximumValue'
  },
  x54001004: {
    tag: '(5400,1004)',
    vr: 'US',
    vm: 1,
    name: 'WaveformBitsAllocated'
  },
  x54001006: {
    tag: '(5400,1006)',
    vr: 'CS',
    vm: 1,
    name: 'WaveformSampleInterpretation'
  },
  x5400100a: {
    tag: '(5400,100A)',
    vr: 'OB|OW',
    vm: 1,
    name: 'WaveformPaddingValue'
  },
  x54001010: {
    tag: '(5400,1010)',
    vr: 'OB|OW',
    vm: 1,
    name: 'WaveformData'
  },
  x56000010: {
    tag: '(5600,0010)',
    vr: 'OF',
    vm: 1,
    name: 'FirstOrderPhaseCorrectionAngle'
  },
  x56000020: {
    tag: '(5600,0020)',
    vr: 'OF',
    vm: 1,
    name: 'SpectroscopyData'
  },
  x60xx0010: {
    tag: '(60xx,0010)',
    vr: 'US',
    vm: 1,
    name: 'OverlayRows'
  },
  x60xx0011: {
    tag: '(60xx,0011)',
    vr: 'US',
    vm: 1,
    name: 'OverlayColumns'
  },
  x60xx0012: {
    tag: '(60xx,0012)',
    vr: 'US',
    vm: 1,
    name: 'OverlayPlanes'
  },
  x60xx0015: {
    tag: '(60xx,0015)',
    vr: 'IS',
    vm: 1,
    name: 'NumberOfFramesInOverlay'
  },
  x60xx0022: {
    tag: '(60xx,0022)',
    vr: 'LO',
    vm: 1,
    name: 'OverlayDescription'
  },
  x60xx0040: {
    tag: '(60xx,0040)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayType'
  },
  x60xx0045: {
    tag: '(60xx,0045)',
    vr: 'LO',
    vm: 1,
    name: 'OverlaySubtype'
  },
  x60xx0050: {
    tag: '(60xx,0050)',
    vr: 'SS',
    vm: 2,
    name: 'OverlayOrigin'
  },
  x60xx0051: {
    tag: '(60xx,0051)',
    vr: 'US',
    vm: 1,
    name: 'ImageFrameOrigin'
  },
  x60xx0052: {
    tag: '(60xx,0052)',
    vr: 'US',
    vm: 1,
    name: 'OverlayPlaneOrigin'
  },
  x60xx0060: {
    tag: '(60xx,0060)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayCompressionCode'
  },
  x60xx0061: {
    tag: '(60xx,0061)',
    vr: 'SH',
    vm: 1,
    name: 'OverlayCompressionOriginator'
  },
  x60xx0062: {
    tag: '(60xx,0062)',
    vr: 'SH',
    vm: 1,
    name: 'OverlayCompressionLabel'
  },
  x60xx0063: {
    tag: '(60xx,0063)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayCompressionDescription'
  },
  x60xx0066: {
    tag: '(60xx,0066)',
    vr: 'AT',
    vm: '1-n',
    name: 'OverlayCompressionStepPointers'
  },
  x60xx0068: {
    tag: '(60xx,0068)',
    vr: 'US',
    vm: 1,
    name: 'OverlayRepeatInterval'
  },
  x60xx0069: {
    tag: '(60xx,0069)',
    vr: 'US',
    vm: 1,
    name: 'OverlayBitsGrouped'
  },
  x60xx0100: {
    tag: '(60xx,0100)',
    vr: 'US',
    vm: 1,
    name: 'OverlayBitsAllocated'
  },
  x60xx0102: {
    tag: '(60xx,0102)',
    vr: 'US',
    vm: 1,
    name: 'OverlayBitPosition'
  },
  x60xx0110: {
    tag: '(60xx,0110)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayFormat'
  },
  x60xx0200: {
    tag: '(60xx,0200)',
    vr: 'US',
    vm: 1,
    name: 'OverlayLocation'
  },
  x60xx0800: {
    tag: '(60xx,0800)',
    vr: 'CS',
    vm: '1-n',
    name: 'OverlayCodeLabel'
  },
  x60xx0802: {
    tag: '(60xx,0802)',
    vr: 'US',
    vm: 1,
    name: 'OverlayNumberOfTables'
  },
  x60xx0803: {
    tag: '(60xx,0803)',
    vr: 'AT',
    vm: '1-n',
    name: 'OverlayCodeTableLocation'
  },
  x60xx0804: {
    tag: '(60xx,0804)',
    vr: 'US',
    vm: 1,
    name: 'OverlayBitsForCodeWord'
  },
  x60xx1001: {
    tag: '(60xx,1001)',
    vr: 'CS',
    vm: 1,
    name: 'OverlayActivationLayer'
  },
  x60xx1100: {
    tag: '(60xx,1100)',
    vr: 'US',
    vm: 1,
    name: 'OverlayDescriptorGray'
  },
  x60xx1101: {
    tag: '(60xx,1101)',
    vr: 'US',
    vm: 1,
    name: 'OverlayDescriptorRed'
  },
  x60xx1102: {
    tag: '(60xx,1102)',
    vr: 'US',
    vm: 1,
    name: 'OverlayDescriptorGreen'
  },
  x60xx1103: {
    tag: '(60xx,1103)',
    vr: 'US',
    vm: 1,
    name: 'OverlayDescriptorBlue'
  },
  x60xx1200: {
    tag: '(60xx,1200)',
    vr: 'US',
    vm: '1-n',
    name: 'OverlaysGray'
  },
  x60xx1201: {
    tag: '(60xx,1201)',
    vr: 'US',
    vm: '1-n',
    name: 'OverlaysRed'
  },
  x60xx1202: {
    tag: '(60xx,1202)',
    vr: 'US',
    vm: '1-n',
    name: 'OverlaysGreen'
  },
  x60xx1203: {
    tag: '(60xx,1203)',
    vr: 'US',
    vm: '1-n',
    name: 'OverlaysBlue'
  },
  x60xx1301: {
    tag: '(60xx,1301)',
    vr: 'IS',
    vm: 1,
    name: 'ROIArea'
  },
  x60xx1302: {
    tag: '(60xx,1302)',
    vr: 'DS',
    vm: 1,
    name: 'ROIMean'
  },
  x60xx1303: {
    tag: '(60xx,1303)',
    vr: 'DS',
    vm: 1,
    name: 'ROIStandardDeviation'
  },
  x60xx1500: {
    tag: '(60xx,1500)',
    vr: 'LO',
    vm: 1,
    name: 'OverlayLabel'
  },
  x60xx3000: {
    tag: '(60xx,3000)',
    vr: 'OB|OW',
    vm: 1,
    name: 'OverlayData'
  },
  x60xx4000: {
    tag: '(60xx,4000)',
    vr: 'LT',
    vm: 1,
    name: 'OverlayComments'
  },
  x7fe00010: {
    tag: '(7FE0,0010)',
    vr: 'OW|OB',
    vm: 1,
    name: 'PixelData'
  },
  x7fe00020: {
    tag: '(7FE0,0020)',
    vr: 'OW',
    vm: 1,
    name: 'CoefficientsSDVN'
  },
  x7fe00030: {
    tag: '(7FE0,0030)',
    vr: 'OW',
    vm: 1,
    name: 'CoefficientsSDHN'
  },
  x7fe00040: {
    tag: '(7FE0,0040)',
    vr: 'OW',
    vm: 1,
    name: 'CoefficientsSDDN'
  },
  x7fxx0010: {
    tag: '(7Fxx,0010)',
    vr: 'OW|OB',
    vm: 1,
    name: 'VariablePixelData'
  },
  x7fxx0011: {
    tag: '(7Fxx,0011)',
    vr: 'US',
    vm: 1,
    name: 'VariableNextDataGroup'
  },
  x7fxx0020: {
    tag: '(7Fxx,0020)',
    vr: 'OW',
    vm: 1,
    name: 'VariableCoefficientsSDVN'
  },
  x7fxx0030: {
    tag: '(7Fxx,0030)',
    vr: 'OW',
    vm: 1,
    name: 'VariableCoefficientsSDHN'
  },
  x7fxx0040: {
    tag: '(7Fxx,0040)',
    vr: 'OW',
    vm: 1,
    name: 'VariableCoefficientsSDDN'
  },
  xfffafffa: {
    tag: '(FFFA,FFFA)',
    vr: 'SQ',
    vm: 1,
    name: 'DigitalSignaturesSequence'
  },
  xfffcfffc: {
    tag: '(FFFC,FFFC)',
    vr: 'OB',
    vm: 1,
    name: 'DataSetTrailingPadding'
  },
  xfffee000: {
    tag: '(FFFE,E000)',
    vr: '',
    vm: 1,
    name: 'Item'
  },
  xfffee00d: {
    tag: '(FFFE,E00D)',
    vr: '',
    vm: 1,
    name: 'ItemDelimitationItem'
  },
  xfffee0dd: {
    tag: '(FFFE,E0DD)',
    vr: '',
    vm: 1,
    name: 'SequenceDelimitationItem'
  }
};
var _default = TAG_DICT;
exports.default = _default;

/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.DataSet = void 0;

var _lodashEs = __webpack_require__(32);

var _tags = __webpack_require__(725);

var _logger = _interopRequireDefault(__webpack_require__(683));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var arrayBufferToBase64 = function arrayBufferToBase64(buffer) {
  var binary = '';
  var bytes = new Uint8Array(buffer);
  var len = bytes.byteLength;

  for (var i = 0; i < len; i++) {
    binary += String.fromCharCode(bytes[i]);
  }

  return btoa(binary);
};

var DataSetInternalError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(DataSetInternalError, _Error);

  function DataSetInternalError() {
    return _Error.apply(this, arguments) || this;
  }

  return DataSetInternalError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

var getValueFromIndex = function getValueFromIndex(v, index) {
  if (v.Value) {
    if (v.vr === 'PN') {
      var pnV = v.Value[index];

      if (pnV.Alphabetic) {
        return pnV.Alphabetic;
      }

      if (pnV.Ideographic) {
        return pnV.Ideographic;
      }

      if (pnV.Phonetic) {
        return pnV.Phonetic;
      }

      return null;
    }

    return v.Value[index];
  }

  if (v.BulkDataURI) {
    return v.BulkDataURI;
  }

  if (v.InlineBinary) {
    return v.InlineBinary;
  }

  return undefined;
};

var DataSet = /*#__PURE__*/function () {
  function DataSet(json) {
    if (json === void 0) {
      json = {};
    }

    this.json = json;

    _defineProperty(this, "pixelDataMap", new Map());

    if (!(0, _lodashEs.isPlainObject)(json)) {
      throw new Error('DataSet constructor: parameter is not an object');
    }
  }

  var _proto = DataSet.prototype;

  _proto.getElementCount = function getElementCount(tagName) {
    try {
      var v = this.getElement(tagName);

      if (!v) {
        return 0;
      }

      if (v.Value) {
        return v.Value.length;
      }
    } catch (e) {} // eslint-disable-line


    return 0;
  };

  _proto.getElementValueArray = function getElementValueArray(tagName) {
    try {
      var v = this.getElement(tagName);

      if (v === undefined) {
        return undefined;
      }

      if (v.Value) {
        return v.Value;
      }
    } catch (e) {} // eslint-disable-line


    return null;
  };

  _proto.getElementValue = function getElementValue(tagName, index) {
    if (index === void 0) {
      index = 0;
    }

    try {
      var v = this.getElement(tagName);

      if (v === undefined) {
        return undefined;
      }

      var indexedValue = getValueFromIndex(v, index);

      if (indexedValue === undefined) {
        return null;
      }

      return indexedValue;
    } catch (e) {} // eslint-disable-line


    return null;
  };

  _proto.getElement = function getElement(tagName) {
    var jsonTagCode = (0, _tags.getJsonTagCodeFromName)(tagName);

    if (!jsonTagCode) {
      return undefined;
    }

    return this.json[jsonTagCode];
  };

  _proto.getPixelData = function getPixelData(name) {
    return this.pixelDataMap.get(name);
  };

  _proto.setPixelData = function setPixelData(imageTags, pixel) {
    var BulkDataURI = 'pixel';
    this.setElement('PixelData', {
      BulkDataURI: BulkDataURI,
      vr: 'OB'
    });
    this.setElementValue('SamplesPerPixel', imageTags.SamplesPerPixel);
    this.setElementValue('PhotometricInterpretation', imageTags.PhotometricInterpretation);
    this.setElementValue('PlanarConfiguration', imageTags.PlanarConfiguration);
    this.setElementValue('Rows', imageTags.Rows);
    this.setElementValue('Columns', imageTags.Columns);
    this.setElementValue('BitsAllocated', imageTags.BitsAllocated);
    this.setElementValue('BitsStored', imageTags.BitsStored);
    this.setElementValue('HighBit', imageTags.HighBit);
    this.setElementValue('PixelRepresentation', imageTags.PixelRepresentation);
    this.pixelDataMap.set(BulkDataURI, pixel);
  };

  _proto.getSQElementInternal = function getSQElementInternal(tagName, index) {
    try {
      var v = this.getElement(tagName);

      if (v === undefined) {
        return undefined;
      }

      if (v.vr !== 'SQ') {
        throw new DataSetInternalError("getElementSQ: vr must be SQ, but now it is " + v.vr);
      }

      if (index === undefined) {
        return v.Value.map(function (e) {
          return new DataSet(e);
        });
      }

      return new DataSet(v.Value[index]);
    } catch (e) {
      if (e instanceof DataSetInternalError) {
        throw e;
      }

      return null;
    }
  };

  _proto.getSQElement = function getSQElement(tagName, index) {
    if (index === void 0) {
      index = 0;
    }

    return this.getSQElementInternal(tagName, index);
  };

  _proto.getSQElementArray = function getSQElementArray(tagName) {
    return this.getSQElementInternal(tagName);
  };

  _proto.setElement = function setElement(tagName, value) {
    var metaKey = (0, _tags.getJsonTagCodeFromName)(tagName);

    _logger.default.assert(metaKey);

    this.json[metaKey] = value;
  };

  _proto.setElementValue = function setElementValue(tagName, value) {
    // const metaKey = getJsonTagCodeFromName(tagName);
    var tag = (0, _tags.getTagFromName)(tagName);

    if (!tag) {
      return;
    }

    if ((0, _lodashEs.isArray)(value)) {
      this.setElement(tagName, {
        Value: value,
        vr: tag.vr
      });
      return;
    }

    if (tag.vr === 'OB' || tag.vr === 'OW') {
      this.setElement(tagName, {
        InlineBinary: value instanceof ArrayBuffer ? arrayBufferToBase64(value) : btoa("" + value),
        vr: tag.vr
      });
      return;
    }

    this.setElement(tagName, {
      Value: [value instanceof ArrayBuffer ? arrayBufferToBase64(value) : value],
      vr: tag.vr
    });
  };

  _proto.addSQItem = function addSQItem(tagName, ds) {
    var tag = (0, _tags.getTagFromName)(tagName);

    if (!tag) {
      return;
    }

    var existed = this.getElement(tagName);

    if (!existed) {
      existed = {
        vr: tag.vr,
        Value: []
      };
    }

    if (ds) {
      existed.Value.push(ds.json);
    }

    this.setElement(tagName, existed);
  };

  _proto.copyElement = function copyElement(sourceDS, tagName, defaultValue) {
    var target = sourceDS.getElement(tagName);

    if (target) {
      this.setElement(tagName, target);
    } else if (typeof defaultValue !== 'undefined') {
      this.setElementValue(tagName, defaultValue);
    }
  };

  _proto.elementStr = function elementStr(k, prefix) {
    var v = this.json[k];
    var tag = (0, _tags.getTagFromName)(k); // tag, vr, value, count, name

    var name = tag ? tag.name : 'undefined';
    var tagStr = tag ? tag.tag : k;
    var vr = tag ? tag.vr : v.vr;
    var count = v.Value ? v.Value.length : 0;
    var value = '';

    if (tag && tag.vr !== 'SQ') {
      value = v.Value ? ("[" + v.Value.join('\\') + "]").slice(0, 80) : '(no value available)';
    }

    return "" + prefix + tagStr + "  " + vr + "  " + value + "  " + count + "  " + name;
  } // performance is not considered here
  ;

  _proto.dump = function dump(lineLogger, prefix) {
    if (prefix === void 0) {
      prefix = '';
    }

    var ks = (0, _lodashEs.keys)(this.json);
    ks.sort();

    for (var i = 0; i < ks.length; i += 1) {
      var k = ks[i];
      var v = this.json[k];

      if (!v) {
        continue;
      }

      if (v.vr === 'SQ') {
        lineLogger(this.elementStr(k, prefix));
        if (!v.Value) continue;

        for (var j = 0; j < v.Value.length; j += 1) {
          lineLogger(prefix + "{");
          var ds = new DataSet(v.Value[j]);
          ds.dump(lineLogger, prefix + "  ");
          lineLogger(prefix + "}");
        }
      } else {
        lineLogger(this.elementStr(k, prefix));
      }
    }
  };

  _createClass(DataSet, [{
    key: "SeriesInstanceUID",
    get: function get() {
      return this.getElementValue('SeriesInstanceUID');
    },
    set: function set(v) {
      this.setElementValue('SeriesInstanceUID', v);
    }
  }, {
    key: "StudyInstanceUID",
    get: function get() {
      return this.getElementValue('StudyInstanceUID');
    },
    set: function set(v) {
      this.setElementValue('StudyInstanceUID', v);
    }
  }, {
    key: "SOPInstanceUID",
    get: function get() {
      return this.getElementValue('SOPInstanceUID');
    },
    set: function set(v) {
      this.setElementValue('SOPInstanceUID', v);
    }
  }]);

  return DataSet;
}();

exports.DataSet = DataSet;

/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.cura = void 0;
var CURA_GROUP_TAG = '3333';
var tags = {};

var addTag = function addTag(name, group, element, vr) {
  var tag = {
    tag: "(" + group + "," + element + ")",
    vr: vr,
    vm: 1,
    name: name
  };
  tags["x" + group + element] = tag;
};

addTag('CURA_CREATOR', CURA_GROUP_TAG, '0010', 'LO');
addTag('CURA_VERSION', CURA_GROUP_TAG, '1010', 'LO');
addTag('CURA_LABEL18', CURA_GROUP_TAG, '1020', 'OB');
addTag('CURA_CL_LEFT', CURA_GROUP_TAG, '1021', 'OB');
addTag('CURA_CL_RIGHT', CURA_GROUP_TAG, '1022', 'OB');
addTag('CURA_PLY_LEFT', CURA_GROUP_TAG, '1023', 'OB');
addTag('CURA_PLY_RIGHT', CURA_GROUP_TAG, '1024', 'OB');
addTag('CURA_PLY_AORTA', CURA_GROUP_TAG, '1025', 'OB');
addTag('CURA_VRMASK', CURA_GROUP_TAG, '1026', 'OB');
addTag('CURA_INFO', CURA_GROUP_TAG, '1027', 'OB');
addTag('CURA_PROJECT', CURA_GROUP_TAG, '1028', 'OB');
addTag('CURA_PLY', CURA_GROUP_TAG, '1030', 'OB');
addTag('CURA_IMAGEINFO', CURA_GROUP_TAG, '1032', 'OB');
addTag('CURA_RAW_SERIES_UID', CURA_GROUP_TAG, '1040', 'LO');
addTag('CURA_SEGMENT_TYPE', CURA_GROUP_TAG, '1050', 'IS');
addTag('CURA_SEGMENT_VALUE', CURA_GROUP_TAG, '1051', 'IS');
addTag('CURA_SERIES_TYPE', CURA_GROUP_TAG, '1052', 'IS');
addTag('CURA_BRANCH_SERIES_TYPE', CURA_GROUP_TAG, '1053', 'IS');
addTag('CURA_FRAME_OF_REFERENCE', CURA_GROUP_TAG, '1060', 'DS');
var cura = tags;
exports.cura = cura;

/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var create = function create() {
  return "1.3976." + new Date().valueOf(); // workitem uid must be number and .
};

var _default = create;
exports.default = _default;

/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getCurrentDateTime = exports.getCurrentTime = exports.getCurrentDate = void 0;

var _dateFns = __webpack_require__(732);

var getCurrentDate = function getCurrentDate() {
  return (0, _dateFns.format)(new Date(), 'yyyyMMdd');
};

exports.getCurrentDate = getCurrentDate;

var getCurrentTime = function getCurrentTime() {
  return (0, _dateFns.format)(new Date(), 'HHmmss');
};

exports.getCurrentTime = getCurrentTime;

var getCurrentDateTime = function getCurrentDateTime() {
  return "" + getCurrentDate() + getCurrentTime();
};

exports.getCurrentDateTime = getCurrentDateTime;

/***/ }),
/* 732 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _add_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(733);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "add", function() { return _add_index_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(739);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addBusinessDays", function() { return _addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(734);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addDays", function() { return _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _addHours_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(743);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addHours", function() { return _addHours_index_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(745);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addISOWeekYears", function() { return _addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(744);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addMilliseconds", function() { return _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _addMinutes_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(754);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addMinutes", function() { return _addMinutes_index_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(738);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addMonths", function() { return _addMonths_index_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(755);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addQuarters", function() { return _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _addSeconds_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(756);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addSeconds", function() { return _addSeconds_index_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(757);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addWeeks", function() { return _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _addYears_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(758);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addYears", function() { return _addYears_index_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _areIntervalsOverlapping_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(759);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "areIntervalsOverlapping", function() { return _areIntervalsOverlapping_index_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _closestIndexTo_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(760);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "closestIndexTo", function() { return _closestIndexTo_index_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _closestTo_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(761);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "closestTo", function() { return _closestTo_index_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(762);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareAsc", function() { return _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _compareDesc_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(763);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareDesc", function() { return _compareDesc_index_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _differenceInBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(764);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInBusinessDays", function() { return _differenceInBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(751);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInCalendarDays", function() { return _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(767);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInCalendarISOWeekYears", function() { return _differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _differenceInCalendarISOWeeks_index_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(768);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInCalendarISOWeeks", function() { return _differenceInCalendarISOWeeks_index_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(769);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInCalendarMonths", function() { return _differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _differenceInCalendarQuarters_index_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(770);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInCalendarQuarters", function() { return _differenceInCalendarQuarters_index_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(772);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInCalendarWeeks", function() { return _differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(773);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInCalendarYears", function() { return _differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(774);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInDays", function() { return _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(775);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInHours", function() { return _differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _differenceInISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(777);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInISOWeekYears", function() { return _differenceInISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(776);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInMilliseconds", function() { return _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(779);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInMinutes", function() { return _differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(780);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInMonths", function() { return _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _differenceInQuarters_index_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(781);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInQuarters", function() { return _differenceInQuarters_index_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(782);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInSeconds", function() { return _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _differenceInWeeks_index_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(783);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInWeeks", function() { return _differenceInWeeks_index_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(784);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "differenceInYears", function() { return _differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(785);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachDayOfInterval", function() { return _eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _eachHourOfInterval_index_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(786);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachHourOfInterval", function() { return _eachHourOfInterval_index_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _eachMonthOfInterval_index_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(787);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachMonthOfInterval", function() { return _eachMonthOfInterval_index_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _eachQuarterOfInterval_index_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(788);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachQuarterOfInterval", function() { return _eachQuarterOfInterval_index_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _eachWeekOfInterval_index_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(790);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachWeekOfInterval", function() { return _eachWeekOfInterval_index_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(791);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachWeekendOfInterval", function() { return _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _eachWeekendOfMonth_index_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(792);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachWeekendOfMonth", function() { return _eachWeekendOfMonth_index_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _eachWeekendOfYear_index_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(795);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachWeekendOfYear", function() { return _eachWeekendOfYear_index_js__WEBPACK_IMPORTED_MODULE_42__["default"]; });

/* harmony import */ var _eachYearOfInterval_index_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(798);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "eachYearOfInterval", function() { return _eachYearOfInterval_index_js__WEBPACK_IMPORTED_MODULE_43__["default"]; });

/* harmony import */ var _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(799);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfDay", function() { return _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_44__["default"]; });

/* harmony import */ var _endOfDecade_index_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(800);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfDecade", function() { return _endOfDecade_index_js__WEBPACK_IMPORTED_MODULE_45__["default"]; });

/* harmony import */ var _endOfHour_index_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(801);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfHour", function() { return _endOfHour_index_js__WEBPACK_IMPORTED_MODULE_46__["default"]; });

/* harmony import */ var _endOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(802);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfISOWeek", function() { return _endOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_47__["default"]; });

/* harmony import */ var _endOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(804);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfISOWeekYear", function() { return _endOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_48__["default"]; });

/* harmony import */ var _endOfMinute_index_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(805);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfMinute", function() { return _endOfMinute_index_js__WEBPACK_IMPORTED_MODULE_49__["default"]; });

/* harmony import */ var _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(794);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfMonth", function() { return _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_50__["default"]; });

/* harmony import */ var _endOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(806);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfQuarter", function() { return _endOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_51__["default"]; });

/* harmony import */ var _endOfSecond_index_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(807);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfSecond", function() { return _endOfSecond_index_js__WEBPACK_IMPORTED_MODULE_52__["default"]; });

/* harmony import */ var _endOfToday_index_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(808);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfToday", function() { return _endOfToday_index_js__WEBPACK_IMPORTED_MODULE_53__["default"]; });

/* harmony import */ var _endOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(809);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfTomorrow", function() { return _endOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_54__["default"]; });

/* harmony import */ var _endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(803);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfWeek", function() { return _endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_55__["default"]; });

/* harmony import */ var _endOfYear_index_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(797);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfYear", function() { return _endOfYear_index_js__WEBPACK_IMPORTED_MODULE_56__["default"]; });

/* harmony import */ var _endOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(810);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endOfYesterday", function() { return _endOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_57__["default"]; });

/* harmony import */ var _format_index_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(811);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return _format_index_js__WEBPACK_IMPORTED_MODULE_58__["default"]; });

/* harmony import */ var _formatDistance_index_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(837);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDistance", function() { return _formatDistance_index_js__WEBPACK_IMPORTED_MODULE_59__["default"]; });

/* harmony import */ var _formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(840);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDistanceStrict", function() { return _formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_60__["default"]; });

/* harmony import */ var _formatDistanceToNow_index_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(841);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDistanceToNow", function() { return _formatDistanceToNow_index_js__WEBPACK_IMPORTED_MODULE_61__["default"]; });

/* harmony import */ var _formatDistanceToNowStrict_index_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(842);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDistanceToNowStrict", function() { return _formatDistanceToNowStrict_index_js__WEBPACK_IMPORTED_MODULE_62__["default"]; });

/* harmony import */ var _formatDuration_index_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(843);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDuration", function() { return _formatDuration_index_js__WEBPACK_IMPORTED_MODULE_63__["default"]; });

/* harmony import */ var _formatISO_index_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(844);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatISO", function() { return _formatISO_index_js__WEBPACK_IMPORTED_MODULE_64__["default"]; });

/* harmony import */ var _formatISO9075_index_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(845);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatISO9075", function() { return _formatISO9075_index_js__WEBPACK_IMPORTED_MODULE_65__["default"]; });

/* harmony import */ var _formatISODuration_index_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(846);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatISODuration", function() { return _formatISODuration_index_js__WEBPACK_IMPORTED_MODULE_66__["default"]; });

/* harmony import */ var _formatRFC3339_index_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(847);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatRFC3339", function() { return _formatRFC3339_index_js__WEBPACK_IMPORTED_MODULE_67__["default"]; });

/* harmony import */ var _formatRFC7231_index_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(848);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatRFC7231", function() { return _formatRFC7231_index_js__WEBPACK_IMPORTED_MODULE_68__["default"]; });

/* harmony import */ var _formatRelative_index_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(849);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatRelative", function() { return _formatRelative_index_js__WEBPACK_IMPORTED_MODULE_69__["default"]; });

/* harmony import */ var _fromUnixTime_index_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(850);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromUnixTime", function() { return _fromUnixTime_index_js__WEBPACK_IMPORTED_MODULE_70__["default"]; });

/* harmony import */ var _getDate_index_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(851);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDate", function() { return _getDate_index_js__WEBPACK_IMPORTED_MODULE_71__["default"]; });

/* harmony import */ var _getDay_index_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(852);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDay", function() { return _getDay_index_js__WEBPACK_IMPORTED_MODULE_72__["default"]; });

/* harmony import */ var _getDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(853);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDayOfYear", function() { return _getDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_73__["default"]; });

/* harmony import */ var _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(854);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDaysInMonth", function() { return _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_74__["default"]; });

/* harmony import */ var _getDaysInYear_index_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(855);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDaysInYear", function() { return _getDaysInYear_index_js__WEBPACK_IMPORTED_MODULE_75__["default"]; });

/* harmony import */ var _getDecade_index_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(857);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDecade", function() { return _getDecade_index_js__WEBPACK_IMPORTED_MODULE_76__["default"]; });

/* harmony import */ var _getHours_index_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(858);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getHours", function() { return _getHours_index_js__WEBPACK_IMPORTED_MODULE_77__["default"]; });

/* harmony import */ var _getISODay_index_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(859);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getISODay", function() { return _getISODay_index_js__WEBPACK_IMPORTED_MODULE_78__["default"]; });

/* harmony import */ var _getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(860);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getISOWeek", function() { return _getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_79__["default"]; });

/* harmony import */ var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(746);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getISOWeekYear", function() { return _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_80__["default"]; });

/* harmony import */ var _getISOWeeksInYear_index_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(861);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getISOWeeksInYear", function() { return _getISOWeeksInYear_index_js__WEBPACK_IMPORTED_MODULE_81__["default"]; });

/* harmony import */ var _getMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(862);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMilliseconds", function() { return _getMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_82__["default"]; });

/* harmony import */ var _getMinutes_index_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(863);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMinutes", function() { return _getMinutes_index_js__WEBPACK_IMPORTED_MODULE_83__["default"]; });

/* harmony import */ var _getMonth_index_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(864);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMonth", function() { return _getMonth_index_js__WEBPACK_IMPORTED_MODULE_84__["default"]; });

/* harmony import */ var _getOverlappingDaysInIntervals_index_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(865);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getOverlappingDaysInIntervals", function() { return _getOverlappingDaysInIntervals_index_js__WEBPACK_IMPORTED_MODULE_85__["default"]; });

/* harmony import */ var _getQuarter_index_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(771);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getQuarter", function() { return _getQuarter_index_js__WEBPACK_IMPORTED_MODULE_86__["default"]; });

/* harmony import */ var _getSeconds_index_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(866);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getSeconds", function() { return _getSeconds_index_js__WEBPACK_IMPORTED_MODULE_87__["default"]; });

/* harmony import */ var _getTime_index_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(867);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTime", function() { return _getTime_index_js__WEBPACK_IMPORTED_MODULE_88__["default"]; });

/* harmony import */ var _getUnixTime_index_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(868);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getUnixTime", function() { return _getUnixTime_index_js__WEBPACK_IMPORTED_MODULE_89__["default"]; });

/* harmony import */ var _getWeek_index_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(869);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getWeek", function() { return _getWeek_index_js__WEBPACK_IMPORTED_MODULE_90__["default"]; });

/* harmony import */ var _getWeekOfMonth_index_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(872);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getWeekOfMonth", function() { return _getWeekOfMonth_index_js__WEBPACK_IMPORTED_MODULE_91__["default"]; });

/* harmony import */ var _getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(871);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getWeekYear", function() { return _getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_92__["default"]; });

/* harmony import */ var _getWeeksInMonth_index_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(873);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getWeeksInMonth", function() { return _getWeeksInMonth_index_js__WEBPACK_IMPORTED_MODULE_93__["default"]; });

/* harmony import */ var _getYear_index_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(875);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getYear", function() { return _getYear_index_js__WEBPACK_IMPORTED_MODULE_94__["default"]; });

/* harmony import */ var _intervalToDuration_index_js__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(876);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intervalToDuration", function() { return _intervalToDuration_index_js__WEBPACK_IMPORTED_MODULE_95__["default"]; });

/* harmony import */ var _isAfter_index_js__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(880);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isAfter", function() { return _isAfter_index_js__WEBPACK_IMPORTED_MODULE_96__["default"]; });

/* harmony import */ var _isBefore_index_js__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(881);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBefore", function() { return _isBefore_index_js__WEBPACK_IMPORTED_MODULE_97__["default"]; });

/* harmony import */ var _isDate_index_js__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(882);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return _isDate_index_js__WEBPACK_IMPORTED_MODULE_98__["default"]; });

/* harmony import */ var _isEqual_index_js__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(883);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEqual", function() { return _isEqual_index_js__WEBPACK_IMPORTED_MODULE_99__["default"]; });

/* harmony import */ var _isExists_index_js__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(884);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isExists", function() { return _isExists_index_js__WEBPACK_IMPORTED_MODULE_100__["default"]; });

/* harmony import */ var _isFirstDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(885);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFirstDayOfMonth", function() { return _isFirstDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_101__["default"]; });

/* harmony import */ var _isFriday_index_js__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(886);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFriday", function() { return _isFriday_index_js__WEBPACK_IMPORTED_MODULE_102__["default"]; });

/* harmony import */ var _isFuture_index_js__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(887);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFuture", function() { return _isFuture_index_js__WEBPACK_IMPORTED_MODULE_103__["default"]; });

/* harmony import */ var _isLastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(888);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isLastDayOfMonth", function() { return _isLastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_104__["default"]; });

/* harmony import */ var _isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(856);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isLeapYear", function() { return _isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_105__["default"]; });

/* harmony import */ var _isMatch_index_js__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(889);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatch", function() { return _isMatch_index_js__WEBPACK_IMPORTED_MODULE_106__["default"]; });

/* harmony import */ var _isMonday_index_js__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(896);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMonday", function() { return _isMonday_index_js__WEBPACK_IMPORTED_MODULE_107__["default"]; });

/* harmony import */ var _isPast_index_js__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(897);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPast", function() { return _isPast_index_js__WEBPACK_IMPORTED_MODULE_108__["default"]; });

/* harmony import */ var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(766);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameDay", function() { return _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_109__["default"]; });

/* harmony import */ var _isSameHour_index_js__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(898);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameHour", function() { return _isSameHour_index_js__WEBPACK_IMPORTED_MODULE_110__["default"]; });

/* harmony import */ var _isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(900);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameISOWeek", function() { return _isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_111__["default"]; });

/* harmony import */ var _isSameISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(902);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameISOWeekYear", function() { return _isSameISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_112__["default"]; });

/* harmony import */ var _isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(903);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameMinute", function() { return _isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_113__["default"]; });

/* harmony import */ var _isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(905);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameMonth", function() { return _isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_114__["default"]; });

/* harmony import */ var _isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(906);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameQuarter", function() { return _isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_115__["default"]; });

/* harmony import */ var _isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(907);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameSecond", function() { return _isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_116__["default"]; });

/* harmony import */ var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(901);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameWeek", function() { return _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_117__["default"]; });

/* harmony import */ var _isSameYear_index_js__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(909);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSameYear", function() { return _isSameYear_index_js__WEBPACK_IMPORTED_MODULE_118__["default"]; });

/* harmony import */ var _isSaturday_index_js__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(742);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSaturday", function() { return _isSaturday_index_js__WEBPACK_IMPORTED_MODULE_119__["default"]; });

/* harmony import */ var _isSunday_index_js__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(741);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSunday", function() { return _isSunday_index_js__WEBPACK_IMPORTED_MODULE_120__["default"]; });

/* harmony import */ var _isThisHour_index_js__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(910);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isThisHour", function() { return _isThisHour_index_js__WEBPACK_IMPORTED_MODULE_121__["default"]; });

/* harmony import */ var _isThisISOWeek_index_js__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(911);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isThisISOWeek", function() { return _isThisISOWeek_index_js__WEBPACK_IMPORTED_MODULE_122__["default"]; });

/* harmony import */ var _isThisMinute_index_js__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(912);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isThisMinute", function() { return _isThisMinute_index_js__WEBPACK_IMPORTED_MODULE_123__["default"]; });

/* harmony import */ var _isThisMonth_index_js__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(913);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isThisMonth", function() { return _isThisMonth_index_js__WEBPACK_IMPORTED_MODULE_124__["default"]; });

/* harmony import */ var _isThisQuarter_index_js__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(914);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isThisQuarter", function() { return _isThisQuarter_index_js__WEBPACK_IMPORTED_MODULE_125__["default"]; });

/* harmony import */ var _isThisSecond_index_js__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(915);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isThisSecond", function() { return _isThisSecond_index_js__WEBPACK_IMPORTED_MODULE_126__["default"]; });

/* harmony import */ var _isThisWeek_index_js__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(916);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isThisWeek", function() { return _isThisWeek_index_js__WEBPACK_IMPORTED_MODULE_127__["default"]; });

/* harmony import */ var _isThisYear_index_js__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(917);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isThisYear", function() { return _isThisYear_index_js__WEBPACK_IMPORTED_MODULE_128__["default"]; });

/* harmony import */ var _isThursday_index_js__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(918);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isThursday", function() { return _isThursday_index_js__WEBPACK_IMPORTED_MODULE_129__["default"]; });

/* harmony import */ var _isToday_index_js__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(919);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isToday", function() { return _isToday_index_js__WEBPACK_IMPORTED_MODULE_130__["default"]; });

/* harmony import */ var _isTomorrow_index_js__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(920);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTomorrow", function() { return _isTomorrow_index_js__WEBPACK_IMPORTED_MODULE_131__["default"]; });

/* harmony import */ var _isTuesday_index_js__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(921);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTuesday", function() { return _isTuesday_index_js__WEBPACK_IMPORTED_MODULE_132__["default"]; });

/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(765);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValid", function() { return _isValid_index_js__WEBPACK_IMPORTED_MODULE_133__["default"]; });

/* harmony import */ var _isWednesday_index_js__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(922);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWednesday", function() { return _isWednesday_index_js__WEBPACK_IMPORTED_MODULE_134__["default"]; });

/* harmony import */ var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(740);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWeekend", function() { return _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_135__["default"]; });

/* harmony import */ var _isWithinInterval_index_js__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(923);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWithinInterval", function() { return _isWithinInterval_index_js__WEBPACK_IMPORTED_MODULE_136__["default"]; });

/* harmony import */ var _isYesterday_index_js__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(924);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isYesterday", function() { return _isYesterday_index_js__WEBPACK_IMPORTED_MODULE_137__["default"]; });

/* harmony import */ var _lastDayOfDecade_index_js__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(925);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastDayOfDecade", function() { return _lastDayOfDecade_index_js__WEBPACK_IMPORTED_MODULE_138__["default"]; });

/* harmony import */ var _lastDayOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(926);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastDayOfISOWeek", function() { return _lastDayOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_139__["default"]; });

/* harmony import */ var _lastDayOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(928);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastDayOfISOWeekYear", function() { return _lastDayOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_140__["default"]; });

/* harmony import */ var _lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(874);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastDayOfMonth", function() { return _lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_141__["default"]; });

/* harmony import */ var _lastDayOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(929);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastDayOfQuarter", function() { return _lastDayOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_142__["default"]; });

/* harmony import */ var _lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(927);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastDayOfWeek", function() { return _lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_143__["default"]; });

/* harmony import */ var _lastDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(930);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastDayOfYear", function() { return _lastDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_144__["default"]; });

/* harmony import */ var _lightFormat_index_js__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(931);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lightFormat", function() { return _lightFormat_index_js__WEBPACK_IMPORTED_MODULE_145__["default"]; });

/* harmony import */ var _max_index_js__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(932);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max_index_js__WEBPACK_IMPORTED_MODULE_146__["default"]; });

/* harmony import */ var _min_index_js__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(933);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min_index_js__WEBPACK_IMPORTED_MODULE_147__["default"]; });

/* harmony import */ var _parse_index_js__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(890);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return _parse_index_js__WEBPACK_IMPORTED_MODULE_148__["default"]; });

/* harmony import */ var _parseISO_index_js__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(934);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseISO", function() { return _parseISO_index_js__WEBPACK_IMPORTED_MODULE_149__["default"]; });

/* harmony import */ var _parseJSON_index_js__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(935);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseJSON", function() { return _parseJSON_index_js__WEBPACK_IMPORTED_MODULE_150__["default"]; });

/* harmony import */ var _roundToNearestMinutes_index_js__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(936);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "roundToNearestMinutes", function() { return _roundToNearestMinutes_index_js__WEBPACK_IMPORTED_MODULE_151__["default"]; });

/* harmony import */ var _set_index_js__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(937);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "set", function() { return _set_index_js__WEBPACK_IMPORTED_MODULE_152__["default"]; });

/* harmony import */ var _setDate_index_js__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(939);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDate", function() { return _setDate_index_js__WEBPACK_IMPORTED_MODULE_153__["default"]; });

/* harmony import */ var _setDay_index_js__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(940);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDay", function() { return _setDay_index_js__WEBPACK_IMPORTED_MODULE_154__["default"]; });

/* harmony import */ var _setDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(941);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setDayOfYear", function() { return _setDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_155__["default"]; });

/* harmony import */ var _setHours_index_js__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(942);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setHours", function() { return _setHours_index_js__WEBPACK_IMPORTED_MODULE_156__["default"]; });

/* harmony import */ var _setISODay_index_js__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(943);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setISODay", function() { return _setISODay_index_js__WEBPACK_IMPORTED_MODULE_157__["default"]; });

/* harmony import */ var _setISOWeek_index_js__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(944);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setISOWeek", function() { return _setISOWeek_index_js__WEBPACK_IMPORTED_MODULE_158__["default"]; });

/* harmony import */ var _setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(749);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setISOWeekYear", function() { return _setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_159__["default"]; });

/* harmony import */ var _setMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(945);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setMilliseconds", function() { return _setMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_160__["default"]; });

/* harmony import */ var _setMinutes_index_js__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(946);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setMinutes", function() { return _setMinutes_index_js__WEBPACK_IMPORTED_MODULE_161__["default"]; });

/* harmony import */ var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(938);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setMonth", function() { return _setMonth_index_js__WEBPACK_IMPORTED_MODULE_162__["default"]; });

/* harmony import */ var _setQuarter_index_js__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(947);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setQuarter", function() { return _setQuarter_index_js__WEBPACK_IMPORTED_MODULE_163__["default"]; });

/* harmony import */ var _setSeconds_index_js__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(948);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSeconds", function() { return _setSeconds_index_js__WEBPACK_IMPORTED_MODULE_164__["default"]; });

/* harmony import */ var _setWeek_index_js__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(949);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setWeek", function() { return _setWeek_index_js__WEBPACK_IMPORTED_MODULE_165__["default"]; });

/* harmony import */ var _setWeekYear_index_js__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(950);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setWeekYear", function() { return _setWeekYear_index_js__WEBPACK_IMPORTED_MODULE_166__["default"]; });

/* harmony import */ var _setYear_index_js__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(951);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setYear", function() { return _setYear_index_js__WEBPACK_IMPORTED_MODULE_167__["default"]; });

/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(753);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfDay", function() { return _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_168__["default"]; });

/* harmony import */ var _startOfDecade_index_js__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(952);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfDecade", function() { return _startOfDecade_index_js__WEBPACK_IMPORTED_MODULE_169__["default"]; });

/* harmony import */ var _startOfHour_index_js__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(899);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfHour", function() { return _startOfHour_index_js__WEBPACK_IMPORTED_MODULE_170__["default"]; });

/* harmony import */ var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(747);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfISOWeek", function() { return _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_171__["default"]; });

/* harmony import */ var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(750);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfISOWeekYear", function() { return _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_172__["default"]; });

/* harmony import */ var _startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(904);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfMinute", function() { return _startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_173__["default"]; });

/* harmony import */ var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(793);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfMonth", function() { return _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_174__["default"]; });

/* harmony import */ var _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(789);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfQuarter", function() { return _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_175__["default"]; });

/* harmony import */ var _startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(908);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfSecond", function() { return _startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_176__["default"]; });

/* harmony import */ var _startOfToday_index_js__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(953);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfToday", function() { return _startOfToday_index_js__WEBPACK_IMPORTED_MODULE_177__["default"]; });

/* harmony import */ var _startOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(954);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfTomorrow", function() { return _startOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_178__["default"]; });

/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(748);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfWeek", function() { return _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_179__["default"]; });

/* harmony import */ var _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(870);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfWeekYear", function() { return _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_180__["default"]; });

/* harmony import */ var _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(796);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfYear", function() { return _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_181__["default"]; });

/* harmony import */ var _startOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(955);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startOfYesterday", function() { return _startOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_182__["default"]; });

/* harmony import */ var _sub_index_js__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(877);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return _sub_index_js__WEBPACK_IMPORTED_MODULE_183__["default"]; });

/* harmony import */ var _subBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(956);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subBusinessDays", function() { return _subBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_184__["default"]; });

/* harmony import */ var _subDays_index_js__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(878);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subDays", function() { return _subDays_index_js__WEBPACK_IMPORTED_MODULE_185__["default"]; });

/* harmony import */ var _subHours_index_js__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(957);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subHours", function() { return _subHours_index_js__WEBPACK_IMPORTED_MODULE_186__["default"]; });

/* harmony import */ var _subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(778);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subISOWeekYears", function() { return _subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_187__["default"]; });

/* harmony import */ var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(822);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subMilliseconds", function() { return _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_188__["default"]; });

/* harmony import */ var _subMinutes_index_js__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(958);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subMinutes", function() { return _subMinutes_index_js__WEBPACK_IMPORTED_MODULE_189__["default"]; });

/* harmony import */ var _subMonths_index_js__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(879);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subMonths", function() { return _subMonths_index_js__WEBPACK_IMPORTED_MODULE_190__["default"]; });

/* harmony import */ var _subQuarters_index_js__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(959);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subQuarters", function() { return _subQuarters_index_js__WEBPACK_IMPORTED_MODULE_191__["default"]; });

/* harmony import */ var _subSeconds_index_js__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(960);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subSeconds", function() { return _subSeconds_index_js__WEBPACK_IMPORTED_MODULE_192__["default"]; });

/* harmony import */ var _subWeeks_index_js__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(961);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subWeeks", function() { return _subWeeks_index_js__WEBPACK_IMPORTED_MODULE_193__["default"]; });

/* harmony import */ var _subYears_index_js__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(962);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subYears", function() { return _subYears_index_js__WEBPACK_IMPORTED_MODULE_194__["default"]; });

/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(736);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDate", function() { return _toDate_index_js__WEBPACK_IMPORTED_MODULE_195__["default"]; });

/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(963);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxTime", function() { return _constants_index_js__WEBPACK_IMPORTED_MODULE_196__["maxTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minTime", function() { return _constants_index_js__WEBPACK_IMPORTED_MODULE_196__["minTime"]; });

// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.






































































































































































































/***/ }),
/* 733 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return add; });
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(734);
/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(738);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(735);





/**
 * @name add
 * @category Common Helpers
 * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
 *
 * @description
 * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 *
 * | Key            | Description                        |
 * |----------------|------------------------------------|
 * | years          | Amount of years to be added        |
 * | months         | Amount of months to be added       |
 * | weeks          | Amount of weeks to be added       |
 * | days           | Amount of days to be added         |
 * | hours          | Amount of hours to be added        |
 * | minutes        | Amount of minutes to be added      |
 * | seconds        | Amount of seconds to be added      |
 *
 * All values default to 0
 *
 * @returns {Date} the new date with the seconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add the following duration to 1 September 2014, 10:19:50
 * var result = add(new Date(2014, 8, 1, 10, 19, 50), {
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,
 *   minutes: 9,
 *   seconds: 30,
 * })
 * //=> Thu Jun 15 2017 15:29:20
 */

function add(dirtyDate, duration) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  if (!duration || typeof duration !== 'object') return new Date(NaN);
  var years = 'years' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.years) : 0;
  var months = 'months' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.months) : 0;
  var weeks = 'weeks' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.weeks) : 0;
  var days = 'days' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.days) : 0;
  var hours = 'hours' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.hours) : 0;
  var minutes = 'minutes' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.minutes) : 0;
  var seconds = 'seconds' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.seconds) : 0; // Add years and months

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
  var dateWithMonths = months || years ? Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, months + years * 12) : date; // Add weeks and days

  var dateWithDays = days || weeks ? Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds

  var minutesToAdd = minutes + hours * 60;
  var secondsToAdd = seconds + minutesToAdd * 60;
  var msToAdd = secondsToAdd * 1000;
  var finalDate = new Date(dateWithDays.getTime() + msToAdd);
  return finalDate;
}

/***/ }),
/* 734 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addDays; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the days added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * var result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */

function addDays(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);

  if (isNaN(amount)) {
    return new Date(NaN);
  }

  if (!amount) {
    // If 0 days, no-op to avoid changing times in the hour before end of DST
    return date;
  }

  date.setDate(date.getDate() + amount);
  return date;
}

/***/ }),
/* 735 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return toInteger; });
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }

  var number = Number(dirtyNumber);

  if (isNaN(number)) {
    return number;
  }

  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

/***/ }),
/* 736 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return toDate; });
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(737);

/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */

function toDate(argument) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var argStr = Object.prototype.toString.call(argument); // Clone the date

  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
  } else if (typeof argument === 'number' || argStr === '[object Number]') {
    return new Date(argument);
  } else {
    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"); // eslint-disable-next-line no-console

      console.warn(new Error().stack);
    }

    return new Date(NaN);
  }
}

/***/ }),
/* 737 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return requiredArgs; });
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
  }
}

/***/ }),
/* 738 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addMonths; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * var result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 */

function addMonths(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);

  if (isNaN(amount)) {
    return new Date(NaN);
  }

  if (!amount) {
    // If 0 months, no-op to avoid changing times in the hour before end of DST
    return date;
  }

  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for
  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and
  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
  // want except that dates will wrap around the end of a month, meaning that
  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
  // we'll default to the end of the desired month by adding 1 to the desired
  // month and using a date of 0 to back up one day to the end of the desired
  // month.

  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();

  if (dayOfMonth >= daysInMonth) {
    // If we're already at the end of the month, then this is the correct date
    // and we're done.
    return endOfDesiredMonth;
  } else {
    // Otherwise, we now know that setting the original day-of-month value won't
    // cause an overflow, so set the desired day-of-month. Note that we can't
    // just set the date of `endOfDesiredMonth` because that object may have had
    // its time changed in the unusual case where where a DST transition was on
    // the last day of the month and its local time was in the hour skipped or
    // repeated next to a DST transition.  So we use `date` instead which is
    // guaranteed to still have the original time.
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}

/***/ }),
/* 739 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addBusinessDays; });
/* harmony import */ var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(740);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);
/* harmony import */ var _isSunday_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(741);
/* harmony import */ var _isSaturday_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(742);






/**
 * @name addBusinessDays
 * @category Day Helpers
 * @summary Add the specified number of business days (mon - fri) to the given date.
 *
 * @description
 * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the business days added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 10 business days to 1 September 2014:
 * var result = addBusinessDays(new Date(2014, 8, 1), 10)
 * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)
 */

function addBusinessDays(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var startedOnWeekend = Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyAmount);
  if (isNaN(amount)) return new Date(NaN);
  var hours = date.getHours();
  var sign = amount < 0 ? -1 : 1;
  var fullWeeks = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(amount / 5);
  date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week

  var restDays = Math.abs(amount % 5); // Loops over remaining days

  while (restDays > 0) {
    date.setDate(date.getDate() + sign);
    if (!Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date)) restDays -= 1;
  } // If the date is a weekend day and we reduce a dividable of
  // 5 from it, we land on a weekend date.
  // To counter this, we add days accordingly to land on the next business day


  if (startedOnWeekend && Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date) && amount !== 0) {
    // If we're reducing days, we want to add days until we land on a weekday
    // If we're adding days we want to reduce days until we land on a weekday
    if (Object(_isSaturday_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));
    if (Object(_isSunday_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));
  } // Restore hours to avoid DST lag


  date.setHours(hours);
  return date;
}

/***/ }),
/* 740 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isWeekend; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isWeekend
 * @category Weekday Helpers
 * @summary Does the given date fall on a weekend?
 *
 * @description
 * Does the given date fall on a weekend?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date falls on a weekend
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Does 5 October 2014 fall on a weekend?
 * var result = isWeekend(new Date(2014, 9, 5))
 * //=> true
 */

function isWeekend(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var day = date.getDay();
  return day === 0 || day === 6;
}

/***/ }),
/* 741 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSunday; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSunday
 * @category Weekday Helpers
 * @summary Is the given date Sunday?
 *
 * @description
 * Is the given date Sunday?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is Sunday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 21 September 2014 Sunday?
 * var result = isSunday(new Date(2014, 8, 21))
 * //=> true
 */

function isSunday(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 0;
}

/***/ }),
/* 742 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSaturday; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSaturday
 * @category Weekday Helpers
 * @summary Is the given date Saturday?
 *
 * @description
 * Is the given date Saturday?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is Saturday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 27 September 2014 Saturday?
 * var result = isSaturday(new Date(2014, 8, 27))
 * //=> true
 */

function isSaturday(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 6;
}

/***/ }),
/* 743 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addHours; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(744);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



var MILLISECONDS_IN_HOUR = 3600000;
/**
 * @name addHours
 * @category Hour Helpers
 * @summary Add the specified number of hours to the given date.
 *
 * @description
 * Add the specified number of hours to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the hours added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 2 hours to 10 July 2014 23:00:00:
 * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)
 * //=> Fri Jul 11 2014 01:00:00
 */

function addHours(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * MILLISECONDS_IN_HOUR);
}

/***/ }),
/* 744 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addMilliseconds; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */

function addMilliseconds(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var timestamp = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate).getTime();
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return new Date(timestamp + amount);
}

/***/ }),
/* 745 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addISOWeekYears; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(746);
/* harmony import */ var _setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(749);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name addISOWeekYears
 * @category ISO Week-Numbering Year Helpers
 * @summary Add the specified number of ISO week-numbering years to the given date.
 *
 * @description
 * Add the specified number of ISO week-numbering years to the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `addISOYears` to `addISOWeekYears`.
 *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
 *   This change makes the name consistent with
 *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the ISO week-numbering years added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 ISO week-numbering years to 2 July 2010:
 * var result = addISOWeekYears(new Date(2010, 6, 2), 5)
 * //=> Fri Jun 26 2015 00:00:00
 */

function addISOWeekYears(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate) + amount);
}

/***/ }),
/* 746 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getISOWeekYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(747);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name getISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the ISO week-numbering year of the given date.
 *
 * @description
 * Get the ISO week-numbering year of the given date,
 * which always starts 3 days before the year's first Thursday.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `getISOYear` to `getISOWeekYear`.
 *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
 *   This change makes the name consistent with
 *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the ISO week-numbering year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which ISO-week numbering year is 2 January 2005?
 * var result = getISOWeekYear(new Date(2005, 0, 2))
 * //=> 2004
 */

function getISOWeekYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  var startOfNextYear = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
  var startOfThisYear = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfThisYear);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),
/* 747 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfISOWeek; });
/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(748);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name startOfISOWeek
 * @category ISO Week Helpers
 * @summary Return the start of an ISO week for the given date.
 *
 * @description
 * Return the start of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of an ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of an ISO week for 2 September 2014 11:55:00:
 * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */

function startOfISOWeek(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, {
    weekStartsOn: 1
  });
}

/***/ }),
/* 748 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfWeek; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name startOfWeek
 * @category Week Helpers
 * @summary Return the start of a week for the given date.
 *
 * @description
 * Return the start of a week for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the start of a week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // The start of a week for 2 September 2014 11:55:00:
 * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
 * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Mon Sep 01 2014 00:00:00
 */

function startOfWeek(dirtyDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setDate(date.getDate() - diff);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 749 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setISOWeekYear; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(750);
/* harmony import */ var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(751);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(737);





/**
 * @name setISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Set the ISO week-numbering year to the given date.
 *
 * @description
 * Set the ISO week-numbering year to the given date,
 * saving the week number and the weekday number.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `setISOYear` to `setISOWeekYear`.
 *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
 *   This change makes the name consistent with
 *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} isoWeekYear - the ISO week-numbering year of the new date
 * @returns {Date} the new date with the ISO week-numbering year set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set ISO week-numbering year 2007 to 29 December 2008:
 * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)
 * //=> Mon Jan 01 2007 00:00:00
 */

function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var isoWeekYear = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyISOWeekYear);
  var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date));
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  date = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fourthOfJanuary);
  date.setDate(date.getDate() + diff);
  return date;
}

/***/ }),
/* 750 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfISOWeekYear; });
/* harmony import */ var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(746);
/* harmony import */ var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(747);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name startOfISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the start of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the start of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of an ISO week-numbering year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of an ISO week-numbering year for 2 July 2005:
 * var result = startOfISOWeekYear(new Date(2005, 6, 2))
 * //=> Mon Jan 03 2005 00:00:00
 */

function startOfISOWeekYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var year = Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setFullYear(year, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  var date = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuary);
  return date;
}

/***/ }),
/* 751 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInCalendarDays; });
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(752);
/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(753);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



var MILLISECONDS_IN_DAY = 86400000;
/**
 * @name differenceInCalendarDays
 * @category Day Helpers
 * @summary Get the number of calendar days between the given dates.
 *
 * @description
 * Get the number of calendar days between the given dates. This means that the times are removed
 * from the dates and then the difference in days is calculated.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar days
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * var result = differenceInCalendarDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 366
 * // How many calendar days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * var result = differenceInCalendarDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 1
 */

function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var startOfDayLeft = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var startOfDayRight = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  var timestampLeft = startOfDayLeft.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfDayLeft);
  var timestampRight = startOfDayRight.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfDayRight); // Round the number of days to the nearest integer
  // because the number of milliseconds in a day is not constant
  // (e.g. it's different in the day of the daylight saving time clock shift)

  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}

/***/ }),
/* 752 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getTimezoneOffsetInMilliseconds; });
var MILLISECONDS_IN_MINUTE = 60000;

function getDateMillisecondsPart(date) {
  return date.getTime() % MILLISECONDS_IN_MINUTE;
}
/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */


function getTimezoneOffsetInMilliseconds(dirtyDate) {
  var date = new Date(dirtyDate.getTime());
  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());
  date.setSeconds(0, 0);
  var hasNegativeUTCOffset = baseTimezoneOffset > 0;
  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);
  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;
}

/***/ }),
/* 753 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfDay; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name startOfDay
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */

function startOfDay(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 754 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addMinutes; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(744);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



var MILLISECONDS_IN_MINUTE = 60000;
/**
 * @name addMinutes
 * @category Minute Helpers
 * @summary Add the specified number of minutes to the given date.
 *
 * @description
 * Add the specified number of minutes to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the minutes added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 30 minutes to 10 July 2014 12:00:00:
 * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)
 * //=> Thu Jul 10 2014 12:30:00
 */

function addMinutes(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
}

/***/ }),
/* 755 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addQuarters; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(738);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name addQuarters
 * @category Quarter Helpers
 * @summary Add the specified number of year quarters to the given date.
 *
 * @description
 * Add the specified number of year quarters to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the quarters added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 1 quarter to 1 September 2014:
 * var result = addQuarters(new Date(2014, 8, 1), 1)
 * //=> Mon Dec 01 2014 00:00:00
 */

function addQuarters(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  var months = amount * 3;
  return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, months);
}

/***/ }),
/* 756 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addSeconds; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(744);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name addSeconds
 * @category Second Helpers
 * @summary Add the specified number of seconds to the given date.
 *
 * @description
 * Add the specified number of seconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the seconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 30 seconds to 10 July 2014 12:45:00:
 * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
 * //=> Thu Jul 10 2014 12:45:30
 */

function addSeconds(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * 1000);
}

/***/ }),
/* 757 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addWeeks; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(734);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name addWeeks
 * @category Week Helpers
 * @summary Add the specified number of weeks to the given date.
 *
 * @description
 * Add the specified number of week to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the weeks added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 4 weeks to 1 September 2014:
 * var result = addWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Sep 29 2014 00:00:00
 */

function addWeeks(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  var days = amount * 7;
  return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, days);
}

/***/ }),
/* 758 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addYears; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(738);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name addYears
 * @category Year Helpers
 * @summary Add the specified number of years to the given date.
 *
 * @description
 * Add the specified number of years to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 years to 1 September 2014:
 * var result = addYears(new Date(2014, 8, 1), 5)
 * //=> Sun Sep 01 2019 00:00:00
 */

function addYears(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * 12);
}

/***/ }),
/* 759 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return areIntervalsOverlapping; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name areIntervalsOverlapping
 * @category Interval Helpers
 * @summary Is the given time interval overlapping with another time interval?
 *
 * @description
 * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.
 *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
 *
 *   ```
 *   2.1.3
 *   time interval
 *   part of the time axis limited by two instants
 *   ```
 *
 *   Also, this function now accepts an object with `start` and `end` properties
 *   instead of two arguments as an interval.
 *   This function now throws `RangeError` if the start of the interval is after its end
 *   or if any date in the interval is `Invalid Date`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   areRangesOverlapping(
 *     new Date(2014, 0, 10), new Date(2014, 0, 20),
 *     new Date(2014, 0, 17), new Date(2014, 0, 21)
 *   )
 *
 *   // v2.0.0 onward
 *
 *   areIntervalsOverlapping(
 *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
 *   )
 *   ```
 *
 * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}
 * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}
 * @param {Object} [options] - the object with options
 * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not
 * @returns {Boolean} whether the time intervals are overlapping
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // For overlapping time intervals:
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
 * )
 * //=> true
 *
 * @example
 * // For non-overlapping time intervals:
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
 * )
 * //=> false
 *
 * @example
 * // For adjacent time intervals:
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }
 * )
 * //=> false
 *
 * @example
 * // Using the inclusive option:
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }
 * )
 * //=> false
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },
 *   { inclusive: true }
 * )
 * //=> true
 */

function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var intervalLeft = dirtyIntervalLeft || {};
  var intervalRight = dirtyIntervalRight || {};
  var leftStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.start).getTime();
  var leftEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.end).getTime();
  var rightStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.start).getTime();
  var rightEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
    throw new RangeError('Invalid interval');
  }

  if (options.inclusive) {
    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;
  }

  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;
}

/***/ }),
/* 760 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return closestIndexTo; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name closestIndexTo
 * @category Common Helpers
 * @summary Return an index of the closest date from the array comparing to the given date.
 *
 * @description
 * Return an index of the closest date from the array comparing to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - Now, `closestIndexTo` doesn't throw an exception
 *   when the second argument is not an array, and returns Invalid Date instead.
 *
 * @param {Date|Number} dateToCompare - the date to compare with
 * @param {Date[]|Number[]} datesArray - the array to search
 * @returns {Number} an index of the date closest to the given date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Which date is closer to 6 September 2015?
 * var dateToCompare = new Date(2015, 8, 6)
 * var datesArray = [
 *   new Date(2015, 0, 1),
 *   new Date(2016, 0, 1),
 *   new Date(2017, 0, 1)
 * ]
 * var result = closestIndexTo(dateToCompare, datesArray)
 * //=> 1
 */

function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);

  if (isNaN(dateToCompare)) {
    return NaN;
  }

  var timeToCompare = dateToCompare.getTime();
  var datesArray; // `dirtyDatesArray` is undefined or null

  if (dirtyDatesArray == null) {
    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
  } else if (typeof dirtyDatesArray.forEach === 'function') {
    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
  } else {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  }

  var result;
  var minDistance;
  datesArray.forEach(function (dirtyDate, index) {
    var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

    if (isNaN(currentDate)) {
      result = NaN;
      minDistance = NaN;
      return;
    }

    var distance = Math.abs(timeToCompare - currentDate.getTime());

    if (result == null || distance < minDistance) {
      result = index;
      minDistance = distance;
    }
  });
  return result;
}

/***/ }),
/* 761 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return closestTo; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name closestTo
 * @category Common Helpers
 * @summary Return a date from the array closest to the given date.
 *
 * @description
 * Return a date from the array closest to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - Now, `closestTo` doesn't throw an exception
 *   when the second argument is not an array, and returns Invalid Date instead.
 *
 * @param {Date|Number} dateToCompare - the date to compare with
 * @param {Date[]|Number[]} datesArray - the array to search
 * @returns {Date} the date from the array closest to the given date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?
 * var dateToCompare = new Date(2015, 8, 6)
 * var result = closestTo(dateToCompare, [
 *   new Date(2000, 0, 1),
 *   new Date(2030, 0, 1)
 * ])
 * //=> Tue Jan 01 2030 00:00:00
 */

function closestTo(dirtyDateToCompare, dirtyDatesArray) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);

  if (isNaN(dateToCompare)) {
    return new Date(NaN);
  }

  var timeToCompare = dateToCompare.getTime();
  var datesArray; // `dirtyDatesArray` is undefined or null

  if (dirtyDatesArray == null) {
    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
  } else if (typeof dirtyDatesArray.forEach === 'function') {
    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
  } else {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  }

  var result;
  var minDistance;
  datesArray.forEach(function (dirtyDate) {
    var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

    if (isNaN(currentDate)) {
      result = new Date(NaN);
      minDistance = NaN;
      return;
    }

    var distance = Math.abs(timeToCompare - currentDate.getTime());

    if (result == null || distance < minDistance) {
      result = currentDate;
      minDistance = distance;
    }
  });
  return result;
}

/***/ }),
/* 762 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return compareAsc; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name compareAsc
 * @category Common Helpers
 * @summary Compare the two dates and return -1, 0 or 1.
 *
 * @description
 * Compare the two dates and return 1 if the first date is after the second,
 * -1 if the first date is before the second or 0 if dates are equal.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to compare
 * @param {Date|Number} dateRight - the second date to compare
 * @returns {Number} the result of the comparison
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Compare 11 February 1987 and 10 July 1989:
 * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))
 * //=> -1
 *
 * @example
 * // Sort the array of dates:
 * var result = [
 *   new Date(1995, 6, 2),
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * ].sort(compareAsc)
 * //=> [
 * //   Wed Feb 11 1987 00:00:00,
 * //   Mon Jul 10 1989 00:00:00,
 * //   Sun Jul 02 1995 00:00:00
 * // ]
 */

function compareAsc(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  var diff = dateLeft.getTime() - dateRight.getTime();

  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1; // Return 0 if diff is 0; return NaN if diff is NaN
  } else {
    return diff;
  }
}

/***/ }),
/* 763 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return compareDesc; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name compareDesc
 * @category Common Helpers
 * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.
 *
 * @description
 * Compare the two dates and return -1 if the first date is after the second,
 * 1 if the first date is before the second or 0 if dates are equal.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to compare
 * @param {Date|Number} dateRight - the second date to compare
 * @returns {Number} the result of the comparison
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:
 * var result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))
 * //=> 1
 *
 * @example
 * // Sort the array of dates in reverse chronological order:
 * var result = [
 *   new Date(1995, 6, 2),
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * ].sort(compareDesc)
 * //=> [
 * //   Sun Jul 02 1995 00:00:00,
 * //   Mon Jul 10 1989 00:00:00,
 * //   Wed Feb 11 1987 00:00:00
 * // ]
 */

function compareDesc(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  var diff = dateLeft.getTime() - dateRight.getTime();

  if (diff > 0) {
    return -1;
  } else if (diff < 0) {
    return 1; // Return 0 if diff is 0; return NaN if diff is NaN
  } else {
    return diff;
  }
}

/***/ }),
/* 764 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInBusinessDays; });
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(765);
/* harmony import */ var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(740);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(736);
/* harmony import */ var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(751);
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(734);
/* harmony import */ var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(766);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(737);








/**
 * @name differenceInBusinessDays
 * @category Day Helpers
 * @summary Get the number of business days between the given dates.
 *
 * @description
 * Get the number of business day periods between the given dates.
 * Business days being days that arent in the weekend.
 * Like `differenceInCalendarDays`, the function removes the times from
 * the dates before calculating the difference.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of business days
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many business days are between
 * // 10 January 2014 and 20 July 2014?
 * var result = differenceInBusinessDays(
 *   new Date(2014, 6, 20),
 *   new Date(2014, 0, 10)
 * )
 * //=> 136
 */

function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDateRight);
  if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft) || !Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateRight)) return new Date(NaN);
  var calendarDifference = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dateLeft, dateRight);
  var sign = calendarDifference < 0 ? -1 : 1;
  var weeks = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(calendarDifference / 7);
  var result = weeks * 5;
  dateRight = Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week

  while (!Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(dateLeft, dateRight)) {
    // sign is used to account for both negative and positive differences
    result += Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateRight) ? 0 : sign;
    dateRight = Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dateRight, sign);
  }

  return result === 0 ? 0 : result;
}

/***/ }),
/* 765 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isValid; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - Now `isValid` doesn't throw an exception
 *   if the first argument is not an instance of Date.
 *   Instead, argument is converted beforehand using `toDate`.
 *
 *   Examples:
 *
 *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
 *   |---------------------------|---------------|---------------|
 *   | `new Date()`              | `true`        | `true`        |
 *   | `new Date('2016-01-01')`  | `true`        | `true`        |
 *   | `new Date('')`            | `false`       | `false`       |
 *   | `new Date(1488370835081)` | `true`        | `true`        |
 *   | `new Date(NaN)`           | `false`       | `false`       |
 *   | `'2016-01-01'`            | `TypeError`   | `false`       |
 *   | `''`                      | `TypeError`   | `false`       |
 *   | `1488370835081`           | `TypeError`   | `true`        |
 *   | `NaN`                     | `TypeError`   | `false`       |
 *
 *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
 *   that try to coerce arguments to the expected type
 *   (which is also the case with other *date-fns* functions).
 *
 * @param {*} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // For the valid date:
 * var result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * var result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * var result = isValid(new Date(''))
 * //=> false
 */

function isValid(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  return !isNaN(date);
}

/***/ }),
/* 766 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameDay; });
/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(753);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameDay
 * @category Day Helpers
 * @summary Are the given dates in the same day?
 *
 * @description
 * Are the given dates in the same day?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same day
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
 * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
 * //=> true
 */

function isSameDay(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeftStartOfDay = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRightStartOfDay = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

/***/ }),
/* 767 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInCalendarISOWeekYears; });
/* harmony import */ var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(746);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name differenceInCalendarISOWeekYears
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the number of calendar ISO week-numbering years between the given dates.
 *
 * @description
 * Get the number of calendar ISO week-numbering years between the given dates.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.
 *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
 *   This change makes the name consistent with
 *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar ISO week-numbering years
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?
 * var result = differenceInCalendarISOWeekYears(
 *   new Date(2012, 0, 1),
 *   new Date(2010, 0, 1)
 * )
 * //=> 2
 */

function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  return Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft) - Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
}

/***/ }),
/* 768 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInCalendarISOWeeks; });
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(752);
/* harmony import */ var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(747);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



var MILLISECONDS_IN_WEEK = 604800000;
/**
 * @name differenceInCalendarISOWeeks
 * @category ISO Week Helpers
 * @summary Get the number of calendar ISO weeks between the given dates.
 *
 * @description
 * Get the number of calendar ISO weeks between the given dates.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar ISO weeks
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?
 * var result = differenceInCalendarISOWeeks(
 *   new Date(2014, 6, 21),
 *   new Date(2014, 6, 6)
 * )
 * //=> 3
 */

function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var startOfISOWeekLeft = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var startOfISOWeekRight = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  var timestampLeft = startOfISOWeekLeft.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfISOWeekLeft);
  var timestampRight = startOfISOWeekRight.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfISOWeekRight); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
}

/***/ }),
/* 769 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInCalendarMonths; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name differenceInCalendarMonths
 * @category Month Helpers
 * @summary Get the number of calendar months between the given dates.
 *
 * @description
 * Get the number of calendar months between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar months
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar months are between 31 January 2014 and 1 September 2014?
 * var result = differenceInCalendarMonths(
 *   new Date(2014, 8, 1),
 *   new Date(2014, 0, 31)
 * )
 * //=> 8
 */

function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
  return yearDiff * 12 + monthDiff;
}

/***/ }),
/* 770 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInCalendarQuarters; });
/* harmony import */ var _getQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(771);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name differenceInCalendarQuarters
 * @category Quarter Helpers
 * @summary Get the number of calendar quarters between the given dates.
 *
 * @description
 * Get the number of calendar quarters between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar quarters
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar quarters are between 31 December 2013 and 2 July 2014?
 * var result = differenceInCalendarQuarters(
 *   new Date(2014, 6, 2),
 *   new Date(2013, 11, 31)
 * )
 * //=> 3
 */

function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var quarterDiff = Object(_getQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft) - Object(_getQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateRight);
  return yearDiff * 4 + quarterDiff;
}

/***/ }),
/* 771 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getQuarter; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getQuarter
 * @category Quarter Helpers
 * @summary Get the year quarter of the given date.
 *
 * @description
 * Get the year quarter of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the quarter
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which quarter is 2 July 2014?
 * var result = getQuarter(new Date(2014, 6, 2))
 * //=> 3
 */

function getQuarter(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var quarter = Math.floor(date.getMonth() / 3) + 1;
  return quarter;
}

/***/ }),
/* 772 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInCalendarWeeks; });
/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(748);
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(752);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



var MILLISECONDS_IN_WEEK = 604800000;
/**
 * @name differenceInCalendarWeeks
 * @category Week Helpers
 * @summary Get the number of calendar weeks between the given dates.
 *
 * @description
 * Get the number of calendar weeks between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Number} the number of calendar weeks
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // How many calendar weeks are between 5 July 2014 and 20 July 2014?
 * var result = differenceInCalendarWeeks(
 *   new Date(2014, 6, 20),
 *   new Date(2014, 6, 5)
 * )
 * //=> 3
 *
 * @example
 * // If the week starts on Monday,
 * // how many calendar weeks are between 5 July 2014 and 20 July 2014?
 * var result = differenceInCalendarWeeks(
 *   new Date(2014, 6, 20),
 *   new Date(2014, 6, 5),
 *   { weekStartsOn: 1 }
 * )
 * //=> 2
 */

function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var startOfWeekLeft = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyOptions);
  var startOfWeekRight = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight, dirtyOptions);
  var timestampLeft = startOfWeekLeft.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startOfWeekLeft);
  var timestampRight = startOfWeekRight.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startOfWeekRight); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
}

/***/ }),
/* 773 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInCalendarYears; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name differenceInCalendarYears
 * @category Year Helpers
 * @summary Get the number of calendar years between the given dates.
 *
 * @description
 * Get the number of calendar years between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar years
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar years are between 31 December 2013 and 11 February 2015?
 * var result = differenceInCalendarYears(
 *   new Date(2015, 1, 11),
 *   new Date(2013, 11, 31)
 * )
 * //=> 2
 */

function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeft.getFullYear() - dateRight.getFullYear();
}

/***/ }),
/* 774 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInDays; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(751);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);


 // Like `compareAsc` but uses local time not UTC, which is needed
// for accurate equality comparisons of UTC timestamps that end up
// having the same representation in local time, e.g. one hour before
// DST ends vs. the instant that DST ends.

function compareLocalAsc(dateLeft, dateRight) {
  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();

  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1; // Return 0 if diff is 0; return NaN if diff is NaN
  } else {
    return diff;
  }
}
/**
 * @name differenceInDays
 * @category Day Helpers
 * @summary Get the number of full days between the given dates.
 *
 * @description
 * Get the number of full day periods between two dates. Fractional days are
 * truncated towards zero.
 *
 * One "full day" is the distance between a local time in one day to the same
 * local time on the next or previous day. A full day can sometimes be less than
 * or more than 24 hours if a daylight savings change happens between two dates.
 *
 * To ignore DST and only measure exact 24-hour periods, use this instead:
 * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.
 *
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full days according to the local timezone
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * var result = differenceInDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 365
 * // How many full days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * var result = differenceInDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 0
 * // How many full days are between
 * // 1 March 2020 0:00 and 1 June 2020 0:00 ?
 * // Note: because local time is used, the
 * // result will always be 92 days, even in
 * // time zones where DST starts and the
 * // period has only 92*24-1 hours.
 * var result = differenceInDays(
 *   new Date(2020, 5, 1),
 *   new Date(2020, 2, 1)
 * )
//=> 92
 */


function differenceInDays(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  var sign = compareLocalAsc(dateLeft, dateRight);
  var difference = Math.abs(Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full
  // If so, result must be decreased by 1 in absolute value

  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;
  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero

  return result === 0 ? 0 : result;
}

/***/ }),
/* 775 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInHours; });
/* harmony import */ var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(776);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


var MILLISECONDS_IN_HOUR = 3600000;
/**
 * @name differenceInHours
 * @category Hour Helpers
 * @summary Get the number of hours between the given dates.
 *
 * @description
 * Get the number of hours between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of hours
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?
 * var result = differenceInHours(
 *   new Date(2014, 6, 2, 19, 0),
 *   new Date(2014, 6, 2, 6, 50)
 * )
 * //=> 12
 */

function differenceInHours(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var diff = Object(_differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}

/***/ }),
/* 776 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInMilliseconds; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name differenceInMilliseconds
 * @category Millisecond Helpers
 * @summary Get the number of milliseconds between the given dates.
 *
 * @description
 * Get the number of milliseconds between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of milliseconds
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many milliseconds are between
 * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
 * var result = differenceInMilliseconds(
 *   new Date(2014, 6, 2, 12, 30, 21, 700),
 *   new Date(2014, 6, 2, 12, 30, 20, 600)
 * )
 * //=> 1100
 */

function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeft.getTime() - dateRight.getTime();
}

/***/ }),
/* 777 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInISOWeekYears; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(767);
/* harmony import */ var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(762);
/* harmony import */ var _subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(778);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(737);





/**
 * @name differenceInISOWeekYears
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the number of full ISO week-numbering years between the given dates.
 *
 * @description
 * Get the number of full ISO week-numbering years between the given dates.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.
 *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
 *   This change makes the name consistent with
 *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full ISO week-numbering years
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?
 * var result = differenceInISOWeekYears(
 *   new Date(2012, 0, 1),
 *   new Date(2010, 0, 1)
 * )
 * //=> 1
 */

function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
  var difference = Math.abs(Object(_differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
  dateLeft = Object(_subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1
  // if last calendar ISO year is not full
  // If so, result must be decreased by 1 in absolute value

  var isLastISOWeekYearNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero

  return result === 0 ? 0 : result;
}

/***/ }),
/* 778 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subISOWeekYears; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(745);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subISOWeekYears
 * @category ISO Week-Numbering Year Helpers
 * @summary Subtract the specified number of ISO week-numbering years from the given date.
 *
 * @description
 * Subtract the specified number of ISO week-numbering years from the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `subISOYears` to `subISOWeekYears`.
 *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
 *   This change makes the name consistent with
 *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the ISO week-numbering years subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 ISO week-numbering years from 1 September 2014:
 * var result = subISOWeekYears(new Date(2014, 8, 1), 5)
 * //=> Mon Aug 31 2009 00:00:00
 */

function subISOWeekYears(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 779 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInMinutes; });
/* harmony import */ var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(776);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


var MILLISECONDS_IN_MINUTE = 60000;
/**
 * @name differenceInMinutes
 * @category Minute Helpers
 * @summary Get the number of minutes between the given dates.
 *
 * @description
 * Get the signed number of full (rounded towards 0) minutes between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of minutes
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?
 * var result = differenceInMinutes(
 *   new Date(2014, 6, 2, 12, 20, 0),
 *   new Date(2014, 6, 2, 12, 7, 59)
 * )
 * //=> 12
 *
 * @example
 * // How many minutes are from 10:01:59 to 10:00:00
 * var result = differenceInMinutes(
 *   new Date(2000, 0, 1, 10, 0, 0),
 *   new Date(2000, 0, 1, 10, 1, 59)
 * )
 * //=> -1
 */

function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var diff = Object(_differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}

/***/ }),
/* 780 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInMonths; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(769);
/* harmony import */ var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(762);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name differenceInMonths
 * @category Month Helpers
 * @summary Get the number of full months between the given dates.
 *
 * @description
 * Get the number of full months between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full months
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full months are between 31 January 2014 and 1 September 2014?
 * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))
 * //=> 7
 */

function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
  var difference = Math.abs(Object(_differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
  // If so, result must be decreased by 1 in absolute value

  var isLastMonthNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero

  return result === 0 ? 0 : result;
}

/***/ }),
/* 781 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInQuarters; });
/* harmony import */ var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(780);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name differenceInQuarters
 * @category Quarter Helpers
 * @summary Get the number of full quarters between the given dates.
 *
 * @description
 * Get the number of full quarters between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full quarters
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full quarters are between 31 December 2013 and 2 July 2014?
 * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))
 * //=> 2
 */

function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var diff = Object(_differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / 3;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}

/***/ }),
/* 782 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInSeconds; });
/* harmony import */ var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(776);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name differenceInSeconds
 * @category Second Helpers
 * @summary Get the number of seconds between the given dates.
 *
 * @description
 * Get the number of seconds between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of seconds
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many seconds are between
 * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?
 * var result = differenceInSeconds(
 *   new Date(2014, 6, 2, 12, 30, 20, 0),
 *   new Date(2014, 6, 2, 12, 30, 7, 999)
 * )
 * //=> 12
 */

function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var diff = Object(_differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / 1000;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}

/***/ }),
/* 783 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInWeeks; });
/* harmony import */ var _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(774);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name differenceInWeeks
 * @category Week Helpers
 * @summary Get the number of full weeks between the given dates.
 *
 * @description
 * Get the number of full weeks between two dates. Fractional weeks are
 * truncated towards zero.
 *
 * One "full week" is the distance between a local time in one day to the same
 * local time 7 days earlier or later. A full week can sometimes be less than
 * or more than 7*24 hours if a daylight savings change happens between two dates.
 *
 * To ignore DST and only measure exact 7*24-hour periods, use this instead:
 * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.
 *
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full weeks
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full weeks are between 5 July 2014 and 20 July 2014?
 * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))
 * //=> 2
 *
 * // How many full weeks are between
 * // 1 March 2020 0:00 and 6 June 2020 0:00 ?
 * // Note: because local time is used, the
 * // result will always be 8 weeks (54 days),
 * // even if DST starts and the period has
 * // only 54*24-1 hours.
 * var result = differenceInWeeks(
 *   new Date(2020, 5, 1),
 *   new Date(2020, 2, 6)
 * )
 * //=> 8
 */

function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var diff = Object(_differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / 7;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}

/***/ }),
/* 784 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return differenceInYears; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(773);
/* harmony import */ var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(762);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name differenceInYears
 * @category Year Helpers
 * @summary Get the number of full years between the given dates.
 *
 * @description
 * Get the number of full years between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full years
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full years are between 31 December 2013 and 11 February 2015?
 * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))
 * //=> 1
 */

function differenceInYears(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
  var difference = Math.abs(Object(_differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing
  // with leap days

  dateLeft.setFullYear('1584');
  dateRight.setFullYear('1584'); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full
  // If so, result must be decreased by 1 in absolute value

  var isLastYearNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero

  return result === 0 ? 0 : result;
}

/***/ }),
/* 785 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return eachDayOfInterval; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name eachDayOfInterval
 * @category Interval Helpers
 * @summary Return the array of dates within the specified time interval.
 *
 * @description
 * Return the array of dates within the specified time interval.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `eachDay` to `eachDayOfInterval`.
 *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
 *
 *   ```
 *   2.1.3
 *   time interval
 *   part of the time axis limited by two instants
 *   ```
 *
 *   Also, this function now accepts an object with `start` and `end` properties
 *   instead of two arguments as an interval.
 *   This function now throws `RangeError` if the start of the interval is after its end
 *   or if any date in the interval is `Invalid Date`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))
 *
 *   // v2.0.0 onward
 *
 *   eachDayOfInterval(
 *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }
 *   )
 *   ```
 *
 * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
 * @param {Object} [options] - an object with options.
 * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
 * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.step` must be a number greater than 1
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // Each day between 6 October 2014 and 10 October 2014:
 * var result = eachDayOfInterval({
 *   start: new Date(2014, 9, 6),
 *   end: new Date(2014, 9, 10)
 * })
 * //=> [
 * //   Mon Oct 06 2014 00:00:00,
 * //   Tue Oct 07 2014 00:00:00,
 * //   Wed Oct 08 2014 00:00:00,
 * //   Thu Oct 09 2014 00:00:00,
 * //   Fri Oct 10 2014 00:00:00
 * // ]
 */

function eachDayOfInterval(dirtyInterval, options) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var interval = dirtyInterval || {};
  var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start);
  var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end);
  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(startDate.getTime() <= endTime)) {
    throw new RangeError('Invalid interval');
  }

  var dates = [];
  var currentDate = startDate;
  currentDate.setHours(0, 0, 0, 0);
  var step = options && 'step' in options ? Number(options.step) : 1;
  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');

  while (currentDate.getTime() <= endTime) {
    dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate));
    currentDate.setDate(currentDate.getDate() + step);
    currentDate.setHours(0, 0, 0, 0);
  }

  return dates;
}

/***/ }),
/* 786 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return eachHourOfInterval; });
/* harmony import */ var _addHours_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(743);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name eachHourOfInterval
 * @category Interval Helpers
 * @summary Return the array of hours within the specified time interval.
 *
 * @description
 * Return the array of hours within the specified time interval.
 *
 * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
 * @param {Object} [options] - an object with options.
 * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
 * @returns {Date[]} the array with starts of hours from the hour of the interval start to the hour of the interval end
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.step` must be a number greater than 1
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // Each hour between 6 October 2014, 12:00 and 10 October 2014, 15:00
 * var result = eachHourOfInterval({
 *   start: new Date(2014, 9, 6, 12),
 *   end: new Date(2014, 9, 6, 15)
 * })
 * //=> [
 * //   Mon Oct 06 2014 12:00:00,
 * //   Mon Oct 06 2014 13:00:00,
 * //   Mon Oct 06 2014 14:00:00,
 * //   Mon Oct 06 2014 15:00:00
 * // ]
 */

function eachHourOfInterval(dirtyInterval, options) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var interval = dirtyInterval || {};
  var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(interval.start);
  var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(interval.end);
  var startTime = startDate.getTime();
  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(startTime <= endTime)) {
    throw new RangeError('Invalid interval');
  }

  var dates = [];
  var currentDate = startDate;
  currentDate.setMinutes(0, 0, 0);
  var step = options && 'step' in options ? Number(options.step) : 1;
  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');

  while (currentDate.getTime() <= endTime) {
    dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(currentDate));
    currentDate = Object(_addHours_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate, step);
  }

  return dates;
}

/***/ }),
/* 787 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return eachMonthOfInterval; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name eachMonthOfInterval
 * @category Interval Helpers
 * @summary Return the array of months within the specified time interval.
 *
 * @description
 * Return the array of months within the specified time interval.
 *
 * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
 * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // Each month between 6 February 2014 and 10 August 2014:
 * var result = eachMonthOfInterval({
 *   start: new Date(2014, 1, 6),
 *   end: new Date(2014, 7, 10)
 * })
 * //=> [
 * //   Sat Feb 01 2014 00:00:00,
 * //   Sat Mar 01 2014 00:00:00,
 * //   Tue Apr 01 2014 00:00:00,
 * //   Thu May 01 2014 00:00:00,
 * //   Sun Jun 01 2014 00:00:00,
 * //   Tue Jul 01 2014 00:00:00,
 * //   Fri Aug 01 2014 00:00:00
 * // ]
 */

function eachMonthOfInterval(dirtyInterval) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var interval = dirtyInterval || {};
  var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start);
  var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end);
  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(startDate.getTime() <= endTime)) {
    throw new RangeError('Invalid interval');
  }

  var dates = [];
  var currentDate = startDate;
  currentDate.setHours(0, 0, 0, 0);
  currentDate.setDate(1);

  while (currentDate.getTime() <= endTime) {
    dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate));
    currentDate.setMonth(currentDate.getMonth() + 1);
  }

  return dates;
}

/***/ }),
/* 788 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return eachQuarterOfInterval; });
/* harmony import */ var _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(755);
/* harmony import */ var _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(789);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name eachQuarterOfInterval
 * @category Interval Helpers
 * @summary Return the array of quarters within the specified time interval.
 *
 * @description
 * Return the array of quarters within the specified time interval.
 *
 * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
 * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // Each quarter within interval 6 February 2014 - 10 August 2014:
 * var result = eachQuarterOfInterval({
 *   start: new Date(2014, 1, 6),
 *   end: new Date(2014, 7, 10)
 * })
 * //=> [
 * //   Wed Jan 01 2014 00:00:00,
 * //   Tue Apr 01 2014 00:00:00,
 * //   Tue Jul 01 2014 00:00:00,
 * // ]
 */

function eachQuarterOfInterval(dirtyInterval) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var interval = dirtyInterval || {};
  var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.start);
  var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.end);
  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(startDate.getTime() <= endTime)) {
    throw new RangeError('Invalid interval');
  }

  var startDateQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startDate);
  var endDateQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(endDate);
  endTime = endDateQuarter.getTime();
  var quarters = [];
  var currentQuarter = startDateQuarter;

  while (currentQuarter.getTime() <= endTime) {
    quarters.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(currentQuarter));
    currentQuarter = Object(_addQuarters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentQuarter, 1);
  }

  return quarters;
}

/***/ }),
/* 789 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfQuarter; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name startOfQuarter
 * @category Quarter Helpers
 * @summary Return the start of a year quarter for the given date.
 *
 * @description
 * Return the start of a year quarter for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a quarter
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a quarter for 2 September 2014 11:55:00:
 * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Jul 01 2014 00:00:00
 */

function startOfQuarter(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var currentMonth = date.getMonth();
  var month = currentMonth - currentMonth % 3;
  date.setMonth(month, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 790 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return eachWeekOfInterval; });
/* harmony import */ var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(757);
/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(748);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name eachWeekOfInterval
 * @category Interval Helpers
 * @summary Return the array of weeks within the specified time interval.
 *
 * @description
 * Return the array of weeks within the specified time interval.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // Each week within interval 6 October 2014 - 23 November 2014:
 * var result = eachWeekOfInterval({
 *   start: new Date(2014, 9, 6),
 *   end: new Date(2014, 10, 23)
 * })
 * //=> [
 * //   Sun Oct 05 2014 00:00:00,
 * //   Sun Oct 12 2014 00:00:00,
 * //   Sun Oct 19 2014 00:00:00,
 * //   Sun Oct 26 2014 00:00:00,
 * //   Sun Nov 02 2014 00:00:00,
 * //   Sun Nov 09 2014 00:00:00,
 * //   Sun Nov 16 2014 00:00:00,
 * //   Sun Nov 23 2014 00:00:00
 * // ]
 */

function eachWeekOfInterval(dirtyInterval, options) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var interval = dirtyInterval || {};
  var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.start);
  var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.end);
  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(startDate.getTime() <= endTime)) {
    throw new RangeError('Invalid interval');
  }

  var startDateWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startDate, options);
  var endDateWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet

  startDateWeek.setHours(15);
  endDateWeek.setHours(15);
  endTime = endDateWeek.getTime();
  var weeks = [];
  var currentWeek = startDateWeek;

  while (currentWeek.getTime() <= endTime) {
    currentWeek.setHours(0);
    weeks.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(currentWeek));
    currentWeek = Object(_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentWeek, 1);
    currentWeek.setHours(15);
  }

  return weeks;
}

/***/ }),
/* 791 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return eachWeekendOfInterval; });
/* harmony import */ var _eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(785);
/* harmony import */ var _isSunday_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(741);
/* harmony import */ var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(740);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name eachWeekendOfInterval
 * @category Interval Helpers
 * @summary List all the Saturdays and Sundays in the given date interval.
 *
 * @description
 * Get all the Saturdays and Sundays in the given date interval.
 *
 * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}
 * @returns {Date[]} an array containing all the Saturdays and Sundays
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // Lists all Saturdays and Sundays in the given date interval
 * var result = eachWeekendOfInterval({
 *   start: new Date(2018, 8, 17),
 *   end: new Date(2018, 8, 30)
 * })
 * //=> [
 * //   Sat Sep 22 2018 00:00:00,
 * //   Sun Sep 23 2018 00:00:00,
 * //   Sat Sep 29 2018 00:00:00,
 * //   Sun Sep 30 2018 00:00:00
 * // ]
 */

function eachWeekendOfInterval(interval) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var dateInterval = Object(_eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval);
  var weekends = [];
  var index = 0;

  while (index < dateInterval.length) {
    var date = dateInterval[index++];

    if (Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date)) {
      weekends.push(date);
      if (Object(_isSunday_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date)) index = index + 5;
    }
  }

  return weekends;
}

/***/ }),
/* 792 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return eachWeekendOfMonth; });
/* harmony import */ var _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(791);
/* harmony import */ var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(793);
/* harmony import */ var _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(794);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name eachWeekendOfMonth
 * @category Month Helpers
 * @summary List all the Saturdays and Sundays in the given month.
 *
 * @description
 * Get all the Saturdays and Sundays in the given month.
 *
 * @param {Date|Number} date - the given month
 * @returns {Date[]} an array containing all the Saturdays and Sundays
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} The passed date is invalid
 *
 * @example
 * // Lists all Saturdays and Sundays in the given month
 * var result = eachWeekendOfMonth(new Date(2022, 1, 1))
 * //=> [
 * //   Sat Feb 05 2022 00:00:00,
 * //   Sun Feb 06 2022 00:00:00,
 * //   Sat Feb 12 2022 00:00:00,
 * //   Sun Feb 13 2022 00:00:00,
 * //   Sat Feb 19 2022 00:00:00,
 * //   Sun Feb 20 2022 00:00:00,
 * //   Sat Feb 26 2022 00:00:00,
 * //   Sun Feb 27 2022 00:00:00
 * // ]
 */

function eachWeekendOfMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var startDate = Object(_startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');
  var endDate = Object(_endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
  return Object(_eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    start: startDate,
    end: endDate
  });
}

/***/ }),
/* 793 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name startOfMonth
 * @category Month Helpers
 * @summary Return the start of a month for the given date.
 *
 * @description
 * Return the start of a month for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a month for 2 September 2014 11:55:00:
 * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */

function startOfMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 794 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name endOfMonth
 * @category Month Helpers
 * @summary Return the end of a month for the given date.
 *
 * @description
 * Return the end of a month for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a month for 2 September 2014 11:55:00:
 * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 23:59:59.999
 */

function endOfMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),
/* 795 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return eachWeekendOfYear; });
/* harmony import */ var _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(791);
/* harmony import */ var _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(796);
/* harmony import */ var _endOfYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(797);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name eachWeekendOfYear
 * @category Year Helpers
 * @summary List all the Saturdays and Sundays in the year.
 *
 * @description
 * Get all the Saturdays and Sundays in the year.
 *
 * @param {Date|Number} date - the given year
 * @returns {Date[]} an array containing all the Saturdays and Sundays
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} The passed date is invalid
 *
 * @example
 * // Lists all Saturdays and Sundays in the year
 * var result = eachWeekendOfYear(new Date(2020, 1, 1))
 * //=> [
 * //   Sat Jan 03 2020 00:00:00,
 * //   Sun Jan 04 2020 00:00:00,
 * //   ...
 * //   Sun Dec 27 2020 00:00:00
 * // ]
 * ]
 */

function eachWeekendOfYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var startDate = Object(_startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');
  var endDate = Object(_endOfYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
  return Object(_eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    start: startDate,
    end: endDate
  });
}

/***/ }),
/* 796 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name startOfYear
 * @category Year Helpers
 * @summary Return the start of a year for the given date.
 *
 * @description
 * Return the start of a year for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a year for 2 September 2014 11:55:00:
 * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Jan 01 2014 00:00:00
 */

function startOfYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var cleanDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var date = new Date(0);
  date.setFullYear(cleanDate.getFullYear(), 0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 797 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name endOfYear
 * @category Year Helpers
 * @summary Return the end of a year for the given date.
 *
 * @description
 * Return the end of a year for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a year for 2 September 2014 11:55:00:
 * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Dec 31 2014 23:59:59.999
 */

function endOfYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  date.setFullYear(year + 1, 0, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),
/* 798 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return eachYearOfInterval; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name eachYearOfInterval
 * @category Interval Helpers
 * @summary Return the array of yearly timestamps within the specified time interval.
 *
 * @description
 * Return the array of yearly timestamps within the specified time interval.
 *
 * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
 * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // Each year between 6 February 2014 and 10 August 2017:
 * var result = eachYearOfInterval({
 *   start: new Date(2014, 1, 6),
 *   end: new Date(2017, 7, 10)
 * })
 * //=> [
 * //   Wed Jan 01 2014 00:00:00,
 * //   Thu Jan 01 2015 00:00:00,
 * //   Fri Jan 01 2016 00:00:00,
 * //   Sun Jan 01 2017 00:00:00
 * // ]
 */

function eachYearOfInterval(dirtyInterval) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var interval = dirtyInterval || {};
  var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start);
  var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end);
  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(startDate.getTime() <= endTime)) {
    throw new RangeError('Invalid interval');
  }

  var dates = [];
  var currentDate = startDate;
  currentDate.setHours(0, 0, 0, 0);
  currentDate.setMonth(0, 1);

  while (currentDate.getTime() <= endTime) {
    dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate));
    currentDate.setFullYear(currentDate.getFullYear() + 1);
  }

  return dates;
}

/***/ }),
/* 799 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfDay; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name endOfDay
 * @category Day Helpers
 * @summary Return the end of a day for the given date.
 *
 * @description
 * Return the end of a day for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a day for 2 September 2014 11:55:00:
 * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 23:59:59.999
 */

function endOfDay(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),
/* 800 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfDecade; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name endOfDecade
 * @category Decade Helpers
 * @summary Return the end of a decade for the given date.
 *
 * @description
 * Return the end of a decade for the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a decade
 * @param {Object} [options] - an object with options.
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // The end of a decade for 12 May 1984 00:00:00:
 * var result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))
 * //=> Dec 31 1989 23:59:59.999
 */

function endOfDecade(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  var decade = 9 + Math.floor(year / 10) * 10;
  date.setFullYear(decade, 11, 31);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),
/* 801 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfHour; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name endOfHour
 * @category Hour Helpers
 * @summary Return the end of an hour for the given date.
 *
 * @description
 * Return the end of an hour for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of an hour
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of an hour for 2 September 2014 11:55:00:
 * var result = endOfHour(new Date(2014, 8, 2, 11, 55))
 * //=> Tue Sep 02 2014 11:59:59.999
 */

function endOfHour(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  date.setMinutes(59, 59, 999);
  return date;
}

/***/ }),
/* 802 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfISOWeek; });
/* harmony import */ var _endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(803);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name endOfISOWeek
 * @category ISO Week Helpers
 * @summary Return the end of an ISO week for the given date.
 *
 * @description
 * Return the end of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of an ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of an ISO week for 2 September 2014 11:55:00:
 * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Sep 07 2014 23:59:59.999
 */

function endOfISOWeek(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, {
    weekStartsOn: 1
  });
}

/***/ }),
/* 803 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfWeek; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name endOfWeek
 * @category Week Helpers
 * @summary Return the end of a week for the given date.
 *
 * @description
 * Return the end of a week for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the end of a week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // The end of a week for 2 September 2014 11:55:00:
 * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sat Sep 06 2014 23:59:59.999
 *
 * @example
 * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:
 * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Sun Sep 07 2014 23:59:59.999
 */

function endOfWeek(dirtyDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
  date.setDate(date.getDate() + diff);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),
/* 804 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfISOWeekYear; });
/* harmony import */ var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(746);
/* harmony import */ var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(747);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name endOfISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the end of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the end of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.
 *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
 *   This change makes the name consistent with
 *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of an ISO week-numbering year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of an ISO week-numbering year for 2 July 2005:
 * var result = endOfISOWeekYear(new Date(2005, 6, 2))
 * //=> Sun Jan 01 2006 23:59:59.999
 */

function endOfISOWeekYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var year = Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  var date = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfNextYear);
  date.setMilliseconds(date.getMilliseconds() - 1);
  return date;
}

/***/ }),
/* 805 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfMinute; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name endOfMinute
 * @category Minute Helpers
 * @summary Return the end of a minute for the given date.
 *
 * @description
 * Return the end of a minute for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a minute
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a minute for 1 December 2014 22:15:45.400:
 * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
 * //=> Mon Dec 01 2014 22:15:59.999
 */

function endOfMinute(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  date.setSeconds(59, 999);
  return date;
}

/***/ }),
/* 806 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfQuarter; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name endOfQuarter
 * @category Quarter Helpers
 * @summary Return the end of a year quarter for the given date.
 *
 * @description
 * Return the end of a year quarter for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a quarter
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a quarter for 2 September 2014 11:55:00:
 * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 23:59:59.999
 */

function endOfQuarter(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var currentMonth = date.getMonth();
  var month = currentMonth - currentMonth % 3 + 3;
  date.setMonth(month, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),
/* 807 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfSecond; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name endOfSecond
 * @category Second Helpers
 * @summary Return the end of a second for the given date.
 *
 * @description
 * Return the end of a second for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a second
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a second for 1 December 2014 22:15:45.400:
 * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
 * //=> Mon Dec 01 2014 22:15:45.999
 */

function endOfSecond(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  date.setMilliseconds(999);
  return date;
}

/***/ }),
/* 808 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfToday; });
/* harmony import */ var _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(799);

/**
 * @name endOfToday
 * @category Day Helpers
 * @summary Return the end of today.
 * @pure false
 *
 * @description
 * Return the end of today.
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @returns {Date} the end of today
 *
 * @example
 * // If today is 6 October 2014:
 * var result = endOfToday()
 * //=> Mon Oct 6 2014 23:59:59.999
 */

function endOfToday() {
  return Object(_endOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now());
}

/***/ }),
/* 809 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfTomorrow; });
/**
 * @name endOfTomorrow
 * @category Day Helpers
 * @summary Return the end of tomorrow.
 * @pure false
 *
 * @description
 * Return the end of tomorrow.
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `new Date()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @returns {Date} the end of tomorrow
 *
 * @example
 * // If today is 6 October 2014:
 * var result = endOfTomorrow()
 * //=> Tue Oct 7 2014 23:59:59.999
 */
function endOfTomorrow() {
  var now = new Date();
  var year = now.getFullYear();
  var month = now.getMonth();
  var day = now.getDate();
  var date = new Date(0);
  date.setFullYear(year, month, day + 1);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),
/* 810 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return endOfYesterday; });
/**
 * @name endOfYesterday
 * @category Day Helpers
 * @summary Return the end of yesterday.
 * @pure false
 *
 * @description
 * Return the end of yesterday.
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `new Date()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @returns {Date} the end of yesterday
 *
 * @example
 * // If today is 6 October 2014:
 * var result = endOfYesterday()
 * //=> Sun Oct 5 2014 23:59:59.999
 */
function endOfYesterday() {
  var now = new Date();
  var year = now.getFullYear();
  var month = now.getMonth();
  var day = now.getDate();
  var date = new Date(0);
  date.setFullYear(year, month, day - 1);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),
/* 811 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return format; });
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(765);
/* harmony import */ var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(812);
/* harmony import */ var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(822);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(736);
/* harmony import */ var _lib_format_formatters_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(823);
/* harmony import */ var _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(835);
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(752);
/* harmony import */ var _lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(836);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(737);









 // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps

var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          | a..aaa  | AM, PM                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 0001, ..., 999               |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 05/29/1453                        | 7     |
 * |                                 | PP      | May 29, 1453                      | 7     |
 * |                                 | PPP     | May 29th, 1453                    | 7     |
 * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
 * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The second argument is now required for the sake of explicitness.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   format(new Date(2016, 0, 1))
 *
 *   // v2.0.0 onward
 *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
 *   ```
 *
 * - New format string API for `format` function
 *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
 *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
 *
 * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://git.io/fxCyr
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://git.io/fxCyr
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */

function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var options = dirtyOptions || {};
  var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  if (!locale.localize) {
    throw new RangeError('locale must contain localize property');
  }

  if (!locale.formatLong) {
    throw new RangeError('locale must contain formatLong property');
  }

  var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyDate);

  if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(originalDate)) {
    throw new RangeError('Invalid time value');
  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


  var timezoneOffset = Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(originalDate);
  var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];

    if (firstCharacter === 'p' || firstCharacter === 'P') {
      var longFormatter = _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_5__["default"][firstCharacter];
      return longFormatter(substring, locale.formatLong, formatterOptions);
    }

    return substring;
  }).join('').match(formattingTokensRegExp).map(function (substring) {
    // Replace two single quote characters with one single quote character
    if (substring === "''") {
      return "'";
    }

    var firstCharacter = substring[0];

    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }

    var formatter = _lib_format_formatters_index_js__WEBPACK_IMPORTED_MODULE_4__["default"][firstCharacter];

    if (formatter) {
      if (!options.useAdditionalWeekYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["isProtectedWeekYearToken"])(substring)) {
        Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["throwProtectedError"])(substring, dirtyFormatStr, dirtyDate);
      }

      if (!options.useAdditionalDayOfYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["isProtectedDayOfYearToken"])(substring)) {
        Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["throwProtectedError"])(substring, dirtyFormatStr, dirtyDate);
      }

      return formatter(utcDate, substring, locale.localize, formatterOptions);
    }

    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
    }

    return substring;
  }).join('');
  return result;
}

function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

/***/ }),
/* 812 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(813);
/* harmony import */ var _lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(814);
/* harmony import */ var _lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(816);
/* harmony import */ var _lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(817);
/* harmony import */ var _lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(819);





/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */

var locale = {
  code: 'en-US',
  formatDistance: _lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  formatLong: _lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  formatRelative: _lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  localize: _lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  match: _lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  options: {
    weekStartsOn: 0
    /* Sunday */
    ,
    firstWeekContainsDate: 1
  }
};
/* harmony default export */ __webpack_exports__["default"] = (locale);

/***/ }),
/* 813 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatDistance; });
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXWeeks: {
    one: 'about 1 week',
    other: 'about {{count}} weeks'
  },
  xWeeks: {
    one: '1 week',
    other: '{{count}} weeks'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};
function formatDistance(token, count, options) {
  options = options || {};
  var result;

  if (typeof formatDistanceLocale[token] === 'string') {
    result = formatDistanceLocale[token];
  } else if (count === 1) {
    result = formatDistanceLocale[token].one;
  } else {
    result = formatDistanceLocale[token].other.replace('{{count}}', count);
  }

  if (options.addSuffix) {
    if (options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }

  return result;
}

/***/ }),
/* 814 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(815);

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: Object(_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: Object(_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: Object(_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};
/* harmony default export */ __webpack_exports__["default"] = (formatLong);

/***/ }),
/* 815 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return buildFormatLongFn; });
function buildFormatLongFn(args) {
  return function (dirtyOptions) {
    var options = dirtyOptions || {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

/***/ }),
/* 816 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatRelative; });
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};
function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
}

/***/ }),
/* 817 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(818);

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.
  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
  // Generally, formatted dates should look like they are in the middle of a sentence,
  // e.g. in Spanish language the weekdays and months should be in the lowercase.

};
var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};

function ordinalNumber(dirtyNumber, _dirtyOptions) {
  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`:
  //
  //   var options = dirtyOptions || {}
  //   var unit = String(options.unit)
  //
  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'

  var rem100 = number % 100;

  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';

      case 2:
        return number + 'nd';

      case 3:
        return number + 'rd';
    }
  }

  return number + 'th';
}

var localize = {
  ordinalNumber: ordinalNumber,
  era: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function (quarter) {
      return Number(quarter) - 1;
    }
  }),
  month: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};
/* harmony default export */ __webpack_exports__["default"] = (localize);

/***/ }),
/* 818 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return buildLocalizeFn; });
function buildLocalizeFn(args) {
  return function (dirtyIndex, dirtyOptions) {
    var options = dirtyOptions || {};
    var context = options.context ? String(options.context) : 'standalone';
    var valuesArray;

    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;

      var _width = options.width ? String(options.width) : args.defaultWidth;

      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }

    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}

/***/ }),
/* 819 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(820);
/* harmony import */ var _lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(821);


var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: Object(_lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    }
  }),
  era: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function (index) {
      return index + 1;
    }
  }),
  month: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};
/* harmony default export */ __webpack_exports__["default"] = (match);

/***/ }),
/* 820 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return buildMatchPatternFn; });
function buildMatchPatternFn(args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};
    var matchResult = string.match(args.matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);

    if (!parseResult) {
      return null;
    }

    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    return {
      value: value,
      rest: string.slice(matchedString.length)
    };
  };
}

/***/ }),
/* 821 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return buildMatchFn; });
function buildMatchFn(args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var value;

    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {
      value = findIndex(parsePatterns, function (pattern) {
        return pattern.test(matchedString);
      });
    } else {
      value = findKey(parsePatterns, function (pattern) {
        return pattern.test(matchedString);
      });
    }

    value = args.valueCallback ? args.valueCallback(value) : value;
    value = options.valueCallback ? options.valueCallback(value) : value;
    return {
      value: value,
      rest: string.slice(matchedString.length)
    };
  };
}

function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
}

function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
}

/***/ }),
/* 822 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subMilliseconds; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(744);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */

function subMilliseconds(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 823 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(824);
/* harmony import */ var _lib_getUTCDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(826);
/* harmony import */ var _lib_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(827);
/* harmony import */ var _lib_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(830);
/* harmony import */ var _lib_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(831);
/* harmony import */ var _lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(834);
/* harmony import */ var _addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(825);







var dayPeriodEnum = {
  am: 'am',
  pm: 'pm',
  midnight: 'midnight',
  noon: 'noon',
  morning: 'morning',
  afternoon: 'afternoon',
  evening: 'evening',
  night: 'night'
  /*
   * |     | Unit                           |     | Unit                           |
   * |-----|--------------------------------|-----|--------------------------------|
   * |  a  | AM, PM                         |  A* | Milliseconds in day            |
   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
   * |  d  | Day of month                   |  D  | Day of year                    |
   * |  e  | Local day of week              |  E  | Day of week                    |
   * |  f  |                                |  F* | Day of week in month           |
   * |  g* | Modified Julian day            |  G  | Era                            |
   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
   * |  i! | ISO day of week                |  I! | ISO week of year               |
   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
   * |  l* | (deprecated)                   |  L  | Stand-alone month              |
   * |  m  | Minute                         |  M  | Month                          |
   * |  n  |                                |  N  |                                |
   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
   * |  p! | Long localized time            |  P! | Long localized date            |
   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
   * |  s  | Second                         |  S  | Fraction of second             |
   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
   * |  u  | Extended year                  |  U* | Cyclic year                    |
   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
   * |  w  | Local week of year             |  W* | Week of month                  |
   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
   *
   * Letters marked by * are not implemented but reserved by Unicode standard.
   *
   * Letters marked by ! are non-standard, but implemented by date-fns:
   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
   *   i.e. 7 for Sunday, 1 for Monday, etc.
   * - `I` is ISO week of year, as opposed to `w` which is local week of year.
   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
   *   `R` is supposed to be used in conjunction with `I` and `i`
   *   for universal ISO week-numbering date, whereas
   *   `Y` is supposed to be used in conjunction with `w` and `e`
   *   for week-numbering date specific to the locale.
   * - `P` is long localized date format
   * - `p` is long localized time format
   */

};
var formatters = {
  // Era
  G: function (date, token, localize) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;

    switch (token) {
      // AD, BC
      case 'G':
      case 'GG':
      case 'GGG':
        return localize.era(era, {
          width: 'abbreviated'
        });
      // A, B

      case 'GGGGG':
        return localize.era(era, {
          width: 'narrow'
        });
      // Anno Domini, Before Christ

      case 'GGGG':
      default:
        return localize.era(era, {
          width: 'wide'
        });
    }
  },
  // Year
  y: function (date, token, localize) {
    // Ordinal number
    if (token === 'yo') {
      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, {
        unit: 'year'
      });
    }

    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].y(date, token);
  },
  // Local week-numbering year
  Y: function (date, token, localize, options) {
    var signedWeekYear = Object(_lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

    if (token === 'YY') {
      var twoDigitYear = weekYear % 100;
      return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(twoDigitYear, 2);
    } // Ordinal number


    if (token === 'Yo') {
      return localize.ordinalNumber(weekYear, {
        unit: 'year'
      });
    } // Padding


    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function (date, token) {
    var isoWeekYear = Object(_lib_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date); // Padding

    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function (date, token) {
    var year = date.getUTCFullYear();
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(year, token.length);
  },
  // Quarter
  Q: function (date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

    switch (token) {
      // 1, 2, 3, 4
      case 'Q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'QQ':
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'Qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'QQQ':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'QQQQQ':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'formatting'
        });
      // 1st quarter, 2nd quarter, ...

      case 'QQQQ':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone quarter
  q: function (date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

    switch (token) {
      // 1, 2, 3, 4
      case 'q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'qq':
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'qqq':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'qqqqq':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'standalone'
        });
      // 1st quarter, 2nd quarter, ...

      case 'qqqq':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Month
  M: function (date, token, localize) {
    var month = date.getUTCMonth();

    switch (token) {
      case 'M':
      case 'MM':
        return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].M(date, token);
      // 1st, 2nd, ..., 12th

      case 'Mo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'MMM':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // J, F, ..., D

      case 'MMMMM':
        return localize.month(month, {
          width: 'narrow',
          context: 'formatting'
        });
      // January, February, ..., December

      case 'MMMM':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone month
  L: function (date, token, localize) {
    var month = date.getUTCMonth();

    switch (token) {
      // 1, 2, ..., 12
      case 'L':
        return String(month + 1);
      // 01, 02, ..., 12

      case 'LL':
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(month + 1, 2);
      // 1st, 2nd, ..., 12th

      case 'Lo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'LLL':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // J, F, ..., D

      case 'LLLLL':
        return localize.month(month, {
          width: 'narrow',
          context: 'standalone'
        });
      // January, February, ..., December

      case 'LLLL':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Local week of year
  w: function (date, token, localize, options) {
    var week = Object(_lib_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(date, options);

    if (token === 'wo') {
      return localize.ordinalNumber(week, {
        unit: 'week'
      });
    }

    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(week, token.length);
  },
  // ISO week of year
  I: function (date, token, localize) {
    var isoWeek = Object(_lib_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date);

    if (token === 'Io') {
      return localize.ordinalNumber(isoWeek, {
        unit: 'week'
      });
    }

    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(isoWeek, token.length);
  },
  // Day of the month
  d: function (date, token, localize) {
    if (token === 'do') {
      return localize.ordinalNumber(date.getUTCDate(), {
        unit: 'date'
      });
    }

    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].d(date, token);
  },
  // Day of year
  D: function (date, token, localize) {
    var dayOfYear = Object(_lib_getUTCDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date);

    if (token === 'Do') {
      return localize.ordinalNumber(dayOfYear, {
        unit: 'dayOfYear'
      });
    }

    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(dayOfYear, token.length);
  },
  // Day of week
  E: function (date, token, localize) {
    var dayOfWeek = date.getUTCDay();

    switch (token) {
      // Tue
      case 'E':
      case 'EE':
      case 'EEE':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'EEEEE':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'EEEEEE':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'EEEE':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Local day of week
  e: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case 'e':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'ee':
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th

      case 'eo':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });

      case 'eee':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'eeeee':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'eeeeee':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'eeee':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone local day of week
  c: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

    switch (token) {
      // Numerical value (same as in `e`)
      case 'c':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'cc':
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th

      case 'co':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });

      case 'ccc':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // T

      case 'ccccc':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'standalone'
        });
      // Tu

      case 'cccccc':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'standalone'
        });
      // Tuesday

      case 'cccc':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // ISO day of week
  i: function (date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;

    switch (token) {
      // 2
      case 'i':
        return String(isoDayOfWeek);
      // 02

      case 'ii':
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(isoDayOfWeek, token.length);
      // 2nd

      case 'io':
        return localize.ordinalNumber(isoDayOfWeek, {
          unit: 'day'
        });
      // Tue

      case 'iii':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'iiiii':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'iiiiii':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'iiii':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM or PM
  a: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';

    switch (token) {
      case 'a':
      case 'aa':
      case 'aaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'aaaaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'aaaa':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM, PM, midnight, noon
  b: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;

    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    }

    switch (token) {
      case 'b':
      case 'bb':
      case 'bbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'bbbbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'bbbb':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;

    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }

    switch (token) {
      case 'B':
      case 'BB':
      case 'BBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'BBBBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'BBBB':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Hour [1-12]
  h: function (date, token, localize) {
    if (token === 'ho') {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].h(date, token);
  },
  // Hour [0-23]
  H: function (date, token, localize) {
    if (token === 'Ho') {
      return localize.ordinalNumber(date.getUTCHours(), {
        unit: 'hour'
      });
    }

    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].H(date, token);
  },
  // Hour [0-11]
  K: function (date, token, localize) {
    var hours = date.getUTCHours() % 12;

    if (token === 'Ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(hours, token.length);
  },
  // Hour [1-24]
  k: function (date, token, localize) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;

    if (token === 'ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(hours, token.length);
  },
  // Minute
  m: function (date, token, localize) {
    if (token === 'mo') {
      return localize.ordinalNumber(date.getUTCMinutes(), {
        unit: 'minute'
      });
    }

    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].m(date, token);
  },
  // Second
  s: function (date, token, localize) {
    if (token === 'so') {
      return localize.ordinalNumber(date.getUTCSeconds(), {
        unit: 'second'
      });
    }

    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].s(date, token);
  },
  // Fraction of second
  S: function (date, token) {
    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    if (timezoneOffset === 0) {
      return 'Z';
    }

    switch (token) {
      // Hours and optional minutes
      case 'X':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`

      case 'XXXX':
      case 'XX':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`

      case 'XXXXX':
      case 'XXX': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Hours and optional minutes
      case 'x':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`

      case 'xxxx':
      case 'xx':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`

      case 'xxxxx':
      case 'xxx': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (GMT)
  O: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'O':
      case 'OO':
      case 'OOO':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'OOOO':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (specific non-location)
  z: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'z':
      case 'zz':
      case 'zzz':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'zzzz':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Seconds timestamp
  t: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1000);
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(timestamp, token.length);
  }
};

function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;

  if (minutes === 0) {
    return sign + String(hours);
  }

  var delimiter = dirtyDelimiter || '';
  return sign + String(hours) + delimiter + Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(minutes, 2);
}

function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? '-' : '+';
    return sign + Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Math.abs(offset) / 60, 2);
  }

  return formatTimezone(offset, dirtyDelimiter);
}

function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || '';
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Math.floor(absOffset / 60), 2);
  var minutes = Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}

/* harmony default export */ __webpack_exports__["default"] = (formatters);

/***/ }),
/* 824 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(825);

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */

var formatters = {
  // Year
  y: function (date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(token === 'yy' ? year % 100 : year, token.length);
  },
  // Month
  M: function (date, token) {
    var month = date.getUTCMonth();
    return token === 'M' ? String(month + 1) : Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(month + 1, 2);
  },
  // Day of the month
  d: function (date, token) {
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function (date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';

    switch (token) {
      case 'a':
      case 'aa':
      case 'aaa':
        return dayPeriodEnumValue.toUpperCase();

      case 'aaaaa':
        return dayPeriodEnumValue[0];

      case 'aaaa':
      default:
        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
    }
  },
  // Hour [1-12]
  h: function (date, token) {
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function (date, token) {
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCHours(), token.length);
  },
  // Minute
  m: function (date, token) {
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function (date, token) {
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function (date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(fractionalSeconds, token.length);
  }
};
/* harmony default export */ __webpack_exports__["default"] = (formatters);

/***/ }),
/* 825 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addLeadingZeros; });
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? '-' : '';
  var output = Math.abs(number).toString();

  while (output.length < targetLength) {
    output = '0' + output;
  }

  return sign + output;
}

/***/ }),
/* 826 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getUTCDayOfYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


var MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCDayOfYear(dirtyDate) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}

/***/ }),
/* 827 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getUTCISOWeek; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(828);
/* harmony import */ var _startOfUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(829);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCISOWeek(dirtyDate) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var diff = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date).getTime() - Object(_startOfUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),
/* 828 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfUTCISOWeek; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);

 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCISOWeek(dirtyDate) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var weekStartsOn = 1;
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 829 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfUTCISOWeekYear; });
/* harmony import */ var _getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(830);
/* harmony import */ var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(828);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);


 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCISOWeekYear(dirtyDate) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var year = Object(_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuary);
  return date;
}

/***/ }),
/* 830 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getUTCISOWeekYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(828);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);


 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCISOWeekYear(dirtyDate) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfThisYear);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),
/* 831 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getUTCWeek; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(832);
/* harmony import */ var _startOfUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(833);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCWeek(dirtyDate, options) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var diff = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, options).getTime() - Object(_startOfUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, options).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),
/* 832 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfUTCWeek; });
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);


 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCWeek(dirtyDate, dirtyOptions) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 833 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfUTCWeekYear; });
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(834);
/* harmony import */ var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(832);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);



 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.firstWeekContainsDate);
  var year = Object(_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, dirtyOptions);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(firstWeek, dirtyOptions);
  return date;
}

/***/ }),
/* 834 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getUTCWeekYear; });
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(832);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);



 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCWeekYear(dirtyDate, dirtyOptions) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, dirtyOptions);
  var year = date.getUTCFullYear();
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(firstWeekOfNextYear, dirtyOptions);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(firstWeekOfThisYear, dirtyOptions);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),
/* 835 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function dateLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'P':
      return formatLong.date({
        width: 'short'
      });

    case 'PP':
      return formatLong.date({
        width: 'medium'
      });

    case 'PPP':
      return formatLong.date({
        width: 'long'
      });

    case 'PPPP':
    default:
      return formatLong.date({
        width: 'full'
      });
  }
}

function timeLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'p':
      return formatLong.time({
        width: 'short'
      });

    case 'pp':
      return formatLong.time({
        width: 'medium'
      });

    case 'ppp':
      return formatLong.time({
        width: 'long'
      });

    case 'pppp':
    default:
      return formatLong.time({
        width: 'full'
      });
  }
}

function dateTimeLongFormatter(pattern, formatLong) {
  var matchResult = pattern.match(/(P+)(p+)?/);
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];

  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong);
  }

  var dateTimeFormat;

  switch (datePattern) {
    case 'P':
      dateTimeFormat = formatLong.dateTime({
        width: 'short'
      });
      break;

    case 'PP':
      dateTimeFormat = formatLong.dateTime({
        width: 'medium'
      });
      break;

    case 'PPP':
      dateTimeFormat = formatLong.dateTime({
        width: 'long'
      });
      break;

    case 'PPPP':
    default:
      dateTimeFormat = formatLong.dateTime({
        width: 'full'
      });
      break;
  }

  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
}

var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
/* harmony default export */ __webpack_exports__["default"] = (longFormatters);

/***/ }),
/* 836 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isProtectedDayOfYearToken", function() { return isProtectedDayOfYearToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isProtectedWeekYearToken", function() { return isProtectedWeekYearToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwProtectedError", function() { return throwProtectedError; });
var protectedDayOfYearTokens = ['D', 'DD'];
var protectedWeekYearTokens = ['YY', 'YYYY'];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format, input) {
  if (token === 'YYYY') {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  } else if (token === 'YY') {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  } else if (token === 'D') {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  } else if (token === 'DD') {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
  }
}

/***/ }),
/* 837 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatDistance; });
/* harmony import */ var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(762);
/* harmony import */ var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(780);
/* harmony import */ var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(782);
/* harmony import */ var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(812);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(736);
/* harmony import */ var _lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(838);
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(752);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(737);








var MINUTES_IN_DAY = 1440;
var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
var MINUTES_IN_MONTH = 43200;
var MINUTES_IN_TWO_MONTHS = 86400;
/**
 * @name formatDistance
 * @category Common Helpers
 * @summary Return the distance between the given dates in words.
 *
 * @description
 * Return the distance between the given dates in words.
 *
 * | Distance between dates                                            | Result              |
 * |-------------------------------------------------------------------|---------------------|
 * | 0 ... 30 secs                                                     | less than a minute  |
 * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
 * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
 * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
 * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
 * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
 * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
 * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
 * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
 * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
 * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
 * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
 * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
 * | N yrs ... N yrs 3 months                                          | about N years       |
 * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
 * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
 *
 * With `options.includeSeconds == true`:
 * | Distance between dates | Result               |
 * |------------------------|----------------------|
 * | 0 secs ... 5 secs      | less than 5 seconds  |
 * | 5 secs ... 10 secs     | less than 10 seconds |
 * | 10 secs ... 20 secs    | less than 20 seconds |
 * | 20 secs ... 40 secs    | half a minute        |
 * | 40 secs ... 60 secs    | less than a minute   |
 * | 60 secs ... 90 secs    | 1 minute             |
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `distanceInWords ` to `formatDistance`
 *   to make its name consistent with `format` and `formatRelative`.
 *
 * - The order of arguments is swapped to make the function
 *   consistent with `differenceIn...` functions.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   distanceInWords(
 *     new Date(1986, 3, 4, 10, 32, 0),
 *     new Date(1986, 3, 4, 11, 32, 0),
 *     { addSuffix: true }
 *   ) //=> 'in about 1 hour'
 *
 *   // v2.0.0 onward
 *
 *   formatDistance(
 *     new Date(1986, 3, 4, 11, 32, 0),
 *     new Date(1986, 3, 4, 10, 32, 0),
 *     { addSuffix: true }
 *   ) //=> 'in about 1 hour'
 *   ```
 *
 * @param {Date|Number} date - the date
 * @param {Date|Number} baseDate - the date to compare with
 * @param {Object} [options] - an object with options.
 * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
 * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @returns {String} the distance in words
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `baseDate` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `formatDistance` property
 *
 * @example
 * // What is the distance between 2 July 2014 and 1 January 2015?
 * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))
 * //=> '6 months'
 *
 * @example
 * // What is the distance between 1 January 2015 00:00:15
 * // and 1 January 2015 00:00:00, including seconds?
 * var result = formatDistance(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   new Date(2015, 0, 1, 0, 0, 0),
 *   { includeSeconds: true }
 * )
 * //=> 'less than 20 seconds'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, with a suffix?
 * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {
 *   addSuffix: true
 * })
 * //=> 'about 1 year ago'
 *
 * @example
 * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
 * import { eoLocale } from 'date-fns/locale/eo'
 * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {
 *   locale: eoLocale
 * })
 * //=> 'pli ol 1 jaro'
 */

function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(2, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_3__["default"];

  if (!locale.formatDistance) {
    throw new RangeError('locale must contain formatDistance property');
  }

  var comparison = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, dirtyBaseDate);

  if (isNaN(comparison)) {
    throw new RangeError('Invalid time value');
  }

  var localizeOptions = Object(_lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(options);
  localizeOptions.addSuffix = Boolean(options.addSuffix);
  localizeOptions.comparison = comparison;
  var dateLeft;
  var dateRight;

  if (comparison > 0) {
    dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyBaseDate);
    dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
  } else {
    dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
    dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyBaseDate);
  }

  var seconds = Object(_differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateRight, dateLeft);
  var offsetInSeconds = (Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(dateRight) - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(dateLeft)) / 1000;
  var minutes = Math.round((seconds - offsetInSeconds) / 60);
  var months; // 0 up to 2 mins

  if (minutes < 2) {
    if (options.includeSeconds) {
      if (seconds < 5) {
        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);
      } else if (seconds < 10) {
        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);
      } else if (seconds < 20) {
        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);
      } else if (seconds < 40) {
        return locale.formatDistance('halfAMinute', null, localizeOptions);
      } else if (seconds < 60) {
        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
      } else {
        return locale.formatDistance('xMinutes', 1, localizeOptions);
      }
    } else {
      if (minutes === 0) {
        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
      } else {
        return locale.formatDistance('xMinutes', minutes, localizeOptions);
      }
    } // 2 mins up to 0.75 hrs

  } else if (minutes < 45) {
    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs
  } else if (minutes < 90) {
    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs
  } else if (minutes < MINUTES_IN_DAY) {
    var hours = Math.round(minutes / 60);
    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days
  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days
  } else if (minutes < MINUTES_IN_MONTH) {
    var days = Math.round(minutes / MINUTES_IN_DAY);
    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months
  } else if (minutes < MINUTES_IN_TWO_MONTHS) {
    months = Math.round(minutes / MINUTES_IN_MONTH);
    return locale.formatDistance('aboutXMonths', months, localizeOptions);
  }

  months = Object(_differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateRight, dateLeft); // 2 months up to 12 months

  if (months < 12) {
    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date
  } else {
    var monthsSinceStartOfYear = months % 12;
    var years = Math.floor(months / 12); // N years up to 1 years 3 months

    if (monthsSinceStartOfYear < 3) {
      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months
    } else if (monthsSinceStartOfYear < 9) {
      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months
    } else {
      return locale.formatDistance('almostXYears', years + 1, localizeOptions);
    }
  }
}

/***/ }),
/* 838 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cloneObject; });
/* harmony import */ var _assign_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(839);

function cloneObject(dirtyObject) {
  return Object(_assign_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({}, dirtyObject);
}

/***/ }),
/* 839 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return assign; });
function assign(target, dirtyObject) {
  if (target == null) {
    throw new TypeError('assign requires that input parameter not be null or undefined');
  }

  dirtyObject = dirtyObject || {};

  for (var property in dirtyObject) {
    if (dirtyObject.hasOwnProperty(property)) {
      target[property] = dirtyObject[property];
    }
  }

  return target;
}

/***/ }),
/* 840 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatDistanceStrict; });
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(752);
/* harmony import */ var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(762);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(736);
/* harmony import */ var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(782);
/* harmony import */ var _lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(838);
/* harmony import */ var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(812);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(737);







var MINUTES_IN_DAY = 1440;
var MINUTES_IN_MONTH = 43200;
var MINUTES_IN_YEAR = 525600;
/**
 * @name formatDistanceStrict
 * @category Common Helpers
 * @summary Return the distance between the given dates in words.
 *
 * @description
 * Return the distance between the given dates in words, using strict units.
 * This is like `formatDistance`, but does not use helpers like 'almost', 'over',
 * 'less than' and the like.
 *
 * | Distance between dates | Result              |
 * |------------------------|---------------------|
 * | 0 ... 59 secs          | [0..59] seconds     |
 * | 1 ... 59 mins          | [1..59] minutes     |
 * | 1 ... 23 hrs           | [1..23] hours       |
 * | 1 ... 29 days          | [1..29] days        |
 * | 1 ... 11 months        | [1..11] months      |
 * | 1 ... N years          | [1..N]  years       |
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`
 *   to make its name consistent with `format` and `formatRelative`.
 *
 * - The order of arguments is swapped to make the function
 *   consistent with `differenceIn...` functions.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   distanceInWordsStrict(
 *     new Date(2015, 0, 2),
 *     new Date(2014, 6, 2)
 *   ) //=> '6 months'
 *
 *   // v2.0.0 onward
 *
 *   formatDistanceStrict(
 *     new Date(2014, 6, 2),
 *     new Date(2015, 0, 2)
 *   ) //=> '6 months'
 *   ```
 *
 * - `partialMethod` option is renamed to `roundingMethod`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   distanceInWordsStrict(
 *     new Date(1986, 3, 4, 10, 32, 0),
 *     new Date(1986, 3, 4, 10, 33, 1),
 *     { partialMethod: 'ceil' }
 *   ) //=> '2 minutes'
 *
 *   // v2.0.0 onward
 *
 *   formatDistanceStrict(
 *     new Date(1986, 3, 4, 10, 33, 1),
 *     new Date(1986, 3, 4, 10, 32, 0),
 *     { roundingMethod: 'ceil' }
 *   ) //=> '2 minutes'
 *   ```
 *
 * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.
 *
 * - `unit` option now accepts one of the strings:
 *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   distanceInWordsStrict(
 *     new Date(1986, 3, 4, 10, 32, 0),
 *     new Date(1986, 3, 4, 10, 33, 1),
 *     { unit: 'm' }
 *   )
 *
 *   // v2.0.0 onward
 *
 *   formatDistanceStrict(
 *     new Date(1986, 3, 4, 10, 33, 1),
 *     new Date(1986, 3, 4, 10, 32, 0),
 *     { unit: 'minute' }
 *   )
 *   ```
 *
 * @param {Date|Number} date - the date
 * @param {Date|Number} baseDate - the date to compare with
 * @param {Object} [options] - an object with options.
 * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
 * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit
 * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @returns {String} the distance in words
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `baseDate` must not be Invalid Date
 * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'
 * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'
 * @throws {RangeError} `options.locale` must contain `formatDistance` property
 *
 * @example
 * // What is the distance between 2 July 2014 and 1 January 2015?
 * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))
 * //=> '6 months'
 *
 * @example
 * // What is the distance between 1 January 2015 00:00:15
 * // and 1 January 2015 00:00:00?
 * var result = formatDistanceStrict(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   new Date(2015, 0, 1, 0, 0, 0)
 * )
 * //=> '15 seconds'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, with a suffix?
 * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {
 *   addSuffix: true
 * })
 * //=> '1 year ago'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, in minutes?
 * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {
 *   unit: 'minute'
 * })
 * //=> '525600 minutes'
 *
 * @example
 * // What is the distance from 1 January 2015
 * // to 28 January 2015, in months, rounded up?
 * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {
 *   unit: 'month',
 *   roundingMethod: 'ceil'
 * })
 * //=> '1 month'
 *
 * @example
 * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
 * import { eoLocale } from 'date-fns/locale/eo'
 * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {
 *   locale: eoLocale
 * })
 * //=> '1 jaro'
 */

function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(2, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_5__["default"];

  if (!locale.formatDistance) {
    throw new RangeError('locale must contain localize.formatDistance property');
  }

  var comparison = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, dirtyBaseDate);

  if (isNaN(comparison)) {
    throw new RangeError('Invalid time value');
  }

  var localizeOptions = Object(_lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(options);
  localizeOptions.addSuffix = Boolean(options.addSuffix);
  localizeOptions.comparison = comparison;
  var dateLeft;
  var dateRight;

  if (comparison > 0) {
    dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyBaseDate);
    dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
  } else {
    dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
    dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyBaseDate);
  }

  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);
  var roundingMethodFn;

  if (roundingMethod === 'floor') {
    roundingMethodFn = Math.floor;
  } else if (roundingMethod === 'ceil') {
    roundingMethodFn = Math.ceil;
  } else if (roundingMethod === 'round') {
    roundingMethodFn = Math.round;
  } else {
    throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");
  }

  var seconds = Object(_differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dateRight, dateLeft);
  var offsetInSeconds = (Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateRight) - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft)) / 1000;
  var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);
  var unit;

  if (options.unit == null) {
    if (minutes < 1) {
      unit = 'second';
    } else if (minutes < 60) {
      unit = 'minute';
    } else if (minutes < MINUTES_IN_DAY) {
      unit = 'hour';
    } else if (minutes < MINUTES_IN_MONTH) {
      unit = 'day';
    } else if (minutes < MINUTES_IN_YEAR) {
      unit = 'month';
    } else {
      unit = 'year';
    }
  } else {
    unit = String(options.unit);
  } // 0 up to 60 seconds


  if (unit === 'second') {
    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins
  } else if (unit === 'minute') {
    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours
  } else if (unit === 'hour') {
    var hours = roundingMethodFn(minutes / 60);
    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days
  } else if (unit === 'day') {
    var days = roundingMethodFn(minutes / MINUTES_IN_DAY);
    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months
  } else if (unit === 'month') {
    var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);
    return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date
  } else if (unit === 'year') {
    var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);
    return locale.formatDistance('xYears', years, localizeOptions);
  }

  throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'");
}

/***/ }),
/* 841 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatDistanceToNow; });
/* harmony import */ var _formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(837);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name formatDistanceToNow
 * @category Common Helpers
 * @summary Return the distance between the given date and now in words.
 * @pure false
 *
 * @description
 * Return the distance between the given date and now in words.
 *
 * | Distance to now                                                   | Result              |
 * |-------------------------------------------------------------------|---------------------|
 * | 0 ... 30 secs                                                     | less than a minute  |
 * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
 * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
 * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
 * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
 * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
 * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
 * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
 * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
 * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
 * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
 * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
 * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
 * | N yrs ... N yrs 3 months                                          | about N years       |
 * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
 * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
 *
 * With `options.includeSeconds == true`:
 * | Distance to now     | Result               |
 * |---------------------|----------------------|
 * | 0 secs ... 5 secs   | less than 5 seconds  |
 * | 5 secs ... 10 secs  | less than 10 seconds |
 * | 10 secs ... 20 secs | less than 20 seconds |
 * | 20 secs ... 40 secs | half a minute        |
 * | 40 secs ... 60 secs | less than a minute   |
 * | 60 secs ... 90 secs | 1 minute             |
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`
 *   to make its name consistent with `format` and `formatRelative`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })
 *   //=> 'in 6 months'
 *
 *   // v2.0.0 onward
 *
 *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })
 *   //=> 'in 6 months'
 *   ```
 *
 * @param {Date|Number} date - the given date
 * @param {Object} [options] - the object with options
 * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
 * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @returns {String} the distance in words
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `formatDistance` property
 *
 * @example
 * // If today is 1 January 2015, what is the distance to 2 July 2014?
 * var result = formatDistanceToNow(
 *   new Date(2014, 6, 2)
 * )
 * //=> '6 months'
 *
 * @example
 * // If now is 1 January 2015 00:00:00,
 * // what is the distance to 1 January 2015 00:00:15, including seconds?
 * var result = formatDistanceToNow(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   {includeSeconds: true}
 * )
 * //=> 'less than 20 seconds'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 January 2016, with a suffix?
 * var result = formatDistanceToNow(
 *   new Date(2016, 0, 1),
 *   {addSuffix: true}
 * )
 * //=> 'in about 1 year'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 August 2016 in Esperanto?
 * var eoLocale = require('date-fns/locale/eo')
 * var result = formatDistanceToNow(
 *   new Date(2016, 7, 1),
 *   {locale: eoLocale}
 * )
 * //=> 'pli ol 1 jaro'
 */

function formatDistanceToNow(dirtyDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now(), dirtyOptions);
}

/***/ }),
/* 842 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatDistanceToNowStrict; });
/* harmony import */ var _formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(840);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name formatDistanceToNowStrict
 * @category Common Helpers
 * @summary Return the distance between the given date and now in words.
 * @pure false
 *
 * @description
 * Return the distance between the given dates in words, using strict units.
 * This is like `formatDistance`, but does not use helpers like 'almost', 'over',
 * 'less than' and the like.
 *
 * | Distance between dates | Result              |
 * |------------------------|---------------------|
 * | 0 ... 59 secs          | [0..59] seconds     |
 * | 1 ... 59 mins          | [1..59] minutes     |
 * | 1 ... 23 hrs           | [1..23] hours       |
 * | 1 ... 29 days          | [1..29] days        |
 * | 1 ... 11 months        | [1..11] months      |
 * | 1 ... N years          | [1..N]  years       |
 *
 * @param {Date|Number} date - the given date
 * @param {Object} [options] - an object with options.
 * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
 * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit
 * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @returns {String} the distance in words
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `formatDistance` property
 *
 * @example
 * // If today is 1 January 2015, what is the distance to 2 July 2014?
 * var result = formatDistanceToNowStrict(
 *   new Date(2014, 6, 2)
 * )
 * //=> '6 months'
 *
 * @example
 * // If now is 1 January 2015 00:00:00,
 * // what is the distance to 1 January 2015 00:00:15, including seconds?
 * var result = formatDistanceToNowStrict(
 *   new Date(2015, 0, 1, 0, 0, 15)
 * )
 * //=> '20 seconds'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 January 2016, with a suffix?
 * var result = formatDistanceToNowStrict(
 *   new Date(2016, 0, 1),
 *   {addSuffix: true}
 * )
 * //=> 'in 1 year'
 *
 * @example
 * // If today is 28 January 2015,
 * // what is the distance to 1 January 2015, in months, rounded up??
 * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {
 *   unit: 'month',
 *   roundingMethod: 'ceil'
 * })
 * //=> '1 month'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 August 2016 in Esperanto?
 * var eoLocale = require('date-fns/locale/eo')
 * var result = formatDistanceToNowStrict(
 *   new Date(2016, 7, 1),
 *   {locale: eoLocale}
 * )
 * //=> '1 jaro'
 */

function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now(), dirtyOptions);
}

/***/ }),
/* 843 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatDuration; });
/* harmony import */ var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(812);

var defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];
/**
 * @name formatDuration
 * @category Common Helpers
 * @summary Formats a duration in human-readable format
 *
 * @description
 * Return human-readable duration string i.e. "9 months 2 days"
 *
 * @param {Duration} duration - the duration to format
 * @param {Object} [options] - an object with options.

 * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format
 * @param {boolean} [options.zero=false] - should be zeros be included in the output?
 * @param {string} [options.delimiter=' '] - delimiter string
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @returns {string} the formatted date string
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Format full duration
 * formatDuration({
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,
 *   minutes: 9,
 *   seconds: 30
 * })
 * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds
 *
 * @example
 * // Format partial duration
 * formatDuration({ months: 9, days: 2 })
 * //=> '9 months 2 days'
 *
 * @example
 * // Customize the format
 * formatDuration(
 *   {
 *     years: 2,
 *     months: 9,
 *     weeks: 1,
 *     days: 7,
 *     hours: 5,
 *     minutes: 9,
 *     seconds: 30
 *   },
 *   { format: ['months', 'weeks'] }
 * ) === '9 months 1 week'
 *
 * @example
 * // Customize the zeros presence
 * formatDuration({ years: 0, months: 9 })
 * //=> '9 months'
 * formatDuration({ years: 0, months: 9 }, null, { zero: true })
 * //=> '0 years 9 months'
 *
 * @example
 * // Customize the delimiter
 * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })
 * //=> '2 years, 9 months, 3 weeks'
 */

function formatDuration(duration) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
  }

  var format = options.format || defaultFormat;
  var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__["default"];
  var zero = options.zero || false;
  var delimiter = options.delimiter || ' ';
  var result = format.reduce(function (acc, unit) {
    var token = "x".concat(unit.replace(/(^.)/, function (m) {
      return m.toUpperCase();
    }));
    var addChunk = typeof duration[unit] === 'number' && (zero || duration[unit]);
    return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;
  }, []).join(delimiter);
  return result;
}

/***/ }),
/* 844 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatISO; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(765);
/* harmony import */ var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(825);



/**
 * @name formatISO
 * @category Common Helpers
 * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).
 *
 * @description
 * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.
 * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.
 * @returns {String} the formatted date string
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.format` must be 'extended' or 'basic'
 * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601 format (UTC):
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))
 * //=> '2019-09-18T19:00:52Z'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601, short format (UTC):
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
 * //=> '20190918T190052'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601 format, date only:
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
 * //=> '2019-09-18'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
 * //=> '19:00:52Z'
 */

function formatISO(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
  }

  var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

  if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
    throw new RangeError('Invalid time value');
  }

  var options = dirtyOptions || {};
  var format = options.format == null ? 'extended' : String(options.format);
  var representation = options.representation == null ? 'complete' : String(options.representation);

  if (format !== 'extended' && format !== 'basic') {
    throw new RangeError("format must be 'extended' or 'basic'");
  }

  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {
    throw new RangeError("representation must be 'date', 'time', or 'complete'");
  }

  var result = '';
  var tzOffset = '';
  var dateDelimiter = format === 'extended' ? '-' : '';
  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'

  if (representation !== 'time') {
    var day = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
    var month = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
    var year = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.

    result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
  } // Representation is either 'time' or 'complete'


  if (representation !== 'date') {
    // Add the timezone.
    var offset = originalDate.getTimezoneOffset();

    if (offset !== 0) {
      var absoluteOffset = Math.abs(offset);
      var hourOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Math.floor(absoluteOffset / 60), 2);
      var minuteOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.

      var sign = offset < 0 ? '+' : '-';
      tzOffset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
    } else {
      tzOffset = 'Z';
    }

    var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
    var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
    var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'

    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.

    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.

    result = "".concat(result).concat(separator).concat(time).concat(tzOffset);
  }

  return result;
}

/***/ }),
/* 845 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatISO9075; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(765);
/* harmony import */ var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(825);



/**
 * @name formatISO9075
 * @category Common Helpers
 * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).
 *
 * @description
 * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.
 * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.
 * @returns {String} the formatted date string
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.format` must be 'extended' or 'basic'
 * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'
 *
 * @example
 * // Represent 18 September 2019 in ISO 9075 format:
 * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))
 * //=> '2019-09-18 19:00:52'
 *
 * @example
 * // Represent 18 September 2019 in ISO 9075, short format:
 * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
 * //=> '20190918 190052'
 *
 * @example
 * // Represent 18 September 2019 in ISO 9075 format, date only:
 * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
 * //=> '2019-09-18'
 *
 * @example
 * // Represent 18 September 2019 in ISO 9075 format, time only:
 * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
 * //=> '19:00:52'
 */

function formatISO9075(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
  }

  var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

  if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
    throw new RangeError('Invalid time value');
  }

  var options = dirtyOptions || {};
  var format = options.format == null ? 'extended' : String(options.format);
  var representation = options.representation == null ? 'complete' : String(options.representation);

  if (format !== 'extended' && format !== 'basic') {
    throw new RangeError("format must be 'extended' or 'basic'");
  }

  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {
    throw new RangeError("representation must be 'date', 'time', or 'complete'");
  }

  var result = '';
  var dateDelimiter = format === 'extended' ? '-' : '';
  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'

  if (representation !== 'time') {
    var day = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
    var month = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
    var year = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.

    result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
  } // Representation is either 'time' or 'complete'


  if (representation !== 'date') {
    var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
    var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
    var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space

    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.

    result = "".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);
  }

  return result;
}

/***/ }),
/* 846 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatISODuration; });
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(737);

/**
 * @name formatISODuration
 * @category Common Helpers
 * @summary Format a duration object according as ISO 8601 duration string
 *
 * @description
 * Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)
 *
 * @param {Duration} duration - the duration to format
 *
 * @returns {String} The ISO 8601 duration string
 * @throws {TypeError} Requires 1 argument
 * @throws {Error} Argument must be an object
 *
 * @example
 * // Format the given duration as ISO 8601 string
 * formatISODuration({
 *   years: 39,
 *   months: 2,
 *   days: 20,
 *   hours: 7,
 *   minutes: 5,
 *   seconds: 0
 * })
 * //=> 'P39Y2M20DT0H0M0S'
 */

function formatISODuration(duration) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  if (typeof duration !== 'object') throw new Error('Duration must be an object');
  var _duration$years = duration.years,
      years = _duration$years === void 0 ? 0 : _duration$years,
      _duration$months = duration.months,
      months = _duration$months === void 0 ? 0 : _duration$months,
      _duration$days = duration.days,
      days = _duration$days === void 0 ? 0 : _duration$days,
      _duration$hours = duration.hours,
      hours = _duration$hours === void 0 ? 0 : _duration$hours,
      _duration$minutes = duration.minutes,
      minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,
      _duration$seconds = duration.seconds,
      seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;
  return "P".concat(years, "Y").concat(months, "M").concat(days, "DT").concat(hours, "H").concat(minutes, "M").concat(seconds, "S");
}

/***/ }),
/* 847 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatRFC3339; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(765);
/* harmony import */ var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(825);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(735);




/**
 * @name formatRFC3339
 * @category Common Helpers
 * @summary Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).
 *
 * @description
 * Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds
 * @returns {String} the formatted date string
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.fractionDigits` must be between 0 and 3
 *
 * @example
 * // Represent 18 September 2019 in ISO 3339 format:
 * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))
 * //=> '2019-09-18T19:00:52Z'
 *
 * @example
 * // Represent 18 September 2019 in ISO 3339 format, 2 digits of second fraction:
 * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })
 * //=> '2019-09-18T19:00:52.23Z'
 *
 * @example
 * // Represent 18 September 2019 in ISO 3339 format, 3 digits of second fraction
 * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })
 * //=> '2019-09-18T19:00:52.234Z'
 */

function formatRFC3339(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
  }

  var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

  if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
    throw new RangeError('Invalid time value');
  }

  var options = dirtyOptions || {};
  var fractionDigits = options.fractionDigits == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN

  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {
    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');
  }

  var day = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
  var month = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
  var year = originalDate.getFullYear();
  var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
  var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
  var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2);
  var fractionalSecond = '';

  if (fractionDigits > 0) {
    var milliseconds = originalDate.getMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));
    fractionalSecond = '.' + Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fractionalSeconds, fractionDigits);
  }

  var offset = '';
  var tzOffset = originalDate.getTimezoneOffset();

  if (tzOffset !== 0) {
    var absoluteOffset = Math.abs(tzOffset);
    var hourOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(absoluteOffset / 60), 2);
    var minuteOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.

    var sign = tzOffset < 0 ? '+' : '-';
    offset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
  } else {
    offset = 'Z';
  }

  return "".concat(year, "-").concat(month, "-").concat(day, "T").concat(hour, ":").concat(minute, ":").concat(second).concat(fractionalSecond).concat(offset);
}

/***/ }),
/* 848 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatRFC7231; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(765);
/* harmony import */ var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(825);



var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
/**
 * @name formatRFC7231
 * @category Common Helpers
 * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).
 *
 * @description
 * Return the formatted date string in RFC 7231 format.
 * The result will always be in UTC timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {String} the formatted date string
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `date` must not be Invalid Date
 *
 * @example
 * // Represent 18 September 2019 in RFC 7231 format:
 * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))
 * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'
 */

function formatRFC7231(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
  }

  var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

  if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
    throw new RangeError('Invalid time value');
  }

  var dayName = days[originalDate.getUTCDay()];
  var dayOfMonth = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCDate(), 2);
  var monthName = months[originalDate.getUTCMonth()];
  var year = originalDate.getUTCFullYear();
  var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCHours(), 2);
  var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCMinutes(), 2);
  var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCSeconds(), 2); // Result variables.

  return "".concat(dayName, ", ").concat(dayOfMonth, " ").concat(monthName, " ").concat(year, " ").concat(hour, ":").concat(minute, ":").concat(second, " GMT");
}

/***/ }),
/* 849 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatRelative; });
/* harmony import */ var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(751);
/* harmony import */ var _format_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(811);
/* harmony import */ var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(812);
/* harmony import */ var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(822);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(736);
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(752);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(737);







/**
 * @name formatRelative
 * @category Common Helpers
 * @summary Represent the date in words relative to the given base date.
 *
 * @description
 * Represent the date in words relative to the given base date.
 *
 * | Distance to the base date | Result                    |
 * |---------------------------|---------------------------|
 * | Previous 6 days           | last Sunday at 04:30 AM   |
 * | Last day                  | yesterday at 04:30 AM     |
 * | Same day                  | today at 04:30 AM         |
 * | Next day                  | tomorrow at 04:30 AM      |
 * | Next 6 days               | Sunday at 04:30 AM        |
 * | Other                     | 12/31/2017                |
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to format
 * @param {Date|Number} baseDate - the date to compare with
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {String} the date in words
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `baseDate` must not be Invalid Date
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.locale` must contain `formatRelative` property
 */

function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
  var baseDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyBaseDate);
  var options = dirtyOptions || {};
  var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_2__["default"];

  if (!locale.localize) {
    throw new RangeError('locale must contain localize property');
  }

  if (!locale.formatLong) {
    throw new RangeError('locale must contain formatLong property');
  }

  if (!locale.formatRelative) {
    throw new RangeError('locale must contain formatRelative property');
  }

  var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, baseDate);

  if (isNaN(diff)) {
    throw new RangeError('Invalid time value');
  }

  var token;

  if (diff < -6) {
    token = 'other';
  } else if (diff < -1) {
    token = 'lastWeek';
  } else if (diff < 0) {
    token = 'yesterday';
  } else if (diff < 1) {
    token = 'today';
  } else if (diff < 2) {
    token = 'tomorrow';
  } else if (diff < 7) {
    token = 'nextWeek';
  } else {
    token = 'other';
  }

  var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date));
  var utcBaseDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(baseDate, Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(baseDate));
  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);
  return Object(_format_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, formatStr, options);
}

/***/ }),
/* 850 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return fromUnixTime; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name fromUnixTime
 * @category Timestamp Helpers
 * @summary Create a date from a Unix timestamp.
 *
 * @description
 * Create a date from a Unix timestamp.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Number} unixTime - the given Unix timestamp
 * @returns {Date} the date
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Create the date 29 February 2012 11:45:05:
 * var result = fromUnixTime(1330515905)
 * //=> Wed Feb 29 2012 11:45:05
 */

function fromUnixTime(dirtyUnixTime) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var unixTime = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyUnixTime);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(unixTime * 1000);
}

/***/ }),
/* 851 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getDate; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getDate
 * @category Day Helpers
 * @summary Get the day of the month of the given date.
 *
 * @description
 * Get the day of the month of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the day of month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which day of the month is 29 February 2012?
 * var result = getDate(new Date(2012, 1, 29))
 * //=> 29
 */

function getDate(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var dayOfMonth = date.getDate();
  return dayOfMonth;
}

/***/ }),
/* 852 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getDay; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getDay
 * @category Weekday Helpers
 * @summary Get the day of the week of the given date.
 *
 * @description
 * Get the day of the week of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which day of the week is 29 February 2012?
 * var result = getDay(new Date(2012, 1, 29))
 * //=> 3
 */

function getDay(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var day = date.getDay();
  return day;
}

/***/ }),
/* 853 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getDayOfYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(796);
/* harmony import */ var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(751);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name getDayOfYear
 * @category Day Helpers
 * @summary Get the day of the year of the given date.
 *
 * @description
 * Get the day of the year of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the day of year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which day of the year is 2 July 2014?
 * var result = getDayOfYear(new Date(2014, 6, 2))
 * //=> 183
 */

function getDayOfYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, Object(_startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date));
  var dayOfYear = diff + 1;
  return dayOfYear;
}

/***/ }),
/* 854 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getDaysInMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getDaysInMonth
 * @category Month Helpers
 * @summary Get the number of days in a month of the given date.
 *
 * @description
 * Get the number of days in a month of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the number of days in a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // How many days are in February 2000?
 * var result = getDaysInMonth(new Date(2000, 1))
 * //=> 29
 */

function getDaysInMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  var monthIndex = date.getMonth();
  var lastDayOfMonth = new Date(0);
  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth.setHours(0, 0, 0, 0);
  return lastDayOfMonth.getDate();
}

/***/ }),
/* 855 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getDaysInYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(856);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name getDaysInYear
 * @category Year Helpers
 * @summary Get the number of days in a year of the given date.
 *
 * @description
 * Get the number of days in a year of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the number of days in a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // How many days are in 2012?
 * var result = getDaysInYear(new Date(2012, 0, 1))
 * //=> 366
 */

function getDaysInYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

  if (isNaN(date)) {
    return NaN;
  }

  return Object(_isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date) ? 366 : 365;
}

/***/ }),
/* 856 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isLeapYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isLeapYear
 * @category Year Helpers
 * @summary Is the given date in the leap year?
 *
 * @description
 * Is the given date in the leap year?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in the leap year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 1 September 2012 in the leap year?
 * var result = isLeapYear(new Date(2012, 8, 1))
 * //=> true
 */

function isLeapYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}

/***/ }),
/* 857 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getDecade; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getDecade
 * @category Decade Helpers
 * @summary Get the decade of the given date.
 *
 * @description
 * Get the decade of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the year of decade
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which decade belongs 27 November 1942?
 * var result = getDecade(new Date(1942, 10, 27))
 * //=> 1940
 */

function getDecade(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  var decade = Math.floor(year / 10) * 10;
  return decade;
}

/***/ }),
/* 858 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getHours; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getHours
 * @category Hour Helpers
 * @summary Get the hours of the given date.
 *
 * @description
 * Get the hours of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the hours
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the hours of 29 February 2012 11:45:00:
 * var result = getHours(new Date(2012, 1, 29, 11, 45))
 * //=> 11
 */

function getHours(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var hours = date.getHours();
  return hours;
}

/***/ }),
/* 859 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getISODay; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getISODay
 * @category Weekday Helpers
 * @summary Get the day of the ISO week of the given date.
 *
 * @description
 * Get the day of the ISO week of the given date,
 * which is 7 for Sunday, 1 for Monday etc.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the day of ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which day of the ISO week is 26 February 2012?
 * var result = getISODay(new Date(2012, 1, 26))
 * //=> 7
 */

function getISODay(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var day = date.getDay();

  if (day === 0) {
    day = 7;
  }

  return day;
}

/***/ }),
/* 860 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getISOWeek; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(747);
/* harmony import */ var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(750);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




var MILLISECONDS_IN_WEEK = 604800000;
/**
 * @name getISOWeek
 * @category ISO Week Helpers
 * @summary Get the ISO week of the given date.
 *
 * @description
 * Get the ISO week of the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which week of the ISO-week numbering year is 2 January 2005?
 * var result = getISOWeek(new Date(2005, 0, 2))
 * //=> 53
 */

function getISOWeek(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var diff = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date).getTime() - Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),
/* 861 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getISOWeeksInYear; });
/* harmony import */ var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(750);
/* harmony import */ var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(757);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



var MILLISECONDS_IN_WEEK = 604800000;
/**
 * @name getISOWeeksInYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the number of weeks in an ISO week-numbering year of the given date.
 *
 * @description
 * Get the number of weeks in an ISO week-numbering year of the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the number of ISO weeks in a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // How many weeks are in ISO week-numbering year 2015?
 * var result = getISOWeeksInYear(new Date(2015, 1, 11))
 * //=> 53
 */

function getISOWeeksInYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var thisYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var nextYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(thisYear, 60));
  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK);
}

/***/ }),
/* 862 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getMilliseconds; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getMilliseconds
 * @category Millisecond Helpers
 * @summary Get the milliseconds of the given date.
 *
 * @description
 * Get the milliseconds of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the milliseconds
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the milliseconds of 29 February 2012 11:45:05.123:
 * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 123
 */

function getMilliseconds(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var milliseconds = date.getMilliseconds();
  return milliseconds;
}

/***/ }),
/* 863 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getMinutes; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getMinutes
 * @category Minute Helpers
 * @summary Get the minutes of the given date.
 *
 * @description
 * Get the minutes of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the minutes
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the minutes of 29 February 2012 11:45:05:
 * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))
 * //=> 45
 */

function getMinutes(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var minutes = date.getMinutes();
  return minutes;
}

/***/ }),
/* 864 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getMonth
 * @category Month Helpers
 * @summary Get the month of the given date.
 *
 * @description
 * Get the month of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which month is 29 February 2012?
 * var result = getMonth(new Date(2012, 1, 29))
 * //=> 1
 */

function getMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var month = date.getMonth();
  return month;
}

/***/ }),
/* 865 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getOverlappingDaysInIntervals; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


var MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;
/**
 * @name getOverlappingDaysInIntervals
 * @category Interval Helpers
 * @summary Get the number of days that overlap in two time intervals
 *
 * @description
 * Get the number of days that overlap in two time intervals
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.
 *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
 *
 *   ```
 *   2.1.3
 *   time interval
 *   part of the time axis limited by two instants
 *   ```
 *
 *   Also, this function now accepts an object with `start` and `end` properties
 *   instead of two arguments as an interval.
 *   This function now throws `RangeError` if the start of the interval is after its end
 *   or if any date in the interval is `Invalid Date`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   getOverlappingDaysInRanges(
 *     new Date(2014, 0, 10), new Date(2014, 0, 20),
 *     new Date(2014, 0, 17), new Date(2014, 0, 21)
 *   )
 *
 *   // v2.0.0 onward
 *
 *   getOverlappingDaysInIntervals(
 *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
 *   )
 *   ```
 *
 * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}
 * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}
 * @returns {Number} the number of days that overlap in two time intervals
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // For overlapping time intervals adds 1 for each started overlapping day:
 * getOverlappingDaysInIntervals(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
 * )
 * //=> 3
 *
 * @example
 * // For non-overlapping time intervals returns 0:
 * getOverlappingDaysInIntervals(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
 * )
 * //=> 0
 */

function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var intervalLeft = dirtyIntervalLeft || {};
  var intervalRight = dirtyIntervalRight || {};
  var leftStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.start).getTime();
  var leftEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.end).getTime();
  var rightStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.start).getTime();
  var rightEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
    throw new RangeError('Invalid interval');
  }

  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;

  if (!isOverlapping) {
    return 0;
  }

  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;
  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;
  var differenceInMs = overlapEndDate - overlapStartDate;
  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);
}

/***/ }),
/* 866 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getSeconds; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getSeconds
 * @category Second Helpers
 * @summary Get the seconds of the given date.
 *
 * @description
 * Get the seconds of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the seconds
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the seconds of 29 February 2012 11:45:05.123:
 * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 5
 */

function getSeconds(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var seconds = date.getSeconds();
  return seconds;
}

/***/ }),
/* 867 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getTime; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getTime
 * @category Timestamp Helpers
 * @summary Get the milliseconds timestamp of the given date.
 *
 * @description
 * Get the milliseconds timestamp of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the timestamp
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the timestamp of 29 February 2012 11:45:05.123:
 * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 1330515905123
 */

function getTime(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var timestamp = date.getTime();
  return timestamp;
}

/***/ }),
/* 868 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getUnixTime; });
/* harmony import */ var _getTime_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(867);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getUnixTime
 * @category Timestamp Helpers
 * @summary Get the seconds timestamp of the given date.
 *
 * @description
 * Get the seconds timestamp of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the timestamp
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Get the timestamp of 29 February 2012 11:45:05 CET:
 * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))
 * //=> 1330512305
 */

function getUnixTime(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Math.floor(Object(_getTime_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate) / 1000);
}

/***/ }),
/* 869 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getWeek; });
/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(748);
/* harmony import */ var _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(870);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




var MILLISECONDS_IN_WEEK = 604800000;
/**
 * @name getWeek
 * @category Week Helpers
 * @summary Get the local week index of the given date.
 *
 * @description
 * Get the local week index of the given date.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @returns {Number} the week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 *
 * @example
 * // Which week of the local week numbering year is 2 January 2005 with default options?
 * var result = getISOWeek(new Date(2005, 0, 2))
 * //=> 2
 *
 * // Which week of the local week numbering year is 2 January 2005,
 * // if Monday is the first day of the week,
 * // and the first week of the year always contains 4 January?
 * var result = getISOWeek(new Date(2005, 0, 2), {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> 53
 */

function getWeek(dirtyDate, options) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
  var diff = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, options).getTime() - Object(_startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, options).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),
/* 870 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfWeekYear; });
/* harmony import */ var _getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(871);
/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(748);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name startOfWeekYear
 * @category Week-Numbering Year Helpers
 * @summary Return the start of a local week-numbering year for the given date.
 *
 * @description
 * Return the start of a local week-numbering year.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @returns {Date} the start of a week-numbering year
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 *
 * @example
 * // The start of an a week-numbering year for 2 July 2005 with default settings:
 * var result = startOfWeekYear(new Date(2005, 6, 2))
 * //=> Sun Dec 26 2004 00:00:00
 *
 * @example
 * // The start of a week-numbering year for 2 July 2005
 * // if Monday is the first day of week
 * // and 4 January is always in the first week of the year:
 * var result = startOfWeekYear(new Date(2005, 6, 2), {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> Mon Jan 03 2005 00:00:00
 */

function startOfWeekYear(dirtyDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.firstWeekContainsDate);
  var year = Object(_getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, dirtyOptions);
  var firstWeek = new Date(0);
  firstWeek.setFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setHours(0, 0, 0, 0);
  var date = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(firstWeek, dirtyOptions);
  return date;
}

/***/ }),
/* 871 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getWeekYear; });
/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(748);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name getWeekYear
 * @category Week-Numbering Year Helpers
 * @summary Get the local week-numbering year of the given date.
 *
 * @description
 * Get the local week-numbering year of the given date.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @returns {Number} the local week-numbering year
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 *
 * @example
 * // Which week numbering year is 26 December 2004 with the default settings?
 * var result = getWeekYear(new Date(2004, 11, 26))
 * //=> 2005
 *
 * @example
 * // Which week numbering year is 26 December 2004 if week starts on Saturday?
 * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })
 * //=> 2004
 *
 * @example
 * // Which week numbering year is 26 December 2004 if the first week contains 4 January?
 * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })
 * //=> 2004
 */

function getWeekYear(dirtyDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var year = date.getFullYear();
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setHours(0, 0, 0, 0);
  var startOfNextYear = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(firstWeekOfNextYear, dirtyOptions);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setHours(0, 0, 0, 0);
  var startOfThisYear = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(firstWeekOfThisYear, dirtyOptions);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),
/* 872 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getWeekOfMonth; });
/* harmony import */ var _getDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(851);
/* harmony import */ var _getDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(852);
/* harmony import */ var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(793);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(737);





/**
 * @name getWeekOfMonth
 * @category Week Helpers
 * @summary Get the week of the month of the given date.
 *
 * @description
 * Get the week of the month of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Number} the week of month
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // Which week of the month is 9 November 2017?
 * var result = getWeekOfMonth(new Date(2017, 10, 9))
 * //=> 2
 */

function getWeekOfMonth(date, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var currentDayOfMonth = Object(_getDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date);

  if (isNaN(currentDayOfMonth)) {
    return currentDayOfMonth;
  }

  var startWeekDay = Object(_getDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date));
  var lastDayOfFirstWeek = 0;

  if (startWeekDay >= weekStartsOn) {
    lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;
  } else {
    lastDayOfFirstWeek = weekStartsOn - startWeekDay;
  }

  var weekNumber = 1;

  if (currentDayOfMonth > lastDayOfFirstWeek) {
    var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;
    weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);
  }

  return weekNumber;
}

/***/ }),
/* 873 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getWeeksInMonth; });
/* harmony import */ var _differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(772);
/* harmony import */ var _lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(874);
/* harmony import */ var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(793);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name getWeeksInMonth
 * @category Week Helpers
 * @summary Get the number of calendar weeks a month spans.
 *
 * @description
 * Get the number of calendar weeks the month in the given date spans.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Number} the number of calendar weeks
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // How many calendar weeks does February 2015 span?
 * var result = getWeeksInMonth(new Date(2015, 1, 8))
 * //=> 4
 *
 * @example
 * // If the week starts on Monday,
 * // how many calendar weeks does July 2017 span?
 * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })
 * //=> 6
 */

function getWeeksInMonth(date, options) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  return Object(_differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date), Object(_startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date), options) + 1;
}

/***/ }),
/* 874 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lastDayOfMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name lastDayOfMonth
 * @category Month Helpers
 * @summary Return the last day of a month for the given date.
 *
 * @description
 * Return the last day of a month for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the last day of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The last day of a month for 2 September 2014 11:55:00:
 * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 00:00:00
 */

function lastDayOfMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 875 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name getYear
 * @category Year Helpers
 * @summary Get the year of the given date.
 *
 * @description
 * Get the year of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which year is 2 July 2014?
 * var result = getYear(new Date(2014, 6, 2))
 * //=> 2014
 */

function getYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  return year;
}

/***/ }),
/* 876 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return intervalToDuration; });
/* harmony import */ var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(762);
/* harmony import */ var _differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(784);
/* harmony import */ var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(780);
/* harmony import */ var _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(774);
/* harmony import */ var _differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(775);
/* harmony import */ var _differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(779);
/* harmony import */ var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(782);
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(765);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(737);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(736);
/* harmony import */ var _sub_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(877);











/**
 * @name intervalToDuration
 * @category Common Helpers
 * @summary Convert interval to duration
 *
 * @description
 * Convert a interval object to a duration object.
 *
 * @param {Interval} interval - the interval to convert to duration
 *
 * @returns {Duration} The duration Object
 * @throws {TypeError} Requires 2 arguments
 * @throws {RangeError} `start` must not be Invalid Date
 * @throws {RangeError} `end` must not be Invalid Date
 *
 * @example
 * // Get the duration between January 15, 1929 and April 4, 1968.
 * intervalToDuration({
 *   start: new Date(1929, 0, 15, 12, 0, 0),
 *   end: new Date(1968, 3, 4, 19, 5, 0)
 * })
 * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }
 */

function intervalToDuration(_ref) {
  var start = _ref.start,
      end = _ref.end;
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(1, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(start);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(end);

  if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(dateLeft)) {
    throw new RangeError('Start Date is invalid');
  }

  if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(dateRight)) {
    throw new RangeError('End Date is invalid');
  }

  var duration = {
    years: 0,
    months: 0,
    days: 0,
    hours: 0,
    minutes: 0,
    seconds: 0
  };
  var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft, dateRight);
  duration.years = Math.abs(Object(_differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
  var remainingMonths = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(dateLeft, {
    years: sign * duration.years
  });
  duration.months = Math.abs(Object(_differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(remainingMonths, dateRight));
  var remainingDays = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(remainingMonths, {
    months: sign * duration.months
  });
  duration.days = Math.abs(Object(_differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(remainingDays, dateRight));
  var remainingHours = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(remainingDays, {
    days: sign * duration.days
  });
  duration.hours = Math.abs(Object(_differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(remainingHours, dateRight));
  var remainingMinutes = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(remainingHours, {
    hours: sign * duration.hours
  });
  duration.minutes = Math.abs(Object(_differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(remainingMinutes, dateRight));
  var remainingSeconds = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(remainingMinutes, {
    minutes: sign * duration.minutes
  });
  duration.seconds = Math.abs(Object(_differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(remainingSeconds, dateRight));
  return duration;
}

/***/ }),
/* 877 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sub; });
/* harmony import */ var _subDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(878);
/* harmony import */ var _subMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(879);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(735);





/**
 * @name sub
 * @category Common Helpers
 * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
 *
 * @description
 * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted
 *
 * | Key     | Description                        |
 * |---------|------------------------------------|
 * | years   | Amount of years to be subtracted   |
 * | months  | Amount of months to be subtracted  |
 * | weeks   | Amount of weeks to be subtracted   |
 * | days    | Amount of days to be subtracted    |
 * | hours   | Amount of hours to be subtracted   |
 * | minutes | Amount of minutes to be subtracted |
 * | seconds | Amount of seconds to be subtracted |
 *
 * All values default to 0
 *
 * @returns {Date} the new date with the seconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract the following duration from 15 June 2017 15:29:20
 * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,
 *   minutes: 9,
 *   seconds: 30
 * })
 * //=> Mon Sep 1 2014 10:19:50
 */

function sub(dirtyDate, duration) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  if (!duration || typeof duration !== 'object') return new Date(NaN);
  var years = 'years' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.years) : 0;
  var months = 'months' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.months) : 0;
  var weeks = 'weeks' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.weeks) : 0;
  var days = 'days' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.days) : 0;
  var hours = 'hours' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.hours) : 0;
  var minutes = 'minutes' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.minutes) : 0;
  var seconds = 'seconds' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.seconds) : 0; // Subtract years and months

  var dateWithoutMonths = Object(_subMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate), months + years * 12); // Subtract weeks and days

  var dateWithoutDays = Object(_subDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds

  var minutestoSub = minutes + hours * 60;
  var secondstoSub = seconds + minutestoSub * 60;
  var mstoSub = secondstoSub * 1000;
  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);
  return finalDate;
}

/***/ }),
/* 878 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subDays; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(734);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subDays
 * @category Day Helpers
 * @summary Subtract the specified number of days from the given date.
 *
 * @description
 * Subtract the specified number of days from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the days subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 10 days from 1 September 2014:
 * var result = subDays(new Date(2014, 8, 1), 10)
 * //=> Fri Aug 22 2014 00:00:00
 */

function subDays(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 879 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subMonths; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(738);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subMonths
 * @category Month Helpers
 * @summary Subtract the specified number of months from the given date.
 *
 * @description
 * Subtract the specified number of months from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 months from 1 February 2015:
 * var result = subMonths(new Date(2015, 1, 1), 5)
 * //=> Mon Sep 01 2014 00:00:00
 */

function subMonths(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 880 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isAfter; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isAfter
 * @category Common Helpers
 * @summary Is the first date after the second one?
 *
 * @description
 * Is the first date after the second one?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date that should be after the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is after the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 after 11 February 1987?
 * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> true
 */

function isAfter(dirtyDate, dirtyDateToCompare) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);
  return date.getTime() > dateToCompare.getTime();
}

/***/ }),
/* 881 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isBefore; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isBefore
 * @category Common Helpers
 * @summary Is the first date before the second one?
 *
 * @description
 * Is the first date before the second one?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date that should be before the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is before the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 before 11 February 1987?
 * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> false
 */

function isBefore(dirtyDate, dirtyDateToCompare) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);
  return date.getTime() < dateToCompare.getTime();
}

/***/ }),
/* 882 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isDate; });
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(737);

/**
 * @name isDate
 * @category Common Helpers
 * @summary Is the given value a date?
 *
 * @description
 * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {*} value - the value to check
 * @returns {boolean} true if the given value is a date
 * @throws {TypeError} 1 arguments required
 *
 * @example
 * // For a valid date:
 * var result = isDate(new Date())
 * //=> true
 *
 * @example
 * // For an invalid date:
 * var result = isDate(new Date(NaN))
 * //=> true
 *
 * @example
 * // For some value:
 * var result = isDate('2014-02-31')
 * //=> false
 *
 * @example
 * // For an object:
 * var result = isDate({})
 * //=> false
 */

function isDate(value) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';
}

/***/ }),
/* 883 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isEqual; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isEqual
 * @category Common Helpers
 * @summary Are the given dates equal?
 *
 * @description
 * Are the given dates equal?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to compare
 * @param {Date|Number} dateRight - the second date to compare
 * @returns {Boolean} the dates are equal
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
 * var result = isEqual(
 *   new Date(2014, 6, 2, 6, 30, 45, 0),
 *   new Date(2014, 6, 2, 6, 30, 45, 500)
 * )
 * //=> false
 */

function isEqual(dirtyLeftDate, dirtyRightDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyLeftDate);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyRightDate);
  return dateLeft.getTime() === dateRight.getTime();
}

/***/ }),
/* 884 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isExists; });
/**
 * @name isExists
 * @category Common Helpers
 * @summary Is the given date exists?
 *
 * @description
 * Checks if the given arguments convert to an existing date.
 *
 * @param {Number} year of the date to check
 * @param {Number} month of the date to check
 * @param {Number} day of the date to check
 * @returns {Boolean} the date exists
 * @throws {TypeError} 3 arguments required
 *
 * @example
 * // For the valid date:
 * var result = isExists(2018, 0, 31)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * var result = isExists(2018, 1, 31)
 * //=> false
 */
function isExists(year, month, day) {
  if (arguments.length < 3) {
    throw new TypeError('3 argument required, but only ' + arguments.length + ' present');
  }

  var date = new Date(year, month, day);
  return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;
}

/***/ }),
/* 885 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isFirstDayOfMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isFirstDayOfMonth
 * @category Month Helpers
 * @summary Is the given date the first day of a month?
 *
 * @description
 * Is the given date the first day of a month?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is the first day of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 1 September 2014 the first day of a month?
 * var result = isFirstDayOfMonth(new Date(2014, 8, 1))
 * //=> true
 */

function isFirstDayOfMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDate() === 1;
}

/***/ }),
/* 886 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isFriday; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isFriday
 * @category Weekday Helpers
 * @summary Is the given date Friday?
 *
 * @description
 * Is the given date Friday?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is Friday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 26 September 2014 Friday?
 * var result = isFriday(new Date(2014, 8, 26))
 * //=> true
 */

function isFriday(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 5;
}

/***/ }),
/* 887 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isFuture; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isFuture
 * @category Common Helpers
 * @summary Is the given date in the future?
 * @pure false
 *
 * @description
 * Is the given date in the future?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in the future
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 6 October 2014, is 31 December 2014 in the future?
 * var result = isFuture(new Date(2014, 11, 31))
 * //=> true
 */

function isFuture(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getTime() > Date.now();
}

/***/ }),
/* 888 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isLastDayOfMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(799);
/* harmony import */ var _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(794);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name isLastDayOfMonth
 * @category Month Helpers
 * @summary Is the given date the last day of a month?
 *
 * @description
 * Is the given date the last day of a month?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is the last day of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 28 February 2014 the last day of a month?
 * var result = isLastDayOfMonth(new Date(2014, 1, 28))
 * //=> true
 */

function isLastDayOfMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  return Object(_endOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date).getTime() === Object(_endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime();
}

/***/ }),
/* 889 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isMatch; });
/* harmony import */ var _parse_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(890);
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(765);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name isMatch
 * @category Common Helpers
 * @summary validates the date string against given formats
 *
 * @description
 * Return the true if given date is string correct against the given format else
 * will return false.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters in the format string wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the format string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 5 below the table).
 *
 * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
 * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
 *
 * ```javascript
 * isMatch('23 AM', 'HH a')
 * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
 * ```
 *
 * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
 *
 * Accepted format string patterns:
 * | Unit                            |Prior| Pattern | Result examples                   | Notes |
 * |---------------------------------|-----|---------|-----------------------------------|-------|
 * | Era                             | 140 | G..GGG  | AD, BC                            |       |
 * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 |     | GGGGG   | A, B                              |       |
 * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
 * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
 * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
 * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
 * |                                 |     | yyyyy   | ...                               | 2,4   |
 * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
 * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
 * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
 * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
 * |                                 |     | YYYYY   | ...                               | 2,4   |
 * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
 * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
 * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
 * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
 * |                                 |     | RRRRR   | ...                               | 2,4,5 |
 * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
 * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
 * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
 * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
 * |                                 |     | uuuuu   | ...                               | 2,4   |
 * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
 * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
 * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
 * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | qq      | 01, 02, 03, 04                    |       |
 * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
 * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
 * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | MM      | 01, 02, ..., 12                   |       |
 * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | MMMM    | January, February, ..., December  | 2     |
 * |                                 |     | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
 * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | LL      | 01, 02, ..., 12                   |       |
 * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | LLLL    | January, February, ..., December  | 2     |
 * |                                 |     | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
 * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
 * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
 * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
 * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
 * |                                 |     | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
 * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
 * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
 * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 |     | DDDD    | ...                               | 2     |
 * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
 * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
 * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
 * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
 * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |
 * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
 * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
 * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
 * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | ee      | 02, 03, ..., 01                   |       |
 * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | cc      | 02, 03, ..., 01                   |       |
 * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
 * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
 * |                                 |     | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 |     | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
 * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
 * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
 * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
 * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
 * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
 * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | mm      | 00, 01, ..., 59                   |       |
 * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
 * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | ss      | 00, 01, ..., 59                   |       |
 * | Seconds timestamp               |  40 | t       | 512969520                         |       |
 * |                                 |     | tt      | ...                               | 2     |
 * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
 * |                                 |     | SS      | 00, 01, ..., 99                   |       |
 * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
 * |                                 |     | SSSS    | ...                               | 2     |
 * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
 * |                                 |     | TT      | ...                               | 2     |
 * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
 * |                                 |     | XX      | -0800, +0530, Z                   |       |
 * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
 * |                                 |     | xx      | -0800, +0530, +0000               |       |
 * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
 * |                                 |     | PP      | May 29, 1453                      |       |
 * |                                 |     | PPP     | May 29th, 1453                    |       |
 * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
 * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
 * |                                 |     | pp      | 12:00:00 AM                       |       |
 * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
 * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
 * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
 * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular.
 *    In `format` function, they will produce different result:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 *    `isMatch` will try to match both formatting and stand-alone units interchangably.
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table:
 *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number
 *      as wide as the sequence
 *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.
 *      These variations are marked with "2" in the last column of the table.
 *
 * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 4. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
 *
 *    `isMatch('50', 'yy') //=> true`
 *
 *    `isMatch('75', 'yy') //=> true`
 *
 *    while `uu` will use the year as is:
 *
 *    `isMatch('50', 'uu') //=> true`
 *
 *    `isMatch('75', 'uu') //=> true`
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
 *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
 *
 * 5. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
 *    on the given locale.
 *
 *    using `en-US` locale: `P` => `MM/dd/yyyy`
 *    using `en-US` locale: `p` => `hh:mm a`
 *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
 *    using `pt-BR` locale: `p` => `HH:mm`
 *
 * Values will be checked in the descending order of its unit's priority.
 * Units of an equal priority overwrite each other in the order of appearance.
 *
 * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),
 * the values will be taken from today's using `new Date()` date which works as a context of parsing.
 *
 * The result may vary by locale.
 *
 * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
 *
 *
 *
 * @param {String} dateString - the date string to verify
 * @param {String} formatString - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://git.io/fxCyr
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://git.io/fxCyr
 * @returns {Boolean}
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} `options.locale` must contain `match` property
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr
 * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Match 11 February 2014 from middle-endian format:
 * var result = isMatch('02/11/2014', 'MM/dd/yyyy')
 * //=> true
 *
 * @example
 * // Match 28th of February in Esperanto locale in the context of 2010 year:
 * import eo from 'date-fns/locale/eo'
 * var result = isMatch('28-a de februaro', "do 'de' MMMM", {
 *   locale: eo
 * })
 * //=> true
 */

function isMatch(dateString, formatString, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  return Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_parse_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateString, formatString, new Date(), dirtyOptions));
}

/***/ }),
/* 890 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parse; });
/* harmony import */ var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(812);
/* harmony import */ var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(822);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(736);
/* harmony import */ var _lib_assign_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(839);
/* harmony import */ var _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(835);
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(752);
/* harmony import */ var _lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(836);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(735);
/* harmony import */ var _lib_parsers_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(891);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(737);










var TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps

var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var notWhitespaceRegExp = /\S/;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
/**
 * @name parse
 * @category Common Helpers
 * @summary Parse the date.
 *
 * @description
 * Return the date parsed from string using the given format string.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters in the format string wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the format string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 5 below the table).
 *
 * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
 * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
 *
 * ```javascript
 * parse('23 AM', 'HH a', new Date())
 * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
 * ```
 *
 * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
 *
 * Accepted format string patterns:
 * | Unit                            |Prior| Pattern | Result examples                   | Notes |
 * |---------------------------------|-----|---------|-----------------------------------|-------|
 * | Era                             | 140 | G..GGG  | AD, BC                            |       |
 * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 |     | GGGGG   | A, B                              |       |
 * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
 * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
 * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
 * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
 * |                                 |     | yyyyy   | ...                               | 2,4   |
 * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
 * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
 * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
 * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
 * |                                 |     | YYYYY   | ...                               | 2,4   |
 * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
 * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
 * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
 * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
 * |                                 |     | RRRRR   | ...                               | 2,4,5 |
 * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
 * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
 * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
 * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
 * |                                 |     | uuuuu   | ...                               | 2,4   |
 * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
 * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
 * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
 * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | qq      | 01, 02, 03, 04                    |       |
 * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
 * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
 * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | MM      | 01, 02, ..., 12                   |       |
 * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | MMMM    | January, February, ..., December  | 2     |
 * |                                 |     | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
 * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | LL      | 01, 02, ..., 12                   |       |
 * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | LLLL    | January, February, ..., December  | 2     |
 * |                                 |     | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
 * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
 * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
 * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
 * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
 * |                                 |     | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
 * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
 * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
 * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 |     | DDDD    | ...                               | 2     |
 * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
 * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
 * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
 * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |
 * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
 * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
 * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
 * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | ee      | 02, 03, ..., 01                   |       |
 * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | cc      | 02, 03, ..., 01                   |       |
 * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
 * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
 * |                                 |     | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 |     | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
 * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
 * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
 * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
 * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
 * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
 * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | mm      | 00, 01, ..., 59                   |       |
 * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
 * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | ss      | 00, 01, ..., 59                   |       |
 * | Seconds timestamp               |  40 | t       | 512969520                         |       |
 * |                                 |     | tt      | ...                               | 2     |
 * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
 * |                                 |     | SS      | 00, 01, ..., 99                   |       |
 * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
 * |                                 |     | SSSS    | ...                               | 2     |
 * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
 * |                                 |     | TT      | ...                               | 2     |
 * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
 * |                                 |     | XX      | -0800, +0530, Z                   |       |
 * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
 * |                                 |     | xx      | -0800, +0530, +0000               |       |
 * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
 * |                                 |     | PP      | May 29, 1453                      |       |
 * |                                 |     | PPP     | May 29th, 1453                    |       |
 * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
 * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
 * |                                 |     | pp      | 12:00:00 AM                       |       |
 * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
 * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
 * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
 * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular.
 *    In `format` function, they will produce different result:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 *    `parse` will try to match both formatting and stand-alone units interchangably.
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table:
 *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
 *      as wide as the sequence
 *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
 *      These variations are marked with "2" in the last column of the table.
 *
 * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 4. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
 *
 *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
 *
 *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
 *
 *    while `uu` will just assign the year as is:
 *
 *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
 *
 *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
 *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
 *
 * 5. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
 *    on the given locale.
 *
 *    using `en-US` locale: `P` => `MM/dd/yyyy`
 *    using `en-US` locale: `p` => `hh:mm a`
 *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
 *    using `pt-BR` locale: `p` => `HH:mm`
 *
 * Values will be assigned to the date in the descending order of its unit's priority.
 * Units of an equal priority overwrite each other in the order of appearance.
 *
 * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
 * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.
 *
 * `referenceDate` must be passed for correct work of the function.
 * If you're not sure which `referenceDate` to supply, create a new instance of Date:
 * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
 * In this case parsing will be done in the context of the current date.
 * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,
 * then `Invalid Date` will be returned.
 *
 * The result may vary by locale.
 *
 * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
 *
 * If parsing failed, `Invalid Date` will be returned.
 * Invalid Date is a Date, whose time value is NaN.
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - Old `parse` was renamed to `toDate`.
 *   Now `parse` is a new function which parses a string using a provided format.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   parse('2016-01-01')
 *
 *   // v2.0.0 onward
 *   toDate('2016-01-01')
 *   parse('2016-01-01', 'yyyy-MM-dd', new Date())
 *   ```
 *
 * @param {String} dateString - the string to parse
 * @param {String} formatString - the string of tokens
 * @param {Date|Number} referenceDate - defines values missing from the parsed dateString
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://git.io/fxCyr
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://git.io/fxCyr
 * @returns {Date} the parsed date
 * @throws {TypeError} 3 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} `options.locale` must contain `match` property
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Parse 11 February 2014 from middle-endian format:
 * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())
 * //=> Tue Feb 11 2014 00:00:00
 *
 * @example
 * // Parse 28th of February in Esperanto locale in the context of 2010 year:
 * import eo from 'date-fns/locale/eo'
 * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
 *   locale: eo
 * })
 * //=> Sun Feb 28 2010 00:00:00
 */

function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(3, arguments);
  var dateString = String(dirtyDateString);
  var formatString = String(dirtyFormatString);
  var options = dirtyOptions || {};
  var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__["default"];

  if (!locale.match) {
    throw new RangeError('locale must contain match property');
  }

  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  if (formatString === '') {
    if (dateString === '') {
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyReferenceDate);
    } else {
      return new Date(NaN);
    }
  }

  var subFnOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale // If timezone isn't specified, it will be set to the system timezone

  };
  var setters = [{
    priority: TIMEZONE_UNIT_PRIORITY,
    subPriority: -1,
    set: dateToSystemTimezone,
    index: 0
  }];
  var i;
  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];

    if (firstCharacter === 'p' || firstCharacter === 'P') {
      var longFormatter = _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_4__["default"][firstCharacter];
      return longFormatter(substring, locale.formatLong, subFnOptions);
    }

    return substring;
  }).join('').match(formattingTokensRegExp);
  var usedTokens = [];

  for (i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (!options.useAdditionalWeekYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["isProtectedWeekYearToken"])(token)) {
      Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["throwProtectedError"])(token, formatString, dirtyDateString);
    }

    if (!options.useAdditionalDayOfYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["isProtectedDayOfYearToken"])(token)) {
      Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["throwProtectedError"])(token, formatString, dirtyDateString);
    }

    var firstCharacter = token[0];
    var parser = _lib_parsers_index_js__WEBPACK_IMPORTED_MODULE_8__["default"][firstCharacter];

    if (parser) {
      var incompatibleTokens = parser.incompatibleTokens;

      if (Array.isArray(incompatibleTokens)) {
        var incompatibleToken = void 0;

        for (var _i = 0; _i < usedTokens.length; _i++) {
          var usedToken = usedTokens[_i].token;

          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {
            incompatibleToken = usedTokens[_i];
            break;
          }
        }

        if (incompatibleToken) {
          throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
        }
      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {
        throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
      }

      usedTokens.push({
        token: firstCharacter,
        fullToken: token
      });
      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);

      if (!parseResult) {
        return new Date(NaN);
      }

      setters.push({
        priority: parser.priority,
        subPriority: parser.subPriority || 0,
        set: parser.set,
        validate: parser.validate,
        value: parseResult.value,
        index: setters.length
      });
      dateString = parseResult.rest;
    } else {
      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
      } // Replace two single quote characters with one single quote character


      if (token === "''") {
        token = "'";
      } else if (firstCharacter === "'") {
        token = cleanEscapedString(token);
      } // Cut token from string, or, if string doesn't match the token, return Invalid Date


      if (dateString.indexOf(token) === 0) {
        dateString = dateString.slice(token.length);
      } else {
        return new Date(NaN);
      }
    }
  } // Check if the remaining input contains something other than whitespace


  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
    return new Date(NaN);
  }

  var uniquePrioritySetters = setters.map(function (setter) {
    return setter.priority;
  }).sort(function (a, b) {
    return b - a;
  }).filter(function (priority, index, array) {
    return array.indexOf(priority) === index;
  }).map(function (priority) {
    return setters.filter(function (setter) {
      return setter.priority === priority;
    }).sort(function (a, b) {
      return b.subPriority - a.subPriority;
    });
  }).map(function (setterArray) {
    return setterArray[0];
  });
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyReferenceDate);

  if (isNaN(date)) {
    return new Date(NaN);
  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37


  var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date));
  var flags = {};

  for (i = 0; i < uniquePrioritySetters.length; i++) {
    var setter = uniquePrioritySetters[i];

    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {
      return new Date(NaN);
    }

    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)

    if (result[0]) {
      utcDate = result[0];
      Object(_lib_assign_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(flags, result[1]); // Result is date
    } else {
      utcDate = result;
    }
  }

  return utcDate;
}

function dateToSystemTimezone(date, flags) {
  if (flags.timestampIsSet) {
    return date;
  }

  var convertedDate = new Date(0);
  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
  return convertedDate;
}

function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

/***/ }),
/* 891 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(834);
/* harmony import */ var _lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(892);
/* harmony import */ var _lib_setUTCISODay_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(893);
/* harmony import */ var _lib_setUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(894);
/* harmony import */ var _lib_setUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(895);
/* harmony import */ var _lib_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(828);
/* harmony import */ var _lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(832);







var MILLISECONDS_IN_HOUR = 3600000;
var MILLISECONDS_IN_MINUTE = 60000;
var MILLISECONDS_IN_SECOND = 1000;
var numericPatterns = {
  month: /^(1[0-2]|0?\d)/,
  // 0 to 12
  date: /^(3[0-1]|[0-2]?\d)/,
  // 0 to 31
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
  // 0 to 366
  week: /^(5[0-3]|[0-4]?\d)/,
  // 0 to 53
  hour23h: /^(2[0-3]|[0-1]?\d)/,
  // 0 to 23
  hour24h: /^(2[0-4]|[0-1]?\d)/,
  // 0 to 24
  hour11h: /^(1[0-1]|0?\d)/,
  // 0 to 11
  hour12h: /^(1[0-2]|0?\d)/,
  // 0 to 12
  minute: /^[0-5]?\d/,
  // 0 to 59
  second: /^[0-5]?\d/,
  // 0 to 59
  singleDigit: /^\d/,
  // 0 to 9
  twoDigits: /^\d{1,2}/,
  // 0 to 99
  threeDigits: /^\d{1,3}/,
  // 0 to 999
  fourDigits: /^\d{1,4}/,
  // 0 to 9999
  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/,
  // 0 to 9, -0 to -9
  twoDigitsSigned: /^-?\d{1,2}/,
  // 0 to 99, -0 to -99
  threeDigitsSigned: /^-?\d{1,3}/,
  // 0 to 999, -0 to -999
  fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999

};
var timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};

function parseNumericPattern(pattern, string, valueCallback) {
  var matchResult = string.match(pattern);

  if (!matchResult) {
    return null;
  }

  var value = parseInt(matchResult[0], 10);
  return {
    value: valueCallback ? valueCallback(value) : value,
    rest: string.slice(matchResult[0].length)
  };
}

function parseTimezonePattern(pattern, string) {
  var matchResult = string.match(pattern);

  if (!matchResult) {
    return null;
  } // Input is 'Z'


  if (matchResult[0] === 'Z') {
    return {
      value: 0,
      rest: string.slice(1)
    };
  }

  var sign = matchResult[1] === '+' ? 1 : -1;
  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
  return {
    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),
    rest: string.slice(matchResult[0].length)
  };
}

function parseAnyDigitsSigned(string, valueCallback) {
  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);
}

function parseNDigits(n, string, valueCallback) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);

    case 2:
      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);

    case 3:
      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);

    case 4:
      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);

    default:
      return parseNumericPattern(new RegExp('^\\d{1,' + n + '}'), string, valueCallback);
  }
}

function parseNDigitsSigned(n, string, valueCallback) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);

    case 2:
      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);

    case 3:
      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);

    case 4:
      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);

    default:
      return parseNumericPattern(new RegExp('^-?\\d{1,' + n + '}'), string, valueCallback);
  }
}

function dayPeriodEnumToHours(enumValue) {
  switch (enumValue) {
    case 'morning':
      return 4;

    case 'evening':
      return 17;

    case 'pm':
    case 'noon':
    case 'afternoon':
      return 12;

    case 'am':
    case 'midnight':
    case 'night':
    default:
      return 0;
  }
}

function normalizeTwoDigitYear(twoDigitYear, currentYear) {
  var isCommonEra = currentYear > 0; // Absolute number of the current year:
  // 1 -> 1 AC
  // 0 -> 1 BC
  // -1 -> 2 BC

  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
  var result;

  if (absCurrentYear <= 50) {
    result = twoDigitYear || 100;
  } else {
    var rangeEnd = absCurrentYear + 50;
    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }

  return isCommonEra ? result : 1 - result;
}

var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation

function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
 * |  p  |                                |  P  |                                |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 */


var parsers = {
  // Era
  G: {
    priority: 140,
    parse: function (string, token, match, _options) {
      switch (token) {
        // AD, BC
        case 'G':
        case 'GG':
        case 'GGG':
          return match.era(string, {
            width: 'abbreviated'
          }) || match.era(string, {
            width: 'narrow'
          });
        // A, B

        case 'GGGGG':
          return match.era(string, {
            width: 'narrow'
          });
        // Anno Domini, Before Christ

        case 'GGGG':
        default:
          return match.era(string, {
            width: 'wide'
          }) || match.era(string, {
            width: 'abbreviated'
          }) || match.era(string, {
            width: 'narrow'
          });
      }
    },
    set: function (date, flags, value, _options) {
      flags.era = value;
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['R', 'u', 't', 'T']
  },
  // Year
  y: {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
    priority: 130,
    parse: function (string, token, match, _options) {
      var valueCallback = function (year) {
        return {
          year: year,
          isTwoDigitYear: token === 'yy'
        };
      };

      switch (token) {
        case 'y':
          return parseNDigits(4, string, valueCallback);

        case 'yo':
          return match.ordinalNumber(string, {
            unit: 'year',
            valueCallback: valueCallback
          });

        default:
          return parseNDigits(token.length, string, valueCallback);
      }
    },
    validate: function (_date, value, _options) {
      return value.isTwoDigitYear || value.year > 0;
    },
    set: function (date, flags, value, _options) {
      var currentYear = date.getUTCFullYear();

      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }

      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']
  },
  // Local week-numbering year
  Y: {
    priority: 130,
    parse: function (string, token, match, _options) {
      var valueCallback = function (year) {
        return {
          year: year,
          isTwoDigitYear: token === 'YY'
        };
      };

      switch (token) {
        case 'Y':
          return parseNDigits(4, string, valueCallback);

        case 'Yo':
          return match.ordinalNumber(string, {
            unit: 'year',
            valueCallback: valueCallback
          });

        default:
          return parseNDigits(token.length, string, valueCallback);
      }
    },
    validate: function (_date, value, _options) {
      return value.isTwoDigitYear || value.year > 0;
    },
    set: function (date, flags, value, options) {
      var currentYear = Object(_lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, options);

      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
        date.setUTCHours(0, 0, 0, 0);
        return Object(_lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(date, options);
      }

      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
      date.setUTCHours(0, 0, 0, 0);
      return Object(_lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(date, options);
    },
    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']
  },
  // ISO week-numbering year
  R: {
    priority: 130,
    parse: function (string, token, _match, _options) {
      if (token === 'R') {
        return parseNDigitsSigned(4, string);
      }

      return parseNDigitsSigned(token.length, string);
    },
    set: function (_date, _flags, value, _options) {
      var firstWeekOfYear = new Date(0);
      firstWeekOfYear.setUTCFullYear(value, 0, 4);
      firstWeekOfYear.setUTCHours(0, 0, 0, 0);
      return Object(_lib_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(firstWeekOfYear);
    },
    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']
  },
  // Extended year
  u: {
    priority: 130,
    parse: function (string, token, _match, _options) {
      if (token === 'u') {
        return parseNDigitsSigned(4, string);
      }

      return parseNDigitsSigned(token.length, string);
    },
    set: function (date, _flags, value, _options) {
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']
  },
  // Quarter
  Q: {
    priority: 120,
    parse: function (string, token, match, _options) {
      switch (token) {
        // 1, 2, 3, 4
        case 'Q':
        case 'QQ':
          // 01, 02, 03, 04
          return parseNDigits(token.length, string);
        // 1st, 2nd, 3rd, 4th

        case 'Qo':
          return match.ordinalNumber(string, {
            unit: 'quarter'
          });
        // Q1, Q2, Q3, Q4

        case 'QQQ':
          return match.quarter(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.quarter(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)

        case 'QQQQQ':
          return match.quarter(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // 1st quarter, 2nd quarter, ...

        case 'QQQQ':
        default:
          return match.quarter(string, {
            width: 'wide',
            context: 'formatting'
          }) || match.quarter(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.quarter(string, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    },
    validate: function (_date, value, _options) {
      return value >= 1 && value <= 4;
    },
    set: function (date, _flags, value, _options) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']
  },
  // Stand-alone quarter
  q: {
    priority: 120,
    parse: function (string, token, match, _options) {
      switch (token) {
        // 1, 2, 3, 4
        case 'q':
        case 'qq':
          // 01, 02, 03, 04
          return parseNDigits(token.length, string);
        // 1st, 2nd, 3rd, 4th

        case 'qo':
          return match.ordinalNumber(string, {
            unit: 'quarter'
          });
        // Q1, Q2, Q3, Q4

        case 'qqq':
          return match.quarter(string, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.quarter(string, {
            width: 'narrow',
            context: 'standalone'
          });
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)

        case 'qqqqq':
          return match.quarter(string, {
            width: 'narrow',
            context: 'standalone'
          });
        // 1st quarter, 2nd quarter, ...

        case 'qqqq':
        default:
          return match.quarter(string, {
            width: 'wide',
            context: 'standalone'
          }) || match.quarter(string, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.quarter(string, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    },
    validate: function (_date, value, _options) {
      return value >= 1 && value <= 4;
    },
    set: function (date, _flags, value, _options) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']
  },
  // Month
  M: {
    priority: 110,
    parse: function (string, token, match, _options) {
      var valueCallback = function (value) {
        return value - 1;
      };

      switch (token) {
        // 1, 2, ..., 12
        case 'M':
          return parseNumericPattern(numericPatterns.month, string, valueCallback);
        // 01, 02, ..., 12

        case 'MM':
          return parseNDigits(2, string, valueCallback);
        // 1st, 2nd, ..., 12th

        case 'Mo':
          return match.ordinalNumber(string, {
            unit: 'month',
            valueCallback: valueCallback
          });
        // Jan, Feb, ..., Dec

        case 'MMM':
          return match.month(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.month(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // J, F, ..., D

        case 'MMMMM':
          return match.month(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // January, February, ..., December

        case 'MMMM':
        default:
          return match.month(string, {
            width: 'wide',
            context: 'formatting'
          }) || match.month(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.month(string, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    },
    validate: function (_date, value, _options) {
      return value >= 0 && value <= 11;
    },
    set: function (date, _flags, value, _options) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']
  },
  // Stand-alone month
  L: {
    priority: 110,
    parse: function (string, token, match, _options) {
      var valueCallback = function (value) {
        return value - 1;
      };

      switch (token) {
        // 1, 2, ..., 12
        case 'L':
          return parseNumericPattern(numericPatterns.month, string, valueCallback);
        // 01, 02, ..., 12

        case 'LL':
          return parseNDigits(2, string, valueCallback);
        // 1st, 2nd, ..., 12th

        case 'Lo':
          return match.ordinalNumber(string, {
            unit: 'month',
            valueCallback: valueCallback
          });
        // Jan, Feb, ..., Dec

        case 'LLL':
          return match.month(string, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.month(string, {
            width: 'narrow',
            context: 'standalone'
          });
        // J, F, ..., D

        case 'LLLLL':
          return match.month(string, {
            width: 'narrow',
            context: 'standalone'
          });
        // January, February, ..., December

        case 'LLLL':
        default:
          return match.month(string, {
            width: 'wide',
            context: 'standalone'
          }) || match.month(string, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.month(string, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    },
    validate: function (_date, value, _options) {
      return value >= 0 && value <= 11;
    },
    set: function (date, _flags, value, _options) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']
  },
  // Local week of year
  w: {
    priority: 100,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'w':
          return parseNumericPattern(numericPatterns.week, string);

        case 'wo':
          return match.ordinalNumber(string, {
            unit: 'week'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (_date, value, _options) {
      return value >= 1 && value <= 53;
    },
    set: function (date, _flags, value, options) {
      return Object(_lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Object(_lib_setUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(date, value, options), options);
    },
    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']
  },
  // ISO week of year
  I: {
    priority: 100,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'I':
          return parseNumericPattern(numericPatterns.week, string);

        case 'Io':
          return match.ordinalNumber(string, {
            unit: 'week'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (_date, value, _options) {
      return value >= 1 && value <= 53;
    },
    set: function (date, _flags, value, options) {
      return Object(_lib_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(Object(_lib_setUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, value, options), options);
    },
    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']
  },
  // Day of the month
  d: {
    priority: 90,
    subPriority: 1,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'd':
          return parseNumericPattern(numericPatterns.date, string);

        case 'do':
          return match.ordinalNumber(string, {
            unit: 'date'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (date, value, _options) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex(year);
      var month = date.getUTCMonth();

      if (isLeapYear) {
        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
      } else {
        return value >= 1 && value <= DAYS_IN_MONTH[month];
      }
    },
    set: function (date, _flags, value, _options) {
      date.setUTCDate(value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']
  },
  // Day of year
  D: {
    priority: 90,
    subPriority: 1,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'D':
        case 'DD':
          return parseNumericPattern(numericPatterns.dayOfYear, string);

        case 'Do':
          return match.ordinalNumber(string, {
            unit: 'date'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (date, value, _options) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex(year);

      if (isLeapYear) {
        return value >= 1 && value <= 366;
      } else {
        return value >= 1 && value <= 365;
      }
    },
    set: function (date, _flags, value, _options) {
      date.setUTCMonth(0, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']
  },
  // Day of week
  E: {
    priority: 90,
    parse: function (string, token, match, _options) {
      switch (token) {
        // Tue
        case 'E':
        case 'EE':
        case 'EEE':
          return match.day(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(string, {
            width: 'short',
            context: 'formatting'
          }) || match.day(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // T

        case 'EEEEE':
          return match.day(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tu

        case 'EEEEEE':
          return match.day(string, {
            width: 'short',
            context: 'formatting'
          }) || match.day(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tuesday

        case 'EEEE':
        default:
          return match.day(string, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(string, {
            width: 'short',
            context: 'formatting'
          }) || match.day(string, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    },
    validate: function (_date, value, _options) {
      return value >= 0 && value <= 6;
    },
    set: function (date, _flags, value, options) {
      date = Object(_lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']
  },
  // Local day of week
  e: {
    priority: 90,
    parse: function (string, token, match, options) {
      var valueCallback = function (value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };

      switch (token) {
        // 3
        case 'e':
        case 'ee':
          // 03
          return parseNDigits(token.length, string, valueCallback);
        // 3rd

        case 'eo':
          return match.ordinalNumber(string, {
            unit: 'day',
            valueCallback: valueCallback
          });
        // Tue

        case 'eee':
          return match.day(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(string, {
            width: 'short',
            context: 'formatting'
          }) || match.day(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // T

        case 'eeeee':
          return match.day(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tu

        case 'eeeeee':
          return match.day(string, {
            width: 'short',
            context: 'formatting'
          }) || match.day(string, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tuesday

        case 'eeee':
        default:
          return match.day(string, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(string, {
            width: 'short',
            context: 'formatting'
          }) || match.day(string, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    },
    validate: function (_date, value, _options) {
      return value >= 0 && value <= 6;
    },
    set: function (date, _flags, value, options) {
      date = Object(_lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']
  },
  // Stand-alone local day of week
  c: {
    priority: 90,
    parse: function (string, token, match, options) {
      var valueCallback = function (value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };

      switch (token) {
        // 3
        case 'c':
        case 'cc':
          // 03
          return parseNDigits(token.length, string, valueCallback);
        // 3rd

        case 'co':
          return match.ordinalNumber(string, {
            unit: 'day',
            valueCallback: valueCallback
          });
        // Tue

        case 'ccc':
          return match.day(string, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.day(string, {
            width: 'short',
            context: 'standalone'
          }) || match.day(string, {
            width: 'narrow',
            context: 'standalone'
          });
        // T

        case 'ccccc':
          return match.day(string, {
            width: 'narrow',
            context: 'standalone'
          });
        // Tu

        case 'cccccc':
          return match.day(string, {
            width: 'short',
            context: 'standalone'
          }) || match.day(string, {
            width: 'narrow',
            context: 'standalone'
          });
        // Tuesday

        case 'cccc':
        default:
          return match.day(string, {
            width: 'wide',
            context: 'standalone'
          }) || match.day(string, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.day(string, {
            width: 'short',
            context: 'standalone'
          }) || match.day(string, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    },
    validate: function (_date, value, _options) {
      return value >= 0 && value <= 6;
    },
    set: function (date, _flags, value, options) {
      date = Object(_lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']
  },
  // ISO day of week
  i: {
    priority: 90,
    parse: function (string, token, match, _options) {
      var valueCallback = function (value) {
        if (value === 0) {
          return 7;
        }

        return value;
      };

      switch (token) {
        // 2
        case 'i':
        case 'ii':
          // 02
          return parseNDigits(token.length, string);
        // 2nd

        case 'io':
          return match.ordinalNumber(string, {
            unit: 'day'
          });
        // Tue

        case 'iii':
          return match.day(string, {
            width: 'abbreviated',
            context: 'formatting',
            valueCallback: valueCallback
          }) || match.day(string, {
            width: 'short',
            context: 'formatting',
            valueCallback: valueCallback
          }) || match.day(string, {
            width: 'narrow',
            context: 'formatting',
            valueCallback: valueCallback
          });
        // T

        case 'iiiii':
          return match.day(string, {
            width: 'narrow',
            context: 'formatting',
            valueCallback: valueCallback
          });
        // Tu

        case 'iiiiii':
          return match.day(string, {
            width: 'short',
            context: 'formatting',
            valueCallback: valueCallback
          }) || match.day(string, {
            width: 'narrow',
            context: 'formatting',
            valueCallback: valueCallback
          });
        // Tuesday

        case 'iiii':
        default:
          return match.day(string, {
            width: 'wide',
            context: 'formatting',
            valueCallback: valueCallback
          }) || match.day(string, {
            width: 'abbreviated',
            context: 'formatting',
            valueCallback: valueCallback
          }) || match.day(string, {
            width: 'short',
            context: 'formatting',
            valueCallback: valueCallback
          }) || match.day(string, {
            width: 'narrow',
            context: 'formatting',
            valueCallback: valueCallback
          });
      }
    },
    validate: function (_date, value, _options) {
      return value >= 1 && value <= 7;
    },
    set: function (date, _flags, value, options) {
      date = Object(_lib_setUTCISODay_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']
  },
  // AM or PM
  a: {
    priority: 80,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'a':
        case 'aa':
        case 'aaa':
          return match.dayPeriod(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(string, {
            width: 'narrow',
            context: 'formatting'
          });

        case 'aaaaa':
          return match.dayPeriod(string, {
            width: 'narrow',
            context: 'formatting'
          });

        case 'aaaa':
        default:
          return match.dayPeriod(string, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(string, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    },
    set: function (date, _flags, value, _options) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']
  },
  // AM, PM, midnight
  b: {
    priority: 80,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'b':
        case 'bb':
        case 'bbb':
          return match.dayPeriod(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(string, {
            width: 'narrow',
            context: 'formatting'
          });

        case 'bbbbb':
          return match.dayPeriod(string, {
            width: 'narrow',
            context: 'formatting'
          });

        case 'bbbb':
        default:
          return match.dayPeriod(string, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(string, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    },
    set: function (date, _flags, value, _options) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']
  },
  // in the morning, in the afternoon, in the evening, at night
  B: {
    priority: 80,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'B':
        case 'BB':
        case 'BBB':
          return match.dayPeriod(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(string, {
            width: 'narrow',
            context: 'formatting'
          });

        case 'BBBBB':
          return match.dayPeriod(string, {
            width: 'narrow',
            context: 'formatting'
          });

        case 'BBBB':
        default:
          return match.dayPeriod(string, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(string, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(string, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    },
    set: function (date, _flags, value, _options) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['a', 'b', 't', 'T']
  },
  // Hour [1-12]
  h: {
    priority: 70,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'h':
          return parseNumericPattern(numericPatterns.hour12h, string);

        case 'ho':
          return match.ordinalNumber(string, {
            unit: 'hour'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (_date, value, _options) {
      return value >= 1 && value <= 12;
    },
    set: function (date, _flags, value, _options) {
      var isPM = date.getUTCHours() >= 12;

      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else if (!isPM && value === 12) {
        date.setUTCHours(0, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }

      return date;
    },
    incompatibleTokens: ['H', 'K', 'k', 't', 'T']
  },
  // Hour [0-23]
  H: {
    priority: 70,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'H':
          return parseNumericPattern(numericPatterns.hour23h, string);

        case 'Ho':
          return match.ordinalNumber(string, {
            unit: 'hour'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (_date, value, _options) {
      return value >= 0 && value <= 23;
    },
    set: function (date, _flags, value, _options) {
      date.setUTCHours(value, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']
  },
  // Hour [0-11]
  K: {
    priority: 70,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'K':
          return parseNumericPattern(numericPatterns.hour11h, string);

        case 'Ko':
          return match.ordinalNumber(string, {
            unit: 'hour'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (_date, value, _options) {
      return value >= 0 && value <= 11;
    },
    set: function (date, _flags, value, _options) {
      var isPM = date.getUTCHours() >= 12;

      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }

      return date;
    },
    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']
  },
  // Hour [1-24]
  k: {
    priority: 70,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'k':
          return parseNumericPattern(numericPatterns.hour24h, string);

        case 'ko':
          return match.ordinalNumber(string, {
            unit: 'hour'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (_date, value, _options) {
      return value >= 1 && value <= 24;
    },
    set: function (date, _flags, value, _options) {
      var hours = value <= 24 ? value % 24 : value;
      date.setUTCHours(hours, 0, 0, 0);
      return date;
    },
    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']
  },
  // Minute
  m: {
    priority: 60,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 'm':
          return parseNumericPattern(numericPatterns.minute, string);

        case 'mo':
          return match.ordinalNumber(string, {
            unit: 'minute'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (_date, value, _options) {
      return value >= 0 && value <= 59;
    },
    set: function (date, _flags, value, _options) {
      date.setUTCMinutes(value, 0, 0);
      return date;
    },
    incompatibleTokens: ['t', 'T']
  },
  // Second
  s: {
    priority: 50,
    parse: function (string, token, match, _options) {
      switch (token) {
        case 's':
          return parseNumericPattern(numericPatterns.second, string);

        case 'so':
          return match.ordinalNumber(string, {
            unit: 'second'
          });

        default:
          return parseNDigits(token.length, string);
      }
    },
    validate: function (_date, value, _options) {
      return value >= 0 && value <= 59;
    },
    set: function (date, _flags, value, _options) {
      date.setUTCSeconds(value, 0);
      return date;
    },
    incompatibleTokens: ['t', 'T']
  },
  // Fraction of second
  S: {
    priority: 30,
    parse: function (string, token, _match, _options) {
      var valueCallback = function (value) {
        return Math.floor(value * Math.pow(10, -token.length + 3));
      };

      return parseNDigits(token.length, string, valueCallback);
    },
    set: function (date, _flags, value, _options) {
      date.setUTCMilliseconds(value);
      return date;
    },
    incompatibleTokens: ['t', 'T']
  },
  // Timezone (ISO-8601. +00:00 is `'Z'`)
  X: {
    priority: 10,
    parse: function (string, token, _match, _options) {
      switch (token) {
        case 'X':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);

        case 'XX':
          return parseTimezonePattern(timezonePatterns.basic, string);

        case 'XXXX':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);

        case 'XXXXX':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);

        case 'XXX':
        default:
          return parseTimezonePattern(timezonePatterns.extended, string);
      }
    },
    set: function (date, flags, value, _options) {
      if (flags.timestampIsSet) {
        return date;
      }

      return new Date(date.getTime() - value);
    },
    incompatibleTokens: ['t', 'T', 'x']
  },
  // Timezone (ISO-8601)
  x: {
    priority: 10,
    parse: function (string, token, _match, _options) {
      switch (token) {
        case 'x':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);

        case 'xx':
          return parseTimezonePattern(timezonePatterns.basic, string);

        case 'xxxx':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);

        case 'xxxxx':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);

        case 'xxx':
        default:
          return parseTimezonePattern(timezonePatterns.extended, string);
      }
    },
    set: function (date, flags, value, _options) {
      if (flags.timestampIsSet) {
        return date;
      }

      return new Date(date.getTime() - value);
    },
    incompatibleTokens: ['t', 'T', 'X']
  },
  // Seconds timestamp
  t: {
    priority: 40,
    parse: function (string, _token, _match, _options) {
      return parseAnyDigitsSigned(string);
    },
    set: function (_date, _flags, value, _options) {
      return [new Date(value * 1000), {
        timestampIsSet: true
      }];
    },
    incompatibleTokens: '*'
  },
  // Milliseconds timestamp
  T: {
    priority: 20,
    parse: function (string, _token, _match, _options) {
      return parseAnyDigitsSigned(string);
    },
    set: function (_date, _flags, value, _options) {
      return [new Date(value), {
        timestampIsSet: true
      }];
    },
    incompatibleTokens: '*'
  }
};
/* harmony default export */ __webpack_exports__["default"] = (parsers);

/***/ }),
/* 892 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setUTCDay; });
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);


 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var day = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDay);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

/***/ }),
/* 893 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setUTCISODay; });
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);


 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function setUTCISODay(dirtyDate, dirtyDay) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var day = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDay);

  if (day % 7 === 0) {
    day = day - 7;
  }

  var weekStartsOn = 1;
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

/***/ }),
/* 894 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setUTCISOWeek; });
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(827);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);



 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var isoWeek = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyISOWeek);
  var diff = Object(_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date) - isoWeek;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}

/***/ }),
/* 895 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setUTCWeek; });
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(831);
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);



 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function setUTCWeek(dirtyDate, dirtyWeek, options) {
  Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var week = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyWeek);
  var diff = Object(_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, options) - week;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}

/***/ }),
/* 896 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isMonday; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isMonday
 * @category Weekday Helpers
 * @summary Is the given date Monday?
 *
 * @description
 * Is the given date Monday?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is Monday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 22 September 2014 Monday?
 * var result = isMonday(new Date(2014, 8, 22))
 * //=> true
 */

function isMonday(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 1;
}

/***/ }),
/* 897 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isPast; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isPast
 * @category Common Helpers
 * @summary Is the given date in the past?
 * @pure false
 *
 * @description
 * Is the given date in the past?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in the past
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 6 October 2014, is 2 July 2014 in the past?
 * var result = isPast(new Date(2014, 6, 2))
 * //=> true
 */

function isPast(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getTime() < Date.now();
}

/***/ }),
/* 898 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameHour; });
/* harmony import */ var _startOfHour_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(899);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameHour
 * @category Hour Helpers
 * @summary Are the given dates in the same hour?
 *
 * @description
 * Are the given dates in the same hour?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same hour
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?
 * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))
 * //=> true
 */

function isSameHour(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeftStartOfHour = Object(_startOfHour_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRightStartOfHour = Object(_startOfHour_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();
}

/***/ }),
/* 899 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfHour; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name startOfHour
 * @category Hour Helpers
 * @summary Return the start of an hour for the given date.
 *
 * @description
 * Return the start of an hour for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of an hour
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of an hour for 2 September 2014 11:55:00:
 * var result = startOfHour(new Date(2014, 8, 2, 11, 55))
 * //=> Tue Sep 02 2014 11:00:00
 */

function startOfHour(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  date.setMinutes(0, 0, 0);
  return date;
}

/***/ }),
/* 900 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameISOWeek; });
/* harmony import */ var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(901);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameISOWeek
 * @category ISO Week Helpers
 * @summary Are the given dates in the same ISO week?
 *
 * @description
 * Are the given dates in the same ISO week?
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same ISO week
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 1 September 2014 and 7 September 2014 in the same ISO week?
 * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))
 * //=> true
 */

function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  return Object(_isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight, {
    weekStartsOn: 1
  });
}

/***/ }),
/* 901 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameWeek; });
/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(748);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameWeek
 * @category Week Helpers
 * @summary Are the given dates in the same week?
 *
 * @description
 * Are the given dates in the same week?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Boolean} the dates are in the same week
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // Are 31 August 2014 and 4 September 2014 in the same week?
 * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))
 * //=> true
 *
 * @example
 * // If week starts with Monday,
 * // are 31 August 2014 and 4 September 2014 in the same week?
 * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {
 *   weekStartsOn: 1
 * })
 * //=> false
 */

function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeftStartOfWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyOptions);
  var dateRightStartOfWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight, dirtyOptions);
  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();
}

/***/ }),
/* 902 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameISOWeekYear; });
/* harmony import */ var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(750);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Are the given dates in the same ISO week-numbering year?
 *
 * @description
 * Are the given dates in the same ISO week-numbering year?
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.
 *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
 *   This change makes the name consistent with
 *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same ISO week-numbering year
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?
 * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))
 * //=> true
 */

function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeftStartOfYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRightStartOfYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();
}

/***/ }),
/* 903 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameMinute; });
/* harmony import */ var _startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(904);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameMinute
 * @category Minute Helpers
 * @summary Are the given dates in the same minute?
 *
 * @description
 * Are the given dates in the same minute?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same minute
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15
 * // in the same minute?
 * var result = isSameMinute(
 *   new Date(2014, 8, 4, 6, 30),
 *   new Date(2014, 8, 4, 6, 30, 15)
 * )
 * //=> true
 */

function isSameMinute(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeftStartOfMinute = Object(_startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRightStartOfMinute = Object(_startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();
}

/***/ }),
/* 904 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfMinute; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name startOfMinute
 * @category Minute Helpers
 * @summary Return the start of a minute for the given date.
 *
 * @description
 * Return the start of a minute for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a minute
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a minute for 1 December 2014 22:15:45.400:
 * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
 * //=> Mon Dec 01 2014 22:15:00
 */

function startOfMinute(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  date.setSeconds(0, 0);
  return date;
}

/***/ }),
/* 905 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameMonth
 * @category Month Helpers
 * @summary Are the given dates in the same month?
 *
 * @description
 * Are the given dates in the same month?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same month
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same month?
 * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 */

function isSameMonth(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
}

/***/ }),
/* 906 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameQuarter; });
/* harmony import */ var _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(789);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameQuarter
 * @category Quarter Helpers
 * @summary Are the given dates in the same year quarter?
 *
 * @description
 * Are the given dates in the same year quarter?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same quarter
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 1 January 2014 and 8 March 2014 in the same quarter?
 * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))
 * //=> true
 */

function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeftStartOfQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRightStartOfQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
}

/***/ }),
/* 907 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameSecond; });
/* harmony import */ var _startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(908);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameSecond
 * @category Second Helpers
 * @summary Are the given dates in the same second?
 *
 * @description
 * Are the given dates in the same second?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same second
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500
 * // in the same second?
 * var result = isSameSecond(
 *   new Date(2014, 8, 4, 6, 30, 15),
 *   new Date(2014, 8, 4, 6, 30, 15, 500)
 * )
 * //=> true
 */

function isSameSecond(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeftStartOfSecond = Object(_startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRightStartOfSecond = Object(_startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();
}

/***/ }),
/* 908 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfSecond; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name startOfSecond
 * @category Second Helpers
 * @summary Return the start of a second for the given date.
 *
 * @description
 * Return the start of a second for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a second
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a second for 1 December 2014 22:15:45.400:
 * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
 * //=> Mon Dec 01 2014 22:15:45.000
 */

function startOfSecond(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  date.setMilliseconds(0);
  return date;
}

/***/ }),
/* 909 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isSameYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isSameYear
 * @category Year Helpers
 * @summary Are the given dates in the same year?
 *
 * @description
 * Are the given dates in the same year?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same year
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same year?
 * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 */

function isSameYear(dirtyDateLeft, dirtyDateRight) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
  var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear();
}

/***/ }),
/* 910 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isThisHour; });
/* harmony import */ var _isSameHour_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(898);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isThisHour
 * @category Hour Helpers
 * @summary Is the given date in the same hour as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same hour as the current date?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in this hour
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If now is 25 September 2014 18:30:15.500,
 * // is 25 September 2014 18:00:00 in this hour?
 * var result = isThisHour(new Date(2014, 8, 25, 18))
 * //=> true
 */

function isThisHour(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_isSameHour_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
}

/***/ }),
/* 911 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isThisISOWeek; });
/* harmony import */ var _isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(900);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isThisISOWeek
 * @category ISO Week Helpers
 * @summary Is the given date in the same ISO week as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same ISO week as the current date?
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in this ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 25 September 2014, is 22 September 2014 in this ISO week?
 * var result = isThisISOWeek(new Date(2014, 8, 22))
 * //=> true
 */

function isThisISOWeek(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now());
}

/***/ }),
/* 912 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isThisMinute; });
/* harmony import */ var _isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(903);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isThisMinute
 * @category Minute Helpers
 * @summary Is the given date in the same minute as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same minute as the current date?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in this minute
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If now is 25 September 2014 18:30:15.500,
 * // is 25 September 2014 18:30:00 in this minute?
 * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))
 * //=> true
 */

function isThisMinute(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
}

/***/ }),
/* 913 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isThisMonth; });
/* harmony import */ var _isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(905);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isThisMonth
 * @category Month Helpers
 * @summary Is the given date in the same month as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same month as the current date?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in this month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 25 September 2014, is 15 September 2014 in this month?
 * var result = isThisMonth(new Date(2014, 8, 15))
 * //=> true
 */

function isThisMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
}

/***/ }),
/* 914 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isThisQuarter; });
/* harmony import */ var _isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(906);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isThisQuarter
 * @category Quarter Helpers
 * @summary Is the given date in the same quarter as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same quarter as the current date?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in this quarter
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 25 September 2014, is 2 July 2014 in this quarter?
 * var result = isThisQuarter(new Date(2014, 6, 2))
 * //=> true
 */

function isThisQuarter(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
}

/***/ }),
/* 915 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isThisSecond; });
/* harmony import */ var _isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(907);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isThisSecond
 * @category Second Helpers
 * @summary Is the given date in the same second as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same second as the current date?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in this second
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If now is 25 September 2014 18:30:15.500,
 * // is 25 September 2014 18:30:15.000 in this second?
 * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))
 * //=> true
 */

function isThisSecond(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
}

/***/ }),
/* 916 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isThisWeek; });
/* harmony import */ var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(901);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isThisWeek
 * @category Week Helpers
 * @summary Is the given date in the same week as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same week as the current date?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @param {Object} [options] - the object with options
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Boolean} the date is in this week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // If today is 25 September 2014, is 21 September 2014 in this week?
 * var result = isThisWeek(new Date(2014, 8, 21))
 * //=> true
 *
 * @example
 * // If today is 25 September 2014 and week starts with Monday
 * // is 21 September 2014 in this week?
 * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })
 * //=> false
 */

function isThisWeek(dirtyDate, options) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now(), options);
}

/***/ }),
/* 917 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isThisYear; });
/* harmony import */ var _isSameYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(909);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isThisYear
 * @category Year Helpers
 * @summary Is the given date in the same year as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same year as the current date?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is in this year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 25 September 2014, is 2 July 2014 in this year?
 * var result = isThisYear(new Date(2014, 6, 2))
 * //=> true
 */

function isThisYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_isSameYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now());
}

/***/ }),
/* 918 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isThursday; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isThursday
 * @category Weekday Helpers
 * @summary Is the given date Thursday?
 *
 * @description
 * Is the given date Thursday?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is Thursday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 25 September 2014 Thursday?
 * var result = isThursday(new Date(2014, 8, 25))
 * //=> true
 */

function isThursday(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 4;
}

/***/ }),
/* 919 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isToday; });
/* harmony import */ var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(766);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isToday
 * @category Day Helpers
 * @summary Is the given date today?
 * @pure false
 *
 * @description
 * Is the given date today?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is today
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 6 October 2014, is 6 October 14:00:00 today?
 * var result = isToday(new Date(2014, 9, 6, 14, 0))
 * //=> true
 */

function isToday(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now());
}

/***/ }),
/* 920 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isTomorrow; });
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(734);
/* harmony import */ var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(766);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name isTomorrow
 * @category Day Helpers
 * @summary Is the given date tomorrow?
 * @pure false
 *
 * @description
 * Is the given date tomorrow?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is tomorrow
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?
 * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))
 * //=> true
 */

function isTomorrow(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  return Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), 1));
}

/***/ }),
/* 921 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isTuesday; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isTuesday
 * @category Weekday Helpers
 * @summary Is the given date Tuesday?
 *
 * @description
 * Is the given date Tuesday?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is Tuesday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 23 September 2014 Tuesday?
 * var result = isTuesday(new Date(2014, 8, 23))
 * //=> true
 */

function isTuesday(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 2;
}

/***/ }),
/* 922 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isWednesday; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isWednesday
 * @category Weekday Helpers
 * @summary Is the given date Wednesday?
 *
 * @description
 * Is the given date Wednesday?
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is Wednesday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 24 September 2014 Wednesday?
 * var result = isWednesday(new Date(2014, 8, 24))
 * //=> true
 */

function isWednesday(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 3;
}

/***/ }),
/* 923 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isWithinInterval; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name isWithinInterval
 * @category Interval Helpers
 * @summary Is the given date within the interval?
 *
 * @description
 * Is the given date within the interval? (Including start and end.)
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `isWithinRange` to `isWithinInterval`.
 *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
 *
 *   ```
 *   2.1.3
 *   time interval
 *   part of the time axis limited by two instants
 *   ```
 *
 *   Also, this function now accepts an object with `start` and `end` properties
 *   instead of two arguments as an interval.
 *   This function now throws `RangeError` if the start of the interval is after its end
 *   or if any date in the interval is `Invalid Date`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *
 *   isWithinRange(
 *     new Date(2014, 0, 3),
 *     new Date(2014, 0, 1), new Date(2014, 0, 7)
 *   )
 *
 *   // v2.0.0 onward
 *
 *   isWithinInterval(
 *     new Date(2014, 0, 3),
 *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }
 *   )
 *   ```
 *
 * @param {Date|Number} date - the date to check
 * @param {Interval} interval - the interval to check
 * @returns {Boolean} the date is within the interval
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // For the date within the interval:
 * isWithinInterval(new Date(2014, 0, 3), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> true
 *
 * @example
 * // For the date outside of the interval:
 * isWithinInterval(new Date(2014, 0, 10), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> false
 *
 * @example
 * // For date equal to interval start:
 * isWithinInterval(date, { start, end: date }) // => true
 *
 * @example
 * // For date equal to interval end:
 * isWithinInterval(date, { start: date, end }) // => true
 */

function isWithinInterval(dirtyDate, dirtyInterval) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
  var interval = dirtyInterval || {};
  var time = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getTime();
  var startTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start).getTime();
  var endTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(startTime <= endTime)) {
    throw new RangeError('Invalid interval');
  }

  return time >= startTime && time <= endTime;
}

/***/ }),
/* 924 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isYesterday; });
/* harmony import */ var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(766);
/* harmony import */ var _subDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(878);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name isYesterday
 * @category Day Helpers
 * @summary Is the given date yesterday?
 * @pure false
 *
 * @description
 * Is the given date yesterday?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is yesterday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?
 * var result = isYesterday(new Date(2014, 9, 5, 14, 0))
 * //=> true
 */

function isYesterday(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  return Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Object(_subDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Date.now(), 1));
}

/***/ }),
/* 925 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lastDayOfDecade; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name lastDayOfDecade
 * @category Decade Helpers
 * @summary Return the last day of a decade for the given date.
 *
 * @description
 * Return the last day of a decade for the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the last day of a decade
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The last day of a decade for 21 December 2012 21:12:00:
 * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))
 * //=> Wed Dec 31 2019 00:00:00
 */

function lastDayOfDecade(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  var decade = 9 + Math.floor(year / 10) * 10;
  date.setFullYear(decade + 1, 0, 0);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 926 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lastDayOfISOWeek; });
/* harmony import */ var _lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(927);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name lastDayOfISOWeek
 * @category ISO Week Helpers
 * @summary Return the last day of an ISO week for the given date.
 *
 * @description
 * Return the last day of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the last day of an ISO week
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The last day of an ISO week for 2 September 2014 11:55:00:
 * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Sep 07 2014 00:00:00
 */

function lastDayOfISOWeek(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return Object(_lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, {
    weekStartsOn: 1
  });
}

/***/ }),
/* 927 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lastDayOfWeek; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name lastDayOfWeek
 * @category Week Helpers
 * @summary Return the last day of a week for the given date.
 *
 * @description
 * Return the last day of a week for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the last day of a week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // The last day of a week for 2 September 2014 11:55:00:
 * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sat Sep 06 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:
 * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Sun Sep 07 2014 00:00:00
 */

function lastDayOfWeek(dirtyDate, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6');
  }

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
  date.setHours(0, 0, 0, 0);
  date.setDate(date.getDate() + diff);
  return date;
}

/***/ }),
/* 928 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lastDayOfISOWeekYear; });
/* harmony import */ var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(746);
/* harmony import */ var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(747);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name lastDayOfISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the last day of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the last day of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.
 *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
 *   This change makes the name consistent with
 *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of an ISO week-numbering year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The last day of an ISO week-numbering year for 2 July 2005:
 * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))
 * //=> Sun Jan 01 2006 00:00:00
 */

function lastDayOfISOWeekYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
  var year = Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setFullYear(year + 1, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  var date = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuary);
  date.setDate(date.getDate() - 1);
  return date;
}

/***/ }),
/* 929 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lastDayOfQuarter; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name lastDayOfQuarter
 * @category Quarter Helpers
 * @summary Return the last day of a year quarter for the given date.
 *
 * @description
 * Return the last day of a year quarter for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * @returns {Date} the last day of a quarter
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // The last day of a quarter for 2 September 2014 11:55:00:
 * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 00:00:00
 */

function lastDayOfQuarter(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var currentMonth = date.getMonth();
  var month = currentMonth - currentMonth % 3 + 3;
  date.setMonth(month, 0);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 930 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lastDayOfYear; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name lastDayOfYear
 * @category Year Helpers
 * @summary Return the last day of a year for the given date.
 *
 * @description
 * Return the last day of a year for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the last day of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The last day of a year for 2 September 2014 11:55:00:
 * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Dec 31 2014 00:00:00
 */

function lastDayOfYear(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  date.setFullYear(year + 1, 0, 0);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 931 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lightFormat; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_format_lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(824);
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(752);
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(765);
/* harmony import */ var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(822);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(737);





 // This RegExp consists of three parts separated by `|`:
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps

var formattingTokensRegExp = /(\w)\1*|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
/**
 * @name lightFormat
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. Unlike `format`,
 * `lightFormat` doesn't use locales and outputs date using the most popular tokens.
 *
 * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   |
 * |---------------------------------|---------|-----------------------------------|
 * | AM, PM                          | a..aaa  | AM, PM                            |
 * |                                 | aaaa    | a.m., p.m.                        |
 * |                                 | aaaaa   | a, p                              |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 |
 * |                                 | yy      | 44, 01, 00, 17                    |
 * |                                 | yyy     | 044, 001, 000, 017                |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |
 * |                                 | MM      | 01, 02, ..., 12                   |
 * | Day of month                    | d       | 1, 2, ..., 31                     |
 * |                                 | dd      | 01, 02, ..., 31                   |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |
 * |                                 | hh      | 01, 02, ..., 11, 12               |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |
 * |                                 | HH      | 00, 01, 02, ..., 23               |
 * | Minute                          | m       | 0, 1, ..., 59                     |
 * |                                 | mm      | 00, 01, ..., 59                   |
 * | Second                          | s       | 0, 1, ..., 59                     |
 * |                                 | ss      | 00, 01, ..., 59                   |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |
 * |                                 | SS      | 00, 01, ..., 99                   |
 * |                                 | SSS     | 000, 0001, ..., 999               |
 * |                                 | SSSS    | ...                               |
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')
 * //=> '2014-02-11'
 */

function lightFormat(dirtyDate, dirtyFormatStr) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

  if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(originalDate)) {
    throw new RangeError('Invalid time value');
  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


  var timezoneOffset = Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate);
  var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(originalDate, timezoneOffset);
  var result = formatStr.match(formattingTokensRegExp).map(function (substring) {
    // Replace two single quote characters with one single quote character
    if (substring === "''") {
      return "'";
    }

    var firstCharacter = substring[0];

    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }

    var formatter = _lib_format_lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_1__["default"][firstCharacter];

    if (formatter) {
      return formatter(utcDate, substring, null, {});
    }

    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
    }

    return substring;
  }).join('');
  return result;
}

function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

/***/ }),
/* 932 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return max; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name max
 * @category Common Helpers
 * @summary Return the latest of the given dates.
 *
 * @description
 * Return the latest of the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - `max` function now accepts an array of dates rather than spread arguments.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   var date1 = new Date(1989, 6, 10)
 *   var date2 = new Date(1987, 1, 11)
 *   var maxDate = max(date1, date2)
 *
 *   // v2.0.0 onward:
 *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
 *   var maxDate = max(dates)
 *   ```
 *
 * @param {Date[]|Number[]} datesArray - the dates to compare
 * @returns {Date} the latest of the dates
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which of these dates is the latest?
 * var result = max([
 *   new Date(1989, 6, 10),
 *   new Date(1987, 1, 11),
 *   new Date(1995, 6, 2),
 *   new Date(1990, 0, 1)
 * ])
 * //=> Sun Jul 02 1995 00:00:00
 */

function max(dirtyDatesArray) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    // `dirtyDatesArray` is non-iterable, return Invalid Date
    return new Date(NaN);
  }

  var result;
  datesArray.forEach(function (dirtyDate) {
    var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

    if (result === undefined || result < currentDate || isNaN(currentDate)) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

/***/ }),
/* 933 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return min; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name min
 * @category Common Helpers
 * @summary Return the earliest of the given dates.
 *
 * @description
 * Return the earliest of the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - `min` function now accepts an array of dates rather than spread arguments.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   var date1 = new Date(1989, 6, 10)
 *   var date2 = new Date(1987, 1, 11)
 *   var minDate = min(date1, date2)
 *
 *   // v2.0.0 onward:
 *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
 *   var minDate = min(dates)
 *   ```
 *
 * @param {Date[]|Number[]} datesArray - the dates to compare
 * @returns {Date} the earliest of the dates
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Which of these dates is the earliest?
 * var result = min([
 *   new Date(1989, 6, 10),
 *   new Date(1987, 1, 11),
 *   new Date(1995, 6, 2),
 *   new Date(1990, 0, 1)
 * ])
 * //=> Wed Feb 11 1987 00:00:00
 */

function min(dirtyDatesArray) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    // `dirtyDatesArray` is non-iterable, return Invalid Date
    return new Date(NaN);
  }

  var result;
  datesArray.forEach(function (dirtyDate) {
    var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

    if (result === undefined || result > currentDate || isNaN(currentDate)) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

/***/ }),
/* 934 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseISO; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


var MILLISECONDS_IN_HOUR = 3600000;
var MILLISECONDS_IN_MINUTE = 60000;
var DEFAULT_ADDITIONAL_DIGITS = 2;
var patterns = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/
};
var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
/**
 * @name parseISO
 * @category Common Helpers
 * @summary Parse ISO string
 *
 * @description
 * Parse the given string in ISO 8601 format and return an instance of Date.
 *
 * Function accepts complete ISO 8601 formats as well as partial implementations.
 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
 *
 * If the argument isn't a string, the function cannot parse the string or
 * the values are invalid, it returns Invalid Date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The previous `parse` implementation was renamed to `parseISO`.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   parse('2016-01-01')
 *
 *   // v2.0.0 onward
 *   parseISO('2016-01-01')
 *   ```
 *
 * - `parseISO` now validates separate date and time values in ISO-8601 strings
 *   and returns `Invalid Date` if the date is invalid.
 *
 *   ```javascript
 *   parseISO('2018-13-32')
 *   //=> Invalid Date
 *   ```
 *
 * - `parseISO` now doesn't fall back to `new Date` constructor
 *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.
 *
 * @param {String} argument - the value to convert
 * @param {Object} [options] - an object with options.
 * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Convert string '2014-02-11T11:30:30' to date:
 * var result = parseISO('2014-02-11T11:30:30')
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert string '+02014101' to date,
 * // if the additional number of digits in the extended year format is 1:
 * var result = parseISO('+02014101', { additionalDigits: 1 })
 * //=> Fri Apr 11 2014 00:00:00
 */

function parseISO(argument, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var options = dirtyOptions || {};
  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.additionalDigits);

  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
    throw new RangeError('additionalDigits must be 0, 1 or 2');
  }

  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {
    return new Date(NaN);
  }

  var dateStrings = splitDateString(argument);
  var date;

  if (dateStrings.date) {
    var parseYearResult = parseYear(dateStrings.date, additionalDigits);
    date = parseDate(parseYearResult.restDateString, parseYearResult.year);
  }

  if (isNaN(date) || !date) {
    return new Date(NaN);
  }

  var timestamp = date.getTime();
  var time = 0;
  var offset;

  if (dateStrings.time) {
    time = parseTime(dateStrings.time);

    if (isNaN(time) || time === null) {
      return new Date(NaN);
    }
  }

  if (dateStrings.timezone) {
    offset = parseTimezone(dateStrings.timezone);

    if (isNaN(offset)) {
      return new Date(NaN);
    }
  } else {
    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone
    // but we need it to be parsed in our timezone
    // so we use utc values to build date in our timezone.
    // Year values from 0 to 99 map to the years 1900 to 1999
    // so set year explicitly with setFullYear.

    var result = new Date(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate(), dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
    result.setFullYear(dirtyDate.getUTCFullYear());
    return result;
  }

  return new Date(timestamp + time + offset);
}

function splitDateString(dateString) {
  var dateStrings = {};
  var array = dateString.split(patterns.dateTimeDelimiter);
  var timeString; // The regex match should only return at maximum two array elements.
  // [date], [time], or [date, time].

  if (array.length > 2) {
    return dateStrings;
  }

  if (/:/.test(array[0])) {
    dateStrings.date = null;
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];

    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
      timeString = dateString.substr(dateStrings.date.length, dateString.length);
    }
  }

  if (timeString) {
    var token = patterns.timezone.exec(timeString);

    if (token) {
      dateStrings.time = timeString.replace(token[1], '');
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }

  return dateStrings;
}

function parseYear(dateString, additionalDigits) {
  var regex = new RegExp('^(?:(\\d{4}|[+-]\\d{' + (4 + additionalDigits) + '})|(\\d{2}|[+-]\\d{' + (2 + additionalDigits) + '})$)');
  var captures = dateString.match(regex); // Invalid ISO-formatted year

  if (!captures) return {
    year: null
  };
  var year = captures[1] && parseInt(captures[1]);
  var century = captures[2] && parseInt(captures[2]);
  return {
    year: century == null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length)
  };
}

function parseDate(dateString, year) {
  // Invalid ISO-formatted year
  if (year === null) return null;
  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string

  if (!captures) return null;
  var isWeekDate = !!captures[4];
  var dayOfYear = parseDateUnit(captures[1]);
  var month = parseDateUnit(captures[2]) - 1;
  var day = parseDateUnit(captures[3]);
  var week = parseDateUnit(captures[4]);
  var dayOfWeek = parseDateUnit(captures[5]) - 1;

  if (isWeekDate) {
    if (!validateWeekDate(year, week, dayOfWeek)) {
      return new Date(NaN);
    }

    return dayOfISOWeekYear(year, week, dayOfWeek);
  } else {
    var date = new Date(0);

    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
      return new Date(NaN);
    }

    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
    return date;
  }
}

function parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}

function parseTime(timeString) {
  var captures = timeString.match(timeRegex);
  if (!captures) return null; // Invalid ISO-formatted time

  var hours = parseTimeUnit(captures[1]);
  var minutes = parseTimeUnit(captures[2]);
  var seconds = parseTimeUnit(captures[3]);

  if (!validateTime(hours, minutes, seconds)) {
    return NaN;
  }

  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;
}

function parseTimeUnit(value) {
  return value && parseFloat(value.replace(',', '.')) || 0;
}

function parseTimezone(timezoneString) {
  if (timezoneString === 'Z') return 0;
  var captures = timezoneString.match(timezoneRegex);
  if (!captures) return 0;
  var sign = captures[1] === '+' ? -1 : 1;
  var hours = parseInt(captures[2]);
  var minutes = captures[3] && parseInt(captures[3]) || 0;

  if (!validateTimezone(hours, minutes)) {
    return NaN;
  }

  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);
}

function dayOfISOWeekYear(isoWeekYear, week, day) {
  var date = new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  var fourthOfJanuaryDay = date.getUTCDay() || 7;
  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
} // Validation functions
// February is null to handle the leap year (using ||)


var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100;
}

function validateDate(year, month, date) {
  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
}

function validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
}

function validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}

function validateTime(hours, minutes, seconds) {
  if (hours === 24) {
    return minutes === 0 && seconds === 0;
  }

  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
}

function validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}

/***/ }),
/* 935 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseJSON; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name parseJSON
 * @category Common Helpers
 * @summary Parse a JSON date string
 *
 * @description
 * Converts a complete ISO date string in UTC time, the typical format for transmitting
 * a date in JSON, to a JavaScript `Date` instance.
 *
 * This is a minimal implementation for converting dates retrieved from a JSON API to
 * a `Date` instance which can be used with other functions in the `date-fns` library.
 * The following formats are supported:
 *
 * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`
 * - `2000-03-15T05:20:10Z`: Without milliseconds
 * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages
 * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon
 * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol
 * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds
 * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting
 *
 * For convenience and ease of use these other input types are also supported
 * via [toDate]{@link https://date-fns.org/docs/toDate}:
 *
 * - A `Date` instance will be cloned
 * - A `number` will be treated as a timestamp
 *
 * Any other input type or invalid date strings will return an `Invalid Date`.
 *
 * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 */

function parseJSON(argument) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);

  if (typeof argument === 'string') {
    var parts = argument.match(/(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|\+00:?00)?/);

    if (parts) {
      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));
    }

    return new Date(NaN);
  }

  return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(argument);
}

/***/ }),
/* 936 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return roundToNearestMinutes; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(735);


/**
 * @name roundToNearestMinutes
 * @category Minute Helpers
 * @summary Rounds the given date to the nearest minute
 *
 * @description
 * Rounds the given date to the nearest minute (or number of minutes).
 * Rounds up when the given date is exactly between the nearest round minutes.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to round
 * @param {Object} [options] - an object with options.
 * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.
 * @returns {Date} the new date rounded to the closest minute
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.nearestTo` must be between 1 and 30
 *
 * @example
 * // Round 10 July 2014 12:12:34 to nearest minute:
 * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))
 * //=> Thu Jul 10 2014 12:13:00
 *
 * @example
 * // Round 10 July 2014 12:07:30 to nearest quarter hour:
 * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })
 * // rounds up because given date is exactly between 12:00:00 and 12:15:00
 * //=> Thu Jul 10 2014 12:15:00
 */

function roundToNearestMinutes(dirtyDate, options) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only none provided present');
  }

  var nearestTo = options && 'nearestTo' in options ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.nearestTo) : 1;

  if (nearestTo < 1 || nearestTo > 30) {
    throw new RangeError('`options.nearestTo` must be between 1 and 30');
  }

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case

  var minutes = date.getMinutes() + seconds / 60;
  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;
  var remainderMinutes = minutes % nearestTo;
  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;
  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);
}

/***/ }),
/* 937 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return set; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(938);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name set
 * @category Common Helpers
 * @summary Set date values to a given date.
 *
 * @description
 * Set date values to a given date.
 *
 * Sets time values to date from object `values`.
 * A value is not set if it is undefined or null or doesn't exist in `values`.
 *
 * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts
 * to use native `Date#setX` methods. If you use this function, you may not want to include the
 * other `setX` functions that date-fns provides if you are concerned about the bundle size.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Object} values - an object with options
 * @param {Number} [values.year] - the number of years to be set
 * @param {Number} [values.month] - the number of months to be set
 * @param {Number} [values.date] - the number of days to be set
 * @param {Number} [values.hours] - the number of hours to be set
 * @param {Number} [values.minutes] - the number of minutes to be set
 * @param {Number} [values.seconds] - the number of seconds to be set
 * @param {Number} [values.milliseconds] - the number of milliseconds to be set
 * @returns {Date} the new date with options set
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `values` must be an object
 *
 * @example
 * // Transform 1 September 2014 into 20 October 2015 in a single line:
 * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })
 * //=> Tue Oct 20 2015 00:00:00
 *
 * @example
 * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:
 * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })
 * //=> Mon Sep 01 2014 12:23:45
 */

function set(dirtyDate, values) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);

  if (typeof values !== 'object' || values === null) {
    throw new RangeError('values parameter must be an object');
  }

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

  if (isNaN(date)) {
    return new Date(NaN);
  }

  if (values.year != null) {
    date.setFullYear(values.year);
  }

  if (values.month != null) {
    date = Object(_setMonth_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, values.month);
  }

  if (values.date != null) {
    date.setDate(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.date));
  }

  if (values.hours != null) {
    date.setHours(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.hours));
  }

  if (values.minutes != null) {
    date.setMinutes(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.minutes));
  }

  if (values.seconds != null) {
    date.setSeconds(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.seconds));
  }

  if (values.milliseconds != null) {
    date.setMilliseconds(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.milliseconds));
  }

  return date;
}

/***/ }),
/* 938 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setMonth; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(854);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name setMonth
 * @category Month Helpers
 * @summary Set the month to the given date.
 *
 * @description
 * Set the month to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} month - the month of the new date
 * @returns {Date} the new date with the month set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set February to 1 September 2014:
 * var result = setMonth(new Date(2014, 8, 1), 1)
 * //=> Sat Feb 01 2014 00:00:00
 */

function setMonth(dirtyDate, dirtyMonth) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var month = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyMonth);
  var year = date.getFullYear();
  var day = date.getDate();
  var dateWithDesiredMonth = new Date(0);
  dateWithDesiredMonth.setFullYear(year, month, 15);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = Object(_getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateWithDesiredMonth); // Set the last day of the new month
  // if the original date was the last day of the longer month

  date.setMonth(month, Math.min(day, daysInMonth));
  return date;
}

/***/ }),
/* 939 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setDate; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name setDate
 * @category Day Helpers
 * @summary Set the day of the month to the given date.
 *
 * @description
 * Set the day of the month to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} dayOfMonth - the day of the month of the new date
 * @returns {Date} the new date with the day of the month set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set the 30th day of the month to 1 September 2014:
 * var result = setDate(new Date(2014, 8, 1), 30)
 * //=> Tue Sep 30 2014 00:00:00
 */

function setDate(dirtyDate, dirtyDayOfMonth) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var dayOfMonth = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDayOfMonth);
  date.setDate(dayOfMonth);
  return date;
}

/***/ }),
/* 940 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setDay; });
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(734);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name setDay
 * @category Weekday Helpers
 * @summary Set the day of the week to the given date.
 *
 * @description
 * Set the day of the week to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} day - the day of the week of the new date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the new date with the day of the week set
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // Set week day to Sunday, with the default weekStartsOn of Sunday:
 * var result = setDay(new Date(2014, 8, 1), 0)
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // Set week day to Sunday, with a weekStartsOn of Monday:
 * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })
 * //=> Sun Sep 07 2014 00:00:00
 */

function setDay(dirtyDate, dirtyDay, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, options);
  var day = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDay);
  var currentDay = date.getDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var delta = 7 - weekStartsOn;
  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;
  return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, diff, options);
}

/***/ }),
/* 941 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setDayOfYear; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name setDayOfYear
 * @category Day Helpers
 * @summary Set the day of the year to the given date.
 *
 * @description
 * Set the day of the year to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} dayOfYear - the day of the year of the new date
 * @returns {Date} the new date with the day of the year set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set the 2nd day of the year to 2 July 2014:
 * var result = setDayOfYear(new Date(2014, 6, 2), 2)
 * //=> Thu Jan 02 2014 00:00:00
 */

function setDayOfYear(dirtyDate, dirtyDayOfYear) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var dayOfYear = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDayOfYear);
  date.setMonth(0);
  date.setDate(dayOfYear);
  return date;
}

/***/ }),
/* 942 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setHours; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name setHours
 * @category Hour Helpers
 * @summary Set the hours to the given date.
 *
 * @description
 * Set the hours to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} hours - the hours of the new date
 * @returns {Date} the new date with the hours set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 4 hours to 1 September 2014 11:30:00:
 * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)
 * //=> Mon Sep 01 2014 04:30:00
 */

function setHours(dirtyDate, dirtyHours) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var hours = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyHours);
  date.setHours(hours);
  return date;
}

/***/ }),
/* 943 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setISODay; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(734);
/* harmony import */ var _getISODay_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(859);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(737);





/**
 * @name setISODay
 * @category Weekday Helpers
 * @summary Set the day of the ISO week to the given date.
 *
 * @description
 * Set the day of the ISO week to the given date.
 * ISO week starts with Monday.
 * 7 is the index of Sunday, 1 is the index of Monday etc.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} day - the day of the ISO week of the new date
 * @returns {Date} the new date with the day of the ISO week set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set Sunday to 1 September 2014:
 * var result = setISODay(new Date(2014, 8, 1), 7)
 * //=> Sun Sep 07 2014 00:00:00
 */

function setISODay(dirtyDate, dirtyDay) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var day = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDay);
  var currentDay = Object(_getISODay_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date);
  var diff = day - currentDay;
  return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, diff);
}

/***/ }),
/* 944 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setISOWeek; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(860);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name setISOWeek
 * @category ISO Week Helpers
 * @summary Set the ISO week to the given date.
 *
 * @description
 * Set the ISO week to the given date, saving the weekday number.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} isoWeek - the ISO week of the new date
 * @returns {Date} the new date with the ISO week set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set the 53rd ISO week to 7 August 2004:
 * var result = setISOWeek(new Date(2004, 7, 7), 53)
 * //=> Sat Jan 01 2005 00:00:00
 */

function setISOWeek(dirtyDate, dirtyISOWeek) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var isoWeek = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyISOWeek);
  var diff = Object(_getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date) - isoWeek;
  date.setDate(date.getDate() - diff * 7);
  return date;
}

/***/ }),
/* 945 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setMilliseconds; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name setMilliseconds
 * @category Millisecond Helpers
 * @summary Set the milliseconds to the given date.
 *
 * @description
 * Set the milliseconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} milliseconds - the milliseconds of the new date
 * @returns {Date} the new date with the milliseconds set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 300 milliseconds to 1 September 2014 11:30:40.500:
 * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)
 * //=> Mon Sep 01 2014 11:30:40.300
 */

function setMilliseconds(dirtyDate, dirtyMilliseconds) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var milliseconds = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyMilliseconds);
  date.setMilliseconds(milliseconds);
  return date;
}

/***/ }),
/* 946 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setMinutes; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name setMinutes
 * @category Minute Helpers
 * @summary Set the minutes to the given date.
 *
 * @description
 * Set the minutes to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} minutes - the minutes of the new date
 * @returns {Date} the new date with the minutes set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 45 minutes to 1 September 2014 11:30:40:
 * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:45:40
 */

function setMinutes(dirtyDate, dirtyMinutes) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var minutes = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyMinutes);
  date.setMinutes(minutes);
  return date;
}

/***/ }),
/* 947 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setQuarter; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(938);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name setQuarter
 * @category Quarter Helpers
 * @summary Set the year quarter to the given date.
 *
 * @description
 * Set the year quarter to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} quarter - the quarter of the new date
 * @returns {Date} the new date with the quarter set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set the 2nd quarter to 2 July 2014:
 * var result = setQuarter(new Date(2014, 6, 2), 2)
 * //=> Wed Apr 02 2014 00:00:00
 */

function setQuarter(dirtyDate, dirtyQuarter) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var quarter = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyQuarter);
  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
  var diff = quarter - oldQuarter;
  return Object(_setMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, date.getMonth() + diff * 3);
}

/***/ }),
/* 948 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setSeconds; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name setSeconds
 * @category Second Helpers
 * @summary Set the seconds to the given date.
 *
 * @description
 * Set the seconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} seconds - the seconds of the new date
 * @returns {Date} the new date with the seconds set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set 45 seconds to 1 September 2014 11:30:40:
 * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:30:45
 */

function setSeconds(dirtyDate, dirtySeconds) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var seconds = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtySeconds);
  date.setSeconds(seconds);
  return date;
}

/***/ }),
/* 949 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setWeek; });
/* harmony import */ var _getWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(869);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(737);




/**
 * @name setWeek
 * @category Week Helpers
 * @summary Set the local week to the given date.
 *
 * @description
 * Set the local week to the given date, saving the weekday number.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} week - the week of the new date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @returns {Date} the new date with the local week set
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 *
 * @example
 * // Set the 1st week to 2 January 2005 with default options:
 * var result = setWeek(new Date(2005, 0, 2), 1)
 * //=> Sun Dec 26 2004 00:00:00
 *
 * @example
 * // Set the 1st week to 2 January 2005,
 * // if Monday is the first day of the week,
 * // and the first week of the year always contains 4 January:
 * var result = setWeek(new Date(2005, 0, 2), 1, {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> Sun Jan 4 2004 00:00:00
 */

function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var week = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyWeek);
  var diff = Object(_getWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, dirtyOptions) - week;
  date.setDate(date.getDate() - diff * 7);
  return date;
}

/***/ }),
/* 950 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setWeekYear; });
/* harmony import */ var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(751);
/* harmony import */ var _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(870);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(736);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(735);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(737);





/**
 * @name setWeekYear
 * @category Week-Numbering Year Helpers
 * @summary Set the local week-numbering year to the given date.
 *
 * @description
 * Set the local week-numbering year to the given date,
 * saving the week number and the weekday number.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} weekYear - the local week-numbering year of the new date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @returns {Date} the new date with the local week-numbering year set
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 *
 * @example
 * // Set the local week-numbering year 2004 to 2 January 2010 with default options:
 * var result = setWeekYear(new Date(2010, 0, 2), 2004)
 * //=> Sat Jan 03 2004 00:00:00
 *
 * @example
 * // Set the local week-numbering year 2004 to 2 January 2010,
 * // if Monday is the first day of week
 * // and 4 January is always in the first week of the year:
 * var result = setWeekYear(new Date(2010, 0, 2), 2004, {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> Sat Jan 01 2005 00:00:00
 */

function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options.firstWeekContainsDate);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
  var weekYear = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyWeekYear);
  var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, Object(_startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, dirtyOptions));
  var firstWeek = new Date(0);
  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);
  firstWeek.setHours(0, 0, 0, 0);
  date = Object(_startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(firstWeek, dirtyOptions);
  date.setDate(date.getDate() + diff);
  return date;
}

/***/ }),
/* 951 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setYear; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name setYear
 * @category Year Helpers
 * @summary Set the year to the given date.
 *
 * @description
 * Set the year to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} year - the year of the new date
 * @returns {Date} the new date with the year set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set year 2013 to 1 September 2014:
 * var result = setYear(new Date(2014, 8, 1), 2013)
 * //=> Sun Sep 01 2013 00:00:00
 */

function setYear(dirtyDate, dirtyYear) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var year = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

  if (isNaN(date)) {
    return new Date(NaN);
  }

  date.setFullYear(year);
  return date;
}

/***/ }),
/* 952 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfDecade; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);


/**
 * @name startOfDecade
 * @category Decade Helpers
 * @summary Return the start of a decade for the given date.
 *
 * @description
 * Return the start of a decade for the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a decade
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a decade for 21 October 2015 00:00:00:
 * var result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))
 * //=> Jan 01 2010 00:00:00
 */

function startOfDecade(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
  var year = date.getFullYear();
  var decade = Math.floor(year / 10) * 10;
  date.setFullYear(decade, 0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 953 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfToday; });
/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(753);

/**
 * @name startOfToday
 * @category Day Helpers
 * @summary Return the start of today.
 * @pure false
 *
 * @description
 * Return the start of today.
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @returns {Date} the start of today
 *
 * @example
 * // If today is 6 October 2014:
 * var result = startOfToday()
 * //=> Mon Oct 6 2014 00:00:00
 */

function startOfToday() {
  return Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now());
}

/***/ }),
/* 954 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfTomorrow; });
/**
 * @name startOfTomorrow
 * @category Day Helpers
 * @summary Return the start of tomorrow.
 * @pure false
 *
 * @description
 * Return the start of tomorrow.
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `new Date()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @returns {Date} the start of tomorrow
 *
 * @example
 * // If today is 6 October 2014:
 * var result = startOfTomorrow()
 * //=> Tue Oct 7 2014 00:00:00
 */
function startOfTomorrow() {
  var now = new Date();
  var year = now.getFullYear();
  var month = now.getMonth();
  var day = now.getDate();
  var date = new Date(0);
  date.setFullYear(year, month, day + 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 955 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return startOfYesterday; });
/**
 * @name startOfYesterday
 * @category Day Helpers
 * @summary Return the start of yesterday.
 * @pure false
 *
 * @description
 * Return the start of yesterday.
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `new Date()` internally hence impure and can't be safely curried.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @returns {Date} the start of yesterday
 *
 * @example
 * // If today is 6 October 2014:
 * var result = startOfYesterday()
 * //=> Sun Oct 5 2014 00:00:00
 */
function startOfYesterday() {
  var now = new Date();
  var year = now.getFullYear();
  var month = now.getMonth();
  var day = now.getDate();
  var date = new Date(0);
  date.setFullYear(year, month, day - 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 956 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subBusinessDays; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(739);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subBusinessDays
 * @category Day Helpers
 * @summary Substract the specified number of business days (mon - fri) to the given date.
 *
 * @description
 * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the business days subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Substract 10 business days from 1 September 2014:
 * var result = subBusinessDays(new Date(2014, 8, 1), 10)
 * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)
 */

function subBusinessDays(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 957 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subHours; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addHours_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(743);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subHours
 * @category Hour Helpers
 * @summary Subtract the specified number of hours from the given date.
 *
 * @description
 * Subtract the specified number of hours from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the hours subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 2 hours from 11 July 2014 01:00:00:
 * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)
 * //=> Thu Jul 10 2014 23:00:00
 */

function subHours(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addHours_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 958 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subMinutes; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addMinutes_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(754);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subMinutes
 * @category Minute Helpers
 * @summary Subtract the specified number of minutes from the given date.
 *
 * @description
 * Subtract the specified number of minutes from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the minutes subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 30 minutes from 10 July 2014 12:00:00:
 * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)
 * //=> Thu Jul 10 2014 11:30:00
 */

function subMinutes(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addMinutes_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 959 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subQuarters; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(755);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subQuarters
 * @category Quarter Helpers
 * @summary Subtract the specified number of year quarters from the given date.
 *
 * @description
 * Subtract the specified number of year quarters from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the quarters subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 3 quarters from 1 September 2014:
 * var result = subQuarters(new Date(2014, 8, 1), 3)
 * //=> Sun Dec 01 2013 00:00:00
 */

function subQuarters(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addQuarters_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 960 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subSeconds; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addSeconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(756);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subSeconds
 * @category Second Helpers
 * @summary Subtract the specified number of seconds from the given date.
 *
 * @description
 * Subtract the specified number of seconds from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the seconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 30 seconds from 10 July 2014 12:45:00:
 * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
 * //=> Thu Jul 10 2014 12:44:30
 */

function subSeconds(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addSeconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 961 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subWeeks; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(757);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subWeeks
 * @category Week Helpers
 * @summary Subtract the specified number of weeks from the given date.
 *
 * @description
 * Subtract the specified number of weeks from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the weeks subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 4 weeks from 1 September 2014:
 * var result = subWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Aug 04 2014 00:00:00
 */

function subWeeks(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 962 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subYears; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var _addYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(758);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(737);



/**
 * @name subYears
 * @category Year Helpers
 * @summary Subtract the specified number of years from the given date.
 *
 * @description
 * Subtract the specified number of years from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 years from 1 September 2014:
 * var result = subYears(new Date(2014, 8, 1), 5)
 * //=> Tue Sep 01 2009 00:00:00
 */

function subYears(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
  return Object(_addYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
}

/***/ }),
/* 963 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "maxTime", function() { return maxTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minTime", function() { return minTime; });
/**
 *  Maximum allowed time.
 *  @constant
 *  @type {number}
 *  @default
 */
var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;
/**
 *  Minimum allowed time.
 *  @constant
 *  @type {number}
 *  @default
 */

var minTime = -maxTime;

/***/ }),
/* 964 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _dicomparser = __webpack_require__(965);

Object.keys(_dicomparser).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _dicomparser[key];
});

var _dicomtags = __webpack_require__(724);

Object.keys(_dicomtags).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _dicomtags[key];
});

var _dicomusage = __webpack_require__(986);

Object.keys(_dicomusage).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _dicomusage[key];
});

/***/ }),
/* 965 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseDicom = void 0;

var _datastream = _interopRequireDefault(__webpack_require__(966));

var _dicomparser = _interopRequireDefault(__webpack_require__(967));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var parseDicom = function parseDicom(arrayBuffer) {
  var ds = new _datastream.default(arrayBuffer);

  if (!_dicomparser.default.match(ds)) {
    throw new Error('not a dicom file.');
  }

  var dp = new _dicomparser.default(ds);
  dp.parse();
  return {
    getTag: function getTag(tagName) {
      return dp.valueOf(tagName);
    },
    pixelData: function pixelData(index) {
      if (index === void 0) {
        index = 0;
      }

      return dp.pixelData(index);
    },
    rescaleSlope: function rescaleSlope() {
      return dp.rescaleSlope() ? parseFloat(dp.rescaleSlope()) : dp.rescaleSlope();
    },
    rescaleIntercept: function rescaleIntercept() {
      return dp.rescaleIntercept() ? parseFloat(dp.rescaleIntercept()) : dp.rescaleIntercept();
    },
    numberOfChannels: function numberOfChannels() {
      return dp.numberOfChannels();
    },
    clearBuffer: function clearBuffer() {
      return dp.clearBuffer();
    }
  };
};

exports.parseDicom = parseDicom;

/***/ }),
/* 966 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

exports.__esModule = true;
exports.default = void 0;

/* eslint-disable */

/**
  DataStream reads scalars, arrays and structs of data from an ArrayBuffer.
  It's like a file-like DataView on steroids.

  @param {ArrayBuffer} arrayBuffer ArrayBuffer to read from.
  @param {?Number} byteOffset Offset from arrayBuffer beginning for the DataStream.
  @param {?Boolean} endianness DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN (the default).
  */
var DataStream = function DataStream(arrayBuffer, byteOffset, endianness) {
  this._byteOffset = byteOffset || 0;

  if (arrayBuffer instanceof ArrayBuffer) {
    this.buffer = arrayBuffer;
  } else if (typeof arrayBuffer == 'object') {
    this.dataView = arrayBuffer;

    if (byteOffset) {
      this._byteOffset += byteOffset;
    }
  } else {
    this.buffer = new ArrayBuffer(arrayBuffer || 1);
  }

  this.position = 0;
  this.endianness = endianness == null ? DataStream.LITTLE_ENDIAN : endianness;
};

DataStream.prototype = {};
/* Fix for Opera 12 not defining BYTES_PER_ELEMENT in typed array prototypes. */

if (Uint8Array.prototype.BYTES_PER_ELEMENT === undefined) {
  Uint8Array.prototype.BYTES_PER_ELEMENT = Uint8Array.BYTES_PER_ELEMENT;
  Int8Array.prototype.BYTES_PER_ELEMENT = Int8Array.BYTES_PER_ELEMENT;
  Uint8ClampedArray.prototype.BYTES_PER_ELEMENT = Uint8ClampedArray.BYTES_PER_ELEMENT;
  Uint16Array.prototype.BYTES_PER_ELEMENT = Uint16Array.BYTES_PER_ELEMENT;
  Int16Array.prototype.BYTES_PER_ELEMENT = Int16Array.BYTES_PER_ELEMENT;
  Uint32Array.prototype.BYTES_PER_ELEMENT = Uint32Array.BYTES_PER_ELEMENT;
  Int32Array.prototype.BYTES_PER_ELEMENT = Int32Array.BYTES_PER_ELEMENT;
  Float64Array.prototype.BYTES_PER_ELEMENT = Float64Array.BYTES_PER_ELEMENT;
}

DataStream.prototype.readline = function (maxLength) {
  maxLength = maxLength || 1024;
  var remain = this.byteLength - this.position;
  var len = Math.min(this.position + maxLength, this.byteLength);
  var pos = this.position;
  var lineend = '\n'.charCodeAt(0);

  for (; pos < len; ++pos) {
    var ch = this._dataView.getUint8(pos);

    if (ch === lineend) {
      break;
    }
  }

  var str = DataStream.createStringFromArray(this.mapUint8Array(pos - this.position));
  this.seek(pos + 1);
  return str;
};
/**
  Saves the DataStream contents to the given filename.
  Uses Chrome's anchor download property to initiate download.

  @param {string} filename Filename to save as.
  @return {null}
  */


DataStream.prototype.save = function (filename) {
  var blob = new Blob(this.buffer);
  var URL = window.webkitURL || window.URL;

  if (URL && URL.createObjectURL) {
    var url = URL.createObjectURL(blob);
    var a = document.createElement('a');
    a.setAttribute('href', url);
    a.setAttribute('download', filename);
    a.click();
    URL.revokeObjectURL(url);
  } else {
    throw "DataStream.save: Can't create object URL.";
  }
};
/**
  Big-endian const to use as default endianness.
  @type {boolean}
  */


DataStream.BIG_ENDIAN = false;
/**
  Little-endian const to use as default endianness.
  @type {boolean}
  */

DataStream.LITTLE_ENDIAN = true;
/**
  Whether to extend DataStream buffer when trying to write beyond its size.
  If set, the buffer is reallocated to twice its current size until the
  requested write fits the buffer.
  @type {boolean}
  */

DataStream.prototype._dynamicSize = true;
Object.defineProperty(DataStream.prototype, 'dynamicSize', {
  get: function get() {
    return this._dynamicSize;
  },
  set: function set(v) {
    if (!v) {
      this._trimAlloc();
    }

    this._dynamicSize = v;
  }
});
/**
  Virtual byte length of the DataStream backing buffer.
  Updated to be max of original buffer size and last written size.
  If dynamicSize is false is set to buffer size.
  @type {number}
  */

DataStream.prototype._byteLength = 0;
/**
  Returns the byte length of the DataStream object.
  @type {number}
  */

Object.defineProperty(DataStream.prototype, 'byteLength', {
  get: function get() {
    return this._byteLength - this._byteOffset;
  }
});
/**
  Set/get the backing ArrayBuffer of the DataStream object.
  The setter updates the DataView to point to the new buffer.
  @type {Object}
  */

Object.defineProperty(DataStream.prototype, 'buffer', {
  get: function get() {
    this._trimAlloc();

    return this._buffer;
  },
  set: function set(v) {
    this._buffer = v;
    this._dataView = new DataView(this._buffer, this._byteOffset);
    this._byteLength = this._buffer.byteLength;
  }
});
/**
  Set/get the byteOffset of the DataStream object.
  The setter updates the DataView to point to the new byteOffset.
  @type {number}
  */

Object.defineProperty(DataStream.prototype, 'byteOffset', {
  get: function get() {
    return this._byteOffset;
  },
  set: function set(v) {
    this._byteOffset = v;
    this._dataView = new DataView(this._buffer, this._byteOffset);
    this._byteLength = this._buffer.byteLength;
  }
});
/**
  Set/get the backing DataView of the DataStream object.
  The setter updates the buffer and byteOffset to point to the DataView values.
  @type {Object}
  */

Object.defineProperty(DataStream.prototype, 'dataView', {
  get: function get() {
    return this._dataView;
  },
  set: function set(v) {
    this._byteOffset = v.byteOffset;
    this._buffer = v.buffer;
    this._dataView = new DataView(this._buffer, this._byteOffset);
    this._byteLength = this._byteOffset + v.byteLength;
  }
});
/**
  Internal function to resize the DataStream buffer when required.
  @param {number} extra Number of bytes to add to the buffer allocation.
  @return {null}
  */

DataStream.prototype._realloc = function (extra) {
  if (!this._dynamicSize) {
    return;
  }

  var req = this._byteOffset + this.position + extra;
  var blen = this._buffer.byteLength;

  if (req <= blen) {
    if (req > this._byteLength) {
      this._byteLength = req;
    }

    return;
  }

  if (blen < 1) {
    blen = 1;
  }

  while (req > blen) {
    blen *= 2;
  }

  var buf = new ArrayBuffer(blen);
  var src = new Uint8Array(this._buffer);
  var dst = new Uint8Array(buf, 0, src.length);
  dst.set(src);
  this.buffer = buf;
  this._byteLength = req;
};
/**
  Internal function to trim the DataStream buffer when required.
  Used for stripping out the extra bytes from the backing buffer when
  the virtual byteLength is smaller than the buffer byteLength (happens after
  growing the buffer with writes and not filling the extra space completely).

  @return {null}
  */


DataStream.prototype._trimAlloc = function () {
  if (this._byteLength == this._buffer.byteLength) {
    return;
  }

  var buf = new ArrayBuffer(this._byteLength);
  var dst = new Uint8Array(buf);
  var src = new Uint8Array(this._buffer, 0, dst.length);
  dst.set(src);
  this.buffer = buf;
};
/**
  Sets the DataStream read/write position to given position.
  Clamps between 0 and DataStream length.

  @param {number} pos Position to seek to.
  @return {null}
  */


DataStream.prototype.seek = function (pos) {
  var npos = Math.max(0, Math.min(this.byteLength, pos));
  this.position = isNaN(npos) || !isFinite(npos) ? 0 : npos;
};
/**
  Returns true if the DataStream seek pointer is at the end of buffer and
  there's no more data to read.

  @return {boolean} True if the seek pointer is at the end of the buffer.
  */


DataStream.prototype.isEof = function () {
  return this.position >= this.byteLength;
};
/**
  Maps an Int32Array into the DataStream buffer, swizzling it to native
  endianness in-place. The current offset from the start of the buffer needs to
  be a multiple of element size, just like with typed array views.

  Nice for quickly reading in data. Warning: potentially modifies the buffer
  contents.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} Int32Array to the DataStream backing buffer.
  */


DataStream.prototype.mapInt32Array = function (length, e) {
  this._realloc(length * 4);

  var arr = new Int32Array(this._buffer, this.byteOffset + this.position, length);
  DataStream.arrayToNative(arr, e == null ? this.endianness : e);
  this.position += length * 4;
  return arr;
};
/**
  Maps an Int16Array into the DataStream buffer, swizzling it to native
  endianness in-place. The current offset from the start of the buffer needs to
  be a multiple of element size, just like with typed array views.

  Nice for quickly reading in data. Warning: potentially modifies the buffer
  contents.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} Int16Array to the DataStream backing buffer.
  */


DataStream.prototype.mapInt16Array = function (length, e) {
  this._realloc(length * 2);

  var arr = new Int16Array(this._buffer, this.byteOffset + this.position, length);
  DataStream.arrayToNative(arr, e == null ? this.endianness : e);
  this.position += length * 2;
  return arr;
};
/**
  Maps an Int8Array into the DataStream buffer.

  Nice for quickly reading in data.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} Int8Array to the DataStream backing buffer.
  */


DataStream.prototype.mapInt8Array = function (length) {
  this._realloc(length * 1);

  var arr = new Int8Array(this._buffer, this.byteOffset + this.position, length);
  this.position += length * 1;
  return arr;
};
/**
  Maps a Uint32Array into the DataStream buffer, swizzling it to native
  endianness in-place. The current offset from the start of the buffer needs to
  be a multiple of element size, just like with typed array views.

  Nice for quickly reading in data. Warning: potentially modifies the buffer
  contents.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} Uint32Array to the DataStream backing buffer.
  */


DataStream.prototype.mapUint32Array = function (length, e) {
  this._realloc(length * 4);

  var arr = new Uint32Array(this._buffer, this.byteOffset + this.position, length);
  DataStream.arrayToNative(arr, e == null ? this.endianness : e);
  this.position += length * 4;
  return arr;
};
/**
  Maps a Uint16Array into the DataStream buffer, swizzling it to native
  endianness in-place. The current offset from the start of the buffer needs to
  be a multiple of element size, just like with typed array views.

  Nice for quickly reading in data. Warning: potentially modifies the buffer
  contents.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} Uint16Array to the DataStream backing buffer.
  */


DataStream.prototype.mapUint16Array = function (length, e) {
  this._realloc(length * 2);

  var arr = new Uint16Array(this._buffer, this.byteOffset + this.position, length);
  DataStream.arrayToNative(arr, e == null ? this.endianness : e);
  this.position += length * 2;
  return arr;
};
/**
  Maps a Uint8Array into the DataStream buffer.

  Nice for quickly reading in data.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} Uint8Array to the DataStream backing buffer.
  */


DataStream.prototype.mapUint8Array = function (length) {
  this._realloc(length * 1);

  var arr = new Uint8Array(this._buffer, this.byteOffset + this.position, length);
  this.position += length * 1;
  return arr;
};
/**
  Maps a Float64Array into the DataStream buffer, swizzling it to native
  endianness in-place. The current offset from the start of the buffer needs to
  be a multiple of element size, just like with typed array views.

  Nice for quickly reading in data. Warning: potentially modifies the buffer
  contents.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} Float64Array to the DataStream backing buffer.
  */


DataStream.prototype.mapFloat64Array = function (length, e) {
  this._realloc(length * 8);

  var arr = new Float64Array(this._buffer, this.byteOffset + this.position, length);
  DataStream.arrayToNative(arr, e == null ? this.endianness : e);
  this.position += length * 8;
  return arr;
};
/**
  Maps a Float32Array into the DataStream buffer, swizzling it to native
  endianness in-place. The current offset from the start of the buffer needs to
  be a multiple of element size, just like with typed array views.

  Nice for quickly reading in data. Warning: potentially modifies the buffer
  contents.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} Float32Array to the DataStream backing buffer.
  */


DataStream.prototype.mapFloat32Array = function (length, e) {
  this._realloc(length * 4);

  var arr = new Float32Array(this._buffer, this.byteOffset + this.position, length);
  DataStream.arrayToNative(arr, e == null ? this.endianness : e);
  this.position += length * 4;
  return arr;
};

DataStream.prototype.readIntegerArray = function (Datatype, count, e) {
  if (this.isEof()) {
    return null;
  }

  var bpe = Datatype.BYTES_PER_ELEMENT;
  var length = count || Math.floor((this.byteLength - this.position) / bpe);

  if (length < 1) {
    return null;
  }

  var endian = e === undefined ? this.endianness : e;
  var srcOffset = this.byteOffset + this.position;
  var byteLen = length * bpe;
  this.position += byteLen;

  if (this.isEof()) {
    return null;
  }

  var arr = new Datatype(length);
  DataStream.memcpy(arr.buffer, 0, this.buffer, srcOffset, byteLen);

  if (bpe > 1 && endian != this.endianness) {
    DataStream.arrayToNative(arr, endian);
  }

  return arr;
};
/**
  Reads an Int32Array of desired length and endianness from the DataStream.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} The read Int32Array.
 */


DataStream.prototype.readInt32Array = function (length, e) {
  return this.readIntegerArray(Int32Array, length, e);
};
/**
  Reads an Int16Array of desired length and endianness from the DataStream.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} The read Int16Array.
 */


DataStream.prototype.readInt16Array = function (length, e) {
  return this.readIntegerArray(Int16Array, length, e);
};
/**
  Reads an Int8Array of desired length from the DataStream.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} The read Int8Array.
 */


DataStream.prototype.readInt8Array = function (length) {
  return this.readIntegerArray(Int8Array, length, e);
};
/**
  Reads a Uint32Array of desired length and endianness from the DataStream.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} The read Uint32Array.
 */


DataStream.prototype.readUint32Array = function (length, e) {
  return this.readIntegerArray(Uint32Array, length, e);
};
/**
  Reads a Uint16Array of desired length and endianness from the DataStream.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} The read Uint16Array.
 */


DataStream.prototype.readUint16Array = function (length, e) {
  return this.readIntegerArray(Uint16Array, length, e);
};
/**
  Reads a Uint8Array of desired length from the DataStream.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} The read Uint8Array.
 */


DataStream.prototype.readUint8Array = function (length) {
  return this.readIntegerArray(Uint8Array, length, e);
};
/**
  Reads a Float64Array of desired length and endianness from the DataStream.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} The read Float64Array.
 */


DataStream.prototype.readFloat64Array = function (length, e) {
  length = length == null ? this.byteLength - this.position / 8 : length;
  var arr = new Float64Array(length);
  DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);
  DataStream.arrayToNative(arr, e == null ? this.endianness : e);
  this.position += arr.byteLength;
  return arr;
};
/**
  Reads a Float32Array of desired length and endianness from the DataStream.

  @param {number} length Number of elements to map.
  @param {?boolean} e Endianness of the data to read.
  @return {Object} The read Float32Array.
 */


DataStream.prototype.readFloat32Array = function (length, e) {
  length = length == null ? this.byteLength - this.position / 4 : length;
  var arr = new Float32Array(length);
  DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);
  DataStream.arrayToNative(arr, e == null ? this.endianness : e);
  this.position += arr.byteLength;
  return arr;
};
/**
  Writes an Int32Array of specified endianness to the DataStream.

  @param {Object} arr The array to write.
  @param {?boolean} e Endianness of the data to write.
 */


DataStream.prototype.writeInt32Array = function (arr, e) {
  this._realloc(arr.length * 4);

  if (arr instanceof Int32Array && (this.byteOffset + this.position) % arr.BYTES_PER_ELEMENT == 0) {
    DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, arr.byteOffset, arr.byteLength);
    this.mapInt32Array(arr.length, e);
  } else {
    for (var i = 0; i < arr.length; i++) {
      this.writeInt32(arr[i], e);
    }
  }
};
/**
  Writes an Int16Array of specified endianness to the DataStream.

  @param {Object} arr The array to write.
  @param {?boolean} e Endianness of the data to write.
 */


DataStream.prototype.writeInt16Array = function (arr, e) {
  this._realloc(arr.length * 2);

  if (arr instanceof Int16Array && (this.byteOffset + this.position) % arr.BYTES_PER_ELEMENT == 0) {
    DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, arr.byteOffset, arr.byteLength);
    this.mapInt16Array(arr.length, e);
  } else {
    for (var i = 0; i < arr.length; i++) {
      this.writeInt16(arr[i], e);
    }
  }
};
/**
  Writes an Int8Array to the DataStream.

  @param {Object} arr The array to write.
 */


DataStream.prototype.writeInt8Array = function (arr) {
  this._realloc(arr.length * 1);

  if (arr instanceof Int8Array && (this.byteOffset + this.position) % arr.BYTES_PER_ELEMENT == 0) {
    DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, arr.byteOffset, arr.byteLength);
    this.mapInt8Array(arr.length);
  } else {
    for (var i = 0; i < arr.length; i++) {
      this.writeInt8(arr[i]);
    }
  }
};
/**
  Writes a Uint32Array of specified endianness to the DataStream.

  @param {Object} arr The array to write.
  @param {?boolean} e Endianness of the data to write.
 */


DataStream.prototype.writeUint32Array = function (arr, e) {
  this._realloc(arr.length * 4);

  if (arr instanceof Uint32Array && (this.byteOffset + this.position) % arr.BYTES_PER_ELEMENT == 0) {
    DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, arr.byteOffset, arr.byteLength);
    this.mapUint32Array(arr.length, e);
  } else {
    for (var i = 0; i < arr.length; i++) {
      this.writeUint32(arr[i], e);
    }
  }
};
/**
  Writes a Uint16Array of specified endianness to the DataStream.

  @param {Object} arr The array to write.
  @param {?boolean} e Endianness of the data to write.
 */


DataStream.prototype.writeUint16Array = function (arr, e) {
  this._realloc(arr.length * 2);

  if (arr instanceof Uint16Array && (this.byteOffset + this.position) % arr.BYTES_PER_ELEMENT == 0) {
    DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, arr.byteOffset, arr.byteLength);
    this.mapUint16Array(arr.length, e);
  } else {
    for (var i = 0; i < arr.length; i++) {
      this.writeUint16(arr[i], e);
    }
  }
};
/**
  Writes a Uint8Array to the DataStream.

  @param {Object} arr The array to write.
 */


DataStream.prototype.writeUint8Array = function (arr) {
  this._realloc(arr.length * 1);

  if (arr instanceof Uint8Array && (this.byteOffset + this.position) % arr.BYTES_PER_ELEMENT == 0) {
    DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, arr.byteOffset, arr.byteLength);
    this.mapUint8Array(arr.length);
  } else {
    for (var i = 0; i < arr.length; i++) {
      this.writeUint8(arr[i]);
    }
  }
};
/**
  Writes a Float64Array of specified endianness to the DataStream.

  @param {Object} arr The array to write.
  @param {?boolean} e Endianness of the data to write.
 */


DataStream.prototype.writeFloat64Array = function (arr, e) {
  this._realloc(arr.length * 8);

  if (arr instanceof Float64Array && (this.byteOffset + this.position) % arr.BYTES_PER_ELEMENT == 0) {
    DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, arr.byteOffset, arr.byteLength);
    this.mapFloat64Array(arr.length, e);
  } else {
    for (var i = 0; i < arr.length; i++) {
      this.writeFloat64(arr[i], e);
    }
  }
};
/**
  Writes a Float32Array of specified endianness to the DataStream.

  @param {Object} arr The array to write.
  @param {?boolean} e Endianness of the data to write.
 */


DataStream.prototype.writeFloat32Array = function (arr, e) {
  this._realloc(arr.length * 4);

  if (arr instanceof Float32Array && (this.byteOffset + this.position) % arr.BYTES_PER_ELEMENT == 0) {
    DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, arr.byteOffset, arr.byteLength);
    this.mapFloat32Array(arr.length, e);
  } else {
    for (var i = 0; i < arr.length; i++) {
      this.writeFloat32(arr[i], e);
    }
  }
};
/**
  Reads a 32-bit int from the DataStream with the desired endianness.

  @param {?boolean} e Endianness of the number.
  @return {number} The read number.
 */


DataStream.prototype.readInt32 = function (e) {
  var v = this._dataView.getInt32(this.position, e == null ? this.endianness : e);

  this.position += 4;
  return v;
};
/**
  Reads a 16-bit int from the DataStream with the desired endianness.

  @param {?boolean} e Endianness of the number.
  @return {number} The read number.
 */


DataStream.prototype.readInt16 = function (e) {
  var v = this._dataView.getInt16(this.position, e == null ? this.endianness : e);

  this.position += 2;
  return v;
};
/**
  Reads an 8-bit int from the DataStream.

  @return {number} The read number.
 */


DataStream.prototype.readInt8 = function () {
  var v = this._dataView.getInt8(this.position);

  this.position += 1;
  return v;
};
/**
  Reads a 32-bit unsigned int from the DataStream with the desired endianness.

  @param {?boolean} e Endianness of the number.
  @return {number} The read number.
 */


DataStream.prototype.readUint32 = function (e) {
  var v = this._dataView.getUint32(this.position, e == null ? this.endianness : e);

  this.position += 4;
  return v;
};
/**
  Reads a 16-bit unsigned int from the DataStream with the desired endianness.

  @param {?boolean} e Endianness of the number.
  @return {number} The read number.
 */


DataStream.prototype.readUint16 = function (e) {
  var v = this._dataView.getUint16(this.position, e == null ? this.endianness : e);

  this.position += 2;
  return v;
};
/**
  Reads an 8-bit unsigned int from the DataStream.

  @return {number} The read number.
 */


DataStream.prototype.readUint8 = function () {
  var v = this._dataView.getUint8(this.position);

  this.position += 1;
  return v;
};
/**
  Reads a 32-bit float from the DataStream with the desired endianness.

  @param {?boolean} e Endianness of the number.
  @return {number} The read number.
 */


DataStream.prototype.readFloat32 = function (e) {
  var v = this._dataView.getFloat32(this.position, e == null ? this.endianness : e);

  this.position += 4;
  return v;
};
/**
  Reads a 64-bit float from the DataStream with the desired endianness.

  @param {?boolean} e Endianness of the number.
  @return {number} The read number.
 */


DataStream.prototype.readFloat64 = function (e) {
  var v = this._dataView.getFloat64(this.position, e == null ? this.endianness : e);

  this.position += 8;
  return v;
};
/**
  Writes a 32-bit int to the DataStream with the desired endianness.

  @param {number} v Number to write.
  @param {?boolean} e Endianness of the number.
 */


DataStream.prototype.writeInt32 = function (v, e) {
  this._realloc(4);

  this._dataView.setInt32(this.position, v, e == null ? this.endianness : e);

  this.position += 4;
};
/**
  Writes a 16-bit int to the DataStream with the desired endianness.

  @param {number} v Number to write.
  @param {?boolean} e Endianness of the number.
 */


DataStream.prototype.writeInt16 = function (v, e) {
  this._realloc(2);

  this._dataView.setInt16(this.position, v, e == null ? this.endianness : e);

  this.position += 2;
};
/**
  Writes an 8-bit int to the DataStream.

  @param {number} v Number to write.
 */


DataStream.prototype.writeInt8 = function (v) {
  this._realloc(1);

  this._dataView.setInt8(this.position, v);

  this.position += 1;
};
/**
  Writes a 32-bit unsigned int to the DataStream with the desired endianness.

  @param {number} v Number to write.
  @param {?boolean} e Endianness of the number.
 */


DataStream.prototype.writeUint32 = function (v, e) {
  this._realloc(4);

  this._dataView.setUint32(this.position, v, e == null ? this.endianness : e);

  this.position += 4;
};
/**
  Writes a 16-bit unsigned int to the DataStream with the desired endianness.

  @param {number} v Number to write.
  @param {?boolean} e Endianness of the number.
 */


DataStream.prototype.writeUint16 = function (v, e) {
  this._realloc(2);

  this._dataView.setUint16(this.position, v, e == null ? this.endianness : e);

  this.position += 2;
};
/**
  Writes an 8-bit unsigned  int to the DataStream.

  @param {number} v Number to write.
 */


DataStream.prototype.writeUint8 = function (v) {
  this._realloc(1);

  this._dataView.setUint8(this.position, v);

  this.position += 1;
};
/**
  Writes a 32-bit float to the DataStream with the desired endianness.

  @param {number} v Number to write.
  @param {?boolean} e Endianness of the number.
 */


DataStream.prototype.writeFloat32 = function (v, e) {
  this._realloc(4);

  this._dataView.setFloat32(this.position, v, e == null ? this.endianness : e);

  this.position += 4;
};
/**
  Writes a 64-bit float to the DataStream with the desired endianness.

  @param {number} v Number to write.
  @param {?boolean} e Endianness of the number.
 */


DataStream.prototype.writeFloat64 = function (v, e) {
  this._realloc(8);

  this._dataView.setFloat64(this.position, v, e == null ? this.endianness : e);

  this.position += 8;
};
/**
  Native endianness. Either DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN
  depending on the platform endianness.

  @type {boolean}
 */


DataStream.endianness = new Int8Array(new Int16Array([1]).buffer)[0] > 0;
/**
  Copies byteLength bytes from the src buffer at srcOffset to the
  dst buffer at dstOffset.

  @param {Object} dst Destination ArrayBuffer to write to.
  @param {number} dstOffset Offset to the destination ArrayBuffer.
  @param {Object} src Source ArrayBuffer to read from.
  @param {number} srcOffset Offset to the source ArrayBuffer.
  @param {number} byteLength Number of bytes to copy.
 */

DataStream.memcpy = function (dst, dstOffset, src, srcOffset, byteLength) {
  var dstU8 = new Uint8Array(dst, dstOffset, byteLength);
  var srcU8 = new Uint8Array(src, srcOffset, byteLength);
  dstU8.set(srcU8);
};
/**
  Converts array to native endianness in-place.

  @param {Object} array Typed array to convert.
  @param {boolean} arrayIsLittleEndian True if the data in the array is
                                       little-endian. Set false for big-endian.
  @return {Object} The converted typed array.
 */


DataStream.arrayToNative = function (array, arrayIsLittleEndian) {
  if (arrayIsLittleEndian == this.endianness) {
    return array;
  } else {
    return this.flipArrayEndianness(array);
  }
};
/**
  Converts native endianness array to desired endianness in-place.

  @param {Object} array Typed array to convert.
  @param {boolean} littleEndian True if the converted array should be
                                little-endian. Set false for big-endian.
  @return {Object} The converted typed array.
 */


DataStream.nativeToEndian = function (array, littleEndian) {
  if (this.endianness == littleEndian) {
    return array;
  } else {
    return this.flipArrayEndianness(array);
  }
};
/**
  Flips typed array endianness in-place.

  @param {Object} array Typed array to flip.
  @return {Object} The converted typed array.
 */


DataStream.flipArrayEndianness = function (array) {
  var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);

  for (var i = 0; i < array.byteLength; i += array.BYTES_PER_ELEMENT) {
    for (var j = i + array.BYTES_PER_ELEMENT - 1, k = i; j > k; j--, k++) {
      var tmp = u8[k];
      u8[k] = u8[j];
      u8[j] = tmp;
    }
  }

  return array;
};
/**
  Creates an array from an array of character codes.
  Uses String.fromCharCode in chunks for memory efficiency and then concatenates
  the resulting string chunks.

  @param {array} array Array of character codes.
  @return {string} String created from the character codes.
**/


DataStream.createStringFromArray = function (array) {
  var chunk_size = 0x8000;
  var chunks = [];

  for (var i = 0; i < array.length; i += chunk_size) {
    chunks.push(String.fromCharCode.apply(null, array.subarray(i, i + chunk_size)));
  }

  return chunks.join('');
};
/**
  Seek position where DataStream#readStruct ran into a problem.
  Useful for debugging struct parsing.

  @type {number}
 */


DataStream.prototype.failurePosition = 0;
/**
  Reads a struct of data from the DataStream. The struct is defined as
  a flat array of [name, type]-pairs. See the example below:

  ds.readStruct([
    'headerTag', 'uint32', // Uint32 in DataStream endianness.
    'headerTag2', 'uint32be', // Big-endian Uint32.
    'headerTag3', 'uint32le', // Little-endian Uint32.
    'array', ['[]', 'uint32', 16], // Uint32Array of length 16.
    'array2Length', 'uint32',
    'array2', ['[]', 'uint32', 'array2Length'] // Uint32Array of length array2Length
  ]);

  The possible values for the type are as follows:

  // Number types

  // Unsuffixed number types use DataStream endianness.
  // To explicitly specify endianness, suffix the type with
  // 'le' for little-endian or 'be' for big-endian,
  // e.g. 'int32be' for big-endian int32.

  'uint8' -- 8-bit unsigned int
  'uint16' -- 16-bit unsigned int
  'uint32' -- 32-bit unsigned int
  'int8' -- 8-bit int
  'int16' -- 16-bit int
  'int32' -- 32-bit int
  'float32' -- 32-bit float
  'float64' -- 64-bit float

  // String types
  'cstring' -- ASCII string terminated by a zero byte.
  'string:N' -- ASCII string of length N, where N is a literal integer.
  'string:variableName' -- ASCII string of length $variableName,
    where 'variableName' is a previously parsed number in the current struct.
  'string,CHARSET:N' -- String of byteLength N encoded with given CHARSET.
  'u16string:N' -- UCS-2 string of length N in DataStream endianness.
  'u16stringle:N' -- UCS-2 string of length N in little-endian.
  'u16stringbe:N' -- UCS-2 string of length N in big-endian.

  // Complex types
  [name, type, name_2, type_2, ..., name_N, type_N] -- Struct
  function(dataStream, struct) {} -- Callback function to read and return data.
  {get: function(dataStream, struct) {},
   set: function(dataStream, struct) {}}
  -- Getter/setter functions to read and return data, handy for using the same
     struct definition for reading and writing structs.
  ['[]', type, length] -- Array of given type and length. The length can be either
                        a number, a string that references a previously-read
                        field, or a callback function(struct, dataStream, type){}.
                        If length is '*', reads in as many elements as it can.

  @param {Object} structDefinition Struct definition object.
  @return {Object} The read struct. Null if failed to read struct.
 */

DataStream.prototype.readStruct = function (structDefinition) {
  var struct = {},
      t,
      v,
      n;
  var p = this.position;

  for (var i = 0; i < structDefinition.length; i += 2) {
    t = structDefinition[i + 1];
    v = this.readType(t, struct);

    if (v == null) {
      if (this.failurePosition == 0) {
        this.failurePosition = this.position;
      }

      this.position = p;
      return null;
    }

    struct[structDefinition[i]] = v;
  }

  return struct;
};
/**
  Read UCS-2 string of desired length and endianness from the DataStream.

  @param {number} length The length of the string to read.
  @param {boolean} endianness The endianness of the string data in the DataStream.
  @return {string} The read string.
 */


DataStream.prototype.readUCS2String = function (length, endianness) {
  return DataStream.createStringFromArray(this.readUint16Array(length, endianness));
};
/**
  Write a UCS-2 string of desired endianness to the DataStream. The
  lengthOverride argument lets you define the number of characters to write.
  If the string is shorter than lengthOverride, the extra space is padded with
  zeroes.

  @param {string} str The string to write.
  @param {?boolean} endianness The endianness to use for the written string data.
  @param {?number} lengthOverride The number of characters to write.
 */


DataStream.prototype.writeUCS2String = function (str, endianness, lengthOverride) {
  if (lengthOverride == null) {
    lengthOverride = str.length;
  }

  for (var i = 0; i < str.length && i < lengthOverride; i++) {
    this.writeUint16(str.charCodeAt(i), endianness);
  }

  for (; i < lengthOverride; i++) {
    this.writeUint16(0);
  }
};
/**
  Read a string of desired length and encoding from the DataStream.

  @param {number} length The length of the string to read in bytes.
  @param {?string} encoding The encoding of the string data in the DataStream.
                            Defaults to ASCII.
  @return {string} The read string.
 */


DataStream.prototype.readString = function (length, encoding) {
  if (encoding == null || encoding == 'ASCII' || global.TextDecoder == null) {
    return DataStream.createStringFromArray(this.mapUint8Array(length == null ? this.byteLength - this.position : length));
  } else {
    return new global.TextDecoder(encoding).decode(this.mapUint8Array(length));
  }
};
/**
  Writes a string of desired length and encoding to the DataStream.

  @param {string} s The string to write.
  @param {?string} encoding The encoding for the written string data.
                            Defaults to ASCII.
  @param {?number} length The number of characters to write.
 */


DataStream.prototype.writeString = function (s, encoding, length) {
  if (encoding == null || encoding == 'ASCII') {
    if (length != null) {
      var i = 0;
      var len = Math.min(s.length, length);

      for (i = 0; i < len; i++) {
        this.writeUint8(s.charCodeAt(i));
      }

      for (; i < length; i++) {
        this.writeUint8(0);
      }
    } else {
      for (var i = 0; i < s.length; i++) {
        this.writeUint8(s.charCodeAt(i));
      }
    }
  } else {
    this.writeUint8Array(new TextEncoder(encoding).encode(s.substring(0, length)));
  }
};
/**
  Read null-terminated string of desired length from the DataStream. Truncates
  the returned string so that the null byte is not a part of it.

  @param {?number} length The length of the string to read.
  @return {string} The read string.
 */


DataStream.prototype.readCString = function (length) {
  var blen = this.byteLength - this.position;
  var u8 = new Uint8Array(this._buffer, this._byteOffset + this.position);
  var len = blen;

  if (length != null) {
    len = Math.min(length, blen);
  }

  for (var i = 0; i < len && u8[i] != 0; i++) {
    ;
  } // find first zero byte


  var s = DataStream.createStringFromArray(this.mapUint8Array(i));

  if (length != null) {
    this.position += len - i;
  } else if (i != blen) {
    this.position += 1; // trailing zero if not at end of buffer
  }

  return s;
};
/**
  Writes a null-terminated string to DataStream and zero-pads it to length
  bytes. If length is not given, writes the string followed by a zero.
  If string is longer than length, the written part of the string does not have
  a trailing zero.

  @param {string} s The string to write.
  @param {?number} length The number of characters to write.
 */


DataStream.prototype.writeCString = function (s, length) {
  if (length != null) {
    var i = 0;
    var len = Math.min(s.length, length);

    for (i = 0; i < len; i++) {
      this.writeUint8(s.charCodeAt(i));
    }

    for (; i < length; i++) {
      this.writeUint8(0);
    }
  } else {
    for (var i = 0; i < s.length; i++) {
      this.writeUint8(s.charCodeAt(i));
    }

    this.writeUint8(0);
  }
};
/**
  Reads an object of type t from the DataStream, passing struct as the thus-far
  read struct to possible callbacks that refer to it. Used by readStruct for
  reading in the values, so the type is one of the readStruct types.

  @param {Object} t Type of the object to read.
  @param {?Object} struct Struct to refer to when resolving length references
                          and for calling callbacks.
  @return {?Object} Returns the object on successful read, null on unsuccessful.
 */


DataStream.prototype.readType = function (t, struct) {
  if (typeof t == 'function') {
    return t(this, struct);
  } else if (typeof t == 'object' && !(t instanceof Array)) {
    return t.get(this, struct);
  } else if (t instanceof Array && t.length != 3) {
    return this.readStruct(t, struct);
  }

  var v = null;
  var lengthOverride = null;
  var charset = 'ASCII';
  var pos = this.position;
  var len;

  if (typeof t == 'string' && /:/.test(t)) {
    var tp = t.split(':');
    t = tp[0];
    len = tp[1]; // allow length to be previously parsed variable
    // e.g. 'string:fieldLength', if `fieldLength` has
    // been parsed previously.

    if (struct[len] != null) {
      lengthOverride = parseInt(struct[len]);
    } else {
      // assume literal integer e.g., 'string:4'
      lengthOverride = parseInt(tp[1]);
    }
  }

  if (typeof t == 'string' && /,/.test(t)) {
    var tp = t.split(',');
    t = tp[0];
    charset = parseInt(tp[1]);
  }

  switch (t) {
    case 'uint8':
      v = this.readUint8();
      break;

    case 'int8':
      v = this.readInt8();
      break;

    case 'uint16':
      v = this.readUint16(this.endianness);
      break;

    case 'int16':
      v = this.readInt16(this.endianness);
      break;

    case 'uint32':
      v = this.readUint32(this.endianness);
      break;

    case 'int32':
      v = this.readInt32(this.endianness);
      break;

    case 'float32':
      v = this.readFloat32(this.endianness);
      break;

    case 'float64':
      v = this.readFloat64(this.endianness);
      break;

    case 'uint16be':
      v = this.readUint16(DataStream.BIG_ENDIAN);
      break;

    case 'int16be':
      v = this.readInt16(DataStream.BIG_ENDIAN);
      break;

    case 'uint32be':
      v = this.readUint32(DataStream.BIG_ENDIAN);
      break;

    case 'int32be':
      v = this.readInt32(DataStream.BIG_ENDIAN);
      break;

    case 'float32be':
      v = this.readFloat32(DataStream.BIG_ENDIAN);
      break;

    case 'float64be':
      v = this.readFloat64(DataStream.BIG_ENDIAN);
      break;

    case 'uint16le':
      v = this.readUint16(DataStream.LITTLE_ENDIAN);
      break;

    case 'int16le':
      v = this.readInt16(DataStream.LITTLE_ENDIAN);
      break;

    case 'uint32le':
      v = this.readUint32(DataStream.LITTLE_ENDIAN);
      break;

    case 'int32le':
      v = this.readInt32(DataStream.LITTLE_ENDIAN);
      break;

    case 'float32le':
      v = this.readFloat32(DataStream.LITTLE_ENDIAN);
      break;

    case 'float64le':
      v = this.readFloat64(DataStream.LITTLE_ENDIAN);
      break;

    case 'cstring':
      v = this.readCString(lengthOverride);
      break;

    case 'string':
      v = this.readString(lengthOverride, charset);
      break;

    case 'u16string':
      v = this.readUCS2String(lengthOverride, this.endianness);
      break;

    case 'u16stringle':
      v = this.readUCS2String(lengthOverride, DataStream.LITTLE_ENDIAN);
      break;

    case 'u16stringbe':
      v = this.readUCS2String(lengthOverride, DataStream.BIG_ENDIAN);
      break;

    default:
      if (t.length == 3) {
        var ta = t[1];
        var len = t[2];
        var length = 0;

        if (typeof len == 'function') {
          length = len(struct, this, t);
        } else if (typeof len == 'string' && struct[len] != null) {
          length = parseInt(struct[len]);
        } else {
          length = parseInt(len);
        }

        if (typeof ta == 'string') {
          var tap = ta.replace(/(le|be)$/, '');
          var endianness = null;

          if (/le$/.test(ta)) {
            endianness = DataStream.LITTLE_ENDIAN;
          } else if (/be$/.test(ta)) {
            endianness = DataStream.BIG_ENDIAN;
          }

          if (len == '*') {
            length = null;
          }

          switch (tap) {
            case 'uint8':
              v = this.readUint8Array(length);
              break;

            case 'uint16':
              v = this.readUint16Array(length, endianness);
              break;

            case 'uint32':
              v = this.readUint32Array(length, endianness);
              break;

            case 'int8':
              v = this.readInt8Array(length);
              break;

            case 'int16':
              v = this.readInt16Array(length, endianness);
              break;

            case 'int32':
              v = this.readInt32Array(length, endianness);
              break;

            case 'float32':
              v = this.readFloat32Array(length, endianness);
              break;

            case 'float64':
              v = this.readFloat64Array(length, endianness);
              break;

            case 'cstring':
            case 'utf16string':
            case 'string':
              if (length == null) {
                v = [];

                while (!this.isEof()) {
                  var u = this.readType(ta, struct);
                  if (u == null) break;
                  v.push(u);
                }
              } else {
                v = new Array(length);

                for (var i = 0; i < length; i++) {
                  v[i] = this.readType(ta, struct);
                }
              }

              break;
          }
        } else {
          if (len == '*') {
            v = [];
            this.buffer;

            while (true) {
              var p = this.position;

              try {
                var o = this.readType(ta, struct);

                if (o == null) {
                  this.position = p;
                  break;
                }

                v.push(o);
              } catch (e) {
                this.position = p;
                break;
              }
            }
          } else {
            v = new Array(length);

            for (var i = 0; i < length; i++) {
              var u = this.readType(ta, struct);
              if (u == null) return null;
              v[i] = u;
            }
          }
        }

        break;
      }

  }

  if (lengthOverride != null) {
    this.position = pos + lengthOverride;
  }

  return v;
};
/**
  Writes a struct to the DataStream. Takes a structDefinition that gives the
  types and a struct object that gives the values. Refer to readStruct for the
  structure of structDefinition.

  @param {Object} structDefinition Type definition of the struct.
  @param {Object} struct The struct data object.
  */


DataStream.prototype.writeStruct = function (structDefinition, struct) {
  for (var i = 0; i < structDefinition.length; i += 2) {
    var t = structDefinition[i + 1];
    this.writeType(t, struct[structDefinition[i]], struct);
  }
};
/**
  Writes object v of type t to the DataStream.

  @param {Object} t Type of data to write.
  @param {Object} v Value of data to write.
  @param {Object} struct Struct to pass to write callback functions.
  */


DataStream.prototype.writeType = function (t, v, struct) {
  if (typeof t == 'function') {
    return t(this, v);
  } else if (typeof t == 'object' && !(t instanceof Array)) {
    return t.set(this, v, struct);
  }

  var lengthOverride = null;
  var charset = 'ASCII';
  var pos = this.position;

  if (typeof t == 'string' && /:/.test(t)) {
    var tp = t.split(':');
    t = tp[0];
    lengthOverride = parseInt(tp[1]);
  }

  if (typeof t == 'string' && /,/.test(t)) {
    var tp = t.split(',');
    t = tp[0];
    charset = parseInt(tp[1]);
  }

  switch (t) {
    case 'uint8':
      this.writeUint8(v);
      break;

    case 'int8':
      this.writeInt8(v);
      break;

    case 'uint16':
      this.writeUint16(v, this.endianness);
      break;

    case 'int16':
      this.writeInt16(v, this.endianness);
      break;

    case 'uint32':
      this.writeUint32(v, this.endianness);
      break;

    case 'int32':
      this.writeInt32(v, this.endianness);
      break;

    case 'float32':
      this.writeFloat32(v, this.endianness);
      break;

    case 'float64':
      this.writeFloat64(v, this.endianness);
      break;

    case 'uint16be':
      this.writeUint16(v, DataStream.BIG_ENDIAN);
      break;

    case 'int16be':
      this.writeInt16(v, DataStream.BIG_ENDIAN);
      break;

    case 'uint32be':
      this.writeUint32(v, DataStream.BIG_ENDIAN);
      break;

    case 'int32be':
      this.writeInt32(v, DataStream.BIG_ENDIAN);
      break;

    case 'float32be':
      this.writeFloat32(v, DataStream.BIG_ENDIAN);
      break;

    case 'float64be':
      this.writeFloat64(v, DataStream.BIG_ENDIAN);
      break;

    case 'uint16le':
      this.writeUint16(v, DataStream.LITTLE_ENDIAN);
      break;

    case 'int16le':
      this.writeInt16(v, DataStream.LITTLE_ENDIAN);
      break;

    case 'uint32le':
      this.writeUint32(v, DataStream.LITTLE_ENDIAN);
      break;

    case 'int32le':
      this.writeInt32(v, DataStream.LITTLE_ENDIAN);
      break;

    case 'float32le':
      this.writeFloat32(v, DataStream.LITTLE_ENDIAN);
      break;

    case 'float64le':
      this.writeFloat64(v, DataStream.LITTLE_ENDIAN);
      break;

    case 'cstring':
      this.writeCString(v, lengthOverride);
      break;

    case 'string':
      this.writeString(v, charset, lengthOverride);
      break;

    case 'u16string':
      this.writeUCS2String(v, this.endianness, lengthOverride);
      break;

    case 'u16stringle':
      this.writeUCS2String(v, DataStream.LITTLE_ENDIAN, lengthOverride);
      break;

    case 'u16stringbe':
      this.writeUCS2String(v, DataStream.BIG_ENDIAN, lengthOverride);
      break;

    default:
      if (t.length == 3) {
        var ta = t[1];

        for (var i = 0; i < v.length; i++) {
          this.writeType(ta, v[i]);
        }

        break;
      } else {
        this.writeStruct(t, v);
        break;
      }

  }

  if (lengthOverride != null) {
    this.position = pos;

    this._realloc(lengthOverride);

    this.position = pos + lengthOverride;
  }
};

var _default = DataStream;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(41)))

/***/ }),
/* 967 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

exports.__esModule = true;
exports.default = void 0;

var _lodashEs = _interopRequireDefault(__webpack_require__(32));

var _jpegLosslessDecoderJs = _interopRequireDefault(__webpack_require__(968));

var _logger = _interopRequireDefault(__webpack_require__(683));

var _datastream = _interopRequireDefault(__webpack_require__(966));

var _dicomtags = __webpack_require__(724);

var _jpeg = _interopRequireDefault(__webpack_require__(978));

var _jpx = _interopRequireDefault(__webpack_require__(979));

var _parser = _interopRequireDefault(__webpack_require__(980));

var _decoderle = __webpack_require__(985);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var TagFind = function TagFind(tag) {
  return _dicomtags.standard[tag];
};

var utilString = {
  /**
   * {JSDoc}
   *
   * The splice() method changes the content of a string by removing a range of
   * characters and/or adding new characters.
   *
   * @param {string} string to be maniplated
   * @param {number} start Index at which to start changing the string.
   * @param {number} delCount An integer indicating the number of old chars to remove.
   * @param {string} newSubStr The String that is spliced in.
   * @return {string} A new string with the spliced substring.
   */
  splice: function splice(str, start, delCount, newSubStr) {
    var newStr = str.slice(0, start) + newSubStr + str.slice(start + Math.abs(delCount));
    return newStr;
  },
  isASCII: function isASCII(str) {
    return /^[\x00-\x7F]*$/.test(str);
  },
  convertByteArrayToString: function convertByteArrayToString(array, encoding) {
    if (global.TextDecoder != null) {
      return new global.TextDecoder(encoding).decode(array);
    }

    return null;
  }
};

function isStringVR(vr) {
  return vr && (vr === 'AE' || vr === 'AS' || vr === 'CS' || vr === 'DA' || vr === 'DT' || vr === 'DS' || vr === 'IS' || vr === 'LO' || vr === 'LT' || vr === 'PN' || vr === 'SH' || vr === 'ST' || vr === 'TM' || vr === 'UI' || vr === 'UT');
}

function readNumbers(dataSet, element, reader, byteSize, vm) {
  function readNumbersArray(count) {
    var items = [];

    for (var i = 0; i < count; ++i) {
      items.push(reader.call(dataSet, element.tag, i));
    }

    return items;
  }

  function readNumbersArrayString() {
    // try to decode as string
    var str = dataSet.string(element.tag);
    var values = str.split('\\').map(Number);

    if (_lodashEs.default.findIndex(values, isNaN) === -1) {
      return values;
    }

    _logger.default.warn("Parse tag '" + element + "', '" + str + "' as number string failed.");

    return null;
  }

  if (Number.isInteger(vm)) {
    if (element.length === byteSize * vm) {
      if (vm === 1) {
        return reader.call(dataSet, element.tag);
      }

      return readNumbersArray(vm);
    }

    return readNumbersArrayString();
  }

  var _vm$split = vm.split('-'),
      min = _vm$split[0],
      max = _vm$split[1];

  var hasWildcard = max[max.length - 1] === 'n';
  min = parseInt(min, 10);
  max = max === 'n' ? Infinity : parseInt(max, 10);
  var cnt = element.length / byteSize | 0;

  if (min <= cnt && cnt <= max && (!hasWildcard || cnt % min === 0)) {
    return readNumbersArray(cnt);
  }

  return readNumbersArrayString();
}

function swap16(arr) {
  for (var i = arr.length - 1; i >= 0; i--) {
    var item = arr[i];
    arr[i] = (item & 0xff) << 8 | (item & 0xff00) >> 8; // eslint-disable-line no-param-reassign
  }
}

function convertToReadableData(dataSet, element, tag, isLittleEndian) {
  if (element.length === 0) {
    return null;
  }

  var propertyName = element.tag;
  var vr = element.vr;

  if (vr === undefined) {
    vr = tag && tag.vr;

    if (vr) {
      vr = vr.split('|')[0];
    }
  }

  var vm = tag && tag.vm || 1;

  if (vr === 'US') {
    return readNumbers(dataSet, element, dataSet.uint16, 2, vm);
  } else if (vr === 'SS') {
    return readNumbers(dataSet, element, dataSet.int16, 2, vm);
  } else if (vr === 'UL') {
    return readNumbers(dataSet, element, dataSet.uint32, 4, vm);
  } else if (vr === 'SL') {
    return readNumbers(dataSet, element, dataSet.int32, 4, vm);
  } else if (vr === 'FD') {
    return readNumbers(dataSet, element, dataSet.double, 8, vm);
  } else if (vr === 'FL') {
    return readNumbers(dataSet, element, dataSet.float, 4, vm);
  } else if (vr === 'OW') {
    if (!isLittleEndian) {
      var value = new Uint16Array(dataSet.byteArray.buffer, element.dataOffset + dataSet.byteArray.byteOffset, element.length / 2).slice();
      swap16(value);
      return value;
    }

    return new Uint16Array(dataSet.byteArray.buffer, element.dataOffset + dataSet.byteArray.byteOffset, element.length / 2);
  } else if (vr === 'AT') {
    var groupNumber = dataSet.uint16(propertyName, 0);
    var groupHexStr = ("0000" + groupNumber.toString(16)).substr(-4);
    var elementNumber = dataSet.uint16(propertyName, 1);
    var elementHexStr = ("0000" + elementNumber.toString(16)).substr(-4);
    return "x" + (groupHexStr + elementHexStr);
  } else if (isStringVR(vr)) {
    var str = dataSet.string(propertyName);

    if (utilString.isASCII(str)) {
      return str;
    }

    var array = new Uint8Array(dataSet.byteArray.buffer, element.dataOffset + dataSet.byteArray.byteOffset, element.length);
    return utilString.convertByteArrayToString(array, 'GBK') || array;
  } // For other VR just return an array.


  return new Uint8Array(dataSet.byteArray.buffer, element.dataOffset + dataSet.byteArray.byteOffset, element.length);
}

function dataSetProperty2JSON(dataSet, propertyName, isLittleEndian) {
  var element = dataSet.elements[propertyName];
  var tag = TagFind(element.tag);
  var obj = {};
  obj.name = tag && tag.name;
  obj.tag = element.tag;
  obj.length = element.hadUndefinedLength ? -1 : element.length;
  obj.vr = element.vr;

  if (element.items) {
    obj.value = element.items.map(function (item) {
      return dataSet2JSON(item.dataSet, isLittleEndian);
    }); // eslint-disable-line no-use-before-define
  } else if (element.fragments) {
    obj.value = element.fragments.map(function (fragments, index) {
      return _parser.default.readEncapsulatedPixelData(dataSet, element, index);
    });
  } else {
    obj.value = convertToReadableData(dataSet, element, tag, isLittleEndian);
  }

  return obj;
}

function dataSet2JSON(dataSet, isLittleEndian) {
  var json = {};
  var little = isLittleEndian;

  if (little === undefined) {
    var transferSyntax = dataSet.string('x00020010');
    little = transferSyntax !== '1.2.840.10008.1.2.2';
  }

  for (var propertyName in dataSet.elements) {
    // eslint-disable-line
    var obj = dataSetProperty2JSON(dataSet, propertyName, little);
    json[obj.name || obj.tag] = obj.value;
  }

  return json;
}

var DicomParser = /*#__PURE__*/function () {
  function DicomParser(stream) {
    this._buffer = new Uint8Array(stream.buffer, stream.byteOffset);
  }

  DicomParser.match = function match(stream) {
    var isDicom = false;
    var position = stream.position;

    if (stream.byteLength - position > 128 + 4) {
      stream.seek(position + 128);
      isDicom = stream.readString(4) === 'DICM';
      stream.seek(position);
    }

    if (!isDicom && stream.byteLength - position > 128 + 4 + 4) {
      var group = stream.readUint16() << 16;
      var element = stream.readUint16();

      var tagName = _lodashEs.default.padStart((group | element).toString(16), 8, '0');

      var tag = TagFind("x" + tagName);
      isDicom = !!tag;
      stream.seek(position);
    }

    return isDicom;
  };

  var _proto = DicomParser.prototype;

  _proto.parse = function parse() {
    var byteArray = this._buffer;
    var dataSet;

    try {
      dataSet = _parser.default.parseDicom(byteArray, {});
    } catch (err) {
      throw new Error('not a dicom file.');
    }

    return this.init(dataSet);
  };

  _proto.init = function init(dataSet) {
    this._metadata = dataSet2JSON(dataSet);
    this.checkMediaStorageSOPClassUID();
  };

  _proto.metadata = function metadata() {
    return this._metadata;
  };

  _proto.cleanRecursive = function cleanRecursive(data) {
    var _this = this;

    if (data) {
      _lodashEs.default.forEach(data, function (v, k) {
        if (v instanceof Uint16Array || v instanceof Uint8Array || v instanceof Int16Array) {
          data[k] = undefined;
        }

        if (_lodashEs.default.isObjectLike(v)) {
          _this.cleanRecursive(v);
        }
      });
    }
  };

  _proto.clearBuffer = function clearBuffer() {
    this._buffer = undefined;
    this.cleanRecursive(this._metadata);
  };

  _proto.checkMediaStorageSOPClassUID = function checkMediaStorageSOPClassUID(json) {
    var uid = this._metadata.MediaStorageSOPClassUID && this._metadata.MediaStorageSOPClassUID.data;

    if (uid === '1.2.840.10008.1.3.10') {
      throw new Error('Media Storage Directory Storage is not support now.');
    }
  };

  _proto.extractPixels = function extractPixels(frameIndex) {
    var transferSyntaxUID = this.valueOf('TransferSyntaxUID'); // find compression scheme

    if (transferSyntaxUID === '1.2.840.10008.1.2.4.90' || // JPEG 2000 Lossless
    transferSyntaxUID === '1.2.840.10008.1.2.4.91') {
      // JPEG 2000 Lossy
      // JPEG 2000
      return this.decodeJ2K(frameIndex);
    } else if (transferSyntaxUID === '1.2.840.10008.1.2.4.57' || // JPEG Lossless, Nonhierarchical (Processes 14)
    transferSyntaxUID === '1.2.840.10008.1.2.4.70') {
      // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])
      // JPEG LOSSLESS
      return this.decodeJPEGLossless(frameIndex);
    } else if (transferSyntaxUID === '1.2.840.10008.1.2.4.50' || // JPEG Baseline lossy process 1 (8 bit)
    transferSyntaxUID === '1.2.840.10008.1.2.4.51') {
      // JPEG Baseline lossy process 2 & 4 (12 bit)
      // JPEG Baseline
      return this.decodeJPEGBaseline(frameIndex);
    } else if (transferSyntaxUID === null || transferSyntaxUID === '1.2.840.10008.1.2' || // Implicit VR Little Endian
    transferSyntaxUID === '1.2.840.10008.1.2.1' || // Explicit VR Little Endian
    transferSyntaxUID === '1.2.840.10008.1.2.2') {
      // Explicit VR Big Endian
      var data = this.decodeUncompressed(frameIndex);
      return this.convertColorSpace(data);
    } else if (transferSyntaxUID === '1.2.840.10008.1.2.5') {
      var _data = this.decodeRLE(frameIndex);

      return this.convertColorSpace(_data);
    }

    throw new Error("no decoder for transfer syntax " + transferSyntaxUID);
  };

  _proto.readPixelData = function readPixelData(frameIndex) {
    var data = this.valueOf('PixelData');

    if (data instanceof Array) {
      return data[frameIndex];
    }

    var photometricInterpretation = this.photometricInterpretation();
    var numPixels = this.rows(frameIndex) * this.columns(frameIndex);

    if (photometricInterpretation !== 'PALETTE COLOR') {
      var numberOfChannels = this.numberOfChannels();
      numPixels *= numberOfChannels;
    }

    var bitsAllocated = this.bitsAllocated();
    var frameSize = numPixels;
    var targetBits = bitsAllocated;

    if (data instanceof Uint16Array || data instanceof Int16Array) {
      targetBits = 16;
    } else if (data instanceof Uint8Array || data instanceof Int8Array) {
      targetBits = 8;
    }

    frameSize *= bitsAllocated / targetBits;
    return data.slice(frameSize * frameIndex, frameSize * (frameIndex + 1));
  };

  _proto.decodeRLE = function decodeRLE(frameIndex) {
    var imageFrame = {
      rows: this.rows(),
      columns: this.columns(),
      samplesPerPixel: this.samplesPerPixel(),
      pixelData: undefined,
      pixelRepresentation: this.pixelRepresentation(),
      bitsAllocated: this.bitsAllocated(),
      planarConfiguration: this.planarConfiguration()
    };
    var encoded = this.readPixelData(frameIndex);
    (0, _decoderle.decodeRLE)(imageFrame, encoded);
    return imageFrame.pixelData;
  };

  _proto.decodeJ2K = function decodeJ2K(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    var encodedPixelData = this.readPixelData(frameIndex);
    var jpxImage = new _jpx.default(); // https://github.com/OHIF/image-JPEG2000/issues/6
    // It currently returns either Int16 or Uint16 based on whether the codestream is signed or not.

    jpxImage.parse(encodedPixelData);
    var componentsCount = jpxImage.componentsCount;

    if (componentsCount !== 1) {
      throw new Error("JPEG2000 decoder returned a componentCount of " + componentsCount + ", when 1 is expected");
    }

    var tileCount = jpxImage.tiles.length;

    if (tileCount !== 1) {
      throw new Error("JPEG2000 decoder returned a tileCount of " + tileCount + ", when 1 is expected");
    }

    var tileComponents = jpxImage.tiles[0];
    var pixelData = tileComponents.items;
    return pixelData;
  } // from cornerstone & ami
  ;

  _proto.decodeJPEGLossless = function decodeJPEGLossless(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    var encodedPixelData = this.readPixelData(frameIndex);
    var pixelRepresentation = this.pixelRepresentation();
    var bitsAllocated = this.bitsAllocated();
    var byteOutput = bitsAllocated <= 8 ? 1 : 2;
    var decoder = new _jpegLosslessDecoderJs.default.lossless.Decoder();
    var decompressedData = decoder.decode(encodedPixelData.buffer, encodedPixelData.byteOffset, encodedPixelData.length, byteOutput);

    if (pixelRepresentation === 0) {
      if (byteOutput === 2) {
        return new Uint16Array(decompressedData.buffer);
      } // untested!


      return new Uint8Array(decompressedData.buffer);
    }

    return new Int16Array(decompressedData.buffer);
  };

  _proto.decodeJPEGBaseline = function decodeJPEGBaseline(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    // eslint-disable-line consistent-return
    var encodedPixelData = this.readPixelData(frameIndex);
    var rows = this.rows();
    var columns = this.columns();
    var bitsAllocated = this.bitsAllocated();
    var jpegBaseline = new _jpeg.default();
    jpegBaseline.parse(encodedPixelData);

    if (bitsAllocated === 8) {
      return jpegBaseline.getData(columns, rows);
    } else if (bitsAllocated === 16) {
      return jpegBaseline.getData16(columns, rows);
    }
  };

  _proto.decodeUncompressed = function decodeUncompressed(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    // eslint-disable-line
    var pixelRepresentation = this.pixelRepresentation();
    var bitsAllocated = this.bitsAllocated();
    var pixelDataOffset = 0;
    var numberOfChannels = this.numberOfChannels();
    var photometricInterpretation = this.photometricInterpretation();
    var numPixels = this.rows(frameIndex) * this.columns(frameIndex);

    if (photometricInterpretation !== 'PALETTE COLOR') {
      numPixels *= numberOfChannels;
    }

    var frameOffset = 0;
    var buffer = this.readPixelData(frameIndex).buffer;

    if (pixelRepresentation === 0 && bitsAllocated === 8) {
      // unsigned 8 bit
      // frameOffset = pixelDataOffset + frameIndex * numPixels;
      return new Uint8Array(buffer, frameOffset, numPixels);
    } else if (pixelRepresentation === 0 && bitsAllocated === 12) {
      // unsigned 12 bit
      var frameSize = numPixels * 3 >> 1; // frameOffset = pixelDataOffset + frameIndex * frameSize;

      var src = new Uint8Array(buffer, frameOffset, frameSize);
      var dst = new Uint16Array(numPixels);
      var j = 0;

      for (var i = 0; i < numPixels; ++i) {
        dst[i] = src[j] + (src[j + 1] << 4) + (src[j + 2] << 8);
        j += 3;
      }

      return dst;
    } else if (pixelRepresentation === 0 && bitsAllocated === 16) {
      // unsigned 16 bit
      // frameOffset = pixelDataOffset + frameIndex * numPixels * 2;
      return new Uint16Array(buffer, frameOffset, numPixels);
    } else if (pixelRepresentation === 1 && bitsAllocated === 16) {
      // signed 16 bit
      // frameOffset = pixelDataOffset + frameIndex * numPixels * 2;
      return new Int16Array(buffer, frameOffset, numPixels);
    } else if (pixelRepresentation === 0 && bitsAllocated === 32) {
      // unsigned 32 bit
      // frameOffset = pixelDataOffset + frameIndex * numPixels * 4;
      return new Uint32Array(buffer, frameOffset, numPixels);
    } else if (pixelRepresentation === 0 && bitsAllocated === 1) {
      var newBuffer = new ArrayBuffer(numPixels);
      var newArray = new Uint8Array(newBuffer); // frameOffset = pixelDataOffset + frameIndex * numPixels;

      var index = 0;
      var bitStart = frameIndex * numPixels;
      var bitEnd = frameIndex * numPixels + numPixels;
      var byteStart = Math.floor(bitStart / 8);
      var bitStartOffset = bitStart - byteStart * 8;
      var byteEnd = Math.ceil(bitEnd / 8);
      var targetBuffer = new Uint8Array(buffer, pixelDataOffset);

      for (var _i = byteStart; _i <= byteEnd; _i++) {
        while (bitStartOffset < 8) {
          switch (bitStartOffset) {
            case 0:
              newArray[index] = targetBuffer[_i] & 0x0001;
              break;

            case 1:
              newArray[index] = targetBuffer[_i] >>> 1 & 0x0001;
              break;

            case 2:
              newArray[index] = targetBuffer[_i] >>> 2 & 0x0001;
              break;

            case 3:
              newArray[index] = targetBuffer[_i] >>> 3 & 0x0001;
              break;

            case 4:
              newArray[index] = targetBuffer[_i] >>> 4 & 0x0001;
              break;

            case 5:
              newArray[index] = targetBuffer[_i] >>> 5 & 0x0001;
              break;

            case 6:
              newArray[index] = targetBuffer[_i] >>> 6 & 0x0001;
              break;

            case 7:
              newArray[index] = targetBuffer[_i] >>> 7 & 0x0001;
              break;

            default:
              break;
          }

          bitStartOffset++;
          index++; // if return..

          if (index >= numPixels) {
            return newArray;
          }
        }

        bitStartOffset = 0;
      }
    }
  };

  _proto.convertColorSpace = function convertColorSpace(uncompressedData) {
    var rgbData = null;
    var photometricInterpretation = this.photometricInterpretation();
    var planarConfiguration = this.planarConfiguration();

    if (photometricInterpretation === 'RGB' && planarConfiguration === 0) {
      // ALL GOOD, ALREADY ORDERED
      // planar or non planar planarConfiguration
      rgbData = uncompressedData;
    } else if (photometricInterpretation === 'RGB' && planarConfiguration === 1) {
      if (uncompressedData instanceof Int8Array) {
        rgbData = new Int8Array(uncompressedData.length);
      } else if (uncompressedData instanceof Uint8Array) {
        rgbData = new Uint8Array(uncompressedData.length);
      } else if (uncompressedData instanceof Int16Array) {
        rgbData = new Int16Array(uncompressedData.length);
      } else if (uncompressedData instanceof Uint16Array) {
        rgbData = new Uint16Array(uncompressedData.length);
      } else {
        throw new Error("unsuported typed array: " + uncompressedData);
      }

      var numPixels = uncompressedData.length / 3;
      var rgbaIndex = 0;
      var rIndex = 0;
      var gIndex = numPixels;
      var bIndex = numPixels * 2;

      for (var i = 0; i < numPixels; i++) {
        rgbData[rgbaIndex++] = uncompressedData[rIndex++]; // red

        rgbData[rgbaIndex++] = uncompressedData[gIndex++]; // green

        rgbData[rgbaIndex++] = uncompressedData[bIndex++]; // blue
      }
    } else if (photometricInterpretation === 'YBR_FULL') {
      if (uncompressedData instanceof Int8Array) {
        rgbData = new Int8Array(uncompressedData.length);
      } else if (uncompressedData instanceof Uint8Array) {
        rgbData = new Uint8Array(uncompressedData.length);
      } else if (uncompressedData instanceof Int16Array) {
        rgbData = new Int16Array(uncompressedData.length);
      } else if (uncompressedData instanceof Uint16Array) {
        rgbData = new Uint16Array(uncompressedData.length);
      } else {
        throw new Error("unsuported typed array: " + uncompressedData);
      } // https://github.com/chafey/cornerstoneWADOImageLoader/blob/master/src/decodeYBRFull.js


      var nPixels = uncompressedData.length / 3;
      var ybrIndex = 0;
      var _rgbaIndex = 0;

      for (var _i2 = 0; _i2 < nPixels; _i2++) {
        var y = uncompressedData[ybrIndex++];
        var cb = uncompressedData[ybrIndex++];
        var cr = uncompressedData[ybrIndex++];
        rgbData[_rgbaIndex++] = y + 1.402 * (cr - 128); // red

        rgbData[_rgbaIndex++] = y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green

        rgbData[_rgbaIndex++] = y + 1.772 * (cb - 128); // blue
        // rgbData[rgbaIndex++] = 255; //alpha
      }
    } else if (photometricInterpretation === 'PALETTE COLOR') {
      // Account for zero-values for the lookup table length
      //
      // "The first Palette Color Lookup Table Descriptor value is the number of entries in the lookup table.
      //  When the number of table entries is equal to 2^16 then this value shall be 0."
      //
      // See: http://dicom.nema.org/MEDICAL/Dicom/2015c/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.5
      var desc = this.valueOf('RedPaletteColorLookupTableDescriptor');
      var len = desc[0];

      if (!len) {
        len = 65536;
      }

      var start = desc[1];
      var bits = desc[2];
      var shift = bits === 16 ? 8 : 0;
      var rData = this.valueOf('RedPaletteColorLookupTableData');
      var bData = this.valueOf('BluePaletteColorLookupTableData');
      var gData = this.valueOf('GreenPaletteColorLookupTableData');
      var _numPixels = uncompressedData.length;
      rgbData = new Uint8Array(_numPixels * 3);
      var palIndex = 0;
      var _rgbaIndex2 = 0;

      for (var _i3 = 0; _i3 < _numPixels; ++_i3) {
        var value = uncompressedData[palIndex++];

        if (value < start) {
          value = 0;
        } else if (value > start + len - 1) {
          value = len - 1;
        } else {
          value -= start;
        }

        rgbData[_rgbaIndex2++] = rData[value] >> shift; // eslint-disable-line no-bitwise

        rgbData[_rgbaIndex2++] = gData[value] >> shift; // eslint-disable-line no-bitwise

        rgbData[_rgbaIndex2++] = bData[value] >> shift; // eslint-disable-line no-bitwise
        // rgbData[ rgbaIndex++ ] = 255;
      }
    } else {
      // throw `photometric interpolation not supported: ${photometricInterpretation}`;
      rgbData = uncompressedData;
    }

    return rgbData;
  };

  _proto.pixelData = function pixelData(frame) {
    return this.extractPixels(frame);
  };

  _proto.valueOfFrame = function valueOfFrame(subSequence, tag, frameIndex, defaultValue) {
    if (frameIndex === void 0) {
      frameIndex = -1;
    }

    if (defaultValue === void 0) {
      defaultValue = null;
    }

    return this.valueOf(tag, defaultValue) || this.valueOf("SharedFunctionalGroupsSequence[0]." + subSequence + "." + tag, defaultValue) || this.valueOf("PerFrameFunctionalGroupsSequence[" + frameIndex + "]." + subSequence + "." + tag, defaultValue);
  };

  _proto.valueOf = function valueOf(tag, defaultValue) {
    if (defaultValue === void 0) {
      defaultValue = null;
    }

    return _lodashEs.default.result(this._metadata, tag, defaultValue);
  };

  _proto.pixelType = function pixelType(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    // 0 integer, 1 float
    // dicom only support integers
    return 0;
  };

  _proto.studyInstanceUID = function studyInstanceUID() {
    return this.valueOf('StudyInstanceUID');
  };

  _proto.acquisitionDate = function acquisitionDate() {
    return this.valueOf('AcquisitionDate');
  };

  _proto.acquisitionTime = function acquisitionTime() {
    return this.valueOf('AcquisitionTime');
  };

  _proto.studyID = function studyID() {
    return this.valueOf('StudyID');
  };

  _proto.studyDate = function studyDate() {
    return this.valueOf('StudyDate');
  };

  _proto.studyTime = function studyTime() {
    return this.valueOf('StudyTime');
  };

  _proto.accessionNumber = function accessionNumber() {
    return this.valueOf('AccessionNumber');
  };

  _proto.institutionName = function institutionName() {
    return this.valueOf('InstitutionName');
  };

  _proto.institutionAddress = function institutionAddress() {
    return this.valueOf('InstitutionAddress');
  };

  _proto.referringPhysicianName = function referringPhysicianName() {
    return this.valueOf('ReferringPhysicianName');
  };

  _proto.studyDescription = function studyDescription() {
    return this.valueOf('StudyDescription');
  };

  _proto.seriesInstanceUID = function seriesInstanceUID() {
    return this.valueOf('SeriesInstanceUID');
  };

  _proto.rows = function rows() {
    return this.valueOf('Rows');
  };

  _proto.columns = function columns() {
    return this.valueOf('Columns');
  };

  _proto.seriesNumber = function seriesNumber() {
    return this.valueOf('SeriesNumber');
  };

  _proto.seriesDate = function seriesDate() {
    return this.valueOf('SeriesDate');
  };

  _proto.seriesTime = function seriesTime() {
    return this.valueOf('SeriesTime');
  };

  _proto.seriesDescription = function seriesDescription() {
    return this.valueOf('SeriesDescription');
  };

  _proto.modality = function modality() {
    return this.valueOf('Modality');
  };

  _proto.acquisitionNumber = function acquisitionNumber() {
    return this.valueOf('AcquisitionNumber');
  };

  _proto.bodyPartExamined = function bodyPartExamined() {
    return this.valueOf('BodyPartExamined');
  };

  _proto.patientId = function patientId() {
    return this.valueOf('PatientID');
  };

  _proto.patientName = function patientName() {
    return this.valueOf('PatientName');
  };

  _proto.patientBirthDate = function patientBirthDate() {
    return this.valueOf('PatientBirthDate');
  };

  _proto.patientBirthTime = function patientBirthTime() {
    return this.valueOf('PatientBirthTime');
  };

  _proto.patientSex = function patientSex() {
    return this.valueOf('PatientSex');
  };

  _proto.patientComments = function patientComments() {
    return this.valueOf('PatientComments');
  };

  _proto.frameTime = function frameTime() {
    return parseFloat(this.valueOf('FrameTime'));
  };

  _proto.pixelRepresentation = function pixelRepresentation() {
    return this.valueOf('PixelRepresentation');
  };

  _proto.highBit = function highBit() {
    return this.valueOf('HighBit');
  };

  _proto.bitsAllocated = function bitsAllocated() {
    return this.valueOf('BitsAllocated');
  };

  _proto.positionerPrimaryAngle = function positionerPrimaryAngle() {
    return this.valueOf('PositionerPrimaryAngle');
  };

  _proto.positionerSecondaryAngle = function positionerSecondaryAngle() {
    return this.valueOf('PositionerSecondaryAngle');
  };

  _proto.rescaleIntercept = function rescaleIntercept(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    return this.valueOfFrame('PixelValueTransformationSequence', 'RescaleIntercept', frameIndex);
  };

  _proto.rescaleSlope = function rescaleSlope(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    return this.valueOfFrame('PixelValueTransformationSequence', 'RescaleSlope', frameIndex);
  };

  _proto.windowCenter = function windowCenter(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    return this.valueOfFrame('FrameVOILUTSequence', 'WindowCenter', frameIndex);
  };

  _proto.windowWidth = function windowWidth(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    return this.valueOfFrame('FrameVOILUTSequence', 'WindowWidth', frameIndex);
  };

  _proto.sliceThickness = function sliceThickness(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    return this.valueOfFrame('PixelMeasuresSequence', 'SliceThickness', frameIndex);
  };

  _proto.samplesPerPixel = function samplesPerPixel() {
    return this.valueOf('SamplesPerPixel');
  };

  _proto.numberOfFrames = function numberOfFrames() {
    return this.valueOf('NumberOfFrames', 1);
  };

  _proto.numberOfChannels = function numberOfChannels() {
    var numberOfChannels = 1;
    var photometricInterpretation = this.photometricInterpretation();

    if (!(photometricInterpretation !== 'RGB' && photometricInterpretation !== 'PALETTE COLOR' && photometricInterpretation !== 'YBR_FULL' && photometricInterpretation !== 'YBR_FULL_422' && photometricInterpretation !== 'YBR_PARTIAL_422' && photometricInterpretation !== 'YBR_PARTIAL_420' && photometricInterpretation !== 'YBR_RCT')) {
      numberOfChannels = 3;
    }

    return numberOfChannels;
  };

  _proto.imageOrientation = function imageOrientation(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    var imageOrientation = this.valueOfFrame('PlaneOrientationSequence', 'ImageOrientation', frameIndex);

    if (imageOrientation) {
      imageOrientation = orientation.split('\\').map(Number); // eslint-disable-line
    }

    return imageOrientation;
  };

  _proto.pixelAspectRatio = function pixelAspectRatio() {
    var pixelAspectRatio = this.valueOf('PixelAspectRatio');

    if (pixelAspectRatio) {
      pixelAspectRatio = pixelAspectRatio.split('\\').map(Number);
    }

    return pixelAspectRatio;
  };

  _proto.imagePosition = function imagePosition(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    // ImagePosition or ImagePositionPatient ?
    var imagePosition = this.valueOfFrame('PlanePositionSequence', 'ImagePosition', frameIndex);

    if (imagePosition) {
      imagePosition = imagePosition.split('\\').map(Number);
    }

    return imagePosition;
  };

  _proto.instanceNumber = function instanceNumber(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    var instanceNumber = this.valueOf("PerFrameFunctionalGroupsSequence[" + frameIndex + "].x52009230.InstanceNumber");

    if (instanceNumber === null) {
      instanceNumber = this.valueOf('InstanceNumber');
    }

    return instanceNumber;
  };

  _proto.pixelSpacing = function pixelSpacing(frameIndex) {
    if (frameIndex === void 0) {
      frameIndex = 0;
    }

    var pixelSpacing = this.valueOfFrame('PixelMeasuresSequence', 'PixelSpacing', frameIndex);

    if (pixelSpacing) {
      pixelSpacing = pixelSpacing.split('\\').map(Number);
    }

    return pixelSpacing;
  };

  _proto.photometricInterpretation = function photometricInterpretation() {
    return this.valueOf('PhotometricInterpretation');
  };

  _proto.planarConfiguration = function planarConfiguration() {
    return this.valueOf('PlanarConfiguration');
  };

  _proto.sopInstanceUID = function sopInstanceUID() {
    return this.valueOf('SOPInstanceUID');
  };

  return DicomParser;
}();

var _default = DicomParser;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(41)))

/***/ }),
/* 968 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ****/

/**
 * jpeg
  * @type {*|{}}
 */
var jpeg = jpeg || {};

/**
 * jpeg.lossless
 * @type {*|{}}
 */
jpeg.lossless = jpeg.lossless || {};


jpeg.lossless.ComponentSpec = jpeg.lossless.ComponentSpec || (( true) ? __webpack_require__(969) : undefined);
jpeg.lossless.DataStream = jpeg.lossless.DataStream || (( true) ? __webpack_require__(970) : undefined);
jpeg.lossless.Decoder = jpeg.lossless.Decoder || (( true) ? __webpack_require__(971) : undefined);
jpeg.lossless.FrameHeader = jpeg.lossless.FrameHeader || (( true) ? __webpack_require__(977) : undefined);
jpeg.lossless.HuffmanTable = jpeg.lossless.HuffmanTable || (( true) ? __webpack_require__(972) : undefined);
jpeg.lossless.QuantizationTable = jpeg.lossless.QuantizationTable || (( true) ? __webpack_require__(974) : undefined);
jpeg.lossless.ScanComponent = jpeg.lossless.ScanComponent || (( true) ? __webpack_require__(976) : undefined);
jpeg.lossless.ScanHeader = jpeg.lossless.ScanHeader || (( true) ? __webpack_require__(975) : undefined);
jpeg.lossless.Utils = jpeg.lossless.Utils || (( true) ? __webpack_require__(973) : undefined);


/*** Exports ***/
var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg;
}


/***/ }),
/* 969 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Copyright (C) 2015 Michael Martinez
 * Changes: Added support for selection values 2-7, fixed minor bugs &
 * warnings, split into multiple class files, and general clean up.
 *
 * 08-25-2015: Helmut Dersch agreed to a license change from LGPL to MIT.
 */

/*
 * Copyright (C) Helmut Dersch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/
var jpeg = jpeg || {};
jpeg.lossless = jpeg.lossless || {};


/*** Constructor ***/
jpeg.lossless.ComponentSpec = jpeg.lossless.ComponentSpec || function () {
    this.hSamp = 0; // Horizontal sampling factor
    this.quantTableSel = 0; // Quantization table destination selector
    this.vSamp = 0; // Vertical
};


/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg.lossless.ComponentSpec;
}


/***/ }),
/* 970 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Copyright (C) 2015 Michael Martinez
 * Changes: Added support for selection values 2-7, fixed minor bugs &
 * warnings, split into multiple class files, and general clean up.
 *
 * 08-25-2015: Helmut Dersch agreed to a license change from LGPL to MIT.
 */

/*
 * Copyright (C) Helmut Dersch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/
var jpeg = jpeg || {};
jpeg.lossless = jpeg.lossless || {};


/*** Constructor ***/
jpeg.lossless.DataStream = jpeg.lossless.DataStream || function (data, offset, length) {
    if (offset === undefined && length === undefined) { // Old api
        this.buffer = new Uint8Array(data);
    } else {
        this.buffer = new Uint8Array(data, offset, length);
    }
    this.index = 0;
};



jpeg.lossless.DataStream.prototype.get16 = function () {
    // var value = this.buffer.getUint16(this.index, false);
    var value = (this.buffer[this.index] << 8) + this.buffer[this.index + 1]; // DataView is big-endian by default
    this.index += 2;
    return value;
};



jpeg.lossless.DataStream.prototype.get8 = function () {
    // var value = this.buffer.getUint8(this.index);
    var value = this.buffer[this.index];
    this.index += 1;
    return value;
};


/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg.lossless.DataStream;
}


/***/ }),
/* 971 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Copyright (C) 2015 Michael Martinez
 * Changes: Added support for selection values 2-7, fixed minor bugs &
 * warnings, split into multiple class files, and general clean up.
 *
 * 08-25-2015: Helmut Dersch agreed to a license change from LGPL to MIT.
 */

/*
 * Copyright (C) Helmut Dersch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/
var jpeg = jpeg || {};
jpeg.lossless = jpeg.lossless || {};
jpeg.lossless.DataStream = jpeg.lossless.DataStream || (( true) ? __webpack_require__(970) : undefined);
jpeg.lossless.HuffmanTable = jpeg.lossless.HuffmanTable || (( true) ? __webpack_require__(972) : undefined);
jpeg.lossless.QuantizationTable = jpeg.lossless.QuantizationTable || (( true) ? __webpack_require__(974) : undefined);
jpeg.lossless.ScanHeader = jpeg.lossless.ScanHeader || (( true) ? __webpack_require__(975) : undefined);
jpeg.lossless.FrameHeader = jpeg.lossless.FrameHeader || (( true) ? __webpack_require__(977) : undefined);
jpeg.lossless.Utils = jpeg.lossless.Utils || (( true) ? __webpack_require__(973) : undefined);


/*** Constructor ***/

/**
 * The Decoder constructor.
 * @property {number} xDim - size of x dimension
 * @property {number} yDim - size of y dimension
 * @property {number} numComp - number of components
 * @property {number} numBytes - number of bytes per component
 * @type {Function}
 */
jpeg.lossless.Decoder = jpeg.lossless.Decoder || function (buffer, numBytes) {
    this.buffer = buffer;
    this.frame = new jpeg.lossless.FrameHeader();
    this.huffTable = new jpeg.lossless.HuffmanTable();
    this.quantTable = new jpeg.lossless.QuantizationTable();
    this.scan = new jpeg.lossless.ScanHeader();
    this.DU = jpeg.lossless.Utils.createArray(10, 4, 64); // at most 10 data units in a MCU, at most 4 data units in one component
    this.HuffTab = jpeg.lossless.Utils.createArray(4, 2, 50 * 256);
    this.IDCT_Source = [];
    this.nBlock = []; // number of blocks in the i-th Comp in a scan
    this.acTab = jpeg.lossless.Utils.createArray(10, 1); // ac HuffTab for the i-th Comp in a scan
    this.dcTab = jpeg.lossless.Utils.createArray(10, 1); // dc HuffTab for the i-th Comp in a scan
    this.qTab = jpeg.lossless.Utils.createArray(10, 1); // quantization table for the i-th Comp in a scan
    this.marker = 0;
    this.markerIndex = 0;
    this.numComp = 0;
    this.restartInterval = 0;
    this.selection = 0;
    this.xDim = 0;
    this.yDim = 0;
    this.xLoc = 0;
    this.yLoc = 0;
    this.numBytes = 0;
    this.outputData = null;
    this.restarting = false;
    this.mask = 0;

    if (typeof numBytes !== "undefined") {
        this.numBytes = numBytes;
    }
};


/*** Static Pseudo-constants ***/

jpeg.lossless.Decoder.IDCT_P = [0, 5, 40, 16, 45, 2, 7, 42, 21, 56, 8, 61, 18, 47, 1, 4, 41, 23, 58, 13, 32, 24, 37, 10, 63, 17, 44, 3, 6, 43, 20,
    57, 15, 34, 29, 48, 53, 26, 39, 9, 60, 19, 46, 22, 59, 12, 33, 31, 50, 55, 25, 36, 11, 62, 14, 35, 28, 49, 52, 27, 38, 30, 51, 54];
jpeg.lossless.Decoder.TABLE = [0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44, 53,
    10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63];
jpeg.lossless.Decoder.MAX_HUFFMAN_SUBTREE = 50;
jpeg.lossless.Decoder.MSB = 0x80000000;
jpeg.lossless.Decoder.RESTART_MARKER_BEGIN = 0xFFD0;
jpeg.lossless.Decoder.RESTART_MARKER_END = 0xFFD7;

/*** Prototype Methods ***/

/**
 * Returns decompressed data.
 * @param {ArrayBuffer} buffer
 * @param {number} [offset]
 * @param {number} [length]
 * @returns {ArrayBufer}
 */
jpeg.lossless.Decoder.prototype.decompress = function (buffer, offset, length) {
    return this.decode(buffer, offset, length).buffer;
};



jpeg.lossless.Decoder.prototype.decode = function (buffer, offset, length, numBytes) {
    /*jslint bitwise: true */

    var current, scanNum = 0, pred = [], i, compN, temp = [], index = [], mcuNum;

    if (typeof buffer !== "undefined") {
        this.buffer = buffer;
    }

    if (typeof numBytes !== "undefined") {
        this.numBytes = numBytes;
    }

    this.stream = new jpeg.lossless.DataStream(this.buffer, offset, length);
    this.buffer = null;

    this.xLoc = 0;
    this.yLoc = 0;
    current = this.stream.get16();

    if (current !== 0xFFD8) { // SOI
        throw new Error("Not a JPEG file");
    }

    current = this.stream.get16();

    while ((((current >> 4) !== 0x0FFC) || (current === 0xFFC4))) { // SOF 0~15
        switch (current) {
            case 0xFFC4: // DHT
                this.huffTable.read(this.stream, this.HuffTab);
                break;
            case 0xFFCC: // DAC
                throw new Error("Program doesn't support arithmetic coding. (format throw new IOException)");
            case 0xFFDB:
                this.quantTable.read(this.stream, jpeg.lossless.Decoder.TABLE);
                break;
            case 0xFFDD:
                this.restartInterval = this.readNumber();
                break;
            case 0xFFE0:
            case 0xFFE1:
            case 0xFFE2:
            case 0xFFE3:
            case 0xFFE4:
            case 0xFFE5:
            case 0xFFE6:
            case 0xFFE7:
            case 0xFFE8:
            case 0xFFE9:
            case 0xFFEA:
            case 0xFFEB:
            case 0xFFEC:
            case 0xFFED:
            case 0xFFEE:
            case 0xFFEF:
                this.readApp();
                break;
            case 0xFFFE:
                this.readComment();
                break;
            default:
                if ((current >> 8) !== 0xFF) {
                    throw new Error("ERROR: format throw new IOException! (decode)");
                }
        }

        current = this.stream.get16();
    }

    if ((current < 0xFFC0) || (current > 0xFFC7)) {
        throw new Error("ERROR: could not handle arithmetic code!");
    }

    this.frame.read(this.stream);
    current = this.stream.get16();

    do {
        while (current !== 0x0FFDA) { // SOS
            switch (current) {
                case 0xFFC4: // DHT
                    this.huffTable.read(this.stream, this.HuffTab);
                    break;
                case 0xFFCC: // DAC
                    throw new Error("Program doesn't support arithmetic coding. (format throw new IOException)");
                case 0xFFDB:
                    this.quantTable.read(this.stream, jpeg.lossless.Decoder.TABLE);
                    break;
                case 0xFFDD:
                    this.restartInterval = this.readNumber();
                    break;
                case 0xFFE0:
                case 0xFFE1:
                case 0xFFE2:
                case 0xFFE3:
                case 0xFFE4:
                case 0xFFE5:
                case 0xFFE6:
                case 0xFFE7:
                case 0xFFE8:
                case 0xFFE9:
                case 0xFFEA:
                case 0xFFEB:
                case 0xFFEC:
                case 0xFFED:
                case 0xFFEE:
                case 0xFFEF:
                    this.readApp();
                    break;
                case 0xFFFE:
                    this.readComment();
                    break;
                default:
                    if ((current >> 8) !== 0xFF) {
                        throw new Error("ERROR: format throw new IOException! (Parser.decode)");
                    }
            }

            current = this.stream.get16();
        }

        this.precision = this.frame.precision;
        this.components = this.frame.components;

        if (!this.numBytes) {
            this.numBytes = parseInt(Math.ceil(this.precision / 8));
        }

        if (this.numBytes == 1) {
            this.mask = 0xFF;
        } else {
            this.mask = 0xFFFF;
        }

        this.scan.read(this.stream);
        this.numComp = this.scan.numComp;
        this.selection = this.scan.selection;

        if (this.numBytes === 1) {
            if (this.numComp === 3) {
                this.getter = this.getValueRGB;
                this.setter = this.setValueRGB;
                this.output = this.outputRGB;
            } else {
                this.getter = this.getValue8;
                this.setter = this.setValue8;
                this.output = this.outputSingle;
            }
        } else {
            this.getter = this.getValue16;
            this.setter = this.setValue16;
            this.output = this.outputSingle;
        }

        switch (this.selection) {
            case 2:
                this.selector = this.select2;
                break;
            case 3:
                this.selector = this.select3;
                break;
            case 4:
                this.selector = this.select4;
                break;
            case 5:
                this.selector = this.select5;
                break;
            case 6:
                this.selector = this.select6;
                break;
            case 7:
                this.selector = this.select7;
                break;
            default:
                this.selector = this.select1;
                break;
        }

        this.scanComps = this.scan.components;
        this.quantTables = this.quantTable.quantTables;

        for (i = 0; i < this.numComp; i+=1) {
            compN = this.scanComps[i].scanCompSel;
            this.qTab[i] = this.quantTables[this.components[compN].quantTableSel];
            this.nBlock[i] = this.components[compN].vSamp * this.components[compN].hSamp;
            this.dcTab[i] = this.HuffTab[this.scanComps[i].dcTabSel][0];
            this.acTab[i] = this.HuffTab[this.scanComps[i].acTabSel][1];
        }

        this.xDim = this.frame.dimX;
        this.yDim = this.frame.dimY;
        if (this.numBytes == 1) {
            this.outputData = new Uint8Array(new ArrayBuffer(this.xDim * this.yDim * this.numBytes * this.numComp));
        } else {
            this.outputData = new Uint16Array(new ArrayBuffer(this.xDim * this.yDim * this.numBytes * this.numComp));
        }

        scanNum+=1;

        while (true) { // Decode one scan
            temp[0] = 0;
            index[0] = 0;

            for (i = 0; i < 10; i+=1) {
                pred[i] = (1 << (this.precision - 1));
            }

            if (this.restartInterval === 0) {
                current = this.decodeUnit(pred, temp, index);

                while ((current === 0) && ((this.xLoc < this.xDim) && (this.yLoc < this.yDim))) {
                    this.output(pred);
                    current = this.decodeUnit(pred, temp, index);
                }

                break; //current=MARKER
            }

            for (mcuNum = 0; mcuNum < this.restartInterval; mcuNum+=1) {
                this.restarting = (mcuNum == 0);
                current = this.decodeUnit(pred, temp, index);
                this.output(pred);

                if (current !== 0) {
                    break;
                }
            }

            if (current === 0) {
                if (this.markerIndex !== 0) {
                    current = (0xFF00 | this.marker);
                    this.markerIndex = 0;
                } else {
                    current = this.stream.get16();
                }
            }

            if (!((current >= jpeg.lossless.Decoder.RESTART_MARKER_BEGIN) &&
                (current <= jpeg.lossless.Decoder.RESTART_MARKER_END))) {
                break; //current=MARKER
            }
        }

        if ((current === 0xFFDC) && (scanNum === 1)) { //DNL
            this.readNumber();
            current = this.stream.get16();
        }
    } while ((current !== 0xFFD9) && ((this.xLoc < this.xDim) && (this.yLoc < this.yDim)) && (scanNum === 0));

    return this.outputData;
};



jpeg.lossless.Decoder.prototype.decodeUnit = function (prev, temp, index) {
    if (this.numComp == 1) {
        return this.decodeSingle(prev, temp, index);
    } else if (this.numComp == 3) {
        return this.decodeRGB(prev, temp, index);
    } else {
        return -1;
    }
};



jpeg.lossless.Decoder.prototype.select1 = function (compOffset) {
    return this.getPreviousX(compOffset);
};



jpeg.lossless.Decoder.prototype.select2 = function (compOffset) {
    return this.getPreviousY(compOffset);
};



jpeg.lossless.Decoder.prototype.select3 = function (compOffset) {
    return this.getPreviousXY(compOffset);
};



jpeg.lossless.Decoder.prototype.select4 = function (compOffset) {
    return (this.getPreviousX(compOffset) + this.getPreviousY(compOffset)) - this.getPreviousXY(compOffset);
};



jpeg.lossless.Decoder.prototype.select5 = function (compOffset) {
    return this.getPreviousX(compOffset) + ((this.getPreviousY(compOffset) - this.getPreviousXY(compOffset)) >> 1);
};



jpeg.lossless.Decoder.prototype.select6 = function (compOffset) {
    return this.getPreviousY(compOffset) + ((this.getPreviousX(compOffset) - this.getPreviousXY(compOffset)) >> 1);
};



jpeg.lossless.Decoder.prototype.select7 = function (compOffset) {
    return ((this.getPreviousX(compOffset) + this.getPreviousY(compOffset)) / 2);
};



jpeg.lossless.Decoder.prototype.decodeRGB = function (prev, temp, index) {
    /*jslint bitwise: true */

    var value, actab, dctab, qtab, ctrC, i, k, j;

    prev[0] = this.selector(0);
    prev[1] = this.selector(1);
    prev[2] = this.selector(2);

    for (ctrC = 0; ctrC < this.numComp; ctrC+=1) {
        qtab = this.qTab[ctrC];
        actab = this.acTab[ctrC];
        dctab = this.dcTab[ctrC];
        for (i = 0; i < this.nBlock[ctrC]; i+=1) {
            for (k = 0; k < this.IDCT_Source.length; k+=1) {
                this.IDCT_Source[k] = 0;
            }

            value = this.getHuffmanValue(dctab, temp, index);

            if (value >= 0xFF00) {
                return value;
            }

            prev[ctrC] = this.IDCT_Source[0] = prev[ctrC] + this.getn(index, value, temp, index);
            this.IDCT_Source[0] *= qtab[0];

            for (j = 1; j < 64; j+=1) {
                value = this.getHuffmanValue(actab, temp, index);

                if (value >= 0xFF00) {
                    return value;
                }

                j += (value >> 4);

                if ((value & 0x0F) === 0) {
                    if ((value >> 4) === 0) {
                        break;
                    }
                } else {
                    this.IDCT_Source[jpeg.lossless.Decoder.IDCT_P[j]] = this.getn(index, value & 0x0F, temp, index) * qtab[j];
                }
            }
        }
    }

    return 0;
};



jpeg.lossless.Decoder.prototype.decodeSingle = function (prev, temp, index) {
    /*jslint bitwise: true */

    var value, i, n, nRestart;

    if (this.restarting) {
        this.restarting = false;
        prev[0] = (1 << (this.frame.precision - 1));
    } else {
        prev[0] = this.selector();
    }

    for (i = 0; i < this.nBlock[0]; i+=1) {
        value = this.getHuffmanValue(this.dcTab[0], temp, index);
        if (value >= 0xFF00) {
            return value;
        }

        n = this.getn(prev, value, temp, index);
        nRestart = (n >> 8);

        if ((nRestart >= jpeg.lossless.Decoder.RESTART_MARKER_BEGIN) && (nRestart <= jpeg.lossless.Decoder.RESTART_MARKER_END)) {
            return nRestart;
        }

        prev[0] += n;
    }

    return 0;
};



//	Huffman table for fast search: (HuffTab) 8-bit Look up table 2-layer search architecture, 1st-layer represent 256 node (8 bits) if codeword-length > 8
//	bits, then the entry of 1st-layer = (# of 2nd-layer table) | MSB and it is stored in the 2nd-layer Size of tables in each layer are 256.
//	HuffTab[*][*][0-256] is always the only 1st-layer table.
//
//	An entry can be: (1) (# of 2nd-layer table) | MSB , for code length > 8 in 1st-layer (2) (Code length) << 8 | HuffVal
//
//	HuffmanValue(table   HuffTab[x][y] (ex) HuffmanValue(HuffTab[1][0],...)
//	                ):
//	    return: Huffman Value of table
//	            0xFF?? if it receives a MARKER
//	    Parameter:  table   HuffTab[x][y] (ex) HuffmanValue(HuffTab[1][0],...)
//	                temp    temp storage for remainded bits
//	                index   index to bit of temp
//	                in      FILE pointer
//	    Effect:
//	        temp  store new remainded bits
//	        index change to new index
//	        in    change to new position
//	    NOTE:
//	      Initial by   temp=0; index=0;
//	    NOTE: (explain temp and index)
//	      temp: is always in the form at calling time or returning time
//	       |  byte 4  |  byte 3  |  byte 2  |  byte 1  |
//	       |     0    |     0    | 00000000 | 00000??? |  if not a MARKER
//	                                               ^index=3 (from 0 to 15)
//	                                               321
//	    NOTE (marker and marker_index):
//	      If get a MARKER from 'in', marker=the low-byte of the MARKER
//	        and marker_index=9
//	      If marker_index=9 then index is always > 8, or HuffmanValue()
//	        will not be called
jpeg.lossless.Decoder.prototype.getHuffmanValue = function (table, temp, index) {
    /*jslint bitwise: true */

    var code, input, mask;
    mask = 0xFFFF;

    if (index[0] < 8) {
        temp[0] <<= 8;
        input = this.stream.get8();
        if (input === 0xFF) {
            this.marker = this.stream.get8();
            if (this.marker !== 0) {
                this.markerIndex = 9;
            }
        }
        temp[0] |= input;
    } else {
        index[0] -= 8;
    }

    code = table[temp[0] >> index[0]];

    if ((code & jpeg.lossless.Decoder.MSB) !== 0) {
        if (this.markerIndex !== 0) {
            this.markerIndex = 0;
            return 0xFF00 | this.marker;
        }

        temp[0] &= (mask >> (16 - index[0]));
        temp[0] <<= 8;
        input = this.stream.get8();

        if (input === 0xFF) {
            this.marker = this.stream.get8();
            if (this.marker !== 0) {
                this.markerIndex = 9;
            }
        }

        temp[0] |= input;
        code = table[((code & 0xFF) * 256) + (temp[0] >> index[0])];
        index[0] += 8;
    }

    index[0] += 8 - (code >> 8);

    if (index[0] < 0) {
        throw new Error("index=" + index[0] + " temp=" + temp[0] + " code=" + code + " in HuffmanValue()");
    }

    if (index[0] < this.markerIndex) {
        this.markerIndex = 0;
        return 0xFF00 | this.marker;
    }

    temp[0] &= (mask >> (16 - index[0]));
    return code & 0xFF;
};



jpeg.lossless.Decoder.prototype.getn = function (PRED, n, temp, index) {
    /*jslint bitwise: true */

    var result, one, n_one, mask, input;
    one = 1;
    n_one = -1;
    mask = 0xFFFF;

    if (n === 0) {
        return 0;
    }

    if (n === 16) {
        if (PRED[0] >= 0) {
            return -32768;
        } else {
            return 32768;
        }
    }

    index[0] -= n;

    if (index[0] >= 0) {
        if ((index[0] < this.markerIndex) && !this.isLastPixel()) { // this was corrupting the last pixel in some cases
            this.markerIndex = 0;
            return (0xFF00 | this.marker) << 8;
        }

        result = temp[0] >> index[0];
        temp[0] &= (mask >> (16 - index[0]));
    } else {
        temp[0] <<= 8;
        input = this.stream.get8();

        if (input === 0xFF) {
            this.marker = this.stream.get8();
            if (this.marker !== 0) {
                this.markerIndex = 9;
            }
        }

        temp[0] |= input;
        index[0] += 8;

        if (index[0] < 0) {
            if (this.markerIndex !== 0) {
                this.markerIndex = 0;
                return (0xFF00 | this.marker) << 8;
            }

            temp[0] <<= 8;
            input = this.stream.get8();

            if (input === 0xFF) {
                this.marker = this.stream.get8();
                if (this.marker !== 0) {
                    this.markerIndex = 9;
                }
            }

            temp[0] |= input;
            index[0] += 8;
        }

        if (index[0] < 0) {
            throw new Error("index=" + index[0] + " in getn()");
        }

        if (index[0] < this.markerIndex) {
            this.markerIndex = 0;
            return (0xFF00 | this.marker) << 8;
        }

        result = temp[0] >> index[0];
        temp[0] &= (mask >> (16 - index[0]));
    }

    if (result < (one << (n - 1))) {
        result += (n_one << n) + 1;
    }

    return result;
};



jpeg.lossless.Decoder.prototype.getPreviousX = function (compOffset) {
    /*jslint bitwise: true */

    if (this.xLoc > 0) {
        return this.getter((((this.yLoc * this.xDim) + this.xLoc) - 1), compOffset);
    } else if (this.yLoc > 0) {
        return this.getPreviousY(compOffset);
    } else {
        return (1 << (this.frame.precision - 1));
    }
};



jpeg.lossless.Decoder.prototype.getPreviousXY = function (compOffset) {
    /*jslint bitwise: true */

    if ((this.xLoc > 0) && (this.yLoc > 0)) {
        return this.getter(((((this.yLoc - 1) * this.xDim) + this.xLoc) - 1), compOffset);
    } else {
        return this.getPreviousY(compOffset);
    }
};



jpeg.lossless.Decoder.prototype.getPreviousY = function (compOffset) {
    /*jslint bitwise: true */

    if (this.yLoc > 0) {
        return this.getter((((this.yLoc - 1) * this.xDim) + this.xLoc), compOffset);
    } else {
        return this.getPreviousX(compOffset);
    }
};



jpeg.lossless.Decoder.prototype.isLastPixel = function () {
    return (this.xLoc === (this.xDim - 1)) && (this.yLoc === (this.yDim - 1));
};



jpeg.lossless.Decoder.prototype.outputSingle = function (PRED) {
    if ((this.xLoc < this.xDim) && (this.yLoc < this.yDim)) {
        this.setter((((this.yLoc * this.xDim) + this.xLoc)), this.mask & PRED[0]);

        this.xLoc+=1;

        if (this.xLoc >= this.xDim) {
            this.yLoc+=1;
            this.xLoc = 0;
        }
    }
};



jpeg.lossless.Decoder.prototype.outputRGB = function (PRED) {
    var offset = ((this.yLoc * this.xDim) + this.xLoc);

    if ((this.xLoc < this.xDim) && (this.yLoc < this.yDim)) {
        this.setter(offset, PRED[0], 0);
        this.setter(offset, PRED[1], 1);
        this.setter(offset, PRED[2], 2);

        this.xLoc+=1;

        if (this.xLoc >= this.xDim) {
            this.yLoc+=1;
            this.xLoc = 0;
        }
    }
};

jpeg.lossless.Decoder.prototype.setValue8 = function (index, val) {
    this.outputData[index] = val; 
};

jpeg.lossless.Decoder.prototype.getValue8 = function (index) {
    return this.outputData[index]; // mask should not be necessary because outputData is either Int8Array or Int16Array
};

var littleEndian = (function() {
    var buffer = new ArrayBuffer(2);
    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);
    // Int16Array uses the platform's endianness.
    return new Int16Array(buffer)[0] === 256;
})();

if (littleEndian) {
    // just reading from an array is fine then. Int16Array will use platform endianness.
    jpeg.lossless.Decoder.prototype.setValue16 = jpeg.lossless.Decoder.prototype.setValue8; 
    jpeg.lossless.Decoder.prototype.getValue16 = jpeg.lossless.Decoder.prototype.getValue8;
} 
else {
    // If platform is big-endian, we will need to convert to little-endian 
    jpeg.lossless.Decoder.prototype.setValue16 = function (index, val) {
        this.outputData[index] = ((val & 0xFF) << 8) | ((val >> 8) & 0xFF); 
    };

    jpeg.lossless.Decoder.prototype.getValue16 = function (index) {
        var val = this.outputData[index];
        return ((val & 0xFF) << 8) | ((val >> 8) & 0xFF);
    };
}

jpeg.lossless.Decoder.prototype.setValueRGB = function (index, val, compOffset) {
    // this.outputData.setUint8(index * 3 + compOffset, val);
    this.outputData[index * 3 + compOffset] = val;
};

jpeg.lossless.Decoder.prototype.getValueRGB = function (index, compOffset) {
    // return this.outputData.getUint8(index * 3 + compOffset);
    return this.outputData[index * 3 + compOffset];
};



jpeg.lossless.Decoder.prototype.readApp = function() {
    var count = 0, length = this.stream.get16();
    count += 2;

    while (count < length) {
        this.stream.get8();
        count+=1;
    }

    return length;
};



jpeg.lossless.Decoder.prototype.readComment = function () {
    var sb = "", count = 0, length;

    length = this.stream.get16();
    count += 2;

    while (count < length) {
        sb += this.stream.get8();
        count+=1;
    }

    return sb;
};



jpeg.lossless.Decoder.prototype.readNumber = function() {
    var Ld = this.stream.get16();

    if (Ld !== 4) {
        throw new Error("ERROR: Define number format throw new IOException [Ld!=4]");
    }

    return this.stream.get16();
};



/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg.lossless.Decoder;
}


/***/ }),
/* 972 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Copyright (C) 2015 Michael Martinez
 * Changes: Added support for selection values 2-7, fixed minor bugs &
 * warnings, split into multiple class files, and general clean up.
 *
 * 08-25-2015: Helmut Dersch agreed to a license change from LGPL to MIT.
 */

/*
 * Copyright (C) Helmut Dersch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/
var jpeg = jpeg || {};
jpeg.lossless = jpeg.lossless || {};
jpeg.lossless.DataStream = jpeg.lossless.DataStream || (( true) ? __webpack_require__(970) : undefined);
jpeg.lossless.Utils = jpeg.lossless.Utils || (( true) ? __webpack_require__(973) : undefined);


/*** Constructor ***/
jpeg.lossless.HuffmanTable = jpeg.lossless.HuffmanTable || function () {
    this.l = jpeg.lossless.Utils.createArray(4, 2, 16);
    this.th = [];
    this.v = jpeg.lossless.Utils.createArray(4, 2, 16, 200);
    this.tc = jpeg.lossless.Utils.createArray(4, 2);

    this.tc[0][0] = 0;
    this.tc[1][0] = 0;
    this.tc[2][0] = 0;
    this.tc[3][0] = 0;
    this.tc[0][1] = 0;
    this.tc[1][1] = 0;
    this.tc[2][1] = 0;
    this.tc[3][1] = 0;
    this.th[0] = 0;
    this.th[1] = 0;
    this.th[2] = 0;
    this.th[3] = 0;
};



/*** Static Pseudo-constants ***/

jpeg.lossless.HuffmanTable.MSB = 0x80000000;


/*** Prototype Methods ***/

jpeg.lossless.HuffmanTable.prototype.read = function(data, HuffTab) {
    /*jslint bitwise: true */

    var count = 0, length, temp, t, c, i, j;

    length = data.get16();
    count += 2;

    while (count < length) {
        temp = data.get8();
        count+=1;
        t = temp & 0x0F;
        if (t > 3) {
            throw new Error("ERROR: Huffman table ID > 3");
        }

        c = temp >> 4;
        if (c > 2) {
            throw new Error("ERROR: Huffman table [Table class > 2 ]");
        }

        this.th[t] = 1;
        this.tc[t][c] = 1;

        for (i = 0; i < 16; i+=1) {
            this.l[t][c][i] = data.get8();
            count+=1;
        }

        for (i = 0; i < 16; i+=1) {
            for (j = 0; j < this.l[t][c][i]; j+=1) {
                if (count > length) {
                    throw new Error("ERROR: Huffman table format error [count>Lh]");
                }

                this.v[t][c][i][j] = data.get8();
                count+=1;
            }
        }
    }

    if (count !== length) {
        throw new Error("ERROR: Huffman table format error [count!=Lf]");
    }

    for (i = 0; i < 4; i+=1) {
        for (j = 0; j < 2; j+=1) {
            if (this.tc[i][j] !== 0) {
                this.buildHuffTable(HuffTab[i][j], this.l[i][j], this.v[i][j]);
            }
        }
    }

    return 1;
};



//	Build_HuffTab()
//	Parameter:  t       table ID
//	            c       table class ( 0 for DC, 1 for AC )
//	            L[i]    # of codewords which length is i
//	            V[i][j] Huffman Value (length=i)
//	Effect:
//	    build up HuffTab[t][c] using L and V.
jpeg.lossless.HuffmanTable.prototype.buildHuffTable = function(tab, L, V) {
    /*jslint bitwise: true */

    var currentTable, temp, k, i, j, n;
    temp = 256;
    k = 0;

    for (i = 0; i < 8; i+=1) { // i+1 is Code length
        for (j = 0; j < L[i]; j+=1) {
            for (n = 0; n < (temp >> (i + 1)); n+=1) {
                tab[k] = V[i][j] | ((i + 1) << 8);
                k+=1;
            }
        }
    }

    for (i = 1; k < 256; i+=1, k+=1) {
        tab[k] = i | jpeg.lossless.HuffmanTable.MSB;
    }

    currentTable = 1;
    k = 0;

    for (i = 8; i < 16; i+=1) { // i+1 is Code length
        for (j = 0; j < L[i]; j+=1) {
            for (n = 0; n < (temp >> (i - 7)); n+=1) {
                tab[(currentTable * 256) + k] = V[i][j] | ((i + 1) << 8);
                k+=1;
            }

            if (k >= 256) {
                if (k > 256) {
                    throw new Error("ERROR: Huffman table error(1)!");
                }

                k = 0;
                currentTable+=1;
            }
        }
    }
};


/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg.lossless.HuffmanTable;
}


/***/ }),
/* 973 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Copyright (C) 2015 Michael Martinez
 * Changes: Added support for selection values 2-7, fixed minor bugs &
 * warnings, split into multiple class files, and general clean up.
 *
 * 08-25-2015: Helmut Dersch agreed to a license change from LGPL to MIT.
 */

/*
 * Copyright (C) Helmut Dersch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/
var jpeg = jpeg || {};
jpeg.lossless = jpeg.lossless || {};


/*** Constructor ***/
jpeg.lossless.Utils = jpeg.lossless.Utils || {};


/*** Static methods ***/

// http://stackoverflow.com/questions/966225/how-can-i-create-a-two-dimensional-array-in-javascript
jpeg.lossless.Utils.createArray = function (length) {
    var arr = new Array(length || 0),
        i = length;

    if (arguments.length > 1) {
        var args = Array.prototype.slice.call(arguments, 1);
        while(i--) arr[length-1 - i] = jpeg.lossless.Utils.createArray.apply(this, args);
    }

    return arr;
};


// http://stackoverflow.com/questions/18638900/javascript-crc32
jpeg.lossless.Utils.makeCRCTable = function(){
    var c;
    var crcTable = [];
    for(var n =0; n < 256; n++){
        c = n;
        for(var k =0; k < 8; k++){
            c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
        }
        crcTable[n] = c;
    }
    return crcTable;
};

jpeg.lossless.Utils.crc32 = function(dataView) {
    var uint8view = new Uint8Array(dataView.buffer);
    var crcTable = jpeg.lossless.Utils.crcTable || (jpeg.lossless.Utils.crcTable = jpeg.lossless.Utils.makeCRCTable());
    var crc = 0 ^ (-1);

    for (var i = 0; i < uint8view.length; i++ ) {
        crc = (crc >>> 8) ^ crcTable[(crc ^ uint8view[i]) & 0xFF];
    }

    return (crc ^ (-1)) >>> 0;
};


/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg.lossless.Utils;
}


/***/ }),
/* 974 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Copyright (C) 2015 Michael Martinez
 * Changes: Added support for selection values 2-7, fixed minor bugs &
 * warnings, split into multiple class files, and general clean up.
 *
 * 08-25-2015: Helmut Dersch agreed to a license change from LGPL to MIT.
 */

/*
 * Copyright (C) Helmut Dersch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/
var jpeg = jpeg || {};
jpeg.lossless = jpeg.lossless || {};
jpeg.lossless.DataStream = jpeg.lossless.DataStream || (( true) ? __webpack_require__(970) : undefined);
jpeg.lossless.Utils = jpeg.lossless.Utils || (( true) ? __webpack_require__(973) : undefined);


/*** Constructor ***/
jpeg.lossless.QuantizationTable = jpeg.lossless.QuantizationTable || function () {
    this.precision = []; // Quantization precision 8 or 16
    this.tq = []; // 1: this table is presented
    this.quantTables = jpeg.lossless.Utils.createArray(4, 64); // Tables

    this.tq[0] = 0;
    this.tq[1] = 0;
    this.tq[2] = 0;
    this.tq[3] = 0;
};



/*** Static Methods ***/

jpeg.lossless.QuantizationTable.enhanceQuantizationTable = function(qtab, table) {
    /*jslint bitwise: true */

    var i;

    for (i = 0; i < 8; i+=1) {
        qtab[table[(0 * 8) + i]] *= 90;
        qtab[table[(4 * 8) + i]] *= 90;
        qtab[table[(2 * 8) + i]] *= 118;
        qtab[table[(6 * 8) + i]] *= 49;
        qtab[table[(5 * 8) + i]] *= 71;
        qtab[table[(1 * 8) + i]] *= 126;
        qtab[table[(7 * 8) + i]] *= 25;
        qtab[table[(3 * 8) + i]] *= 106;
    }

    for (i = 0; i < 8; i+=1) {
        qtab[table[0 + (8 * i)]] *= 90;
        qtab[table[4 + (8 * i)]] *= 90;
        qtab[table[2 + (8 * i)]] *= 118;
        qtab[table[6 + (8 * i)]] *= 49;
        qtab[table[5 + (8 * i)]] *= 71;
        qtab[table[1 + (8 * i)]] *= 126;
        qtab[table[7 + (8 * i)]] *= 25;
        qtab[table[3 + (8 * i)]] *= 106;
    }

    for (i = 0; i < 64; i+=1) {
        qtab[i] >>= 6;
    }
};


/*** Prototype Methods ***/

jpeg.lossless.QuantizationTable.prototype.read = function (data, table) {
    /*jslint bitwise: true */

    var count = 0, length, temp, t, i;

    length = data.get16();
    count += 2;

    while (count < length) {
        temp = data.get8();
        count+=1;
        t = temp & 0x0F;

        if (t > 3) {
            throw new Error("ERROR: Quantization table ID > 3");
        }

        this.precision[t] = temp >> 4;

        if (this.precision[t] === 0) {
            this.precision[t] = 8;
        } else if (this.precision[t] === 1) {
            this.precision[t] = 16;
        } else {
            throw new Error("ERROR: Quantization table precision error");
        }

        this.tq[t] = 1;

        if (this.precision[t] === 8) {
            for (i = 0; i < 64; i+=1) {
                if (count > length) {
                    throw new Error("ERROR: Quantization table format error");
                }

                this.quantTables[t][i] = data.get8();
                count+=1;
            }

            jpeg.lossless.QuantizationTable.enhanceQuantizationTable(this.quantTables[t], table);
        } else {
            for (i = 0; i < 64; i+=1) {
                if (count > length) {
                    throw new Error("ERROR: Quantization table format error");
                }

                this.quantTables[t][i] = data.get16();
                count += 2;
            }

            jpeg.lossless.QuantizationTable.enhanceQuantizationTable(this.quantTables[t], table);
        }
    }

    if (count !== length) {
        throw new Error("ERROR: Quantization table error [count!=Lq]");
    }

    return 1;
};



/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg.lossless.QuantizationTable;
}


/***/ }),
/* 975 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Copyright (C) 2015 Michael Martinez
 * Changes: Added support for selection values 2-7, fixed minor bugs &
 * warnings, split into multiple class files, and general clean up.
 *
 * 08-25-2015: Helmut Dersch agreed to a license change from LGPL to MIT.
 */

/*
 * Copyright (C) Helmut Dersch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/
var jpeg = jpeg || {};
jpeg.lossless = jpeg.lossless || {};
jpeg.lossless.DataStream = jpeg.lossless.DataStream || (( true) ? __webpack_require__(970) : undefined);
jpeg.lossless.ScanComponent = jpeg.lossless.ScanComponent || (( true) ? __webpack_require__(976) : undefined);


/*** Constructor ***/
jpeg.lossless.ScanHeader = jpeg.lossless.ScanHeader || function () {
    this.ah = 0;
    this.al = 0;
    this.numComp = 0; // Number of components in the scan
    this.selection = 0; // Start of spectral or predictor selection
    this.spectralEnd = 0; // End of spectral selection
    this.components = [];
};


/*** Prototype Methods ***/

jpeg.lossless.ScanHeader.prototype.read = function(data) {
    /*jslint bitwise: true */

    var count = 0, length, i, temp;

    length = data.get16();
    count += 2;

    this.numComp = data.get8();
    count+=1;

    for (i = 0; i < this.numComp; i+=1) {
        this.components[i] = new jpeg.lossless.ScanComponent();

        if (count > length) {
            throw new Error("ERROR: scan header format error");
        }

        this.components[i].scanCompSel = data.get8();
        count+=1;

        temp = data.get8();
        count+=1;

        this.components[i].dcTabSel = (temp >> 4);
        this.components[i].acTabSel = (temp & 0x0F);
    }

    this.selection = data.get8();
    count+=1;

    this.spectralEnd = data.get8();
    count+=1;

    temp = data.get8();
    this.ah = (temp >> 4);
    this.al = (temp & 0x0F);
    count+=1;

    if (count !== length) {
        throw new Error("ERROR: scan header format error [count!=Ns]");
    }

    return 1;
};



/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg.lossless.ScanHeader;
}


/***/ }),
/* 976 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Copyright (C) 2015 Michael Martinez
 * Changes: Added support for selection values 2-7, fixed minor bugs &
 * warnings, split into multiple class files, and general clean up.
 *
 * 08-25-2015: Helmut Dersch agreed to a license change from LGPL to MIT.
 */

/*
 * Copyright (C) Helmut Dersch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/
var jpeg = jpeg || {};
jpeg.lossless = jpeg.lossless || {};


/*** Constructor ***/
jpeg.lossless.ScanComponent = jpeg.lossless.ScanComponent || function () {
    this.acTabSel = 0; // AC table selector
    this.dcTabSel = 0; // DC table selector
    this.scanCompSel = 0; // Scan component selector
};



/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg.lossless.ScanComponent;
}


/***/ }),
/* 977 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Copyright (C) 2015 Michael Martinez
 * Changes: Added support for selection values 2-7, fixed minor bugs &
 * warnings, split into multiple class files, and general clean up.
 *
 * 08-25-2015: Helmut Dersch agreed to a license change from LGPL to MIT.
 */

/*
 * Copyright (C) Helmut Dersch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/*jslint browser: true, node: true */
/*global require, module */



/*** Imports ***/
var jpeg = jpeg || {};
jpeg.lossless = jpeg.lossless || {};
jpeg.lossless.ComponentSpec = jpeg.lossless.ComponentSpec || (( true) ? __webpack_require__(969) : undefined);
jpeg.lossless.DataStream = jpeg.lossless.DataStream || (( true) ? __webpack_require__(970) : undefined);


/*** Constructor ***/
jpeg.lossless.FrameHeader = jpeg.lossless.FrameHeader || function () {
    this.components = []; // Components
    this.dimX = 0; // Number of samples per line
    this.dimY = 0; // Number of lines
    this.numComp = 0; // Number of component in the frame
    this.precision = 0; // Sample Precision (from the original image)
};



/*** Prototype Methods ***/

jpeg.lossless.FrameHeader.prototype.read = function (data) {
    /*jslint bitwise: true */

    var count = 0, length, i, c, temp;

    length = data.get16();
    count += 2;

    this.precision = data.get8();
    count+=1;

    this.dimY = data.get16();
    count += 2;

    this.dimX = data.get16();
    count += 2;

    this.numComp = data.get8();
    count+=1;
    for (i = 1; i <= this.numComp; i+=1) {
        if (count > length) {
            throw new Error("ERROR: frame format error");
        }

        c = data.get8();
        count+=1;

        if (count >= length) {
            throw new Error("ERROR: frame format error [c>=Lf]");
        }

        temp = data.get8();
        count+=1;

        if (!this.components[c]) {
            this.components[c] = new jpeg.lossless.ComponentSpec();
        }

        this.components[c].hSamp = temp >> 4;
        this.components[c].vSamp = temp & 0x0F;
        this.components[c].quantTableSel = data.get8();
        count+=1;
    }

    if (count !== length) {
        throw new Error("ERROR: frame format error [Lf!=count]");
    }

    return 1;
};


/*** Exports ***/

var moduleType = typeof module;
if ((moduleType !== 'undefined') && module.exports) {
    module.exports = jpeg.lossless.FrameHeader;
}


/***/ }),
/* 978 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable */
// jshint ignore: start

/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /
 /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */

/*
 Copyright 2011 notmasteryet

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
// - The JPEG specification can be found in the ITU CCITT Recommendation T.81
//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)
// - The JFIF specification can be found in the JPEG File Interchange Format
//   (www.w3.org/Graphics/JPEG/jfif3.pdf)
// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters
//   in PostScript Level 2, Technical Note #5116
//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)
var ColorSpace = {
  Unkown: 0,
  Grayscale: 1,
  AdobeRGB: 2,
  RGB: 3,
  CYMK: 4
};

var JpegImage = function jpegImage() {
  "use strict";

  var dctZigZag = new Int32Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);
  var dctCos1 = 4017; // cos(pi/16)

  var dctSin1 = 799; // sin(pi/16)

  var dctCos3 = 3406; // cos(3*pi/16)

  var dctSin3 = 2276; // sin(3*pi/16)

  var dctCos6 = 1567; // cos(6*pi/16)

  var dctSin6 = 3784; // sin(6*pi/16)

  var dctSqrt2 = 5793; // sqrt(2)

  var dctSqrt1d2 = 2896; // sqrt(2) / 2

  function constructor() {}

  function buildHuffmanTable(codeLengths, values) {
    var k = 0,
        code = [],
        i,
        j,
        length = 16;

    while (length > 0 && !codeLengths[length - 1]) {
      length--;
    }

    code.push({
      children: [],
      index: 0
    });
    var p = code[0],
        q;

    for (i = 0; i < length; i++) {
      for (j = 0; j < codeLengths[i]; j++) {
        p = code.pop();
        p.children[p.index] = values[k];

        while (p.index > 0) {
          p = code.pop();
        }

        p.index++;
        code.push(p);

        while (code.length <= i) {
          code.push(q = {
            children: [],
            index: 0
          });
          p.children[p.index] = q.children;
          p = q;
        }

        k++;
      }

      if (i + 1 < length) {
        // p here points to last code
        code.push(q = {
          children: [],
          index: 0
        });
        p.children[p.index] = q.children;
        p = q;
      }
    }

    return code[0].children;
  }

  function getBlockBufferOffset(component, row, col) {
    return 64 * ((component.blocksPerLine + 1) * row + col);
  }

  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {
    var precision = frame.precision;
    var samplesPerLine = frame.samplesPerLine;
    var scanLines = frame.scanLines;
    var mcusPerLine = frame.mcusPerLine;
    var progressive = frame.progressive;
    var maxH = frame.maxH,
        maxV = frame.maxV;
    var startOffset = offset,
        bitsData = 0,
        bitsCount = 0;

    function readBit() {
      if (bitsCount > 0) {
        bitsCount--;
        return bitsData >> bitsCount & 1;
      }

      bitsData = data[offset++];

      if (bitsData == 0xFF) {
        var nextByte = data[offset++];

        if (nextByte) {
          throw "unexpected marker: " + (bitsData << 8 | nextByte).toString(16);
        } // unstuff 0

      }

      bitsCount = 7;
      return bitsData >>> 7;
    }

    function decodeHuffman(tree) {
      var node = tree;
      var bit;

      while ((bit = readBit()) !== null) {
        node = node[bit];
        if (typeof node === 'number') return node;
        if (typeof node !== 'object') throw "invalid huffman sequence";
      }

      return null;
    }

    function receive(length) {
      var n = 0;

      while (length > 0) {
        var bit = readBit();
        if (bit === null) return;
        n = n << 1 | bit;
        length--;
      }

      return n;
    }

    function receiveAndExtend(length) {
      var n = receive(length);
      if (n >= 1 << length - 1) return n;
      return n + (-1 << length) + 1;
    }

    function decodeBaseline(component, offset) {
      var t = decodeHuffman(component.huffmanTableDC);
      var diff = t === 0 ? 0 : receiveAndExtend(t);
      component.blockData[offset] = component.pred += diff;
      var k = 1;

      while (k < 64) {
        var rs = decodeHuffman(component.huffmanTableAC);
        var s = rs & 15,
            r = rs >> 4;

        if (s === 0) {
          if (r < 15) break;
          k += 16;
          continue;
        }

        k += r;
        var z = dctZigZag[k];
        component.blockData[offset + z] = receiveAndExtend(s);
        k++;
      }
    }

    function decodeDCFirst(component, offset) {
      var t = decodeHuffman(component.huffmanTableDC);
      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;
      component.blockData[offset] = component.pred += diff;
    }

    function decodeDCSuccessive(component, offset) {
      component.blockData[offset] |= readBit() << successive;
    }

    var eobrun = 0;

    function decodeACFirst(component, offset) {
      if (eobrun > 0) {
        eobrun--;
        return;
      }

      var k = spectralStart,
          e = spectralEnd;

      while (k <= e) {
        var rs = decodeHuffman(component.huffmanTableAC);
        var s = rs & 15,
            r = rs >> 4;

        if (s === 0) {
          if (r < 15) {
            eobrun = receive(r) + (1 << r) - 1;
            break;
          }

          k += 16;
          continue;
        }

        k += r;
        var z = dctZigZag[k];
        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);
        k++;
      }
    }

    var successiveACState = 0,
        successiveACNextValue;

    function decodeACSuccessive(component, offset) {
      var k = spectralStart,
          e = spectralEnd,
          r = 0;

      while (k <= e) {
        var z = dctZigZag[k];

        switch (successiveACState) {
          case 0:
            // initial state
            var rs = decodeHuffman(component.huffmanTableAC);
            var s = rs & 15;
            r = rs >> 4;

            if (s === 0) {
              if (r < 15) {
                eobrun = receive(r) + (1 << r);
                successiveACState = 4;
              } else {
                r = 16;
                successiveACState = 1;
              }
            } else {
              if (s !== 1) throw "invalid ACn encoding";
              successiveACNextValue = receiveAndExtend(s);
              successiveACState = r ? 2 : 3;
            }

            continue;

          case 1: // skipping r zero items

          case 2:
            if (component.blockData[offset + z]) {
              component.blockData[offset + z] += readBit() << successive;
            } else {
              r--;
              if (r === 0) successiveACState = successiveACState == 2 ? 3 : 0;
            }

            break;

          case 3:
            // set value for a zero item
            if (component.blockData[offset + z]) {
              component.blockData[offset + z] += readBit() << successive;
            } else {
              component.blockData[offset + z] = successiveACNextValue << successive;
              successiveACState = 0;
            }

            break;

          case 4:
            // eob
            if (component.blockData[offset + z]) {
              component.blockData[offset + z] += readBit() << successive;
            }

            break;
        }

        k++;
      }

      if (successiveACState === 4) {
        eobrun--;
        if (eobrun === 0) successiveACState = 0;
      }
    }

    function decodeMcu(component, decode, mcu, row, col) {
      var mcuRow = mcu / mcusPerLine | 0;
      var mcuCol = mcu % mcusPerLine;
      var blockRow = mcuRow * component.v + row;
      var blockCol = mcuCol * component.h + col;
      var offset = getBlockBufferOffset(component, blockRow, blockCol);
      decode(component, offset);
    }

    function decodeBlock(component, decode, mcu) {
      var blockRow = mcu / component.blocksPerLine | 0;
      var blockCol = mcu % component.blocksPerLine;
      var offset = getBlockBufferOffset(component, blockRow, blockCol);
      decode(component, offset);
    }

    var componentsLength = components.length;
    var component, i, j, k, n;
    var decodeFn;

    if (progressive) {
      if (spectralStart === 0) decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;else decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;
    } else {
      decodeFn = decodeBaseline;
    }

    var mcu = 0,
        marker;
    var mcuExpected;

    if (componentsLength == 1) {
      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;
    } else {
      mcuExpected = mcusPerLine * frame.mcusPerColumn;
    }

    if (!resetInterval) {
      resetInterval = mcuExpected;
    }

    var h, v;

    while (mcu < mcuExpected) {
      // reset interval stuff
      for (i = 0; i < componentsLength; i++) {
        components[i].pred = 0;
      }

      eobrun = 0;

      if (componentsLength == 1) {
        component = components[0];

        for (n = 0; n < resetInterval; n++) {
          decodeBlock(component, decodeFn, mcu);
          mcu++;
        }
      } else {
        for (n = 0; n < resetInterval; n++) {
          for (i = 0; i < componentsLength; i++) {
            component = components[i];
            h = component.h;
            v = component.v;

            for (j = 0; j < v; j++) {
              for (k = 0; k < h; k++) {
                decodeMcu(component, decodeFn, mcu, j, k);
              }
            }
          }

          mcu++;
        }
      } // find marker


      bitsCount = 0;
      marker = data[offset] << 8 | data[offset + 1];

      if (marker <= 0xFF00) {
        throw "marker was not found";
      }

      if (marker >= 0xFFD0 && marker <= 0xFFD7) {
        // RSTx
        offset += 2;
      } else {
        break;
      }
    }

    return offset - startOffset;
  } // A port of poppler's IDCT method which in turn is taken from:
  //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,
  //   "Practical Fast 1-D DCT Algorithms with 11 Multiplications",
  //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,
  //   988-991.


  function quantizeAndInverse(component, blockBufferOffset, p) {
    var qt = component.quantizationTable;
    var v0, v1, v2, v3, v4, v5, v6, v7, t;
    var i; // dequant

    for (i = 0; i < 64; i++) {
      p[i] = component.blockData[blockBufferOffset + i] * qt[i];
    } // inverse DCT on rows


    for (i = 0; i < 8; ++i) {
      var row = 8 * i; // check for all-zero AC coefficients

      if (p[1 + row] === 0 && p[2 + row] === 0 && p[3 + row] === 0 && p[4 + row] === 0 && p[5 + row] === 0 && p[6 + row] === 0 && p[7 + row] === 0) {
        t = dctSqrt2 * p[0 + row] + 512 >> 10;
        p[0 + row] = t;
        p[1 + row] = t;
        p[2 + row] = t;
        p[3 + row] = t;
        p[4 + row] = t;
        p[5 + row] = t;
        p[6 + row] = t;
        p[7 + row] = t;
        continue;
      } // stage 4


      v0 = dctSqrt2 * p[0 + row] + 128 >> 8;
      v1 = dctSqrt2 * p[4 + row] + 128 >> 8;
      v2 = p[2 + row];
      v3 = p[6 + row];
      v4 = dctSqrt1d2 * (p[1 + row] - p[7 + row]) + 128 >> 8;
      v7 = dctSqrt1d2 * (p[1 + row] + p[7 + row]) + 128 >> 8;
      v5 = p[3 + row] << 4;
      v6 = p[5 + row] << 4; // stage 3

      t = v0 - v1 + 1 >> 1;
      v0 = v0 + v1 + 1 >> 1;
      v1 = t;
      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;
      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;
      v3 = t;
      t = v4 - v6 + 1 >> 1;
      v4 = v4 + v6 + 1 >> 1;
      v6 = t;
      t = v7 + v5 + 1 >> 1;
      v5 = v7 - v5 + 1 >> 1;
      v7 = t; // stage 2

      t = v0 - v3 + 1 >> 1;
      v0 = v0 + v3 + 1 >> 1;
      v3 = t;
      t = v1 - v2 + 1 >> 1;
      v1 = v1 + v2 + 1 >> 1;
      v2 = t;
      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;
      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;
      v7 = t;
      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;
      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;
      v6 = t; // stage 1

      p[0 + row] = v0 + v7;
      p[7 + row] = v0 - v7;
      p[1 + row] = v1 + v6;
      p[6 + row] = v1 - v6;
      p[2 + row] = v2 + v5;
      p[5 + row] = v2 - v5;
      p[3 + row] = v3 + v4;
      p[4 + row] = v3 - v4;
    } // inverse DCT on columns


    for (i = 0; i < 8; ++i) {
      var col = i; // check for all-zero AC coefficients

      if (p[1 * 8 + col] === 0 && p[2 * 8 + col] === 0 && p[3 * 8 + col] === 0 && p[4 * 8 + col] === 0 && p[5 * 8 + col] === 0 && p[6 * 8 + col] === 0 && p[7 * 8 + col] === 0) {
        t = dctSqrt2 * p[i + 0] + 8192 >> 14;
        p[0 * 8 + col] = t;
        p[1 * 8 + col] = t;
        p[2 * 8 + col] = t;
        p[3 * 8 + col] = t;
        p[4 * 8 + col] = t;
        p[5 * 8 + col] = t;
        p[6 * 8 + col] = t;
        p[7 * 8 + col] = t;
        continue;
      } // stage 4


      v0 = dctSqrt2 * p[0 * 8 + col] + 2048 >> 12;
      v1 = dctSqrt2 * p[4 * 8 + col] + 2048 >> 12;
      v2 = p[2 * 8 + col];
      v3 = p[6 * 8 + col];
      v4 = dctSqrt1d2 * (p[1 * 8 + col] - p[7 * 8 + col]) + 2048 >> 12;
      v7 = dctSqrt1d2 * (p[1 * 8 + col] + p[7 * 8 + col]) + 2048 >> 12;
      v5 = p[3 * 8 + col];
      v6 = p[5 * 8 + col]; // stage 3

      t = v0 - v1 + 1 >> 1;
      v0 = v0 + v1 + 1 >> 1;
      v1 = t;
      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;
      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;
      v3 = t;
      t = v4 - v6 + 1 >> 1;
      v4 = v4 + v6 + 1 >> 1;
      v6 = t;
      t = v7 + v5 + 1 >> 1;
      v5 = v7 - v5 + 1 >> 1;
      v7 = t; // stage 2

      t = v0 - v3 + 1 >> 1;
      v0 = v0 + v3 + 1 >> 1;
      v3 = t;
      t = v1 - v2 + 1 >> 1;
      v1 = v1 + v2 + 1 >> 1;
      v2 = t;
      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;
      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;
      v7 = t;
      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;
      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;
      v6 = t; // stage 1

      p[0 * 8 + col] = v0 + v7;
      p[7 * 8 + col] = v0 - v7;
      p[1 * 8 + col] = v1 + v6;
      p[6 * 8 + col] = v1 - v6;
      p[2 * 8 + col] = v2 + v5;
      p[5 * 8 + col] = v2 - v5;
      p[3 * 8 + col] = v3 + v4;
      p[4 * 8 + col] = v3 - v4;
    } // convert to 8-bit integers


    for (i = 0; i < 64; ++i) {
      var index = blockBufferOffset + i;
      var q = p[i];
      q = q <= -2056 / component.bitConversion ? 0 : q >= 2024 / component.bitConversion ? 255 / component.bitConversion : q + 2056 / component.bitConversion >> 4;
      component.blockData[index] = q;
    }
  }

  function buildComponentData(frame, component) {
    var lines = [];
    var blocksPerLine = component.blocksPerLine;
    var blocksPerColumn = component.blocksPerColumn;
    var samplesPerLine = blocksPerLine << 3;
    var computationBuffer = new Int32Array(64);
    var i,
        j,
        ll = 0;

    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {
      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {
        var offset = getBlockBufferOffset(component, blockRow, blockCol);
        quantizeAndInverse(component, offset, computationBuffer);
      }
    }

    return component.blockData;
  }

  function clampToUint8(a) {
    return a <= 0 ? 0 : a >= 255 ? 255 : a | 0;
  }

  constructor.prototype = {
    load: function load(path) {
      var handleData = function (data) {
        this.parse(data);
        if (this.onload) this.onload();
      }.bind(this);

      if (path.indexOf("data:") > -1) {
        var offset = path.indexOf("base64,") + 7;
        var data = atob(path.substring(offset));
        var arr = new Uint8Array(data.length);

        for (var i = data.length - 1; i >= 0; i--) {
          arr[i] = data.charCodeAt(i);
        }

        handleData(data);
      } else {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", path, true);
        xhr.responseType = "arraybuffer";

        xhr.onload = function () {
          // TODO catch parse error
          var data = new Uint8Array(xhr.response);
          handleData(data);
        }.bind(this);

        xhr.send(null);
      }
    },
    parse: function parse(data) {
      function readUint16() {
        var value = data[offset] << 8 | data[offset + 1];
        offset += 2;
        return value;
      }

      function readDataBlock() {
        var length = readUint16();
        var array = data.subarray(offset, offset + length - 2);
        offset += array.length;
        return array;
      }

      function prepareComponents(frame) {
        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);
        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);

        for (var i = 0; i < frame.components.length; i++) {
          component = frame.components[i];
          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);
          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);
          var blocksPerLineForMcu = mcusPerLine * component.h;
          var blocksPerColumnForMcu = mcusPerColumn * component.v;
          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);
          component.blockData = new Int16Array(blocksBufferSize);
          component.blocksPerLine = blocksPerLine;
          component.blocksPerColumn = blocksPerColumn;
        }

        frame.mcusPerLine = mcusPerLine;
        frame.mcusPerColumn = mcusPerColumn;
      }

      var offset = 0,
          length = data.length;
      var jfif = null;
      var adobe = null;
      var pixels = null;
      var frame, resetInterval;
      var quantizationTables = [];
      var huffmanTablesAC = [],
          huffmanTablesDC = [];
      var fileMarker = readUint16();

      if (fileMarker != 0xFFD8) {
        // SOI (Start of Image)
        throw "SOI not found";
      }

      fileMarker = readUint16();

      while (fileMarker != 0xFFD9) {
        // EOI (End of image)
        var i, j, l;

        switch (fileMarker) {
          case 0xFFE0: // APP0 (Application Specific)

          case 0xFFE1: // APP1

          case 0xFFE2: // APP2

          case 0xFFE3: // APP3

          case 0xFFE4: // APP4

          case 0xFFE5: // APP5

          case 0xFFE6: // APP6

          case 0xFFE7: // APP7

          case 0xFFE8: // APP8

          case 0xFFE9: // APP9

          case 0xFFEA: // APP10

          case 0xFFEB: // APP11

          case 0xFFEC: // APP12

          case 0xFFED: // APP13

          case 0xFFEE: // APP14

          case 0xFFEF: // APP15

          case 0xFFFE:
            // COM (Comment)
            var appData = readDataBlock();

            if (fileMarker === 0xFFE0) {
              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {
                // 'JFIF\x00'
                jfif = {
                  version: {
                    major: appData[5],
                    minor: appData[6]
                  },
                  densityUnits: appData[7],
                  xDensity: appData[8] << 8 | appData[9],
                  yDensity: appData[10] << 8 | appData[11],
                  thumbWidth: appData[12],
                  thumbHeight: appData[13],
                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])
                };
              }
            } // TODO APP1 - Exif


            if (fileMarker === 0xFFEE) {
              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) {
                // 'Adobe\x00'
                adobe = {
                  version: appData[6],
                  flags0: appData[7] << 8 | appData[8],
                  flags1: appData[9] << 8 | appData[10],
                  transformCode: appData[11]
                };
              }
            }

            break;

          case 0xFFDB:
            // DQT (Define Quantization Tables)
            var quantizationTablesLength = readUint16();
            var quantizationTablesEnd = quantizationTablesLength + offset - 2;

            while (offset < quantizationTablesEnd) {
              var quantizationTableSpec = data[offset++];
              var tableData = new Int32Array(64);

              if (quantizationTableSpec >> 4 === 0) {
                // 8 bit values
                for (j = 0; j < 64; j++) {
                  var z = dctZigZag[j];
                  tableData[z] = data[offset++];
                }
              } else if (quantizationTableSpec >> 4 === 1) {
                //16 bit
                for (j = 0; j < 64; j++) {
                  var zz = dctZigZag[j];
                  tableData[zz] = readUint16();
                }
              } else throw "DQT: invalid table spec";

              quantizationTables[quantizationTableSpec & 15] = tableData;
            }

            break;

          case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)

          case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)

          case 0xFFC2:
            // SOF2 (Start of Frame, Progressive DCT)
            if (frame) {
              throw "Only single frame JPEGs supported";
            }

            readUint16(); // skip data length

            frame = {};
            frame.extended = fileMarker === 0xFFC1;
            frame.progressive = fileMarker === 0xFFC2;
            frame.precision = data[offset++];
            frame.scanLines = readUint16();
            frame.samplesPerLine = readUint16();
            frame.components = [];
            frame.componentIds = {};
            var componentsCount = data[offset++],
                componentId;
            var maxH = 0,
                maxV = 0;

            for (i = 0; i < componentsCount; i++) {
              componentId = data[offset];
              var h = data[offset + 1] >> 4;
              var v = data[offset + 1] & 15;
              if (maxH < h) maxH = h;
              if (maxV < v) maxV = v;
              var qId = data[offset + 2];
              l = frame.components.push({
                h: h,
                v: v,
                quantizationTable: quantizationTables[qId],
                quantizationTableId: qId,
                bitConversion: 255 / ((1 << frame.precision) - 1)
              });
              frame.componentIds[componentId] = l - 1;
              offset += 3;
            }

            frame.maxH = maxH;
            frame.maxV = maxV;
            prepareComponents(frame);
            break;

          case 0xFFC4:
            // DHT (Define Huffman Tables)
            var huffmanLength = readUint16();

            for (i = 2; i < huffmanLength;) {
              var huffmanTableSpec = data[offset++];
              var codeLengths = new Uint8Array(16);
              var codeLengthSum = 0;

              for (j = 0; j < 16; j++, offset++) {
                codeLengthSum += codeLengths[j] = data[offset];
              }

              var huffmanValues = new Uint8Array(codeLengthSum);

              for (j = 0; j < codeLengthSum; j++, offset++) {
                huffmanValues[j] = data[offset];
              }

              i += 17 + codeLengthSum;
              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);
            }

            break;

          case 0xFFDD:
            // DRI (Define Restart Interval)
            readUint16(); // skip data length

            resetInterval = readUint16();
            break;

          case 0xFFDA:
            // SOS (Start of Scan)
            var scanLength = readUint16();
            var selectorsCount = data[offset++];
            var components = [],
                component;

            for (i = 0; i < selectorsCount; i++) {
              var componentIndex = frame.componentIds[data[offset++]];
              component = frame.components[componentIndex];
              var tableSpec = data[offset++];
              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];
              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];
              components.push(component);
            }

            var spectralStart = data[offset++];
            var spectralEnd = data[offset++];
            var successiveApproximation = data[offset++];
            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);
            offset += processed;
            break;

          default:
            if (data[offset - 3] == 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {
              // could be incorrect encoding -- last 0xFF byte of the previous
              // block was eaten by the encoder
              offset -= 3;
              break;
            }

            throw "unknown JPEG marker " + fileMarker.toString(16);
        }

        fileMarker = readUint16();
      }

      this.width = frame.samplesPerLine;
      this.height = frame.scanLines;
      this.jfif = jfif;
      this.adobe = adobe;
      this.components = [];

      switch (frame.components.length) {
        case 1:
          this.colorspace = ColorSpace.Grayscale;
          break;

        case 3:
          if (this.adobe) this.colorspace = ColorSpace.AdobeRGB;else this.colorspace = ColorSpace.RGB;
          break;

        case 4:
          this.colorspace = ColorSpace.CYMK;
          break;

        default:
          this.colorspace = ColorSpace.Unknown;
      }

      for (var i = 0; i < frame.components.length; i++) {
        var component = frame.components[i];
        if (!component.quantizationTable && component.quantizationTableId !== null) component.quantizationTable = quantizationTables[component.quantizationTableId];
        this.components.push({
          output: buildComponentData(frame, component),
          scaleX: component.h / frame.maxH,
          scaleY: component.v / frame.maxV,
          blocksPerLine: component.blocksPerLine,
          blocksPerColumn: component.blocksPerColumn,
          bitConversion: component.bitConversion
        });
      }
    },
    getData16: function getData16(width, height) {
      if (this.components.length !== 1) throw 'Unsupported color mode';
      var scaleX = this.width / width,
          scaleY = this.height / height;
      var component, componentScaleX, componentScaleY;
      var x, y, i;
      var offset = 0;
      var numComponents = this.components.length;
      var dataLength = width * height * numComponents;
      var data = new Uint16Array(dataLength);
      var componentLine; // lineData is reused for all components. Assume first component is
      // the biggest

      var lineData = new Uint16Array((this.components[0].blocksPerLine << 3) * this.components[0].blocksPerColumn * 8); // First construct image data ...

      for (i = 0; i < numComponents; i++) {
        component = this.components[i];
        var blocksPerLine = component.blocksPerLine;
        var blocksPerColumn = component.blocksPerColumn;
        var samplesPerLine = blocksPerLine << 3;
        var j,
            k,
            ll = 0;
        var lineOffset = 0;

        for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {
          var scanLine = blockRow << 3;

          for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {
            var bufferOffset = getBlockBufferOffset(component, blockRow, blockCol);
            var offset = 0,
                sample = blockCol << 3;

            for (j = 0; j < 8; j++) {
              var lineOffset = (scanLine + j) * samplesPerLine;

              for (k = 0; k < 8; k++) {
                lineData[lineOffset + sample + k] = component.output[bufferOffset + offset++];
              }
            }
          }
        }

        componentScaleX = component.scaleX * scaleX;
        componentScaleY = component.scaleY * scaleY;
        offset = i;
        var cx, cy;
        var index;

        for (y = 0; y < height; y++) {
          for (x = 0; x < width; x++) {
            cy = 0 | y * componentScaleY;
            cx = 0 | x * componentScaleX;
            index = cy * samplesPerLine + cx;
            data[offset] = lineData[index];
            offset += numComponents;
          }
        }
      }

      return data;
    },
    getData: function getData(width, height) {
      var scaleX = this.width / width,
          scaleY = this.height / height;
      var component, componentScaleX, componentScaleY;
      var x, y, i;
      var offset = 0;
      var Y, Cb, Cr, K, C, M, Ye, R, G, B;
      var colorTransform;
      var numComponents = this.components.length;
      var dataLength = width * height * numComponents;
      var data = new Uint8Array(dataLength);
      var componentLine; // lineData is reused for all components. Assume first component is
      // the biggest

      var lineData = new Uint8Array((this.components[0].blocksPerLine << 3) * this.components[0].blocksPerColumn * 8); // First construct image data ...

      for (i = 0; i < numComponents; i++) {
        component = this.components[i];
        var blocksPerLine = component.blocksPerLine;
        var blocksPerColumn = component.blocksPerColumn;
        var samplesPerLine = blocksPerLine << 3;
        var j,
            k,
            ll = 0;
        var lineOffset = 0;

        for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {
          var scanLine = blockRow << 3;

          for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {
            var bufferOffset = getBlockBufferOffset(component, blockRow, blockCol);
            var offset = 0,
                sample = blockCol << 3;

            for (j = 0; j < 8; j++) {
              var lineOffset = (scanLine + j) * samplesPerLine;

              for (k = 0; k < 8; k++) {
                lineData[lineOffset + sample + k] = component.output[bufferOffset + offset++] * component.bitConversion;
              }
            }
          }
        }

        componentScaleX = component.scaleX * scaleX;
        componentScaleY = component.scaleY * scaleY;
        offset = i;
        var cx, cy;
        var index;

        for (y = 0; y < height; y++) {
          for (x = 0; x < width; x++) {
            cy = 0 | y * componentScaleY;
            cx = 0 | x * componentScaleX;
            index = cy * samplesPerLine + cx;
            data[offset] = lineData[index];
            offset += numComponents;
          }
        }
      } // ... then transform colors, if necessary


      switch (numComponents) {
        case 1:
        case 2:
          break;
        // no color conversion for one or two compoenents

        case 3:
          // The default transform for three components is true
          colorTransform = true; // The adobe transform marker overrides any previous setting

          if (this.adobe && this.adobe.transformCode) colorTransform = true;else if (typeof this.colorTransform !== 'undefined') colorTransform = !!this.colorTransform;

          if (colorTransform) {
            for (i = 0; i < dataLength; i += numComponents) {
              Y = data[i];
              Cb = data[i + 1];
              Cr = data[i + 2];
              R = clampToUint8(Y - 179.456 + 1.402 * Cr);
              G = clampToUint8(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);
              B = clampToUint8(Y - 226.816 + 1.772 * Cb);
              data[i] = R;
              data[i + 1] = G;
              data[i + 2] = B;
            }
          }

          break;

        case 4:
          if (!this.adobe) throw 'Unsupported color mode (4 components)'; // The default transform for four components is false

          colorTransform = false; // The adobe transform marker overrides any previous setting

          if (this.adobe && this.adobe.transformCode) colorTransform = true;else if (typeof this.colorTransform !== 'undefined') colorTransform = !!this.colorTransform;

          if (colorTransform) {
            for (i = 0; i < dataLength; i += numComponents) {
              Y = data[i];
              Cb = data[i + 1];
              Cr = data[i + 2];
              C = clampToUint8(434.456 - Y - 1.402 * Cr);
              M = clampToUint8(119.541 - Y + 0.344 * Cb + 0.714 * Cr);
              Y = clampToUint8(481.816 - Y - 1.772 * Cb);
              data[i] = C;
              data[i + 1] = M;
              data[i + 2] = Y; // K is unchanged
            }
          }

          break;

        default:
          throw 'Unsupported color mode';
      }

      return data;
    }
  };
  return constructor;
}();

var moduleType = typeof module;

if (moduleType !== 'undefined' && module.exports) {
  module.exports = JpegImage;
}

/***/ }),
/* 979 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint-disable */

/*! image-JPEG2000 - v0.3.1 - 2015-08-26 | https://github.com/OHIF/image-JPEG2000 */

/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */

/* Copyright 2012 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* globals ArithmeticDecoder, globalScope, log2, readUint16, readUint32,
           info, warn */


var JpxImage = function JpxImageClosure() {
  // Table E.1
  var SubbandsGainLog2 = {
    'LL': 0,
    'LH': 1,
    'HL': 1,
    'HH': 2
  };

  function JpxImage() {
    this.failOnCorruptedImage = false;
  }

  JpxImage.prototype = {
    parse: function JpxImage_parse(data) {
      var head = readUint16(data, 0); // No box header, immediate start of codestream (SOC)

      if (head === 0xFF4F) {
        this.parseCodestream(data, 0, data.length);
        return;
      }

      var position = 0,
          length = data.length;

      while (position < length) {
        var headerSize = 8;
        var lbox = readUint32(data, position);
        var tbox = readUint32(data, position + 4);
        position += headerSize;

        if (lbox === 1) {
          // XLBox: read UInt64 according to spec.
          // JavaScript's int precision of 53 bit should be sufficient here.
          lbox = readUint32(data, position) * 4294967296 + readUint32(data, position + 4);
          position += 8;
          headerSize += 8;
        }

        if (lbox === 0) {
          lbox = length - position + headerSize;
        }

        if (lbox < headerSize) {
          throw new Error('JPX Error: Invalid box field size');
        }

        var dataLength = lbox - headerSize;
        var jumpDataLength = true;

        switch (tbox) {
          case 0x6A703268:
            // 'jp2h'
            jumpDataLength = false; // parsing child boxes

            break;

          case 0x636F6C72:
            // 'colr'
            // Colorspaces are not used, the CS from the PDF is used.
            var method = data[position];
            var precedence = data[position + 1];
            var approximation = data[position + 2];

            if (method === 1) {
              // enumerated colorspace
              var colorspace = readUint32(data, position + 3);

              switch (colorspace) {
                case 16: // this indicates a sRGB colorspace

                case 17: // this indicates a grayscale colorspace

                case 18:
                  // this indicates a YUV colorspace
                  break;

                default:
                  warn('Unknown colorspace ' + colorspace);
                  break;
              }
            } else if (method === 2) {
              info('ICC profile not supported');
            }

            break;

          case 0x6A703263:
            // 'jp2c'
            this.parseCodestream(data, position, position + dataLength);
            break;

          case 0x6A502020:
            // 'jP\024\024'
            if (0x0d0a870a !== readUint32(data, position)) {
              warn('Invalid JP2 signature');
            }

            break;
          // The following header types are valid but currently not used:

          case 0x6A501A1A: // 'jP\032\032'

          case 0x66747970: // 'ftyp'

          case 0x72726571: // 'rreq'

          case 0x72657320: // 'res '

          case 0x69686472:
            // 'ihdr'
            break;

          default:
            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);
            warn('Unsupported header type ' + tbox + ' (' + headerType + ')');
            break;
        }

        if (jumpDataLength) {
          position += dataLength;
        }
      }
    },
    parseImageProperties: function JpxImage_parseImageProperties(stream) {
      var newByte = stream.getByte();

      while (newByte >= 0) {
        var oldByte = newByte;
        newByte = stream.getByte();
        var code = oldByte << 8 | newByte; // Image and tile size (SIZ)

        if (code === 0xFF51) {
          stream.skip(4);
          var Xsiz = stream.getInt32() >>> 0; // Byte 4

          var Ysiz = stream.getInt32() >>> 0; // Byte 8

          var XOsiz = stream.getInt32() >>> 0; // Byte 12

          var YOsiz = stream.getInt32() >>> 0; // Byte 16

          stream.skip(16);
          var Csiz = stream.getUint16(); // Byte 36

          this.width = Xsiz - XOsiz;
          this.height = Ysiz - YOsiz;
          this.componentsCount = Csiz; // Results are always returned as Uint8Arrays

          this.bitsPerComponent = 8;
          return;
        }
      }

      throw new Error('JPX Error: No size marker found in JPX stream');
    },
    parseCodestream: function JpxImage_parseCodestream(data, start, end) {
      var context = {};

      try {
        var doNotRecover = false;
        var position = start;

        while (position + 1 < end) {
          var code = readUint16(data, position);
          position += 2;
          var length = 0,
              j,
              sqcd,
              spqcds,
              spqcdSize,
              scalarExpounded,
              tile;

          switch (code) {
            case 0xFF4F:
              // Start of codestream (SOC)
              context.mainHeader = true;
              break;

            case 0xFFD9:
              // End of codestream (EOC)
              break;

            case 0xFF51:
              // Image and tile size (SIZ)
              length = readUint16(data, position);
              var siz = {};
              siz.Xsiz = readUint32(data, position + 4);
              siz.Ysiz = readUint32(data, position + 8);
              siz.XOsiz = readUint32(data, position + 12);
              siz.YOsiz = readUint32(data, position + 16);
              siz.XTsiz = readUint32(data, position + 20);
              siz.YTsiz = readUint32(data, position + 24);
              siz.XTOsiz = readUint32(data, position + 28);
              siz.YTOsiz = readUint32(data, position + 32);
              var componentsCount = readUint16(data, position + 36);
              siz.Csiz = componentsCount;
              var components = [];
              j = position + 38;

              for (var i = 0; i < componentsCount; i++) {
                var component = {
                  precision: (data[j] & 0x7F) + 1,
                  isSigned: !!(data[j] & 0x80),
                  XRsiz: data[j + 1],
                  YRsiz: data[j + 1]
                };
                calculateComponentDimensions(component, siz);
                components.push(component);
              }

              context.SIZ = siz;
              context.components = components;
              calculateTileGrids(context, components);
              context.QCC = [];
              context.COC = [];
              break;

            case 0xFF5C:
              // Quantization default (QCD)
              length = readUint16(data, position);
              var qcd = {};
              j = position + 2;
              sqcd = data[j++];

              switch (sqcd & 0x1F) {
                case 0:
                  spqcdSize = 8;
                  scalarExpounded = true;
                  break;

                case 1:
                  spqcdSize = 16;
                  scalarExpounded = false;
                  break;

                case 2:
                  spqcdSize = 16;
                  scalarExpounded = true;
                  break;

                default:
                  throw new Error('JPX Error: Invalid SQcd value ' + sqcd);
              }

              qcd.noQuantization = spqcdSize === 8;
              qcd.scalarExpounded = scalarExpounded;
              qcd.guardBits = sqcd >> 5;
              spqcds = [];

              while (j < length + position) {
                var spqcd = {};

                if (spqcdSize === 8) {
                  spqcd.epsilon = data[j++] >> 3;
                  spqcd.mu = 0;
                } else {
                  spqcd.epsilon = data[j] >> 3;
                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];
                  j += 2;
                }

                spqcds.push(spqcd);
              }

              qcd.SPqcds = spqcds;

              if (context.mainHeader) {
                context.QCD = qcd;
              } else {
                context.currentTile.QCD = qcd;
                context.currentTile.QCC = [];
              }

              break;

            case 0xFF5D:
              // Quantization component (QCC)
              length = readUint16(data, position);
              var qcc = {};
              j = position + 2;
              var cqcc;

              if (context.SIZ.Csiz < 257) {
                cqcc = data[j++];
              } else {
                cqcc = readUint16(data, j);
                j += 2;
              }

              sqcd = data[j++];

              switch (sqcd & 0x1F) {
                case 0:
                  spqcdSize = 8;
                  scalarExpounded = true;
                  break;

                case 1:
                  spqcdSize = 16;
                  scalarExpounded = false;
                  break;

                case 2:
                  spqcdSize = 16;
                  scalarExpounded = true;
                  break;

                default:
                  throw new Error('JPX Error: Invalid SQcd value ' + sqcd);
              }

              qcc.noQuantization = spqcdSize === 8;
              qcc.scalarExpounded = scalarExpounded;
              qcc.guardBits = sqcd >> 5;
              spqcds = [];

              while (j < length + position) {
                spqcd = {};

                if (spqcdSize === 8) {
                  spqcd.epsilon = data[j++] >> 3;
                  spqcd.mu = 0;
                } else {
                  spqcd.epsilon = data[j] >> 3;
                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];
                  j += 2;
                }

                spqcds.push(spqcd);
              }

              qcc.SPqcds = spqcds;

              if (context.mainHeader) {
                context.QCC[cqcc] = qcc;
              } else {
                context.currentTile.QCC[cqcc] = qcc;
              }

              break;

            case 0xFF52:
              // Coding style default (COD)
              length = readUint16(data, position);
              var cod = {};
              j = position + 2;
              var scod = data[j++];
              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);
              cod.sopMarkerUsed = !!(scod & 2);
              cod.ephMarkerUsed = !!(scod & 4);
              cod.progressionOrder = data[j++];
              cod.layersCount = readUint16(data, j);
              j += 2;
              cod.multipleComponentTransform = data[j++];
              cod.decompositionLevelsCount = data[j++];
              cod.xcb = (data[j++] & 0xF) + 2;
              cod.ycb = (data[j++] & 0xF) + 2;
              var blockStyle = data[j++];
              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);
              cod.resetContextProbabilities = !!(blockStyle & 2);
              cod.terminationOnEachCodingPass = !!(blockStyle & 4);
              cod.verticalyStripe = !!(blockStyle & 8);
              cod.predictableTermination = !!(blockStyle & 16);
              cod.segmentationSymbolUsed = !!(blockStyle & 32);
              cod.reversibleTransformation = data[j++];

              if (cod.entropyCoderWithCustomPrecincts) {
                var precinctsSizes = [];

                while (j < length + position) {
                  var precinctsSize = data[j++];
                  precinctsSizes.push({
                    PPx: precinctsSize & 0xF,
                    PPy: precinctsSize >> 4
                  });
                }

                cod.precinctsSizes = precinctsSizes;
              }

              var unsupported = [];

              if (cod.selectiveArithmeticCodingBypass) {
                unsupported.push('selectiveArithmeticCodingBypass');
              }

              if (cod.resetContextProbabilities) {
                unsupported.push('resetContextProbabilities');
              }

              if (cod.terminationOnEachCodingPass) {
                unsupported.push('terminationOnEachCodingPass');
              }

              if (cod.verticalyStripe) {
                unsupported.push('verticalyStripe');
              }

              if (cod.predictableTermination) {
                unsupported.push('predictableTermination');
              }

              if (unsupported.length > 0) {
                doNotRecover = true;
                throw new Error('JPX Error: Unsupported COD options (' + unsupported.join(', ') + ')');
              }

              if (context.mainHeader) {
                context.COD = cod;
              } else {
                context.currentTile.COD = cod;
                context.currentTile.COC = [];
              }

              break;

            case 0xFF90:
              // Start of tile-part (SOT)
              length = readUint16(data, position);
              tile = {};
              tile.index = readUint16(data, position + 2);
              tile.length = readUint32(data, position + 4);
              tile.dataEnd = tile.length + position - 2;
              tile.partIndex = data[position + 8];
              tile.partsCount = data[position + 9];
              context.mainHeader = false;

              if (tile.partIndex === 0) {
                // reset component specific settings
                tile.COD = context.COD;
                tile.COC = context.COC.slice(0); // clone of the global COC

                tile.QCD = context.QCD;
                tile.QCC = context.QCC.slice(0); // clone of the global COC
              }

              context.currentTile = tile;
              break;

            case 0xFF93:
              // Start of data (SOD)
              tile = context.currentTile;

              if (tile.partIndex === 0) {
                initializeTile(context, tile.index);
                buildPackets(context);
              } // moving to the end of the data


              length = tile.dataEnd - position;
              parseTilePackets(context, data, position, length);
              break;

            case 0xFF55: // Tile-part lengths, main header (TLM)

            case 0xFF57: // Packet length, main header (PLM)

            case 0xFF58: // Packet length, tile-part header (PLT)

            case 0xFF64:
              // Comment (COM)
              length = readUint16(data, position); // skipping content

              break;

            case 0xFF53:
              // Coding style component (COC)
              throw new Error('JPX Error: Codestream code 0xFF53 (COC) is ' + 'not implemented');

            default:
              throw new Error('JPX Error: Unknown codestream code: ' + code.toString(16));
          }

          position += length;
        }
      } catch (e) {
        if (doNotRecover || this.failOnCorruptedImage) {
          throw e;
        } else {
          warn('Trying to recover from ' + e.message);
        }
      }

      this.tiles = transformComponents(context);
      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;
      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;
      this.componentsCount = context.SIZ.Csiz;
    }
  };

  function calculateComponentDimensions(component, siz) {
    // Section B.2 Component mapping
    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);
    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);
    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);
    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);
    component.width = component.x1 - component.x0;
    component.height = component.y1 - component.y0;
  }

  function calculateTileGrids(context, components) {
    var siz = context.SIZ; // Section B.3 Division into tile and tile-components

    var tile,
        tiles = [];
    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);
    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);

    for (var q = 0; q < numYtiles; q++) {
      for (var p = 0; p < numXtiles; p++) {
        tile = {};
        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);
        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);
        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);
        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);
        tile.width = tile.tx1 - tile.tx0;
        tile.height = tile.ty1 - tile.ty0;
        tile.components = [];
        tiles.push(tile);
      }
    }

    context.tiles = tiles;
    var componentsCount = siz.Csiz;

    for (var i = 0, ii = componentsCount; i < ii; i++) {
      var component = components[i];

      for (var j = 0, jj = tiles.length; j < jj; j++) {
        var tileComponent = {};
        tile = tiles[j];
        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);
        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);
        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);
        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);
        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;
        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;
        tile.components[i] = tileComponent;
      }
    }
  }

  function getBlocksDimensions(context, component, r) {
    var codOrCoc = component.codingStyleParameters;
    var result = {};

    if (!codOrCoc.entropyCoderWithCustomPrecincts) {
      result.PPx = 15;
      result.PPy = 15;
    } else {
      result.PPx = codOrCoc.precinctsSizes[r].PPx;
      result.PPy = codOrCoc.precinctsSizes[r].PPy;
    } // calculate codeblock size as described in section B.7


    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);
    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);
    return result;
  }

  function buildPrecincts(context, resolution, dimensions) {
    // Section B.6 Division resolution to precincts
    var precinctWidth = 1 << dimensions.PPx;
    var precinctHeight = 1 << dimensions.PPy; // Jasper introduces codeblock groups for mapping each subband codeblocks
    // to precincts. Precinct partition divides a resolution according to width
    // and height parameters. The subband that belongs to the resolution level
    // has a different size than the level, unless it is the zero resolution.
    // From Jasper documentation: jpeg2000.pdf, section K: Tier-2 coding:
    // The precinct partitioning for a particular subband is derived from a
    // partitioning of its parent LL band (i.e., the LL band at the next higher
    // resolution level)... The LL band associated with each resolution level is
    // divided into precincts... Each of the resulting precinct regions is then
    // mapped into its child subbands (if any) at the next lower resolution
    // level. This is accomplished by using the coordinate transformation
    // (u, v) = (ceil(x/2), ceil(y/2)) where (x, y) and (u, v) are the
    // coordinates of a point in the LL band and child subband, respectively.

    var isZeroRes = resolution.resLevel === 0;
    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);
    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);
    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;
    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;
    var numprecincts = numprecinctswide * numprecinctshigh;
    resolution.precinctParameters = {
      precinctWidth: precinctWidth,
      precinctHeight: precinctHeight,
      numprecinctswide: numprecinctswide,
      numprecinctshigh: numprecinctshigh,
      numprecincts: numprecincts,
      precinctWidthInSubband: precinctWidthInSubband,
      precinctHeightInSubband: precinctHeightInSubband
    };
  }

  function buildCodeblocks(context, subband, dimensions) {
    // Section B.7 Division sub-band into code-blocks
    var xcb_ = dimensions.xcb_;
    var ycb_ = dimensions.ycb_;
    var codeblockWidth = 1 << xcb_;
    var codeblockHeight = 1 << ycb_;
    var cbx0 = subband.tbx0 >> xcb_;
    var cby0 = subband.tby0 >> ycb_;
    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;
    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;
    var precinctParameters = subband.resolution.precinctParameters;
    var codeblocks = [];
    var precincts = [];
    var i, j, codeblock, precinctNumber;

    for (j = cby0; j < cby1; j++) {
      for (i = cbx0; i < cbx1; i++) {
        codeblock = {
          cbx: i,
          cby: j,
          tbx0: codeblockWidth * i,
          tby0: codeblockHeight * j,
          tbx1: codeblockWidth * (i + 1),
          tby1: codeblockHeight * (j + 1)
        };
        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);
        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);
        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);
        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1); // Calculate precinct number for this codeblock, codeblock position
        // should be relative to its subband, use actual dimension and position
        // See comment about codeblock group width and height

        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);
        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);
        precinctNumber = pi + pj * precinctParameters.numprecinctswide;
        codeblock.precinctNumber = precinctNumber;
        codeblock.subbandType = subband.type;
        codeblock.Lblock = 3;

        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {
          continue;
        }

        codeblocks.push(codeblock); // building precinct for the sub-band

        var precinct = precincts[precinctNumber];

        if (precinct !== undefined) {
          if (i < precinct.cbxMin) {
            precinct.cbxMin = i;
          } else if (i > precinct.cbxMax) {
            precinct.cbxMax = i;
          }

          if (j < precinct.cbyMin) {
            precinct.cbxMin = j;
          } else if (j > precinct.cbyMax) {
            precinct.cbyMax = j;
          }
        } else {
          precincts[precinctNumber] = precinct = {
            cbxMin: i,
            cbyMin: j,
            cbxMax: i,
            cbyMax: j
          };
        }

        codeblock.precinct = precinct;
      }
    }

    subband.codeblockParameters = {
      codeblockWidth: xcb_,
      codeblockHeight: ycb_,
      numcodeblockwide: cbx1 - cbx0 + 1,
      numcodeblockhigh: cby1 - cby0 + 1
    };
    subband.codeblocks = codeblocks;
    subband.precincts = precincts;
  }

  function createPacket(resolution, precinctNumber, layerNumber) {
    var precinctCodeblocks = []; // Section B.10.8 Order of info in packet

    var subbands = resolution.subbands; // sub-bands already ordered in 'LL', 'HL', 'LH', and 'HH' sequence

    for (var i = 0, ii = subbands.length; i < ii; i++) {
      var subband = subbands[i];
      var codeblocks = subband.codeblocks;

      for (var j = 0, jj = codeblocks.length; j < jj; j++) {
        var codeblock = codeblocks[j];

        if (codeblock.precinctNumber !== precinctNumber) {
          continue;
        }

        precinctCodeblocks.push(codeblock);
      }
    }

    return {
      layerNumber: layerNumber,
      codeblocks: precinctCodeblocks
    };
  }

  function LayerResolutionComponentPositionIterator(context) {
    var siz = context.SIZ;
    var tileIndex = context.currentTile.index;
    var tile = context.tiles[tileIndex];
    var layersCount = tile.codingStyleDefaultParameters.layersCount;
    var componentsCount = siz.Csiz;
    var maxDecompositionLevelsCount = 0;

    for (var q = 0; q < componentsCount; q++) {
      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);
    }

    var l = 0,
        r = 0,
        i = 0,
        k = 0;

    this.nextPacket = function JpxImage_nextPacket() {
      // Section B.12.1.1 Layer-resolution-component-position
      for (; l < layersCount; l++) {
        for (; r <= maxDecompositionLevelsCount; r++) {
          for (; i < componentsCount; i++) {
            var component = tile.components[i];

            if (r > component.codingStyleParameters.decompositionLevelsCount) {
              continue;
            }

            var resolution = component.resolutions[r];
            var numprecincts = resolution.precinctParameters.numprecincts;

            for (; k < numprecincts;) {
              var packet = createPacket(resolution, k, l);
              k++;
              return packet;
            }

            k = 0;
          }

          i = 0;
        }

        r = 0;
      }
    };
  }

  function ResolutionLayerComponentPositionIterator(context) {
    var siz = context.SIZ;
    var tileIndex = context.currentTile.index;
    var tile = context.tiles[tileIndex];
    var layersCount = tile.codingStyleDefaultParameters.layersCount;
    var componentsCount = siz.Csiz;
    var maxDecompositionLevelsCount = 0;

    for (var q = 0; q < componentsCount; q++) {
      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);
    }

    var r = 0,
        l = 0,
        i = 0,
        k = 0;

    this.nextPacket = function JpxImage_nextPacket() {
      // Section B.12.1.2 Resolution-layer-component-position
      for (; r <= maxDecompositionLevelsCount; r++) {
        for (; l < layersCount; l++) {
          for (; i < componentsCount; i++) {
            var component = tile.components[i];

            if (r > component.codingStyleParameters.decompositionLevelsCount) {
              continue;
            }

            var resolution = component.resolutions[r];
            var numprecincts = resolution.precinctParameters.numprecincts;

            for (; k < numprecincts;) {
              var packet = createPacket(resolution, k, l);
              k++;
              return packet;
            }

            k = 0;
          }

          i = 0;
        }

        l = 0;
      }
    };
  }

  function ResolutionPositionComponentLayerIterator(context) {
    var siz = context.SIZ;
    var tileIndex = context.currentTile.index;
    var tile = context.tiles[tileIndex];
    var layersCount = tile.codingStyleDefaultParameters.layersCount;
    var componentsCount = siz.Csiz;
    var l, r, c, p;
    var maxDecompositionLevelsCount = 0;

    for (c = 0; c < componentsCount; c++) {
      var component = tile.components[c];
      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);
    }

    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);

    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {
      var maxNumPrecincts = 0;

      for (c = 0; c < componentsCount; ++c) {
        var resolutions = tile.components[c].resolutions;

        if (r < resolutions.length) {
          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);
        }
      }

      maxNumPrecinctsInLevel[r] = maxNumPrecincts;
    }

    l = 0;
    r = 0;
    c = 0;
    p = 0;

    this.nextPacket = function JpxImage_nextPacket() {
      // Section B.12.1.3 Resolution-position-component-layer
      for (; r <= maxDecompositionLevelsCount; r++) {
        for (; p < maxNumPrecinctsInLevel[r]; p++) {
          for (; c < componentsCount; c++) {
            var component = tile.components[c];

            if (r > component.codingStyleParameters.decompositionLevelsCount) {
              continue;
            }

            var resolution = component.resolutions[r];
            var numprecincts = resolution.precinctParameters.numprecincts;

            if (p >= numprecincts) {
              continue;
            }

            for (; l < layersCount;) {
              var packet = createPacket(resolution, p, l);
              l++;
              return packet;
            }

            l = 0;
          }

          c = 0;
        }

        p = 0;
      }
    };
  }

  function PositionComponentResolutionLayerIterator(context) {
    var siz = context.SIZ;
    var tileIndex = context.currentTile.index;
    var tile = context.tiles[tileIndex];
    var layersCount = tile.codingStyleDefaultParameters.layersCount;
    var componentsCount = siz.Csiz;
    var precinctsSizes = getPrecinctSizesInImageScale(tile);
    var precinctsIterationSizes = precinctsSizes;
    var l = 0,
        r = 0,
        c = 0,
        px = 0,
        py = 0;

    this.nextPacket = function JpxImage_nextPacket() {
      // Section B.12.1.4 Position-component-resolution-layer
      for (; py < precinctsIterationSizes.maxNumHigh; py++) {
        for (; px < precinctsIterationSizes.maxNumWide; px++) {
          for (; c < componentsCount; c++) {
            var component = tile.components[c];
            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;

            for (; r <= decompositionLevelsCount; r++) {
              var resolution = component.resolutions[r];
              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];
              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);

              if (k === null) {
                continue;
              }

              for (; l < layersCount;) {
                var packet = createPacket(resolution, k, l);
                l++;
                return packet;
              }

              l = 0;
            }

            r = 0;
          }

          c = 0;
        }

        px = 0;
      }
    };
  }

  function ComponentPositionResolutionLayerIterator(context) {
    var siz = context.SIZ;
    var tileIndex = context.currentTile.index;
    var tile = context.tiles[tileIndex];
    var layersCount = tile.codingStyleDefaultParameters.layersCount;
    var componentsCount = siz.Csiz;
    var precinctsSizes = getPrecinctSizesInImageScale(tile);
    var l = 0,
        r = 0,
        c = 0,
        px = 0,
        py = 0;

    this.nextPacket = function JpxImage_nextPacket() {
      // Section B.12.1.5 Component-position-resolution-layer
      for (; c < componentsCount; ++c) {
        var component = tile.components[c];
        var precinctsIterationSizes = precinctsSizes.components[c];
        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;

        for (; py < precinctsIterationSizes.maxNumHigh; py++) {
          for (; px < precinctsIterationSizes.maxNumWide; px++) {
            for (; r <= decompositionLevelsCount; r++) {
              var resolution = component.resolutions[r];
              var sizeInImageScale = precinctsIterationSizes.resolutions[r];
              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);

              if (k === null) {
                continue;
              }

              for (; l < layersCount;) {
                var packet = createPacket(resolution, k, l);
                l++;
                return packet;
              }

              l = 0;
            }

            r = 0;
          }

          px = 0;
        }

        py = 0;
      }
    };
  }

  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {
    var posX = pxIndex * precinctIterationSizes.minWidth;
    var posY = pyIndex * precinctIterationSizes.minHeight;

    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {
      return null;
    }

    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;
    return posX / sizeInImageScale.height + startPrecinctRowIndex;
  }

  function getPrecinctSizesInImageScale(tile) {
    var componentsCount = tile.components.length;
    var minWidth = Number.MAX_VALUE;
    var minHeight = Number.MAX_VALUE;
    var maxNumWide = 0;
    var maxNumHigh = 0;
    var sizePerComponent = new Array(componentsCount);

    for (var c = 0; c < componentsCount; c++) {
      var component = tile.components[c];
      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;
      var sizePerResolution = new Array(decompositionLevelsCount + 1);
      var minWidthCurrentComponent = Number.MAX_VALUE;
      var minHeightCurrentComponent = Number.MAX_VALUE;
      var maxNumWideCurrentComponent = 0;
      var maxNumHighCurrentComponent = 0;
      var scale = 1;

      for (var r = decompositionLevelsCount; r >= 0; --r) {
        var resolution = component.resolutions[r];
        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;
        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;
        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);
        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);
        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);
        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);
        sizePerResolution[r] = {
          width: widthCurrentResolution,
          height: heightCurrentResolution
        };
        scale <<= 1;
      }

      minWidth = Math.min(minWidth, minWidthCurrentComponent);
      minHeight = Math.min(minHeight, minHeightCurrentComponent);
      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);
      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);
      sizePerComponent[c] = {
        resolutions: sizePerResolution,
        minWidth: minWidthCurrentComponent,
        minHeight: minHeightCurrentComponent,
        maxNumWide: maxNumWideCurrentComponent,
        maxNumHigh: maxNumHighCurrentComponent
      };
    }

    return {
      components: sizePerComponent,
      minWidth: minWidth,
      minHeight: minHeight,
      maxNumWide: maxNumWide,
      maxNumHigh: maxNumHigh
    };
  }

  function buildPackets(context) {
    var siz = context.SIZ;
    var tileIndex = context.currentTile.index;
    var tile = context.tiles[tileIndex];
    var componentsCount = siz.Csiz; // Creating resolutions and sub-bands for each component

    for (var c = 0; c < componentsCount; c++) {
      var component = tile.components[c];
      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount; // Section B.5 Resolution levels and sub-bands

      var resolutions = [];
      var subbands = [];

      for (var r = 0; r <= decompositionLevelsCount; r++) {
        var blocksDimensions = getBlocksDimensions(context, component, r);
        var resolution = {};
        var scale = 1 << decompositionLevelsCount - r;
        resolution.trx0 = Math.ceil(component.tcx0 / scale);
        resolution.try0 = Math.ceil(component.tcy0 / scale);
        resolution.trx1 = Math.ceil(component.tcx1 / scale);
        resolution.try1 = Math.ceil(component.tcy1 / scale);
        resolution.resLevel = r;
        buildPrecincts(context, resolution, blocksDimensions);
        resolutions.push(resolution);
        var subband;

        if (r === 0) {
          // one sub-band (LL) with last decomposition
          subband = {};
          subband.type = 'LL';
          subband.tbx0 = Math.ceil(component.tcx0 / scale);
          subband.tby0 = Math.ceil(component.tcy0 / scale);
          subband.tbx1 = Math.ceil(component.tcx1 / scale);
          subband.tby1 = Math.ceil(component.tcy1 / scale);
          subband.resolution = resolution;
          buildCodeblocks(context, subband, blocksDimensions);
          subbands.push(subband);
          resolution.subbands = [subband];
        } else {
          var bscale = 1 << decompositionLevelsCount - r + 1;
          var resolutionSubbands = []; // three sub-bands (HL, LH and HH) with rest of decompositions

          subband = {};
          subband.type = 'HL';
          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);
          subband.tby0 = Math.ceil(component.tcy0 / bscale);
          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);
          subband.tby1 = Math.ceil(component.tcy1 / bscale);
          subband.resolution = resolution;
          buildCodeblocks(context, subband, blocksDimensions);
          subbands.push(subband);
          resolutionSubbands.push(subband);
          subband = {};
          subband.type = 'LH';
          subband.tbx0 = Math.ceil(component.tcx0 / bscale);
          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);
          subband.tbx1 = Math.ceil(component.tcx1 / bscale);
          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);
          subband.resolution = resolution;
          buildCodeblocks(context, subband, blocksDimensions);
          subbands.push(subband);
          resolutionSubbands.push(subband);
          subband = {};
          subband.type = 'HH';
          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);
          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);
          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);
          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);
          subband.resolution = resolution;
          buildCodeblocks(context, subband, blocksDimensions);
          subbands.push(subband);
          resolutionSubbands.push(subband);
          resolution.subbands = resolutionSubbands;
        }
      }

      component.resolutions = resolutions;
      component.subbands = subbands;
    } // Generate the packets sequence


    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;

    switch (progressionOrder) {
      case 0:
        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);
        break;

      case 1:
        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);
        break;

      case 2:
        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);
        break;

      case 3:
        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);
        break;

      case 4:
        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);
        break;

      default:
        throw new Error('JPX Error: Unsupported progression order ' + progressionOrder);
    }
  }

  function parseTilePackets(context, data, offset, dataLength) {
    var position = 0;
    var buffer,
        bufferSize = 0,
        skipNextBit = false;

    function readBits(count) {
      while (bufferSize < count) {
        if (offset + position >= data.length) {
          throw new Error("Unexpected EOF");
        }

        var b = data[offset + position];
        position++;

        if (skipNextBit) {
          buffer = buffer << 7 | b;
          bufferSize += 7;
          skipNextBit = false;
        } else {
          buffer = buffer << 8 | b;
          bufferSize += 8;
        }

        if (b === 0xFF) {
          skipNextBit = true;
        }
      }

      bufferSize -= count;
      return buffer >>> bufferSize & (1 << count) - 1;
    }

    function skipMarkerIfEqual(value) {
      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {
        skipBytes(1);
        return true;
      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {
        skipBytes(2);
        return true;
      }

      return false;
    }

    function skipBytes(count) {
      position += count;
    }

    function alignToByte() {
      bufferSize = 0;

      if (skipNextBit) {
        position++;
        skipNextBit = false;
      }
    }

    function readCodingpasses() {
      if (readBits(1) === 0) {
        return 1;
      }

      if (readBits(1) === 0) {
        return 2;
      }

      var value = readBits(2);

      if (value < 3) {
        return value + 3;
      }

      value = readBits(5);

      if (value < 31) {
        return value + 6;
      }

      value = readBits(7);
      return value + 37;
    }

    var tileIndex = context.currentTile.index;
    var tile = context.tiles[tileIndex];
    var sopMarkerUsed = context.COD.sopMarkerUsed;
    var ephMarkerUsed = context.COD.ephMarkerUsed;
    var packetsIterator = tile.packetsIterator;

    while (position < dataLength) {
      try {
        alignToByte();

        if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {
          // Skip also marker segment length and packet sequence ID
          skipBytes(4);
        }

        var packet = packetsIterator.nextPacket();

        if (packet === undefined) {
          //No more packets. Stream is probably truncated.
          return;
        }

        if (!readBits(1)) {
          continue;
        }

        var layerNumber = packet.layerNumber;
        var queue = [],
            codeblock;

        for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {
          codeblock = packet.codeblocks[i];
          var precinct = codeblock.precinct;
          var codeblockColumn = codeblock.cbx - precinct.cbxMin;
          var codeblockRow = codeblock.cby - precinct.cbyMin;
          var codeblockIncluded = false;
          var firstTimeInclusion = false;
          var valueReady;

          if (codeblock['included'] !== undefined) {
            codeblockIncluded = !!readBits(1);
          } else {
            // reading inclusion tree
            precinct = codeblock.precinct;
            var inclusionTree, zeroBitPlanesTree;

            if (precinct['inclusionTree'] !== undefined) {
              inclusionTree = precinct.inclusionTree;
            } else {
              // building inclusion and zero bit-planes trees
              var width = precinct.cbxMax - precinct.cbxMin + 1;
              var height = precinct.cbyMax - precinct.cbyMin + 1;
              inclusionTree = new InclusionTree(width, height);
              zeroBitPlanesTree = new TagTree(width, height);
              precinct.inclusionTree = inclusionTree;
              precinct.zeroBitPlanesTree = zeroBitPlanesTree;
            }

            inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber);

            while (true) {
              if (position >= data.length) {
                return;
              }

              if (inclusionTree.isAboveThreshold()) {
                break;
              }

              if (inclusionTree.isKnown()) {
                inclusionTree.nextLevel();
                continue;
              }

              if (readBits(1)) {
                inclusionTree.setKnown();

                if (inclusionTree.isLeaf()) {
                  codeblock.included = true;
                  codeblockIncluded = firstTimeInclusion = true;
                  break;
                } else {
                  inclusionTree.nextLevel();
                }
              } else {
                inclusionTree.incrementValue();
              }
            }
          }

          if (!codeblockIncluded) {
            continue;
          }

          if (firstTimeInclusion) {
            zeroBitPlanesTree = precinct.zeroBitPlanesTree;
            zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);

            while (true) {
              if (position >= data.length) {
                return;
              }

              if (readBits(1)) {
                valueReady = !zeroBitPlanesTree.nextLevel();

                if (valueReady) {
                  break;
                }
              } else {
                zeroBitPlanesTree.incrementValue();
              }
            }

            codeblock.zeroBitPlanes = zeroBitPlanesTree.value;
          }

          var codingpasses = readCodingpasses();

          while (readBits(1)) {
            codeblock.Lblock++;
          }

          var codingpassesLog2 = log2(codingpasses); // rounding down log2

          var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;
          var codedDataLength = readBits(bits);
          queue.push({
            codeblock: codeblock,
            codingpasses: codingpasses,
            dataLength: codedDataLength
          });
        }

        alignToByte();

        if (ephMarkerUsed) {
          skipMarkerIfEqual(0x92);
        }

        while (queue.length > 0) {
          var packetItem = queue.shift();
          codeblock = packetItem.codeblock;

          if (codeblock['data'] === undefined) {
            codeblock.data = [];
          }

          codeblock.data.push({
            data: data,
            start: offset + position,
            end: offset + position + packetItem.dataLength,
            codingpasses: packetItem.codingpasses
          });
          position += packetItem.dataLength;
        }
      } catch (e) {
        return;
      }
    }

    return position;
  }

  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {
    var x0 = subband.tbx0;
    var y0 = subband.tby0;
    var width = subband.tbx1 - subband.tbx0;
    var codeblocks = subband.codeblocks;
    var right = subband.type.charAt(0) === 'H' ? 1 : 0;
    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;

    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {
      var codeblock = codeblocks[i];
      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;
      var blockHeight = codeblock.tby1_ - codeblock.tby0_;

      if (blockWidth === 0 || blockHeight === 0) {
        continue;
      }

      if (codeblock['data'] === undefined) {
        continue;
      }

      var bitModel, currentCodingpassType;
      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);
      currentCodingpassType = 2; // first bit plane starts from cleanup
      // collect data

      var data = codeblock.data,
          totalLength = 0,
          codingpasses = 0;
      var j, jj, dataItem;

      for (j = 0, jj = data.length; j < jj; j++) {
        dataItem = data[j];
        totalLength += dataItem.end - dataItem.start;
        codingpasses += dataItem.codingpasses;
      }

      var encodedData = new Int16Array(totalLength);
      var position = 0;

      for (j = 0, jj = data.length; j < jj; j++) {
        dataItem = data[j];
        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);
        encodedData.set(chunk, position);
        position += chunk.length;
      } // decoding the item


      var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);
      bitModel.setDecoder(decoder);

      for (j = 0; j < codingpasses; j++) {
        switch (currentCodingpassType) {
          case 0:
            bitModel.runSignificancePropogationPass();
            break;

          case 1:
            bitModel.runMagnitudeRefinementPass();
            break;

          case 2:
            bitModel.runCleanupPass();

            if (segmentationSymbolUsed) {
              bitModel.checkSegmentationSymbol();
            }

            break;
        }

        currentCodingpassType = (currentCodingpassType + 1) % 3;
      }

      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;
      var sign = bitModel.coefficentsSign;
      var magnitude = bitModel.coefficentsMagnitude;
      var bitsDecoded = bitModel.bitsDecoded;
      var magnitudeCorrection = reversible ? 0 : 0.5;
      var k, n, nb;
      position = 0; // Do the interleaving of Section F.3.3 here, so we do not need
      // to copy later. LL level is not interleaved, just copied.

      var interleave = subband.type !== 'LL';

      for (j = 0; j < blockHeight; j++) {
        var row = offset / width | 0; // row in the non-interleaved subband

        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;

        for (k = 0; k < blockWidth; k++) {
          n = magnitude[position];

          if (n !== 0) {
            n = (n + magnitudeCorrection) * delta;

            if (sign[position] !== 0) {
              n = -n;
            }

            nb = bitsDecoded[position];
            var pos = interleave ? levelOffset + (offset << 1) : offset;

            if (reversible && nb >= mb) {
              coefficients[pos] = n;
            } else {
              coefficients[pos] = n * (1 << mb - nb);
            }
          }

          offset++;
          position++;
        }

        offset += width - blockWidth;
      }
    }
  }

  function transformTile(context, tile, c) {
    var component = tile.components[c];
    var codingStyleParameters = component.codingStyleParameters;
    var quantizationParameters = component.quantizationParameters;
    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;
    var spqcds = quantizationParameters.SPqcds;
    var scalarExpounded = quantizationParameters.scalarExpounded;
    var guardBits = quantizationParameters.guardBits;
    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;
    var precision = context.components[c].precision;
    var reversible = codingStyleParameters.reversibleTransformation;
    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();
    var subbandCoefficients = [];
    var b = 0;

    for (var i = 0; i <= decompositionLevelsCount; i++) {
      var resolution = component.resolutions[i];
      var width = resolution.trx1 - resolution.trx0;
      var height = resolution.try1 - resolution.try0; // Allocate space for the whole sublevel.

      var coefficients = new Float32Array(width * height);

      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {
        var mu, epsilon;

        if (!scalarExpounded) {
          // formula E-5
          mu = spqcds[0].mu;
          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);
        } else {
          mu = spqcds[b].mu;
          epsilon = spqcds[b].epsilon;
          b++;
        }

        var subband = resolution.subbands[j];
        var gainLog2 = SubbandsGainLog2[subband.type]; // calulate quantization coefficient (Section E.1.1.1)

        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);
        var mb = guardBits + epsilon - 1; // In the first resolution level, copyCoefficients will fill the
        // whole array with coefficients. In the succeding passes,
        // copyCoefficients will consecutively fill in the values that belong
        // to the interleaved positions of the HL, LH, and HH coefficients.
        // The LL coefficients will then be interleaved in Transform.iterate().

        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);
      }

      subbandCoefficients.push({
        width: width,
        height: height,
        items: coefficients
      });
    }

    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);
    return {
      left: component.tcx0,
      top: component.tcy0,
      width: result.width,
      height: result.height,
      items: result.items
    };
  }

  function transformComponents(context) {
    var siz = context.SIZ;
    var components = context.components;
    var componentsCount = siz.Csiz;
    var resultImages = [];

    for (var i = 0, ii = context.tiles.length; i < ii; i++) {
      var tile = context.tiles[i];
      var transformedTiles = [];
      var c;

      for (c = 0; c < componentsCount; c++) {
        transformedTiles[c] = transformTile(context, tile, c);
      }

      var tile0 = transformedTiles[0];
      var isSigned = components[0].isSigned;

      if (isSigned) {
        var out = new Int16Array(tile0.items.length * componentsCount);
      } else {
        var out = new Uint16Array(tile0.items.length * componentsCount);
      }

      var result = {
        left: tile0.left,
        top: tile0.top,
        width: tile0.width,
        height: tile0.height,
        items: out
      }; // Section G.2.2 Inverse multi component transform

      var shift, offset, max, min, maxK;
      var pos = 0,
          j,
          jj,
          y0,
          y1,
          y2,
          r,
          g,
          b,
          k,
          val;

      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {
        var fourComponents = componentsCount === 4;
        var y0items = transformedTiles[0].items;
        var y1items = transformedTiles[1].items;
        var y2items = transformedTiles[2].items;
        var y3items = fourComponents ? transformedTiles[3].items : null; // HACK: The multiple component transform formulas below assume that
        // all components have the same precision. With this in mind, we
        // compute shift and offset only once.

        shift = components[0].precision - 8;
        offset = (128 << shift) + 0.5;
        max = 255 * (1 << shift);
        maxK = max * 0.5;
        min = -maxK;
        var component0 = tile.components[0];
        var alpha01 = componentsCount - 3;
        jj = y0items.length;

        if (!component0.codingStyleParameters.reversibleTransformation) {
          // inverse irreversible multiple component transform
          for (j = 0; j < jj; j++, pos += alpha01) {
            y0 = y0items[j] + offset;
            y1 = y1items[j];
            y2 = y2items[j];
            r = y0 + 1.402 * y2;
            g = y0 - 0.34413 * y1 - 0.71414 * y2;
            b = y0 + 1.772 * y1;
            out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;
            out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;
            out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;
          }
        } else {
          // inverse reversible multiple component transform
          for (j = 0; j < jj; j++, pos += alpha01) {
            y0 = y0items[j] + offset;
            y1 = y1items[j];
            y2 = y2items[j];
            g = y0 - (y2 + y1 >> 2);
            r = g + y2;
            b = g + y1;
            out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;
            out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;
            out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;
          }
        }

        if (fourComponents) {
          for (j = 0, pos = 3; j < jj; j++, pos += 4) {
            k = y3items[j];
            out[pos] = k <= min ? 0 : k >= maxK ? 255 : k + offset >> shift;
          }
        }
      } else {
        // no multi-component transform
        for (c = 0; c < componentsCount; c++) {
          if (components[c].precision === 8) {
            var items = transformedTiles[c].items;
            shift = components[c].precision - 8;
            offset = (128 << shift) + 0.5;
            max = 127.5 * (1 << shift);
            min = -max;

            for (pos = c, j = 0, jj = items.length; j < jj; j++) {
              val = items[j];
              out[pos] = val <= min ? 0 : val >= max ? 255 : val + offset >> shift;
              pos += componentsCount;
            }
          } else {
            var isSigned = components[c].isSigned;
            var items = transformedTiles[c].items;

            if (isSigned) {
              for (pos = c, j = 0, jj = items.length; j < jj; j++) {
                out[pos] = items[j];
                pos += componentsCount;
              }
            } else {
              shift = components[c].precision - 8;
              offset = (128 << shift) + 0.5;
              var precisionMax = Math.pow(2, components[c].precision) - 1;

              for (pos = c, j = 0, jj = items.length; j < jj; j++) {
                val = items[j];
                out[pos] = Math.max(Math.min(val + offset, precisionMax), 0);
                pos += componentsCount;
              }
            }
          }
        }
      }

      resultImages.push(result);
    }

    return resultImages;
  }

  function initializeTile(context, tileIndex) {
    var siz = context.SIZ;
    var componentsCount = siz.Csiz;
    var tile = context.tiles[tileIndex];

    for (var c = 0; c < componentsCount; c++) {
      var component = tile.components[c];
      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;
      component.quantizationParameters = qcdOrQcc;
      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;
      component.codingStyleParameters = codOrCoc;
    }

    tile.codingStyleDefaultParameters = context.currentTile.COD;
  } // Section B.10.2 Tag trees


  var TagTree = function TagTreeClosure() {
    function TagTree(width, height) {
      var levelsLength = log2(Math.max(width, height)) + 1;
      this.levels = [];

      for (var i = 0; i < levelsLength; i++) {
        var level = {
          width: width,
          height: height,
          items: []
        };
        this.levels.push(level);
        width = Math.ceil(width / 2);
        height = Math.ceil(height / 2);
      }
    }

    TagTree.prototype = {
      reset: function TagTree_reset(i, j) {
        var currentLevel = 0,
            value = 0,
            level;

        while (currentLevel < this.levels.length) {
          level = this.levels[currentLevel];
          var index = i + j * level.width;

          if (level.items[index] !== undefined) {
            value = level.items[index];
            break;
          }

          level.index = index;
          i >>= 1;
          j >>= 1;
          currentLevel++;
        }

        currentLevel--;
        level = this.levels[currentLevel];
        level.items[level.index] = value;
        this.currentLevel = currentLevel;
        delete this.value;
      },
      incrementValue: function TagTree_incrementValue() {
        var level = this.levels[this.currentLevel];
        level.items[level.index]++;
      },
      nextLevel: function TagTree_nextLevel() {
        var currentLevel = this.currentLevel;
        var level = this.levels[currentLevel];
        var value = level.items[level.index];
        currentLevel--;

        if (currentLevel < 0) {
          this.value = value;
          return false;
        }

        this.currentLevel = currentLevel;
        level = this.levels[currentLevel];
        level.items[level.index] = value;
        return true;
      }
    };
    return TagTree;
  }();

  var InclusionTree = function InclusionTreeClosure() {
    function InclusionTree(width, height) {
      var levelsLength = log2(Math.max(width, height)) + 1;
      this.levels = [];

      for (var i = 0; i < levelsLength; i++) {
        var items = new Uint8Array(width * height);
        var status = new Uint8Array(width * height);

        for (var j = 0, jj = items.length; j < jj; j++) {
          items[j] = 0;
          status[j] = 0;
        }

        var level = {
          width: width,
          height: height,
          items: items,
          status: status
        };
        this.levels.push(level);
        width = Math.ceil(width / 2);
        height = Math.ceil(height / 2);
      }
    }

    InclusionTree.prototype = {
      reset: function InclusionTree_reset(i, j, stopValue) {
        this.currentStopValue = stopValue;
        var currentLevel = 0;

        while (currentLevel < this.levels.length) {
          var level = this.levels[currentLevel];
          var index = i + j * level.width;
          level.index = index;
          i >>= 1;
          j >>= 1;
          currentLevel++;
        }

        this.currentLevel = this.levels.length - 1;
        this.minValue = this.levels[this.currentLevel].items[0];
        return;
      },
      incrementValue: function InclusionTree_incrementValue() {
        var level = this.levels[this.currentLevel];
        level.items[level.index] = level.items[level.index] + 1;

        if (level.items[level.index] > this.minValue) {
          this.minValue = level.items[level.index];
        }
      },
      nextLevel: function InclusionTree_nextLevel() {
        var currentLevel = this.currentLevel;
        currentLevel--;

        if (currentLevel < 0) {
          return false;
        } else {
          this.currentLevel = currentLevel;
          var level = this.levels[currentLevel];

          if (level.items[level.index] < this.minValue) {
            level.items[level.index] = this.minValue;
          } else if (level.items[level.index] > this.minValue) {
            this.minValue = level.items[level.index];
          }

          return true;
        }
      },
      isLeaf: function InclusionTree_isLeaf() {
        return this.currentLevel === 0;
      },
      isAboveThreshold: function InclusionTree_isAboveThreshold() {
        var levelindex = this.currentLevel;
        var level = this.levels[levelindex];
        return level.items[level.index] > this.currentStopValue;
      },
      isKnown: function InclusionTree_isKnown() {
        var levelindex = this.currentLevel;
        var level = this.levels[levelindex];
        return level.status[level.index] > 0;
      },
      setKnown: function InclusionTree_setKnown() {
        var levelindex = this.currentLevel;
        var level = this.levels[levelindex];
        level.status[level.index] = 1;
        return;
      }
    };
    return InclusionTree;
  }(); // Section D. Coefficient bit modeling


  var BitModel = function BitModelClosure() {
    var UNIFORM_CONTEXT = 17;
    var RUNLENGTH_CONTEXT = 18; // Table D-1
    // The index is binary presentation: 0dddvvhh, ddd - sum of Di (0..4),
    // vv - sum of Vi (0..2), and hh - sum of Hi (0..2)

    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);
    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);
    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);

    function BitModel(width, height, subband, zeroBitPlanes, mb) {
      this.width = width;
      this.height = height;
      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;
      var coefficientCount = width * height; // coefficients outside the encoding region treated as insignificant
      // add border state cells for significanceState

      this.neighborsSignificance = new Uint8Array(coefficientCount);
      this.coefficentsSign = new Uint8Array(coefficientCount);
      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);
      this.processingFlags = new Uint8Array(coefficientCount);
      var bitsDecoded = new Uint8Array(coefficientCount);

      if (zeroBitPlanes !== 0) {
        for (var i = 0; i < coefficientCount; i++) {
          bitsDecoded[i] = zeroBitPlanes;
        }
      }

      this.bitsDecoded = bitsDecoded;
      this.reset();
    }

    BitModel.prototype = {
      setDecoder: function BitModel_setDecoder(decoder) {
        this.decoder = decoder;
      },
      reset: function BitModel_reset() {
        // We have 17 contexts that are accessed via context labels,
        // plus the uniform and runlength context.
        this.contexts = new Int8Array(19); // Contexts are packed into 1 byte:
        // highest 7 bits carry the index, lowest bit carries mps

        this.contexts[0] = 4 << 1 | 0;
        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;
        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;
      },
      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {
        var neighborsSignificance = this.neighborsSignificance;
        var width = this.width,
            height = this.height;
        var left = column > 0;
        var right = column + 1 < width;
        var i;

        if (row > 0) {
          i = index - width;

          if (left) {
            neighborsSignificance[i - 1] += 0x10;
          }

          if (right) {
            neighborsSignificance[i + 1] += 0x10;
          }

          neighborsSignificance[i] += 0x04;
        }

        if (row + 1 < height) {
          i = index + width;

          if (left) {
            neighborsSignificance[i - 1] += 0x10;
          }

          if (right) {
            neighborsSignificance[i + 1] += 0x10;
          }

          neighborsSignificance[i] += 0x04;
        }

        if (left) {
          neighborsSignificance[index - 1] += 0x01;
        }

        if (right) {
          neighborsSignificance[index + 1] += 0x01;
        }

        neighborsSignificance[index] |= 0x80;
      },
      runSignificancePropogationPass: function BitModel_runSignificancePropogationPass() {
        var decoder = this.decoder;
        var width = this.width,
            height = this.height;
        var coefficentsMagnitude = this.coefficentsMagnitude;
        var coefficentsSign = this.coefficentsSign;
        var neighborsSignificance = this.neighborsSignificance;
        var processingFlags = this.processingFlags;
        var contexts = this.contexts;
        var labels = this.contextLabelTable;
        var bitsDecoded = this.bitsDecoded;
        var processedInverseMask = ~1;
        var processedMask = 1;
        var firstMagnitudeBitMask = 2;

        for (var i0 = 0; i0 < height; i0 += 4) {
          for (var j = 0; j < width; j++) {
            var index = i0 * width + j;

            for (var i1 = 0; i1 < 4; i1++, index += width) {
              var i = i0 + i1;

              if (i >= height) {
                break;
              } // clear processed flag first


              processingFlags[index] &= processedInverseMask;

              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {
                continue;
              }

              var contextLabel = labels[neighborsSignificance[index]];
              var decision = decoder.readBit(contexts, contextLabel);

              if (decision) {
                var sign = this.decodeSignBit(i, j, index);
                coefficentsSign[index] = sign;
                coefficentsMagnitude[index] = 1;
                this.setNeighborsSignificance(i, j, index);
                processingFlags[index] |= firstMagnitudeBitMask;
              }

              bitsDecoded[index]++;
              processingFlags[index] |= processedMask;
            }
          }
        }
      },
      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {
        var width = this.width,
            height = this.height;
        var coefficentsMagnitude = this.coefficentsMagnitude;
        var coefficentsSign = this.coefficentsSign;
        var contribution, sign0, sign1, significance1;
        var contextLabel, decoded; // calculate horizontal contribution

        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;

        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {
          sign1 = coefficentsSign[index + 1];

          if (significance1) {
            sign0 = coefficentsSign[index - 1];
            contribution = 1 - sign1 - sign0;
          } else {
            contribution = 1 - sign1 - sign1;
          }
        } else if (significance1) {
          sign0 = coefficentsSign[index - 1];
          contribution = 1 - sign0 - sign0;
        } else {
          contribution = 0;
        }

        var horizontalContribution = 3 * contribution; // calculate vertical contribution and combine with the horizontal

        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;

        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {
          sign1 = coefficentsSign[index + width];

          if (significance1) {
            sign0 = coefficentsSign[index - width];
            contribution = 1 - sign1 - sign0 + horizontalContribution;
          } else {
            contribution = 1 - sign1 - sign1 + horizontalContribution;
          }
        } else if (significance1) {
          sign0 = coefficentsSign[index - width];
          contribution = 1 - sign0 - sign0 + horizontalContribution;
        } else {
          contribution = horizontalContribution;
        }

        if (contribution >= 0) {
          contextLabel = 9 + contribution;
          decoded = this.decoder.readBit(this.contexts, contextLabel);
        } else {
          contextLabel = 9 - contribution;
          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;
        }

        return decoded;
      },
      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {
        var decoder = this.decoder;
        var width = this.width,
            height = this.height;
        var coefficentsMagnitude = this.coefficentsMagnitude;
        var neighborsSignificance = this.neighborsSignificance;
        var contexts = this.contexts;
        var bitsDecoded = this.bitsDecoded;
        var processingFlags = this.processingFlags;
        var processedMask = 1;
        var firstMagnitudeBitMask = 2;
        var length = width * height;
        var width4 = width * 4;

        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {
          indexNext = Math.min(length, index0 + width4);

          for (var j = 0; j < width; j++) {
            for (var index = index0 + j; index < indexNext; index += width) {
              // significant but not those that have just become
              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {
                continue;
              }

              var contextLabel = 16;

              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {
                processingFlags[index] ^= firstMagnitudeBitMask; // first refinement

                var significance = neighborsSignificance[index] & 127;
                contextLabel = significance === 0 ? 15 : 14;
              }

              var bit = decoder.readBit(contexts, contextLabel);
              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;
              bitsDecoded[index]++;
              processingFlags[index] |= processedMask;
            }
          }
        }
      },
      runCleanupPass: function BitModel_runCleanupPass() {
        var decoder = this.decoder;
        var width = this.width,
            height = this.height;
        var neighborsSignificance = this.neighborsSignificance;
        var coefficentsMagnitude = this.coefficentsMagnitude;
        var coefficentsSign = this.coefficentsSign;
        var contexts = this.contexts;
        var labels = this.contextLabelTable;
        var bitsDecoded = this.bitsDecoded;
        var processingFlags = this.processingFlags;
        var processedMask = 1;
        var firstMagnitudeBitMask = 2;
        var oneRowDown = width;
        var twoRowsDown = width * 2;
        var threeRowsDown = width * 3;
        var iNext;

        for (var i0 = 0; i0 < height; i0 = iNext) {
          iNext = Math.min(i0 + 4, height);
          var indexBase = i0 * width;
          var checkAllEmpty = i0 + 3 < height;

          for (var j = 0; j < width; j++) {
            var index0 = indexBase + j; // using the property: labels[neighborsSignificance[index]] === 0
            // when neighborsSignificance[index] === 0

            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;
            var i1 = 0,
                index = index0;
            var i = i0,
                sign;

            if (allEmpty) {
              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);

              if (!hasSignificantCoefficent) {
                bitsDecoded[index0]++;
                bitsDecoded[index0 + oneRowDown]++;
                bitsDecoded[index0 + twoRowsDown]++;
                bitsDecoded[index0 + threeRowsDown]++;
                continue; // next column
              }

              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);

              if (i1 !== 0) {
                i = i0 + i1;
                index += i1 * width;
              }

              sign = this.decodeSignBit(i, j, index);
              coefficentsSign[index] = sign;
              coefficentsMagnitude[index] = 1;
              this.setNeighborsSignificance(i, j, index);
              processingFlags[index] |= firstMagnitudeBitMask;
              index = index0;

              for (var i2 = i0; i2 <= i; i2++, index += width) {
                bitsDecoded[index]++;
              }

              i1++;
            }

            for (i = i0 + i1; i < iNext; i++, index += width) {
              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {
                continue;
              }

              var contextLabel = labels[neighborsSignificance[index]];
              var decision = decoder.readBit(contexts, contextLabel);

              if (decision === 1) {
                sign = this.decodeSignBit(i, j, index);
                coefficentsSign[index] = sign;
                coefficentsMagnitude[index] = 1;
                this.setNeighborsSignificance(i, j, index);
                processingFlags[index] |= firstMagnitudeBitMask;
              }

              bitsDecoded[index]++;
            }
          }
        }
      },
      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {
        var decoder = this.decoder;
        var contexts = this.contexts;
        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);

        if (symbol !== 0xA) {
          throw new Error('JPX Error: Invalid segmentation symbol');
        }
      }
    };
    return BitModel;
  }(); // Section F, Discrete wavelet transformation


  var Transform = function TransformClosure() {
    function Transform() {}

    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {
      var ll = subbands[0];

      for (var i = 1, ii = subbands.length; i < ii; i++) {
        ll = this.iterate(ll, subbands[i], u0, v0);
      }

      return ll;
    };

    Transform.prototype.extend = function extend(buffer, offset, size) {
      // Section F.3.7 extending... using max extension of 4
      var i1 = offset - 1,
          j1 = offset + 1;
      var i2 = offset + size - 2,
          j2 = offset + size;
      buffer[i1--] = buffer[j1++];
      buffer[j2++] = buffer[i2--];
      buffer[i1--] = buffer[j1++];
      buffer[j2++] = buffer[i2--];
      buffer[i1--] = buffer[j1++];
      buffer[j2++] = buffer[i2--];
      buffer[i1] = buffer[j1];
      buffer[j2] = buffer[i2];
    };

    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {
      var llWidth = ll.width,
          llHeight = ll.height,
          llItems = ll.items;
      var width = hl_lh_hh.width;
      var height = hl_lh_hh.height;
      var items = hl_lh_hh.items;
      var i, j, k, l, u, v; // Interleave LL according to Section F.3.3

      for (k = 0, i = 0; i < llHeight; i++) {
        l = i * 2 * width;

        for (j = 0; j < llWidth; j++, k++, l += 2) {
          items[l] = llItems[k];
        }
      } // The LL band is not needed anymore.


      llItems = ll.items = null;
      var bufferPadding = 4;
      var rowBuffer = new Float32Array(width + 2 * bufferPadding); // Section F.3.4 HOR_SR

      if (width === 1) {
        // if width = 1, when u0 even keep items as is, when odd divide by 2
        if ((u0 & 1) !== 0) {
          for (v = 0, k = 0; v < height; v++, k += width) {
            items[k] *= 0.5;
          }
        }
      } else {
        for (v = 0, k = 0; v < height; v++, k += width) {
          rowBuffer.set(items.subarray(k, k + width), bufferPadding);
          this.extend(rowBuffer, bufferPadding, width);
          this.filter(rowBuffer, bufferPadding, width);
          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);
        }
      } // Accesses to the items array can take long, because it may not fit into
      // CPU cache and has to be fetched from main memory. Since subsequent
      // accesses to the items array are not local when reading columns, we
      // have a cache miss every time. To reduce cache misses, get up to
      // 'numBuffers' items at a time and store them into the individual
      // buffers. The colBuffers should be small enough to fit into CPU cache.


      var numBuffers = 16;
      var colBuffers = [];

      for (i = 0; i < numBuffers; i++) {
        colBuffers.push(new Float32Array(height + 2 * bufferPadding));
      }

      var b,
          currentBuffer = 0;
      ll = bufferPadding + height; // Section F.3.5 VER_SR

      if (height === 1) {
        // if height = 1, when v0 even keep items as is, when odd divide by 2
        if ((v0 & 1) !== 0) {
          for (u = 0; u < width; u++) {
            items[u] *= 0.5;
          }
        }
      } else {
        for (u = 0; u < width; u++) {
          // if we ran out of buffers, copy several image columns at once
          if (currentBuffer === 0) {
            numBuffers = Math.min(width - u, numBuffers);

            for (k = u, l = bufferPadding; l < ll; k += width, l++) {
              for (b = 0; b < numBuffers; b++) {
                colBuffers[b][l] = items[k + b];
              }
            }

            currentBuffer = numBuffers;
          }

          currentBuffer--;
          var buffer = colBuffers[currentBuffer];
          this.extend(buffer, bufferPadding, height);
          this.filter(buffer, bufferPadding, height); // If this is last buffer in this group of buffers, flush all buffers.

          if (currentBuffer === 0) {
            k = u - numBuffers + 1;

            for (l = bufferPadding; l < ll; k += width, l++) {
              for (b = 0; b < numBuffers; b++) {
                items[k + b] = colBuffers[b][l];
              }
            }
          }
        }
      }

      return {
        width: width,
        height: height,
        items: items
      };
    };

    return Transform;
  }(); // Section 3.8.2 Irreversible 9-7 filter


  var IrreversibleTransform = function IrreversibleTransformClosure() {
    function IrreversibleTransform() {
      Transform.call(this);
    }

    IrreversibleTransform.prototype = Object.create(Transform.prototype);

    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {
      var len = length >> 1;
      offset = offset | 0;
      var j, n, current, next;
      var alpha = -1.586134342059924;
      var beta = -0.052980118572961;
      var gamma = 0.882911075530934;
      var delta = 0.443506852043971;
      var K = 1.230174104914001;
      var K_ = 1 / K; // step 1 is combined with step 3
      // step 2

      j = offset - 3;

      for (n = len + 4; n--; j += 2) {
        x[j] *= K_;
      } // step 1 & 3


      j = offset - 2;
      current = delta * x[j - 1];

      for (n = len + 3; n--; j += 2) {
        next = delta * x[j + 1];
        x[j] = K * x[j] - current - next;

        if (n--) {
          j += 2;
          current = delta * x[j + 1];
          x[j] = K * x[j] - current - next;
        } else {
          break;
        }
      } // step 4


      j = offset - 1;
      current = gamma * x[j - 1];

      for (n = len + 2; n--; j += 2) {
        next = gamma * x[j + 1];
        x[j] -= current + next;

        if (n--) {
          j += 2;
          current = gamma * x[j + 1];
          x[j] -= current + next;
        } else {
          break;
        }
      } // step 5


      j = offset;
      current = beta * x[j - 1];

      for (n = len + 1; n--; j += 2) {
        next = beta * x[j + 1];
        x[j] -= current + next;

        if (n--) {
          j += 2;
          current = beta * x[j + 1];
          x[j] -= current + next;
        } else {
          break;
        }
      } // step 6


      if (len !== 0) {
        j = offset + 1;
        current = alpha * x[j - 1];

        for (n = len; n--; j += 2) {
          next = alpha * x[j + 1];
          x[j] -= current + next;

          if (n--) {
            j += 2;
            current = alpha * x[j + 1];
            x[j] -= current + next;
          } else {
            break;
          }
        }
      }
    };

    return IrreversibleTransform;
  }(); // Section 3.8.1 Reversible 5-3 filter


  var ReversibleTransform = function ReversibleTransformClosure() {
    function ReversibleTransform() {
      Transform.call(this);
    }

    ReversibleTransform.prototype = Object.create(Transform.prototype);

    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {
      var len = length >> 1;
      offset = offset | 0;
      var j, n;

      for (j = offset, n = len + 1; n--; j += 2) {
        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;
      }

      for (j = offset + 1, n = len; n--; j += 2) {
        x[j] += x[j - 1] + x[j + 1] >> 1;
      }
    };

    return ReversibleTransform;
  }();

  return JpxImage;
}();
/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */

/* Copyright 2012 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


'use strict';
/* This class implements the QM Coder decoding as defined in
 *   JPEG 2000 Part I Final Committee Draft Version 1.0
 *   Annex C.3 Arithmetic decoding procedure
 * available at http://www.jpeg.org/public/fcd15444-1.pdf
 *
 * The arithmetic decoder is used in conjunction with context models to decode
 * JPEG2000 and JBIG2 streams.
 */


var ArithmeticDecoder = function ArithmeticDecoderClosure() {
  // Table C-2
  var QeTable = [{
    qe: 0x5601,
    nmps: 1,
    nlps: 1,
    switchFlag: 1
  }, {
    qe: 0x3401,
    nmps: 2,
    nlps: 6,
    switchFlag: 0
  }, {
    qe: 0x1801,
    nmps: 3,
    nlps: 9,
    switchFlag: 0
  }, {
    qe: 0x0AC1,
    nmps: 4,
    nlps: 12,
    switchFlag: 0
  }, {
    qe: 0x0521,
    nmps: 5,
    nlps: 29,
    switchFlag: 0
  }, {
    qe: 0x0221,
    nmps: 38,
    nlps: 33,
    switchFlag: 0
  }, {
    qe: 0x5601,
    nmps: 7,
    nlps: 6,
    switchFlag: 1
  }, {
    qe: 0x5401,
    nmps: 8,
    nlps: 14,
    switchFlag: 0
  }, {
    qe: 0x4801,
    nmps: 9,
    nlps: 14,
    switchFlag: 0
  }, {
    qe: 0x3801,
    nmps: 10,
    nlps: 14,
    switchFlag: 0
  }, {
    qe: 0x3001,
    nmps: 11,
    nlps: 17,
    switchFlag: 0
  }, {
    qe: 0x2401,
    nmps: 12,
    nlps: 18,
    switchFlag: 0
  }, {
    qe: 0x1C01,
    nmps: 13,
    nlps: 20,
    switchFlag: 0
  }, {
    qe: 0x1601,
    nmps: 29,
    nlps: 21,
    switchFlag: 0
  }, {
    qe: 0x5601,
    nmps: 15,
    nlps: 14,
    switchFlag: 1
  }, {
    qe: 0x5401,
    nmps: 16,
    nlps: 14,
    switchFlag: 0
  }, {
    qe: 0x5101,
    nmps: 17,
    nlps: 15,
    switchFlag: 0
  }, {
    qe: 0x4801,
    nmps: 18,
    nlps: 16,
    switchFlag: 0
  }, {
    qe: 0x3801,
    nmps: 19,
    nlps: 17,
    switchFlag: 0
  }, {
    qe: 0x3401,
    nmps: 20,
    nlps: 18,
    switchFlag: 0
  }, {
    qe: 0x3001,
    nmps: 21,
    nlps: 19,
    switchFlag: 0
  }, {
    qe: 0x2801,
    nmps: 22,
    nlps: 19,
    switchFlag: 0
  }, {
    qe: 0x2401,
    nmps: 23,
    nlps: 20,
    switchFlag: 0
  }, {
    qe: 0x2201,
    nmps: 24,
    nlps: 21,
    switchFlag: 0
  }, {
    qe: 0x1C01,
    nmps: 25,
    nlps: 22,
    switchFlag: 0
  }, {
    qe: 0x1801,
    nmps: 26,
    nlps: 23,
    switchFlag: 0
  }, {
    qe: 0x1601,
    nmps: 27,
    nlps: 24,
    switchFlag: 0
  }, {
    qe: 0x1401,
    nmps: 28,
    nlps: 25,
    switchFlag: 0
  }, {
    qe: 0x1201,
    nmps: 29,
    nlps: 26,
    switchFlag: 0
  }, {
    qe: 0x1101,
    nmps: 30,
    nlps: 27,
    switchFlag: 0
  }, {
    qe: 0x0AC1,
    nmps: 31,
    nlps: 28,
    switchFlag: 0
  }, {
    qe: 0x09C1,
    nmps: 32,
    nlps: 29,
    switchFlag: 0
  }, {
    qe: 0x08A1,
    nmps: 33,
    nlps: 30,
    switchFlag: 0
  }, {
    qe: 0x0521,
    nmps: 34,
    nlps: 31,
    switchFlag: 0
  }, {
    qe: 0x0441,
    nmps: 35,
    nlps: 32,
    switchFlag: 0
  }, {
    qe: 0x02A1,
    nmps: 36,
    nlps: 33,
    switchFlag: 0
  }, {
    qe: 0x0221,
    nmps: 37,
    nlps: 34,
    switchFlag: 0
  }, {
    qe: 0x0141,
    nmps: 38,
    nlps: 35,
    switchFlag: 0
  }, {
    qe: 0x0111,
    nmps: 39,
    nlps: 36,
    switchFlag: 0
  }, {
    qe: 0x0085,
    nmps: 40,
    nlps: 37,
    switchFlag: 0
  }, {
    qe: 0x0049,
    nmps: 41,
    nlps: 38,
    switchFlag: 0
  }, {
    qe: 0x0025,
    nmps: 42,
    nlps: 39,
    switchFlag: 0
  }, {
    qe: 0x0015,
    nmps: 43,
    nlps: 40,
    switchFlag: 0
  }, {
    qe: 0x0009,
    nmps: 44,
    nlps: 41,
    switchFlag: 0
  }, {
    qe: 0x0005,
    nmps: 45,
    nlps: 42,
    switchFlag: 0
  }, {
    qe: 0x0001,
    nmps: 45,
    nlps: 43,
    switchFlag: 0
  }, {
    qe: 0x5601,
    nmps: 46,
    nlps: 46,
    switchFlag: 0
  }]; // C.3.5 Initialisation of the decoder (INITDEC)

  function ArithmeticDecoder(data, start, end) {
    this.data = data;
    this.bp = start;
    this.dataEnd = end;
    this.chigh = data[start];
    this.clow = 0;
    this.byteIn();
    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;
    this.clow = this.clow << 7 & 0xFFFF;
    this.ct -= 7;
    this.a = 0x8000;
  }

  ArithmeticDecoder.prototype = {
    // C.3.4 Compressed data input (BYTEIN)
    byteIn: function ArithmeticDecoder_byteIn() {
      var data = this.data;
      var bp = this.bp;

      if (data[bp] === 0xFF) {
        var b1 = data[bp + 1];

        if (b1 > 0x8F) {
          this.clow += 0xFF00;
          this.ct = 8;
        } else {
          bp++;
          this.clow += data[bp] << 9;
          this.ct = 7;
          this.bp = bp;
        }
      } else {
        bp++;
        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;
        this.ct = 8;
        this.bp = bp;
      }

      if (this.clow > 0xFFFF) {
        this.chigh += this.clow >> 16;
        this.clow &= 0xFFFF;
      }
    },
    // C.3.2 Decoding a decision (DECODE)
    readBit: function ArithmeticDecoder_readBit(contexts, pos) {
      // contexts are packed into 1 byte:
      // highest 7 bits carry cx.index, lowest bit carries cx.mps
      var cx_index = contexts[pos] >> 1,
          cx_mps = contexts[pos] & 1;
      var qeTableIcx = QeTable[cx_index];
      var qeIcx = qeTableIcx.qe;
      var d;
      var a = this.a - qeIcx;

      if (this.chigh < qeIcx) {
        // exchangeLps
        if (a < qeIcx) {
          a = qeIcx;
          d = cx_mps;
          cx_index = qeTableIcx.nmps;
        } else {
          a = qeIcx;
          d = 1 ^ cx_mps;

          if (qeTableIcx.switchFlag === 1) {
            cx_mps = d;
          }

          cx_index = qeTableIcx.nlps;
        }
      } else {
        this.chigh -= qeIcx;

        if ((a & 0x8000) !== 0) {
          this.a = a;
          return cx_mps;
        } // exchangeMps


        if (a < qeIcx) {
          d = 1 ^ cx_mps;

          if (qeTableIcx.switchFlag === 1) {
            cx_mps = d;
          }

          cx_index = qeTableIcx.nlps;
        } else {
          d = cx_mps;
          cx_index = qeTableIcx.nmps;
        }
      } // C.3.3 renormD;


      do {
        if (this.ct === 0) {
          this.byteIn();
        }

        a <<= 1;
        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;
        this.clow = this.clow << 1 & 0xFFFF;
        this.ct--;
      } while ((a & 0x8000) === 0);

      this.a = a;
      contexts[pos] = cx_index << 1 | cx_mps;
      return d;
    }
  };
  return ArithmeticDecoder;
}();
/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */

/* Copyright 2012 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* globals Cmd, ColorSpace, Dict, MozBlobBuilder, Name, PDFJS, Ref, URL,
           Promise */


'use strict';

var globalScope = typeof window === 'undefined' ? module.exports : window;
var isWorker = typeof window === 'undefined';
var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];
var TextRenderingMode = {
  FILL: 0,
  STROKE: 1,
  FILL_STROKE: 2,
  INVISIBLE: 3,
  FILL_ADD_TO_PATH: 4,
  STROKE_ADD_TO_PATH: 5,
  FILL_STROKE_ADD_TO_PATH: 6,
  ADD_TO_PATH: 7,
  FILL_STROKE_MASK: 3,
  ADD_TO_PATH_FLAG: 4
};
var ImageKind = {
  GRAYSCALE_1BPP: 1,
  RGB_24BPP: 2,
  RGBA_32BPP: 3
};
var AnnotationType = {
  WIDGET: 1,
  TEXT: 2,
  LINK: 3
};
var StreamType = {
  UNKNOWN: 0,
  FLATE: 1,
  LZW: 2,
  DCT: 3,
  JPX: 4,
  JBIG: 5,
  A85: 6,
  AHX: 7,
  CCF: 8,
  RL: 9
};
var FontType = {
  UNKNOWN: 0,
  TYPE1: 1,
  TYPE1C: 2,
  CIDFONTTYPE0: 3,
  CIDFONTTYPE0C: 4,
  TRUETYPE: 5,
  CIDFONTTYPE2: 6,
  TYPE3: 7,
  OPENTYPE: 8,
  TYPE0: 9,
  MMTYPE1: 10
}; // The global PDFJS object exposes the API
// In production, it will be declared outside a global wrapper
// In development, it will be declared here

var PDFJS = {};

if (!globalScope.PDFJS) {
  globalScope.PDFJS = PDFJS;
} else {
  PDFJS = globalScope.PDFJS;
}

globalScope.PDFJS.pdfBug = false;
PDFJS.VERBOSITY_LEVELS = {
  errors: 0,
  warnings: 1,
  infos: 5
}; // All the possible operations for an operator list.

var OPS = PDFJS.OPS = {
  // Intentionally start from 1 so it is easy to spot bad operators that will be
  // 0's.
  dependency: 1,
  setLineWidth: 2,
  setLineCap: 3,
  setLineJoin: 4,
  setMiterLimit: 5,
  setDash: 6,
  setRenderingIntent: 7,
  setFlatness: 8,
  setGState: 9,
  save: 10,
  restore: 11,
  transform: 12,
  moveTo: 13,
  lineTo: 14,
  curveTo: 15,
  curveTo2: 16,
  curveTo3: 17,
  closePath: 18,
  rectangle: 19,
  stroke: 20,
  closeStroke: 21,
  fill: 22,
  eoFill: 23,
  fillStroke: 24,
  eoFillStroke: 25,
  closeFillStroke: 26,
  closeEOFillStroke: 27,
  endPath: 28,
  clip: 29,
  eoClip: 30,
  beginText: 31,
  endText: 32,
  setCharSpacing: 33,
  setWordSpacing: 34,
  setHScale: 35,
  setLeading: 36,
  setFont: 37,
  setTextRenderingMode: 38,
  setTextRise: 39,
  moveText: 40,
  setLeadingMoveText: 41,
  setTextMatrix: 42,
  nextLine: 43,
  showText: 44,
  showSpacedText: 45,
  nextLineShowText: 46,
  nextLineSetSpacingShowText: 47,
  setCharWidth: 48,
  setCharWidthAndBounds: 49,
  setStrokeColorSpace: 50,
  setFillColorSpace: 51,
  setStrokeColor: 52,
  setStrokeColorN: 53,
  setFillColor: 54,
  setFillColorN: 55,
  setStrokeGray: 56,
  setFillGray: 57,
  setStrokeRGBColor: 58,
  setFillRGBColor: 59,
  setStrokeCMYKColor: 60,
  setFillCMYKColor: 61,
  shadingFill: 62,
  beginInlineImage: 63,
  beginImageData: 64,
  endInlineImage: 65,
  paintXObject: 66,
  markPoint: 67,
  markPointProps: 68,
  beginMarkedContent: 69,
  beginMarkedContentProps: 70,
  endMarkedContent: 71,
  beginCompat: 72,
  endCompat: 73,
  paintFormXObjectBegin: 74,
  paintFormXObjectEnd: 75,
  beginGroup: 76,
  endGroup: 77,
  beginAnnotations: 78,
  endAnnotations: 79,
  beginAnnotation: 80,
  endAnnotation: 81,
  paintJpegXObject: 82,
  paintImageMaskXObject: 83,
  paintImageMaskXObjectGroup: 84,
  paintImageXObject: 85,
  paintInlineImageXObject: 86,
  paintInlineImageXObjectGroup: 87,
  paintImageXObjectRepeat: 88,
  paintImageMaskXObjectRepeat: 89,
  paintSolidColorImageMask: 90,
  constructPath: 91
}; // A notice for devs. These are good for things that are helpful to devs, such
// as warning that Workers were disabled, which is important to devs but not
// end users.

function info(msg) {
  if (PDFJS.verbosity >= PDFJS.VERBOSITY_LEVELS.infos) {
    console.log('Info: ' + msg);
  }
} // Non-fatal warnings.


function warn(msg) {
  if (PDFJS.verbosity >= PDFJS.VERBOSITY_LEVELS.warnings) {
    console.log('Warning: ' + msg);
  }
} // Fatal errors that should trigger the fallback UI and halt execution by
// throwing an exception.


function error(msg) {
  // If multiple arguments were passed, pass them all to the log function.
  if (arguments.length > 1) {
    var logArguments = ['Error:'];
    logArguments.push.apply(logArguments, arguments);
    console.log.apply(console, logArguments); // Join the arguments into a single string for the lines below.

    msg = [].join.call(arguments, ' ');
  } else {
    console.log('Error: ' + msg);
  }

  console.log(backtrace());
  UnsupportedManager.notify(UNSUPPORTED_FEATURES.unknown);
  throw new Error(msg);
}

function backtrace() {
  try {
    throw new Error();
  } catch (e) {
    return e.stack ? e.stack.split('\n').slice(2).join('\n') : '';
  }
}

function assert(cond, msg) {
  if (!cond) {
    error(msg);
  }
}

var UNSUPPORTED_FEATURES = PDFJS.UNSUPPORTED_FEATURES = {
  unknown: 'unknown',
  forms: 'forms',
  javaScript: 'javaScript',
  smask: 'smask',
  shadingPattern: 'shadingPattern',
  font: 'font'
};

var UnsupportedManager = PDFJS.UnsupportedManager = function UnsupportedManagerClosure() {
  var listeners = [];
  return {
    listen: function listen(cb) {
      listeners.push(cb);
    },
    notify: function notify(featureId) {
      warn('Unsupported feature "' + featureId + '"');

      for (var i = 0, ii = listeners.length; i < ii; i++) {
        listeners[i](featureId);
      }
    }
  };
}(); // Combines two URLs. The baseUrl shall be absolute URL. If the url is an
// absolute URL, it will be returned as is.


function combineUrl(baseUrl, url) {
  if (!url) {
    return baseUrl;
  }

  if (/^[a-z][a-z0-9+\-.]*:/i.test(url)) {
    return url;
  }

  var i;

  if (url.charAt(0) === '/') {
    // absolute path
    i = baseUrl.indexOf('://');

    if (url.charAt(1) === '/') {
      ++i;
    } else {
      i = baseUrl.indexOf('/', i + 3);
    }

    return baseUrl.substring(0, i) + url;
  } else {
    // relative path
    var pathLength = baseUrl.length;
    i = baseUrl.lastIndexOf('#');
    pathLength = i >= 0 ? i : pathLength;
    i = baseUrl.lastIndexOf('?', pathLength);
    pathLength = i >= 0 ? i : pathLength;
    var prefixLength = baseUrl.lastIndexOf('/', pathLength);
    return baseUrl.substring(0, prefixLength + 1) + url;
  }
} // Validates if URL is safe and allowed, e.g. to avoid XSS.


function isValidUrl(url, allowRelative) {
  if (!url) {
    return false;
  } // RFC 3986 (http://tools.ietf.org/html/rfc3986#section-3.1)
  // scheme = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )


  var protocol = /^[a-z][a-z0-9+\-.]*(?=:)/i.exec(url);

  if (!protocol) {
    return allowRelative;
  }

  protocol = protocol[0].toLowerCase();

  switch (protocol) {
    case 'http':
    case 'https':
    case 'ftp':
    case 'mailto':
    case 'tel':
      return true;

    default:
      return false;
  }
}

PDFJS.isValidUrl = isValidUrl;

function shadow(obj, prop, value) {
  Object.defineProperty(obj, prop, {
    value: value,
    enumerable: true,
    configurable: true,
    writable: false
  });
  return value;
}

PDFJS.shadow = shadow;
var PasswordResponses = PDFJS.PasswordResponses = {
  NEED_PASSWORD: 1,
  INCORRECT_PASSWORD: 2
};

var PasswordException = function PasswordExceptionClosure() {
  function PasswordException(msg, code) {
    this.name = 'PasswordException';
    this.message = msg;
    this.code = code;
  }

  PasswordException.prototype = new Error();
  PasswordException.constructor = PasswordException;
  return PasswordException;
}();

PDFJS.PasswordException = PasswordException;

var UnknownErrorException = function UnknownErrorExceptionClosure() {
  function UnknownErrorException(msg, details) {
    this.name = 'UnknownErrorException';
    this.message = msg;
    this.details = details;
  }

  UnknownErrorException.prototype = new Error();
  UnknownErrorException.constructor = UnknownErrorException;
  return UnknownErrorException;
}();

PDFJS.UnknownErrorException = UnknownErrorException;

var InvalidPDFException = function InvalidPDFExceptionClosure() {
  function InvalidPDFException(msg) {
    this.name = 'InvalidPDFException';
    this.message = msg;
  }

  InvalidPDFException.prototype = new Error();
  InvalidPDFException.constructor = InvalidPDFException;
  return InvalidPDFException;
}();

PDFJS.InvalidPDFException = InvalidPDFException;

var MissingPDFException = function MissingPDFExceptionClosure() {
  function MissingPDFException(msg) {
    this.name = 'MissingPDFException';
    this.message = msg;
  }

  MissingPDFException.prototype = new Error();
  MissingPDFException.constructor = MissingPDFException;
  return MissingPDFException;
}();

PDFJS.MissingPDFException = MissingPDFException;

var UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {
  function UnexpectedResponseException(msg, status) {
    this.name = 'UnexpectedResponseException';
    this.message = msg;
    this.status = status;
  }

  UnexpectedResponseException.prototype = new Error();
  UnexpectedResponseException.constructor = UnexpectedResponseException;
  return UnexpectedResponseException;
}();

PDFJS.UnexpectedResponseException = UnexpectedResponseException;

var NotImplementedException = function NotImplementedExceptionClosure() {
  function NotImplementedException(msg) {
    this.message = msg;
  }

  NotImplementedException.prototype = new Error();
  NotImplementedException.prototype.name = 'NotImplementedException';
  NotImplementedException.constructor = NotImplementedException;
  return NotImplementedException;
}();

var MissingDataException = function MissingDataExceptionClosure() {
  function MissingDataException(begin, end) {
    this.begin = begin;
    this.end = end;
    this.message = 'Missing data [' + begin + ', ' + end + ')';
  }

  MissingDataException.prototype = new Error();
  MissingDataException.prototype.name = 'MissingDataException';
  MissingDataException.constructor = MissingDataException;
  return MissingDataException;
}();

var XRefParseException = function XRefParseExceptionClosure() {
  function XRefParseException(msg) {
    this.message = msg;
  }

  XRefParseException.prototype = new Error();
  XRefParseException.prototype.name = 'XRefParseException';
  XRefParseException.constructor = XRefParseException;
  return XRefParseException;
}();

function bytesToString(bytes) {
  assert(bytes !== null && typeof bytes === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');
  var length = bytes.length;
  var MAX_ARGUMENT_COUNT = 8192;

  if (length < MAX_ARGUMENT_COUNT) {
    return String.fromCharCode.apply(null, bytes);
  }

  var strBuf = [];

  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {
    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);
    var chunk = bytes.subarray(i, chunkEnd);
    strBuf.push(String.fromCharCode.apply(null, chunk));
  }

  return strBuf.join('');
}

function stringToBytes(str) {
  assert(typeof str === 'string', 'Invalid argument for stringToBytes');
  var length = str.length;
  var bytes = new Uint8Array(length);

  for (var i = 0; i < length; ++i) {
    bytes[i] = str.charCodeAt(i) & 0xFF;
  }

  return bytes;
}

function string32(value) {
  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);
}

function log2(x) {
  var n = 1,
      i = 0;

  while (x > n) {
    n <<= 1;
    i++;
  }

  return i;
}

function readInt8(data, start) {
  return data[start] << 24 >> 24;
}

function readUint16(data, offset) {
  return data[offset] << 8 | data[offset + 1];
}

function readUint32(data, offset) {
  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;
} // Lazy test the endianness of the platform
// NOTE: This will be 'true' for simulated TypedArrays


function isLittleEndian() {
  var buffer8 = new Uint8Array(2);
  buffer8[0] = 1;
  var buffer16 = new Uint16Array(buffer8.buffer);
  return buffer16[0] === 1;
}

Object.defineProperty(PDFJS, 'isLittleEndian', {
  configurable: true,
  get: function PDFJS_isLittleEndian() {
    return shadow(PDFJS, 'isLittleEndian', isLittleEndian());
  }
}); //#if !(FIREFOX || MOZCENTRAL || B2G || CHROME)
//// Lazy test if the userAgant support CanvasTypedArrays

function hasCanvasTypedArrays() {
  var canvas = document.createElement('canvas');
  canvas.width = canvas.height = 1;
  var ctx = canvas.getContext('2d');
  var imageData = ctx.createImageData(1, 1);
  return typeof imageData.data.buffer !== 'undefined';
}

Object.defineProperty(PDFJS, 'hasCanvasTypedArrays', {
  configurable: true,
  get: function PDFJS_hasCanvasTypedArrays() {
    return shadow(PDFJS, 'hasCanvasTypedArrays', hasCanvasTypedArrays());
  }
});

var Uint32ArrayView = function Uint32ArrayViewClosure() {
  function Uint32ArrayView(buffer, length) {
    this.buffer = buffer;
    this.byteLength = buffer.length;
    this.length = length === undefined ? this.byteLength >> 2 : length;
    ensureUint32ArrayViewProps(this.length);
  }

  Uint32ArrayView.prototype = Object.create(null);
  var uint32ArrayViewSetters = 0;

  function createUint32ArrayProp(index) {
    return {
      get: function get() {
        var buffer = this.buffer,
            offset = index << 2;
        return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;
      },
      set: function set(value) {
        var buffer = this.buffer,
            offset = index << 2;
        buffer[offset] = value & 255;
        buffer[offset + 1] = value >> 8 & 255;
        buffer[offset + 2] = value >> 16 & 255;
        buffer[offset + 3] = value >>> 24 & 255;
      }
    };
  }

  function ensureUint32ArrayViewProps(length) {
    while (uint32ArrayViewSetters < length) {
      Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));
      uint32ArrayViewSetters++;
    }
  }

  return Uint32ArrayView;
}(); //#else
//PDFJS.hasCanvasTypedArrays = true;
//#endif


var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];

var Util = PDFJS.Util = function UtilClosure() {
  function Util() {}

  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')']; // makeCssRgb() can be called thousands of times. Using |rgbBuf| avoids
  // creating many intermediate strings.

  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {
    rgbBuf[1] = r;
    rgbBuf[3] = g;
    rgbBuf[5] = b;
    return rgbBuf.join('');
  }; // Concatenates two transformation matrices together and returns the result.


  Util.transform = function Util_transform(m1, m2) {
    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];
  }; // For 2d affine transforms


  Util.applyTransform = function Util_applyTransform(p, m) {
    var xt = p[0] * m[0] + p[1] * m[2] + m[4];
    var yt = p[0] * m[1] + p[1] * m[3] + m[5];
    return [xt, yt];
  };

  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {
    var d = m[0] * m[3] - m[1] * m[2];
    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;
    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;
    return [xt, yt];
  }; // Applies the transform to the rectangle and finds the minimum axially
  // aligned bounding box.


  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {
    var p1 = Util.applyTransform(r, m);
    var p2 = Util.applyTransform(r.slice(2, 4), m);
    var p3 = Util.applyTransform([r[0], r[3]], m);
    var p4 = Util.applyTransform([r[2], r[1]], m);
    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];
  };

  Util.inverseTransform = function Util_inverseTransform(m) {
    var d = m[0] * m[3] - m[1] * m[2];
    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];
  }; // Apply a generic 3d matrix M on a 3-vector v:
  //   | a b c |   | X |
  //   | d e f | x | Y |
  //   | g h i |   | Z |
  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],
  // with v as [X,Y,Z]


  Util.apply3dTransform = function Util_apply3dTransform(m, v) {
    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];
  }; // This calculation uses Singular Value Decomposition.
  // The SVD can be represented with formula A = USV. We are interested in the
  // matrix S here because it represents the scale values.


  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {
    var transpose = [m[0], m[2], m[1], m[3]]; // Multiply matrix m with its transpose.

    var a = m[0] * transpose[0] + m[1] * transpose[2];
    var b = m[0] * transpose[1] + m[1] * transpose[3];
    var c = m[2] * transpose[0] + m[3] * transpose[2];
    var d = m[2] * transpose[1] + m[3] * transpose[3]; // Solve the second degree polynomial to get roots.

    var first = (a + d) / 2;
    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;
    var sx = first + second || 1;
    var sy = first - second || 1; // Scale values are the square roots of the eigenvalues.

    return [Math.sqrt(sx), Math.sqrt(sy)];
  }; // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)
  // For coordinate systems whose origin lies in the bottom-left, this
  // means normalization to (BL,TR) ordering. For systems with origin in the
  // top-left, this means (TL,BR) ordering.


  Util.normalizeRect = function Util_normalizeRect(rect) {
    var r = rect.slice(0); // clone rect

    if (rect[0] > rect[2]) {
      r[0] = rect[2];
      r[2] = rect[0];
    }

    if (rect[1] > rect[3]) {
      r[1] = rect[3];
      r[3] = rect[1];
    }

    return r;
  }; // Returns a rectangle [x1, y1, x2, y2] corresponding to the
  // intersection of rect1 and rect2. If no intersection, returns 'false'
  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]


  Util.intersect = function Util_intersect(rect1, rect2) {
    function compare(a, b) {
      return a - b;
    } // Order points along the axes


    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),
        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),
        result = [];
    rect1 = Util.normalizeRect(rect1);
    rect2 = Util.normalizeRect(rect2); // X: first and second points belong to different rectangles?

    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {
      // Intersection must be between second and third points
      result[0] = orderedX[1];
      result[2] = orderedX[2];
    } else {
      return false;
    } // Y: first and second points belong to different rectangles?


    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {
      // Intersection must be between second and third points
      result[1] = orderedY[1];
      result[3] = orderedY[2];
    } else {
      return false;
    }

    return result;
  };

  Util.sign = function Util_sign(num) {
    return num < 0 ? -1 : 1;
  };

  Util.appendToArray = function Util_appendToArray(arr1, arr2) {
    Array.prototype.push.apply(arr1, arr2);
  };

  Util.prependToArray = function Util_prependToArray(arr1, arr2) {
    Array.prototype.unshift.apply(arr1, arr2);
  };

  Util.extendObj = function extendObj(obj1, obj2) {
    for (var key in obj2) {
      obj1[key] = obj2[key];
    }
  };

  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name) {
    while (dict && !dict.has(name)) {
      dict = dict.get('Parent');
    }

    if (!dict) {
      return null;
    }

    return dict.get(name);
  };

  Util.inherit = function Util_inherit(sub, base, prototype) {
    sub.prototype = Object.create(base.prototype);
    sub.prototype.constructor = sub;

    for (var prop in prototype) {
      sub.prototype[prop] = prototype[prop];
    }
  };

  Util.loadScript = function Util_loadScript(src, callback) {
    var script = document.createElement('script');
    var loaded = false;
    script.setAttribute('src', src);

    if (callback) {
      script.onload = function () {
        if (!loaded) {
          callback();
        }

        loaded = true;
      };
    }

    document.getElementsByTagName('head')[0].appendChild(script);
  };

  return Util;
}();
/**
 * PDF page viewport created based on scale, rotation and offset.
 * @class
 * @alias PDFJS.PageViewport
 */


var PageViewport = PDFJS.PageViewport = function PageViewportClosure() {
  /**
   * @constructor
   * @private
   * @param viewBox {Array} xMin, yMin, xMax and yMax coordinates.
   * @param scale {number} scale of the viewport.
   * @param rotation {number} rotations of the viewport in degrees.
   * @param offsetX {number} offset X
   * @param offsetY {number} offset Y
   * @param dontFlip {boolean} if true, axis Y will not be flipped.
   */
  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {
    this.viewBox = viewBox;
    this.scale = scale;
    this.rotation = rotation;
    this.offsetX = offsetX;
    this.offsetY = offsetY; // creating transform to convert pdf coordinate system to the normal
    // canvas like coordinates taking in account scale and rotation

    var centerX = (viewBox[2] + viewBox[0]) / 2;
    var centerY = (viewBox[3] + viewBox[1]) / 2;
    var rotateA, rotateB, rotateC, rotateD;
    rotation = rotation % 360;
    rotation = rotation < 0 ? rotation + 360 : rotation;

    switch (rotation) {
      case 180:
        rotateA = -1;
        rotateB = 0;
        rotateC = 0;
        rotateD = 1;
        break;

      case 90:
        rotateA = 0;
        rotateB = 1;
        rotateC = 1;
        rotateD = 0;
        break;

      case 270:
        rotateA = 0;
        rotateB = -1;
        rotateC = -1;
        rotateD = 0;
        break;
      //case 0:

      default:
        rotateA = 1;
        rotateB = 0;
        rotateC = 0;
        rotateD = -1;
        break;
    }

    if (dontFlip) {
      rotateC = -rotateC;
      rotateD = -rotateD;
    }

    var offsetCanvasX, offsetCanvasY;
    var width, height;

    if (rotateA === 0) {
      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;
      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;
      width = Math.abs(viewBox[3] - viewBox[1]) * scale;
      height = Math.abs(viewBox[2] - viewBox[0]) * scale;
    } else {
      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;
      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;
      width = Math.abs(viewBox[2] - viewBox[0]) * scale;
      height = Math.abs(viewBox[3] - viewBox[1]) * scale;
    } // creating transform for the following operations:
    // translate(-centerX, -centerY), rotate and flip vertically,
    // scale, and translate(offsetCanvasX, offsetCanvasY)


    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];
    this.width = width;
    this.height = height;
    this.fontScale = scale;
  }

  PageViewport.prototype =
  /** @lends PDFJS.PageViewport.prototype */
  {
    /**
     * Clones viewport with additional properties.
     * @param args {Object} (optional) If specified, may contain the 'scale' or
     * 'rotation' properties to override the corresponding properties in
     * the cloned viewport.
     * @returns {PDFJS.PageViewport} Cloned viewport.
     */
    clone: function PageViewPort_clone(args) {
      args = args || {};
      var scale = 'scale' in args ? args.scale : this.scale;
      var rotation = 'rotation' in args ? args.rotation : this.rotation;
      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);
    },

    /**
     * Converts PDF point to the viewport coordinates. For examples, useful for
     * converting PDF location into canvas pixel coordinates.
     * @param x {number} X coordinate.
     * @param y {number} Y coordinate.
     * @returns {Object} Object that contains 'x' and 'y' properties of the
     * point in the viewport coordinate space.
     * @see {@link convertToPdfPoint}
     * @see {@link convertToViewportRectangle}
     */
    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {
      return Util.applyTransform([x, y], this.transform);
    },

    /**
     * Converts PDF rectangle to the viewport coordinates.
     * @param rect {Array} xMin, yMin, xMax and yMax coordinates.
     * @returns {Array} Contains corresponding coordinates of the rectangle
     * in the viewport coordinate space.
     * @see {@link convertToViewportPoint}
     */
    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {
      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);
      var br = Util.applyTransform([rect[2], rect[3]], this.transform);
      return [tl[0], tl[1], br[0], br[1]];
    },

    /**
     * Converts viewport coordinates to the PDF location. For examples, useful
     * for converting canvas pixel location into PDF one.
     * @param x {number} X coordinate.
     * @param y {number} Y coordinate.
     * @returns {Object} Object that contains 'x' and 'y' properties of the
     * point in the PDF coordinate space.
     * @see {@link convertToViewportPoint}
     */
    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {
      return Util.applyInverseTransform([x, y], this.transform);
    }
  };
  return PageViewport;
}();

var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];

function stringToPDFString(str) {
  var i,
      n = str.length,
      strBuf = [];

  if (str[0] === '\xFE' && str[1] === '\xFF') {
    // UTF16BE BOM
    for (i = 2; i < n; i += 2) {
      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));
    }
  } else {
    for (i = 0; i < n; ++i) {
      var code = PDFStringTranslateTable[str.charCodeAt(i)];
      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));
    }
  }

  return strBuf.join('');
}

function stringToUTF8String(str) {
  return decodeURIComponent(escape(str));
}

function isEmptyObj(obj) {
  for (var key in obj) {
    return false;
  }

  return true;
}

function isBool(v) {
  return typeof v === 'boolean';
}

function isInt(v) {
  return typeof v === 'number' && (v | 0) === v;
}

function isNum(v) {
  return typeof v === 'number';
}

function isString(v) {
  return typeof v === 'string';
}

function isNull(v) {
  return v === null;
}

function isName(v) {
  return v instanceof Name;
}

function isCmd(v, cmd) {
  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);
}

function isDict(v, type) {
  if (!(v instanceof Dict)) {
    return false;
  }

  if (!type) {
    return true;
  }

  var dictType = v.get('Type');
  return isName(dictType) && dictType.name === type;
}

function isArray(v) {
  return v instanceof Array;
}

function isStream(v) {
  return typeof v === 'object' && v !== null && v.getBytes !== undefined;
}

function isArrayBuffer(v) {
  return typeof v === 'object' && v !== null && v.byteLength !== undefined;
}

function isRef(v) {
  return v instanceof Ref;
}
/**
 * Promise Capability object.
 *
 * @typedef {Object} PromiseCapability
 * @property {Promise} promise - A promise object.
 * @property {function} resolve - Fullfills the promise.
 * @property {function} reject - Rejects the promise.
 */

/**
 * Creates a promise capability object.
 * @alias PDFJS.createPromiseCapability
 *
 * @return {PromiseCapability} A capability object contains:
 * - a Promise, resolve and reject methods.
 */


function createPromiseCapability() {
  var capability = {};
  capability.promise = new Promise(function (resolve, reject) {
    capability.resolve = resolve;
    capability.reject = reject;
  });
  return capability;
}

PDFJS.createPromiseCapability = createPromiseCapability;
/**
 * Polyfill for Promises:
 * The following promise implementation tries to generally implement the
 * Promise/A+ spec. Some notable differences from other promise libaries are:
 * - There currently isn't a seperate deferred and promise object.
 * - Unhandled rejections eventually show an error if they aren't handled.
 *
 * Based off of the work in:
 * https://bugzilla.mozilla.org/show_bug.cgi?id=810490
 */

(function PromiseClosure() {
  if (globalScope.Promise) {
    // Promises existing in the DOM/Worker, checking presence of all/resolve
    if (typeof globalScope.Promise.all !== 'function') {
      globalScope.Promise.all = function (iterable) {
        var count = 0,
            results = [],
            resolve,
            reject;
        var promise = new globalScope.Promise(function (resolve_, reject_) {
          resolve = resolve_;
          reject = reject_;
        });
        iterable.forEach(function (p, i) {
          count++;
          p.then(function (result) {
            results[i] = result;
            count--;

            if (count === 0) {
              resolve(results);
            }
          }, reject);
        });

        if (count === 0) {
          resolve(results);
        }

        return promise;
      };
    }

    if (typeof globalScope.Promise.resolve !== 'function') {
      globalScope.Promise.resolve = function (value) {
        return new globalScope.Promise(function (resolve) {
          resolve(value);
        });
      };
    }

    if (typeof globalScope.Promise.reject !== 'function') {
      globalScope.Promise.reject = function (reason) {
        return new globalScope.Promise(function (resolve, reject) {
          reject(reason);
        });
      };
    }

    if (typeof globalScope.Promise.prototype.catch !== 'function') {
      globalScope.Promise.prototype.catch = function (onReject) {
        return globalScope.Promise.prototype.then(undefined, onReject);
      };
    }

    return;
  } //#if !MOZCENTRAL


  var STATUS_PENDING = 0;
  var STATUS_RESOLVED = 1;
  var STATUS_REJECTED = 2; // In an attempt to avoid silent exceptions, unhandled rejections are
  // tracked and if they aren't handled in a certain amount of time an
  // error is logged.

  var REJECTION_TIMEOUT = 500;
  var HandlerManager = {
    handlers: [],
    running: false,
    unhandledRejections: [],
    pendingRejectionCheck: false,
    scheduleHandlers: function scheduleHandlers(promise) {
      if (promise._status === STATUS_PENDING) {
        return;
      }

      this.handlers = this.handlers.concat(promise._handlers);
      promise._handlers = [];

      if (this.running) {
        return;
      }

      this.running = true;
      setTimeout(this.runHandlers.bind(this), 0);
    },
    runHandlers: function runHandlers() {
      var RUN_TIMEOUT = 1; // ms

      var timeoutAt = Date.now() + RUN_TIMEOUT;

      while (this.handlers.length > 0) {
        var handler = this.handlers.shift();
        var nextStatus = handler.thisPromise._status;
        var nextValue = handler.thisPromise._value;

        try {
          if (nextStatus === STATUS_RESOLVED) {
            if (typeof handler.onResolve === 'function') {
              nextValue = handler.onResolve(nextValue);
            }
          } else if (typeof handler.onReject === 'function') {
            nextValue = handler.onReject(nextValue);
            nextStatus = STATUS_RESOLVED;

            if (handler.thisPromise._unhandledRejection) {
              this.removeUnhandeledRejection(handler.thisPromise);
            }
          }
        } catch (ex) {
          nextStatus = STATUS_REJECTED;
          nextValue = ex;
        }

        handler.nextPromise._updateStatus(nextStatus, nextValue);

        if (Date.now() >= timeoutAt) {
          break;
        }
      }

      if (this.handlers.length > 0) {
        setTimeout(this.runHandlers.bind(this), 0);
        return;
      }

      this.running = false;
    },
    addUnhandledRejection: function addUnhandledRejection(promise) {
      this.unhandledRejections.push({
        promise: promise,
        time: Date.now()
      });
      this.scheduleRejectionCheck();
    },
    removeUnhandeledRejection: function removeUnhandeledRejection(promise) {
      promise._unhandledRejection = false;

      for (var i = 0; i < this.unhandledRejections.length; i++) {
        if (this.unhandledRejections[i].promise === promise) {
          this.unhandledRejections.splice(i);
          i--;
        }
      }
    },
    scheduleRejectionCheck: function scheduleRejectionCheck() {
      if (this.pendingRejectionCheck) {
        return;
      }

      this.pendingRejectionCheck = true;
      setTimeout(function rejectionCheck() {
        this.pendingRejectionCheck = false;
        var now = Date.now();

        for (var i = 0; i < this.unhandledRejections.length; i++) {
          if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {
            var unhandled = this.unhandledRejections[i].promise._value;
            var msg = 'Unhandled rejection: ' + unhandled;

            if (unhandled.stack) {
              msg += '\n' + unhandled.stack;
            }

            warn(msg);
            this.unhandledRejections.splice(i);
            i--;
          }
        }

        if (this.unhandledRejections.length) {
          this.scheduleRejectionCheck();
        }
      }.bind(this), REJECTION_TIMEOUT);
    }
  };

  function Promise(resolver) {
    this._status = STATUS_PENDING;
    this._handlers = [];

    try {
      resolver.call(this, this._resolve.bind(this), this._reject.bind(this));
    } catch (e) {
      this._reject(e);
    }
  }
  /**
   * Builds a promise that is resolved when all the passed in promises are
   * resolved.
   * @param {array} array of data and/or promises to wait for.
   * @return {Promise} New dependant promise.
   */


  Promise.all = function Promise_all(promises) {
    var resolveAll, rejectAll;
    var deferred = new Promise(function (resolve, reject) {
      resolveAll = resolve;
      rejectAll = reject;
    });
    var unresolved = promises.length;
    var results = [];

    if (unresolved === 0) {
      resolveAll(results);
      return deferred;
    }

    function reject(reason) {
      if (deferred._status === STATUS_REJECTED) {
        return;
      }

      results = [];
      rejectAll(reason);
    }

    for (var i = 0, ii = promises.length; i < ii; ++i) {
      var promise = promises[i];

      var resolve = function (i) {
        return function (value) {
          if (deferred._status === STATUS_REJECTED) {
            return;
          }

          results[i] = value;
          unresolved--;

          if (unresolved === 0) {
            resolveAll(results);
          }
        };
      }(i);

      if (Promise.isPromise(promise)) {
        promise.then(resolve, reject);
      } else {
        resolve(promise);
      }
    }

    return deferred;
  };
  /**
   * Checks if the value is likely a promise (has a 'then' function).
   * @return {boolean} true if value is thenable
   */


  Promise.isPromise = function Promise_isPromise(value) {
    return value && typeof value.then === 'function';
  };
  /**
   * Creates resolved promise
   * @param value resolve value
   * @returns {Promise}
   */


  Promise.resolve = function Promise_resolve(value) {
    return new Promise(function (resolve) {
      resolve(value);
    });
  };
  /**
   * Creates rejected promise
   * @param reason rejection value
   * @returns {Promise}
   */


  Promise.reject = function Promise_reject(reason) {
    return new Promise(function (resolve, reject) {
      reject(reason);
    });
  };

  Promise.prototype = {
    _status: null,
    _value: null,
    _handlers: null,
    _unhandledRejection: null,
    _updateStatus: function Promise__updateStatus(status, value) {
      if (this._status === STATUS_RESOLVED || this._status === STATUS_REJECTED) {
        return;
      }

      if (status === STATUS_RESOLVED && Promise.isPromise(value)) {
        value.then(this._updateStatus.bind(this, STATUS_RESOLVED), this._updateStatus.bind(this, STATUS_REJECTED));
        return;
      }

      this._status = status;
      this._value = value;

      if (status === STATUS_REJECTED && this._handlers.length === 0) {
        this._unhandledRejection = true;
        HandlerManager.addUnhandledRejection(this);
      }

      HandlerManager.scheduleHandlers(this);
    },
    _resolve: function Promise_resolve(value) {
      this._updateStatus(STATUS_RESOLVED, value);
    },
    _reject: function Promise_reject(reason) {
      this._updateStatus(STATUS_REJECTED, reason);
    },
    then: function Promise_then(onResolve, onReject) {
      var nextPromise = new Promise(function (resolve, reject) {
        this.resolve = resolve;
        this.reject = reject;
      });

      this._handlers.push({
        thisPromise: this,
        onResolve: onResolve,
        onReject: onReject,
        nextPromise: nextPromise
      });

      HandlerManager.scheduleHandlers(this);
      return nextPromise;
    },
    catch: function Promise_catch(onReject) {
      return this.then(undefined, onReject);
    }
  };
  globalScope.Promise = Promise; //#else
  //throw new Error('DOM Promise is not present');
  //#endif
})();

var StatTimer = function StatTimerClosure() {
  function rpad(str, pad, length) {
    while (str.length < length) {
      str += pad;
    }

    return str;
  }

  function StatTimer() {
    this.started = {};
    this.times = [];
    this.enabled = true;
  }

  StatTimer.prototype = {
    time: function StatTimer_time(name) {
      if (!this.enabled) {
        return;
      }

      if (name in this.started) {
        warn('Timer is already running for ' + name);
      }

      this.started[name] = Date.now();
    },
    timeEnd: function StatTimer_timeEnd(name) {
      if (!this.enabled) {
        return;
      }

      if (!(name in this.started)) {
        warn('Timer has not been started for ' + name);
      }

      this.times.push({
        'name': name,
        'start': this.started[name],
        'end': Date.now()
      }); // Remove timer from started so it can be called again.

      delete this.started[name];
    },
    toString: function StatTimer_toString() {
      var i, ii;
      var times = this.times;
      var out = ''; // Find the longest name for padding purposes.

      var longest = 0;

      for (i = 0, ii = times.length; i < ii; ++i) {
        var name = times[i]['name'];

        if (name.length > longest) {
          longest = name.length;
        }
      }

      for (i = 0, ii = times.length; i < ii; ++i) {
        var span = times[i];
        var duration = span.end - span.start;
        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\n';
      }

      return out;
    }
  };
  return StatTimer;
}();

PDFJS.createBlob = function createBlob(data, contentType) {
  if (typeof Blob !== 'undefined') {
    return new Blob([data], {
      type: contentType
    });
  } // Blob builder is deprecated in FF14 and removed in FF18.


  var bb = new MozBlobBuilder();
  bb.append(data);
  return bb.getBlob(contentType);
};

PDFJS.createObjectURL = function createObjectURLClosure() {
  // Blob/createObjectURL is not available, falling back to data schema.
  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
  return function createObjectURL(data, contentType) {
    if (!PDFJS.disableCreateObjectURL && typeof URL !== 'undefined' && URL.createObjectURL) {
      var blob = PDFJS.createBlob(data, contentType);
      return URL.createObjectURL(blob);
    }

    var buffer = 'data:' + contentType + ';base64,';

    for (var i = 0, ii = data.length; i < ii; i += 3) {
      var b1 = data[i] & 0xFF;
      var b2 = data[i + 1] & 0xFF;
      var b3 = data[i + 2] & 0xFF;
      var d1 = b1 >> 2,
          d2 = (b1 & 3) << 4 | b2 >> 4;
      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;
      var d4 = i + 2 < ii ? b3 & 0x3F : 64;
      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];
    }

    return buffer;
  };
}();

function MessageHandler(name, comObj) {
  this.name = name;
  this.comObj = comObj;
  this.callbackIndex = 1;
  this.postMessageTransfers = true;
  var callbacksCapabilities = this.callbacksCapabilities = {};
  var ah = this.actionHandler = {};
  ah['console_log'] = [function ahConsoleLog(data) {
    console.log.apply(console, data);
  }];
  ah['console_error'] = [function ahConsoleError(data) {
    console.error.apply(console, data);
  }];
  ah['_unsupported_feature'] = [function ah_unsupportedFeature(data) {
    UnsupportedManager.notify(data);
  }];

  comObj.onmessage = function messageHandlerComObjOnMessage(event) {
    var data = event.data;

    if (data.isReply) {
      var callbackId = data.callbackId;

      if (data.callbackId in callbacksCapabilities) {
        var callback = callbacksCapabilities[callbackId];
        delete callbacksCapabilities[callbackId];

        if ('error' in data) {
          callback.reject(data.error);
        } else {
          callback.resolve(data.data);
        }
      } else {
        error('Cannot resolve callback ' + callbackId);
      }
    } else if (data.action in ah) {
      var action = ah[data.action];

      if (data.callbackId) {
        Promise.resolve().then(function () {
          return action[0].call(action[1], data.data);
        }).then(function (result) {
          comObj.postMessage({
            isReply: true,
            callbackId: data.callbackId,
            data: result
          });
        }, function (reason) {
          comObj.postMessage({
            isReply: true,
            callbackId: data.callbackId,
            error: reason
          });
        });
      } else {
        action[0].call(action[1], data.data);
      }
    } else {
      error('Unknown action from worker: ' + data.action);
    }
  };
}

MessageHandler.prototype = {
  on: function messageHandlerOn(actionName, handler, scope) {
    var ah = this.actionHandler;

    if (ah[actionName]) {
      error('There is already an actionName called "' + actionName + '"');
    }

    ah[actionName] = [handler, scope];
  },

  /**
   * Sends a message to the comObj to invoke the action with the supplied data.
   * @param {String} actionName Action to call.
   * @param {JSON} data JSON data to send.
   * @param {Array} [transfers] Optional list of transfers/ArrayBuffers
   */
  send: function messageHandlerSend(actionName, data, transfers) {
    var message = {
      action: actionName,
      data: data
    };
    this.postMessage(message, transfers);
  },

  /**
   * Sends a message to the comObj to invoke the action with the supplied data.
   * Expects that other side will callback with the response.
   * @param {String} actionName Action to call.
   * @param {JSON} data JSON data to send.
   * @param {Array} [transfers] Optional list of transfers/ArrayBuffers.
   * @returns {Promise} Promise to be resolved with response data.
   */
  sendWithPromise: function messageHandlerSendWithPromise(actionName, data, transfers) {
    var callbackId = this.callbackIndex++;
    var message = {
      action: actionName,
      data: data,
      callbackId: callbackId
    };
    var capability = createPromiseCapability();
    this.callbacksCapabilities[callbackId] = capability;

    try {
      this.postMessage(message, transfers);
    } catch (e) {
      capability.reject(e);
    }

    return capability.promise;
  },

  /**
   * Sends raw message to the comObj.
   * @private
   * @param message {Object} Raw message.
   * @param transfers List of transfers/ArrayBuffers, or undefined.
   */
  postMessage: function postMessage(message, transfers) {
    if (transfers && this.postMessageTransfers) {
      this.comObj.postMessage(message, transfers);
    } else {
      this.comObj.postMessage(message);
    }
  }
};

function loadJpegStream(id, imageUrl, objs) {
  var img = new Image();

  img.onload = function loadJpegStream_onloadClosure() {
    objs.resolve(id, img);
  };

  img.onerror = function loadJpegStream_onerrorClosure() {
    objs.resolve(id, null);
    warn('Error during JPEG image loading');
  };

  img.src = imageUrl;
}

module.exports = JpxImage;

/***/ }),
/* 980 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

/* eslint-disable */

/*! dicom-parser - v1.3.0 - 2016-03-13 | (c) 2014 Chris Hafey | https://github.com/chafey/dicomParser */
(function (root, factory) {
  // node.js
  if ( true && module.exports) {
    module.exports = factory();
  } else if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(void 0, function () {
  /**
   * Parses a DICOM P10 byte array and returns a DataSet object with the parsed elements.  If the options
   * argument is supplied and it contains the untilTag property, parsing will stop once that
   * tag is encoutered.  This can be used to parse partial byte streams.
   *
   * @param byteArray the byte array
   * @param options object to control parsing behavior (optional)
   * @returns {DataSet}
   * @throws error if an error occurs while parsing.  The exception object will contain a property dataSet with the
   *         elements successfully parsed before the error.
   */
  var dicomParser = function (dicomParser) {
    if (dicomParser === undefined) {
      dicomParser = {};
    }

    dicomParser.parseDicom = function (byteArray, options) {
      if (byteArray === undefined) {
        throw "dicomParser.parseDicom: missing required parameter 'byteArray'";
      }

      function readTransferSyntax(metaHeaderDataSet) {
        if (metaHeaderDataSet.elements.x00020010 === undefined) {
          console.log('dicomParser.parseDicom: missing required meta header attribute 0002,0010');
          return '1.2.840.10008.1.2';
        }

        var transferSyntaxElement = metaHeaderDataSet.elements.x00020010;
        return dicomParser.readFixedString(byteArray, transferSyntaxElement.dataOffset, transferSyntaxElement.length);
      }

      function isExplicit(transferSyntax) {
        if (transferSyntax === '1.2.840.10008.1.2') {
          // implicit little endian
          return false;
        } // all other transfer syntaxes should be explicit


        return true;
      }

      function getDataSetByteStream(transferSyntax, position) {
        if (transferSyntax === '1.2.840.10008.1.2.1.99') {
          // https://github.com/nodeca/pako
          if (typeof pako === 'undefined') {
            throw 'dicomParser.parseDicom: deflated transfer syntax encountered but pako not loaded';
          }

          var deflated = byteArray.slice(position);
          var inflated = pako.inflateRaw(deflated); // create a single byte array with the full header bytes and the inflated bytes

          var fullByteArray = new Uint8Array(inflated.length + position);
          fullByteArray.set(byteArray.slice(0, position), 0);
          fullByteArray.set(inflated, position);
          return new dicomParser.ByteStream(dicomParser.littleEndianByteArrayParser, fullByteArray, position);
        }

        if (transferSyntax === '1.2.840.10008.1.2.2') {
          // explicit big endian
          return new dicomParser.ByteStream(dicomParser.bigEndianByteArrayParser, byteArray, position);
        } else {
          // all other transfer syntaxes are little endian; only the pixel encoding differs
          // make a new stream so the metaheader warnings don't come along for the ride
          return new dicomParser.ByteStream(dicomParser.littleEndianByteArrayParser, byteArray, position);
        }
      }

      function mergeDataSets(metaHeaderDataSet, instanceDataSet) {
        for (var propertyName in metaHeaderDataSet.elements) {
          if (metaHeaderDataSet.elements.hasOwnProperty(propertyName)) {
            instanceDataSet.elements[propertyName] = metaHeaderDataSet.elements[propertyName];
          }
        }

        if (metaHeaderDataSet.warnings !== undefined) {
          instanceDataSet.warnings = metaHeaderDataSet.warnings.concat(instanceDataSet.warnings);
        }

        return instanceDataSet;
      }

      function readDataSet(metaHeaderDataSet) {
        var transferSyntax = readTransferSyntax(metaHeaderDataSet);
        var explicit = isExplicit(transferSyntax);
        var dataSetByteStream = getDataSetByteStream(transferSyntax, metaHeaderDataSet.position);
        var elements = {};
        var dataSet = new dicomParser.DataSet(dataSetByteStream.byteArrayParser, dataSetByteStream.byteArray, elements);
        dataSet.warnings = dataSetByteStream.warnings;
        dataSet.explicit = explicit;

        try {
          if (explicit) {
            dicomParser.parseDicomDataSetExplicit(dataSet, dataSetByteStream, dataSetByteStream.byteArray.length, options);
          } else {
            dicomParser.parseDicomDataSetImplicit(dataSet, dataSetByteStream, dataSetByteStream.byteArray.length, options);
          }
        } catch (e) {
          var ex = {
            exception: e,
            dataSet: dataSet
          };
          throw ex;
        }

        return dataSet;
      } // main function here


      function parseTheByteStream() {
        var metaHeaderDataSet = dicomParser.readPart10Header(byteArray, options);
        var dataSet = readDataSet(metaHeaderDataSet);
        return mergeDataSets(metaHeaderDataSet, dataSet);
      } // This is where we actually start parsing


      return parseTheByteStream();
    };

    return dicomParser;
  }(dicomParser);

  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * converts an explicit dataSet to a javascript object
     * @param dataSet
     * @param options
     */


    dicomParser.explicitDataSetToJS = function (dataSet, options) {
      if (dataSet === undefined) {
        throw 'dicomParser.explicitDataSetToJS: missing required parameter dataSet';
      }

      options = options || {
        omitPrivateAttibutes: true,
        // true if private elements should be omitted
        maxElementLength: 128 // maximum element length to try and convert to string format

      };
      var result = {};

      for (var tag in dataSet.elements) {
        var element = dataSet.elements[tag]; // skip this element if it a private element and our options specify that we should

        if (options.omitPrivateAttibutes === true && dicomParser.isPrivateTag(tag)) {
          continue;
        }

        if (element.items) {
          // handle sequences
          var sequenceItems = [];

          for (var i = 0; i < element.items.length; i++) {
            sequenceItems.push(dicomParser.explicitDataSetToJS(element.items[i].dataSet, options));
          }

          result[tag] = sequenceItems;
        } else {
          var asString;
          asString = undefined;

          if (element.length < options.maxElementLength) {
            asString = dicomParser.explicitElementToString(dataSet, element);
          }

          if (asString !== undefined) {
            result[tag] = asString;
          } else {
            result[tag] = {
              dataOffset: element.dataOffset,
              length: element.length
            };
          }
        }
      }

      return result;
    };

    return dicomParser;
  }(dicomParser);

  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * Converts an explicit VR element to a string or undefined if it is not possible to convert.
     * Throws an error if an implicit element is supplied
     * @param dataSet
     * @param element
     * @returns {*}
     */


    dicomParser.explicitElementToString = function (dataSet, element) {
      if (dataSet === undefined || element === undefined) {
        throw 'dicomParser.explicitElementToString: missing required parameters';
      }

      if (element.vr === undefined) {
        throw 'dicomParser.explicitElementToString: cannot convert implicit element to string';
      }

      var vr = element.vr;
      var tag = element.tag;
      var textResult;

      function multiElementToString(numItems, func) {
        var result = '';

        for (var i = 0; i < numItems; i++) {
          if (i !== 0) {
            result += '/';
          }

          result += func.call(dataSet, tag, i).toString();
        }

        return result;
      }

      if (dicomParser.isStringVr(vr) === true) {
        textResult = dataSet.string(tag);
      } else if (vr == 'AT') {
        var num = dataSet.uint32(tag);

        if (num === undefined) {
          return undefined;
        }

        if (num < 0) {
          num = 0xffffffff + num + 1;
        }

        return 'x' + num.toString(16).toUpperCase();
      } else if (vr == 'US') {
        textResult = multiElementToString(element.length / 2, dataSet.uint16);
      } else if (vr === 'SS') {
        textResult = multiElementToString(element.length / 2, dataSet.int16);
      } else if (vr == 'UL') {
        textResult = multiElementToString(element.length / 4, dataSet.uint32);
      } else if (vr === 'SL') {
        textResult = multiElementToString(element.length / 4, dataSet.int32);
      } else if (vr == 'FD') {
        textResult = multiElementToString(element.length / 8, dataSet.double);
      } else if (vr == 'FL') {
        textResult = multiElementToString(element.length / 4, dataSet.float);
      }

      return textResult;
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Utility functions for dealing with DICOM
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    } // algorithm based on http://stackoverflow.com/questions/1433030/validate-number-of-days-in-a-given-month


    function daysInMonth(m, y) {
      // m is 0 indexed: 0-11
      switch (m) {
        case 2:
          return y % 4 == 0 && y % 100 || y % 400 == 0 ? 29 : 28;

        case 9:
        case 4:
        case 6:
        case 11:
          return 30;

        default:
          return 31;
      }
    }

    function isValidDate(d, m, y) {
      // make year is a number
      if (isNaN(y)) {
        return false;
      }

      return m > 0 && m <= 12 && d > 0 && d <= daysInMonth(m, y);
    }
    /**
     * Parses a DA formatted string into a Javascript object
     * @param {string} date a string in the DA VR format
     * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid
     * @returns {*} Javascript object with properties year, month and day or undefined if not present or not 8 bytes long
     */


    dicomParser.parseDA = function (date, validate) {
      if (date && date.length === 8) {
        var yyyy = parseInt(date.substring(0, 4), 10);
        var mm = parseInt(date.substring(4, 6), 10);
        var dd = parseInt(date.substring(6, 8), 10);

        if (validate) {
          if (isValidDate(dd, mm, yyyy) !== true) {
            throw "invalid DA '" + date + "'";
          }
        }

        return {
          year: yyyy,
          month: mm,
          day: dd
        };
      }

      if (validate) {
        throw "invalid DA '" + date + "'";
      }

      return undefined;
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Utility functions for dealing with DICOM
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * Parses a TM formatted string into a javascript object with properties for hours, minutes, seconds and fractionalSeconds
     * @param {string} time - a string in the TM VR format
     * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid
     * @returns {*} javascript object with properties for hours, minutes, seconds and fractionalSeconds or undefined if no element or data.  Missing fields are set to undefined
     */


    dicomParser.parseTM = function (time, validate) {
      if (time.length >= 2) {
        // must at least have HH
        // 0123456789
        // HHMMSS.FFFFFF
        var hh = parseInt(time.substring(0, 2), 10);
        var mm = time.length >= 4 ? parseInt(time.substring(2, 4), 10) : undefined;
        var ss = time.length >= 6 ? parseInt(time.substring(4, 6), 10) : undefined;
        var ffffff = time.length >= 8 ? parseInt(time.substring(7, 13), 10) : undefined;

        if (validate) {
          if (isNaN(hh) || mm !== undefined && isNaN(mm) || ss !== undefined && isNaN(ss) || ffffff !== undefined && isNaN(ffffff) || hh < 0 || hh > 23 || mm && (mm < 0 || mm > 59) || ss && (ss < 0 || ss > 59) || ffffff && (ffffff < 0 || ffffff > 999999)) {
            throw "invalid TM '" + time + "'";
          }
        }

        return {
          hours: hh,
          minutes: mm,
          seconds: ss,
          fractionalSeconds: ffffff
        };
      }

      if (validate) {
        throw "invalid TM '" + time + "'";
      }

      return undefined;
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Utility functions for dealing with DICOM
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    var stringVrs = {
      AE: true,
      AS: true,
      AT: false,
      CS: true,
      DA: true,
      DS: true,
      DT: true,
      FL: false,
      FD: false,
      IS: true,
      LO: true,
      LT: true,
      OB: false,
      OD: false,
      OF: false,
      OW: false,
      PN: true,
      SH: true,
      SL: false,
      SQ: false,
      SS: false,
      ST: true,
      TM: true,
      UI: true,
      UL: false,
      UN: undefined,
      // dunno
      UR: true,
      US: false,
      UT: true
    };
    /**
     * Tests to see if vr is a string or not.
     * @param vr
     * @returns true if string, false it not string, undefined if unknown vr or UN type
     */

    dicomParser.isStringVr = function (vr) {
      return stringVrs[vr];
    };
    /**
     * Tests to see if a given tag in the format xggggeeee is a private tag or not
     * @param tag
     * @returns {boolean}
     */


    dicomParser.isPrivateTag = function (tag) {
      var lastGroupDigit = parseInt(tag[4]);
      var groupIsOdd = lastGroupDigit % 2 === 1;
      return groupIsOdd;
    };
    /**
     * Parses a PN formatted string into a javascript object with properties for givenName, familyName, middleName, prefix and suffix
     * @param personName a string in the PN VR format
     * @param index
     * @returns {*} javascript object with properties for givenName, familyName, middleName, prefix and suffix or undefined if no element or data
     */


    dicomParser.parsePN = function (personName) {
      if (personName === undefined) {
        return undefined;
      }

      var stringValues = personName.split('^');
      return {
        familyName: stringValues[0],
        givenName: stringValues[1],
        middleName: stringValues[2],
        prefix: stringValues[3],
        suffix: stringValues[4]
      };
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Functionality for extracting encapsulated pixel data
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    function getPixelDataFromFragments(byteStream, fragments, bufferSize) {
      // if there is only one fragment, return a view on this array to avoid copying
      if (fragments.length === 1) {
        return new Uint8Array(byteStream.byteArray.buffer, fragments[0].dataOffset, fragments[0].length);
      } // more than one fragment, combine all of the fragments into one buffer


      var pixelData = new Uint8Array(bufferSize);
      var pixelDataIndex = 0;

      for (var i = 0; i < fragments.length; i++) {
        var fragmentOffset = fragments[i].dataOffset;

        for (var j = 0; j < fragments[i].length; j++) {
          pixelData[pixelDataIndex++] = byteStream.byteArray[fragmentOffset++];
        }
      }

      return pixelData;
    }

    function readFragmentsUntil(byteStream, endOfFrame) {
      // Read fragments until we reach endOfFrame
      var fragments = [];
      var bufferSize = 0;

      while (byteStream.position < endOfFrame && byteStream.position < byteStream.byteArray.length) {
        var fragment = dicomParser.readSequenceItem(byteStream); // NOTE: we only encounter this for the sequence delimiter tag when extracting the last frame

        if (fragment.tag === 'xfffee0dd') {
          break;
        }

        fragments.push(fragment);
        byteStream.seek(fragment.length);
        bufferSize += fragment.length;
      } // Convert the fragments into a single pixelData buffer


      var pixelData = getPixelDataFromFragments(byteStream, fragments, bufferSize);
      return pixelData;
    }

    function readEncapsulatedPixelDataWithBasicOffsetTable(pixelDataElement, byteStream, frame) {
      //  validate that we have an offset for this frame
      var numFrames = pixelDataElement.basicOffsetTable.length;

      if (frame > numFrames) {
        throw 'dicomParser.readEncapsulatedPixelData: parameter frame exceeds number of frames in basic offset table';
      } // move to the start of this frame


      var frameOffset = pixelDataElement.basicOffsetTable[frame];
      var firstFragment = byteStream.position;
      byteStream.seek(frameOffset); // Find the end of this frame

      var endOfFrameOffset = pixelDataElement.basicOffsetTable[frame + 1];

      if (endOfFrameOffset === undefined) {
        // special case for last frame
        endOfFrameOffset = byteStream.position + pixelDataElement.length;
      } else {
        endOfFrameOffset += firstFragment;
      } // read this frame


      var pixelData = readFragmentsUntil(byteStream, endOfFrameOffset);
      return pixelData;
    }

    function readEncapsulatedDataNoBasicOffsetTable(pixelDataElement, byteStream, frame) {
      // if the basic offset table is empty, this is a single frame so make sure the requested
      // frame is 0
      if (frame !== 0) {
        throw 'dicomParser.readEncapsulatedPixelData: non zero frame specified for single frame encapsulated pixel data';
      } // read this frame


      var endOfFrame = byteStream.position + pixelDataElement.length;
      var pixelData = readFragmentsUntil(byteStream, endOfFrame);
      return pixelData;
    }
    /**
     * Returns the pixel data for the specified frame in an encapsulated pixel data element
     *
     * @param dataSet - the dataSet containing the encapsulated pixel data
     * @param pixelDataElement - the pixel data element (x7fe00010) to extract the frame from
     * @param frame - the zero based frame index
     * @returns Uint8Array with the encapsulated pixel data
     */


    dicomParser.readEncapsulatedPixelData = function (dataSet, pixelDataElement, frame) {
      if (dataSet === undefined) {
        throw "dicomParser.readEncapsulatedPixelData: missing required parameter 'dataSet'";
      }

      if (pixelDataElement === undefined) {
        throw "dicomParser.readEncapsulatedPixelData: missing required parameter 'element'";
      }

      if (frame === undefined) {
        throw "dicomParser.readEncapsulatedPixelData: missing required parameter 'frame'";
      }

      if (pixelDataElement.tag !== 'x7fe00010') {
        throw "dicomParser.readEncapsulatedPixelData: parameter 'element' refers to non pixel data tag (expected tag = x7fe00010'";
      }

      if (pixelDataElement.encapsulatedPixelData !== true) {
        throw "dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data";
      }

      if (pixelDataElement.hadUndefinedLength !== true) {
        throw "dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data";
      }

      if (pixelDataElement.basicOffsetTable === undefined) {
        throw "dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data";
      }

      if (pixelDataElement.fragments === undefined) {
        throw "dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data";
      }

      if (frame < 0) {
        throw "dicomParser.readEncapsulatedPixelData: parameter 'frame' must be >= 0";
      } // seek past the basic offset table (no need to parse it again since we already have)


      var byteStream = new dicomParser.ByteStream(dataSet.byteArrayParser, dataSet.byteArray, pixelDataElement.dataOffset);
      var basicOffsetTable = dicomParser.readSequenceItem(byteStream);

      if (basicOffsetTable.tag !== 'xfffee000') {
        throw 'dicomParser.readEncapsulatedPixelData: missing basic offset table xfffee000';
      }

      byteStream.seek(basicOffsetTable.length); // If the basic offset table is empty (no entries), it is a single frame.  If it is not empty,
      // it has at least one frame so use the basic offset table to find the bytes

      if (pixelDataElement.basicOffsetTable.length !== 0) {
        return readEncapsulatedPixelDataWithBasicOffsetTable(pixelDataElement, byteStream, frame);
      } else {
        return readEncapsulatedDataNoBasicOffsetTable(pixelDataElement, byteStream, frame);
      }
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for parsing different types from a big-endian byte array
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    dicomParser.bigEndianByteArrayParser = {
      /**
       *
       * Parses an unsigned int 16 from a big-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed unsigned int 16
       * @throws error if buffer overread would occur
       * @access private
       */
      readUint16: function readUint16(byteArray, position) {
        if (position < 0) {
          throw 'bigEndianByteArrayParser.readUint16: position cannot be less than 0';
        }

        if (position + 2 > byteArray.length) {
          throw 'bigEndianByteArrayParser.readUint16: attempt to read past end of buffer';
        }

        return (byteArray[position] << 8) + byteArray[position + 1];
      },

      /**
       *
       * Parses a signed int 16 from a big-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed signed int 16
       * @throws error if buffer overread would occur
       * @access private
       */
      readInt16: function readInt16(byteArray, position) {
        if (position < 0) {
          throw 'bigEndianByteArrayParser.readInt16: position cannot be less than 0';
        }

        if (position + 2 > byteArray.length) {
          throw 'bigEndianByteArrayParser.readInt16: attempt to read past end of buffer';
        }

        var int16 = (byteArray[position] << 8) + byteArray[position + 1]; // fix sign

        if (int16 & 0x8000) {
          int16 = int16 - 0xffff - 1;
        }

        return int16;
      },

      /**
       * Parses an unsigned int 32 from a big-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed unsigned int 32
       * @throws error if buffer overread would occur
       * @access private
       */
      readUint32: function readUint32(byteArray, position) {
        if (position < 0) {
          throw 'bigEndianByteArrayParser.readUint32: position cannot be less than 0';
        }

        if (position + 4 > byteArray.length) {
          throw 'bigEndianByteArrayParser.readUint32: attempt to read past end of buffer';
        }

        var uint32 = 256 * (256 * (256 * byteArray[position] + byteArray[position + 1]) + byteArray[position + 2]) + byteArray[position + 3];
        return uint32;
      },

      /**
       * Parses a signed int 32 from a big-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed signed int 32
       * @throws error if buffer overread would occur
       * @access private
       */
      readInt32: function readInt32(byteArray, position) {
        if (position < 0) {
          throw 'bigEndianByteArrayParser.readInt32: position cannot be less than 0';
        }

        if (position + 4 > byteArray.length) {
          throw 'bigEndianByteArrayParser.readInt32: attempt to read past end of buffer';
        }

        var int32 = (byteArray[position] << 24) + (byteArray[position + 1] << 16) + (byteArray[position + 2] << 8) + byteArray[position + 3];
        return int32;
      },

      /**
       * Parses 32-bit float from a big-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed 32-bit float
       * @throws error if buffer overread would occur
       * @access private
       */
      readFloat: function readFloat(byteArray, position) {
        if (position < 0) {
          throw 'bigEndianByteArrayParser.readFloat: position cannot be less than 0';
        }

        if (position + 4 > byteArray.length) {
          throw 'bigEndianByteArrayParser.readFloat: attempt to read past end of buffer';
        } // I am sure there is a better way than this but this should be safe


        var byteArrayForParsingFloat = new Uint8Array(4);
        byteArrayForParsingFloat[3] = byteArray[position];
        byteArrayForParsingFloat[2] = byteArray[position + 1];
        byteArrayForParsingFloat[1] = byteArray[position + 2];
        byteArrayForParsingFloat[0] = byteArray[position + 3];
        var floatArray = new Float32Array(byteArrayForParsingFloat.buffer);
        return floatArray[0];
      },

      /**
       * Parses 64-bit float from a big-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed 64-bit float
       * @throws error if buffer overread would occur
       * @access private
       */
      readDouble: function readDouble(byteArray, position) {
        if (position < 0) {
          throw 'bigEndianByteArrayParser.readDouble: position cannot be less than 0';
        }

        if (position + 8 > byteArray.length) {
          throw 'bigEndianByteArrayParser.readDouble: attempt to read past end of buffer';
        } // I am sure there is a better way than this but this should be safe


        var byteArrayForParsingFloat = new Uint8Array(8);
        byteArrayForParsingFloat[7] = byteArray[position];
        byteArrayForParsingFloat[6] = byteArray[position + 1];
        byteArrayForParsingFloat[5] = byteArray[position + 2];
        byteArrayForParsingFloat[4] = byteArray[position + 3];
        byteArrayForParsingFloat[3] = byteArray[position + 4];
        byteArrayForParsingFloat[2] = byteArray[position + 5];
        byteArrayForParsingFloat[1] = byteArray[position + 6];
        byteArrayForParsingFloat[0] = byteArray[position + 7];
        var floatArray = new Float64Array(byteArrayForParsingFloat.buffer);
        return floatArray[0];
      }
    };
    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions common to parsing byte arrays of any type
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * Reads a string of 8-bit characters from an array of bytes and advances
     * the position by length bytes.  A null terminator will end the string
     * but will not effect advancement of the position.  Trailing and leading
     * spaces are preserved (not trimmed)
     * @param byteArray the byteArray to read from
     * @param position the position in the byte array to read from
     * @param length the maximum number of bytes to parse
     * @returns {string} the parsed string
     * @throws error if buffer overread would occur
     * @access private
     */


    dicomParser.readFixedString = function (byteArray, position, length) {
      if (length < 0) {
        throw 'readFixedString - length cannot be less than 0';
      }

      if (position + length > byteArray.length) {
        throw 'dicomParser.readFixedString: attempt to read past end of buffer';
      }

      var result = '';

      for (var i = 0; i < length; i++) {
        var byte = byteArray[position + i];

        if (byte === 0) {
          position += length;
          return result;
        }

        result += String.fromCharCode(byte);
      }

      return result;
    };

    return dicomParser;
  }(dicomParser);
  /**
   *
   * Internal helper class to assist with parsing. Supports reading from a byte
   * stream contained in a Uint8Array.  Example usage:
   *
   *  var byteArray = new Uint8Array(32);
   *  var byteStream = new dicomParser.ByteStream(dicomParser.littleEndianByteArrayParser, byteArray);
   *
   * */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * Constructor for ByteStream objects.
     * @param byteArrayParser a parser for parsing the byte array
     * @param byteArray a Uint8Array containing the byte stream
     * @param position (optional) the position to start reading from.  0 if not specified
     * @constructor
     * @throws will throw an error if the byteArrayParser parameter is not present
     * @throws will throw an error if the byteArray parameter is not present or invalid
     * @throws will throw an error if the position parameter is not inside the byte array
     */


    dicomParser.ByteStream = function (byteArrayParser, byteArray, position) {
      if (byteArrayParser === undefined) {
        throw "dicomParser.ByteStream: missing required parameter 'byteArrayParser'";
      }

      if (byteArray === undefined) {
        throw "dicomParser.ByteStream: missing required parameter 'byteArray'";
      }

      if (byteArray instanceof Uint8Array === false && byteArray instanceof Buffer === false) {
        throw 'dicomParser.ByteStream: parameter byteArray is not of type Uint8Array or Buffer';
      }

      if (position < 0) {
        throw "dicomParser.ByteStream: parameter 'position' cannot be less than 0";
      }

      if (position >= byteArray.length) {
        throw "dicomParser.ByteStream: parameter 'position' cannot be greater than or equal to 'byteArray' length";
      }

      this.byteArrayParser = byteArrayParser;
      this.byteArray = byteArray;
      this.position = position ? position : 0;
      this.warnings = []; // array of string warnings encountered while parsing
    };
    /**
     * Safely seeks through the byte stream.  Will throw an exception if an attempt
     * is made to seek outside of the byte array.
     * @param offset the number of bytes to add to the position
     * @throws error if seek would cause position to be outside of the byteArray
     */


    dicomParser.ByteStream.prototype.seek = function (offset) {
      if (this.position + offset < 0) {
        throw 'cannot seek to position < 0';
      }

      this.position += offset;
    };
    /**
     * Returns a new ByteStream object from the current position and of the requested number of bytes
     * @param numBytes the length of the byte array for the ByteStream to contain
     * @returns {dicomParser.ByteStream}
     * @throws error if buffer overread would occur
     */


    dicomParser.ByteStream.prototype.readByteStream = function (numBytes) {
      if (this.position + numBytes > this.byteArray.length) {
        throw 'readByteStream - buffer overread';
      }

      var byteArrayView = new Uint8Array(this.byteArray.buffer, this.position, numBytes);
      this.position += numBytes;
      return new dicomParser.ByteStream(this.byteArrayParser, byteArrayView);
    };
    /**
     *
     * Parses an unsigned int 16 from a byte array and advances
     * the position by 2 bytes
     *
     * @returns {*} the parsed unsigned int 16
     * @throws error if buffer overread would occur
     */


    dicomParser.ByteStream.prototype.readUint16 = function () {
      var result = this.byteArrayParser.readUint16(this.byteArray, this.position);
      this.position += 2;
      return result;
    };
    /**
     * Parses an unsigned int 32 from a byte array and advances
     * the position by 2 bytes
     *
     * @returns {*} the parse unsigned int 32
     * @throws error if buffer overread would occur
     */


    dicomParser.ByteStream.prototype.readUint32 = function () {
      var result = this.byteArrayParser.readUint32(this.byteArray, this.position);
      this.position += 4;
      return result;
    };
    /**
     * Reads a string of 8-bit characters from an array of bytes and advances
     * the position by length bytes.  A null terminator will end the string
     * but will not effect advancement of the position.
     * @param length the maximum number of bytes to parse
     * @returns {string} the parsed string
     * @throws error if buffer overread would occur
     */


    dicomParser.ByteStream.prototype.readFixedString = function (length) {
      var result = dicomParser.readFixedString(this.byteArray, this.position, length);
      this.position += length;
      return result;
    };

    return dicomParser;
  }(dicomParser);
  /**
   *
   * The DataSet class encapsulates a collection of DICOM Elements and provides various functions
   * to access the data in those elements
   *
   * Rules for handling padded spaces:
   * DS = Strip leading and trailing spaces
   * DT = Strip trailing spaces
   * IS = Strip leading and trailing spaces
   * PN = Strip trailing spaces
   * TM = Strip trailing spaces
   * AE = Strip leading and trailing spaces
   * CS = Strip leading and trailing spaces
   * SH = Strip leading and trailing spaces
   * LO = Strip leading and trailing spaces
   * LT = Strip trailing spaces
   * ST = Strip trailing spaces
   * UT = Strip trailing spaces
   *
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    function getByteArrayParser(element, defaultParser) {
      return element.parser !== undefined ? element.parser : defaultParser;
    }
    /**
     * Constructs a new DataSet given byteArray and collection of elements
     * @param byteArrayParser
     * @param byteArray
     * @param elements
     * @constructor
     */


    dicomParser.DataSet = function (byteArrayParser, byteArray, elements) {
      this.byteArrayParser = byteArrayParser;
      this.byteArray = byteArray;
      this.elements = elements;
    };
    /**
     * Finds the element for tag and returns an unsigned int 16 if it exists and has data
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied
     * @returns {*} unsigned int 16 or undefined if the attribute is not present or has data of length 0
     */


    dicomParser.DataSet.prototype.uint16 = function (tag, index) {
      var element = this.elements[tag];
      index = index !== undefined ? index : 0;

      if (element && element.length !== 0) {
        return getByteArrayParser(element, this.byteArrayParser).readUint16(this.byteArray, element.dataOffset + index * 2);
      }

      return undefined;
    };
    /**
     * Finds the element for tag and returns an signed int 16 if it exists and has data
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied
     * @returns {*} signed int 16 or undefined if the attribute is not present or has data of length 0
     */


    dicomParser.DataSet.prototype.int16 = function (tag, index) {
      var element = this.elements[tag];
      index = index !== undefined ? index : 0;

      if (element && element.length !== 0) {
        return getByteArrayParser(element, this.byteArrayParser).readInt16(this.byteArray, element.dataOffset + index * 2);
      }

      return undefined;
    };
    /**
     * Finds the element for tag and returns an unsigned int 32 if it exists and has data
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied
     * @returns {*} unsigned int 32 or undefined if the attribute is not present or has data of length 0
     */


    dicomParser.DataSet.prototype.uint32 = function (tag, index) {
      var element = this.elements[tag];
      index = index !== undefined ? index : 0;

      if (element && element.length !== 0) {
        return getByteArrayParser(element, this.byteArrayParser).readUint32(this.byteArray, element.dataOffset + index * 4);
      }

      return undefined;
    };
    /**
     * Finds the element for tag and returns an signed int 32 if it exists and has data
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied
     * @returns {*} signed int 32 or undefined if the attribute is not present or has data of length 0
     */


    dicomParser.DataSet.prototype.int32 = function (tag, index) {
      var element = this.elements[tag];
      index = index !== undefined ? index : 0;

      if (element && element.length !== 0) {
        return getByteArrayParser(element, this.byteArrayParser).readInt32(this.byteArray, element.dataOffset + index * 4);
      }

      return undefined;
    };
    /**
     * Finds the element for tag and returns a 32 bit floating point number (VR=FL) if it exists and has data
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied
     * @returns {*} float or undefined if the attribute is not present or has data of length 0
     */


    dicomParser.DataSet.prototype.float = function (tag, index) {
      var element = this.elements[tag];
      index = index !== undefined ? index : 0;

      if (element && element.length !== 0) {
        return getByteArrayParser(element, this.byteArrayParser).readFloat(this.byteArray, element.dataOffset + index * 4);
      }

      return undefined;
    };
    /**
     * Finds the element for tag and returns a 64 bit floating point number (VR=FD) if it exists and has data
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied
     * @returns {*} float or undefined if the attribute is not present or doesn't has data of length 0
     */


    dicomParser.DataSet.prototype.double = function (tag, index) {
      var element = this.elements[tag];
      index = index !== undefined ? index : 0;

      if (element && element.length !== 0) {
        return getByteArrayParser(element, this.byteArrayParser).readDouble(this.byteArray, element.dataOffset + index * 8);
      }

      return undefined;
    };
    /**
     * Returns the number of string values for the element
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @returns {*} the number of string values or undefined if the attribute is not present or has zero length data
     */


    dicomParser.DataSet.prototype.numStringValues = function (tag) {
      var element = this.elements[tag];

      if (element && element.length > 0) {
        var fixedString = dicomParser.readFixedString(this.byteArray, element.dataOffset, element.length);
        var numMatching = fixedString.match(/\\/g);

        if (numMatching === null) {
          return 1;
        }

        return numMatching.length + 1;
      }

      return undefined;
    };
    /**
     * Returns a string for the element.  If index is provided, the element is assumed to be
     * multi-valued and will return the component specified by index.  Undefined is returned
     * if there is no component with the specified index, the element does not exist or is zero length.
     *
     * Use this function for VR types of AE, CS, SH and LO
     *
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @param index the index of the desired value in a multi valued string or undefined for the entire string
     * @returns {*}
     */


    dicomParser.DataSet.prototype.string = function (tag, index) {
      var element = this.elements[tag];

      if (element && element.length > 0) {
        var fixedString = dicomParser.readFixedString(this.byteArray, element.dataOffset, element.length);

        if (index >= 0) {
          var values = fixedString.split('\\'); // trim trailing spaces

          return values[index].trim();
        } else {
          // trim trailing spaces
          return fixedString.trim();
        }
      }

      return undefined;
    };
    /**
     * Returns a string with the leading spaces preserved and trailing spaces removed.
     *
     * Use this function to access data for VRs of type UT, ST and LT
     *
     * @param tag
     * @param index
     * @returns {*}
     */


    dicomParser.DataSet.prototype.text = function (tag, index) {
      var element = this.elements[tag];

      if (element && element.length > 0) {
        var fixedString = dicomParser.readFixedString(this.byteArray, element.dataOffset, element.length);

        if (index >= 0) {
          var values = fixedString.split('\\');
          return values[index].replace(/ +$/, '');
        } else {
          return fixedString.replace(/ +$/, '');
        }
      }

      return undefined;
    };
    /**
     * Parses a string to a float for the specified index in a multi-valued element.  If index is not specified,
     * the first value in a multi-valued VR will be parsed if present.
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @param index the index of the desired value in a multi valued string or undefined for the first value
     * @returns {*} a floating point number or undefined if not present or data not long enough
     */


    dicomParser.DataSet.prototype.floatString = function (tag, index) {
      var element = this.elements[tag];

      if (element && element.length > 0) {
        index = index !== undefined ? index : 0;
        var value = this.string(tag, index);

        if (value !== undefined) {
          return parseFloat(value);
        }
      }

      return undefined;
    };
    /**
     * Parses a string to an integer for the specified index in a multi-valued element.  If index is not specified,
     * the first value in a multi-valued VR will be parsed if present.
     * @param tag The DICOM tag in the format xGGGGEEEE
     * @param index the index of the desired value in a multi valued string or undefined for the first value
     * @returns {*} an integer or undefined if not present or data not long enough
     */


    dicomParser.DataSet.prototype.intString = function (tag, index) {
      var element = this.elements[tag];

      if (element && element.length > 0) {
        index = index !== undefined ? index : 0;
        var value = this.string(tag, index);

        if (value !== undefined) {
          return parseInt(value);
        }
      }

      return undefined;
    }; //dicomParser.DataSet = DataSet;


    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for parsing DICOM elements
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * Reads an encapsulated pixel data element and adds an array of fragments to the element
     * containing the offset and length of each fragment and any offsets from the basic offset
     * table
     * @param byteStream
     * @param element
     */


    dicomParser.findEndOfEncapsulatedElement = function (byteStream, element, warnings) {
      if (byteStream === undefined) {
        throw "dicomParser.findEndOfEncapsulatedElement: missing required parameter 'byteStream'";
      }

      if (element === undefined) {
        throw "dicomParser.findEndOfEncapsulatedElement: missing required parameter 'element'";
      }

      element.encapsulatedPixelData = true;
      element.basicOffsetTable = [];
      element.fragments = [];
      var basicOffsetTableItemTag = dicomParser.readTag(byteStream);

      if (basicOffsetTableItemTag !== 'xfffee000') {
        throw 'dicomParser.findEndOfEncapsulatedElement: basic offset table not found';
      }

      var basicOffsetTableItemlength = byteStream.readUint32();
      var numFragments = basicOffsetTableItemlength / 4;

      for (var i = 0; i < numFragments; i++) {
        var offset = byteStream.readUint32();
        element.basicOffsetTable.push(offset);
      }

      var baseOffset = byteStream.position;

      while (byteStream.position < byteStream.byteArray.length) {
        var tag = dicomParser.readTag(byteStream);
        var length = byteStream.readUint32();

        if (tag === 'xfffee0dd') {
          byteStream.seek(length);
          element.length = byteStream.position - element.dataOffset;
          return;
        } else if (tag === 'xfffee000') {
          element.fragments.push({
            offset: byteStream.position - baseOffset - 8,
            position: byteStream.position,
            length: length
          });
        } else {
          if (warnings) {
            warnings.push('unexpected tag ' + tag + ' while searching for end of pixel data element with undefined length');
          }

          if (length > byteStream.byteArray.length - byteStream.position) {
            // fix length
            length = byteStream.byteArray.length - byteStream.position;
          }

          element.fragments.push({
            offset: byteStream.position - baseOffset - 8,
            position: byteStream.position,
            length: length
          });
          byteStream.seek(length);
          element.length = byteStream.position - element.dataOffset;
          return;
        }

        byteStream.seek(length);
      }

      if (warnings) {
        warnings.push('pixel data element ' + element.tag + ' missing sequence delimiter tag xfffee0dd');
      }
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for parsing DICOM elements
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * reads from the byte stream until it finds the magic numbers for the item delimitation item
     * and then sets the length of the element
     * @param byteStream
     * @param element
     */


    dicomParser.findItemDelimitationItemAndSetElementLength = function (byteStream, element, warnings) {
      if (byteStream === undefined) {
        throw "dicomParser.readDicomElementImplicit: missing required parameter 'byteStream'";
      }

      var itemDelimitationItemLength = 8; // group, element, length

      var maxPosition = byteStream.byteArray.length - itemDelimitationItemLength;

      while (byteStream.position <= maxPosition) {
        var groupNumber = byteStream.readUint16();

        if (groupNumber === 0xfffe) {
          var elementNumber = byteStream.readUint16();

          if (elementNumber === 0xe00d) {
            // NOTE: It would be better to also check for the length to be 0 as part of the check above
            // but we will just log a warning for now
            var itemDelimiterLength = byteStream.readUint32(); // the length

            if (itemDelimiterLength !== 0) {
              byteStream.warnings('encountered non zero length following item delimiter at position' + byteStream.position - 4 + " while reading element of undefined length with tag ' + element.tag");
            }

            element.length = byteStream.position - element.dataOffset;
            return;
          } else if (elementNumber === 0xe000) {
            var itemDelimiterLength = byteStream.readUint32(); // the length

            if (itemDelimiterLength === 0xffffffff) {
              element.hadUndefinedLength = true;

              if (warnings) {
                element.dataSet = dicomParser.readDicomDataSetExplicitUndefinedLength(byteStream, warnings);
              } else {
                element.dataSet = dicomParser.readDicomDataSetImplicitUndefinedLength(byteStream);
              }
            }
          }
        }
      } // No item delimitation item - silently set the length to the end of the buffer and set the position past the end of the buffer


      element.length = byteStream.byteArray.length - element.dataOffset;
      byteStream.seek(byteStream.byteArray.length - byteStream.position);
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for parsing different types from a little-endian byte array
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    dicomParser.littleEndianByteArrayParser = {
      /**
       *
       * Parses an unsigned int 16 from a little-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed unsigned int 16
       * @throws error if buffer overread would occur
       * @access private
       */
      readUint16: function readUint16(byteArray, position) {
        if (position < 0) {
          throw 'littleEndianByteArrayParser.readUint16: position cannot be less than 0';
        }

        if (position + 2 > byteArray.length) {
          throw 'littleEndianByteArrayParser.readUint16: attempt to read past end of buffer';
        }

        return byteArray[position] + byteArray[position + 1] * 256;
      },

      /**
       *
       * Parses a signed int 16 from a little-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed signed int 16
       * @throws error if buffer overread would occur
       * @access private
       */
      readInt16: function readInt16(byteArray, position) {
        if (position < 0) {
          throw 'littleEndianByteArrayParser.readInt16: position cannot be less than 0';
        }

        if (position + 2 > byteArray.length) {
          throw 'littleEndianByteArrayParser.readInt16: attempt to read past end of buffer';
        }

        var int16 = byteArray[position] + (byteArray[position + 1] << 8); // fix sign

        if (int16 & 0x8000) {
          int16 = int16 - 0xffff - 1;
        }

        return int16;
      },

      /**
       * Parses an unsigned int 32 from a little-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed unsigned int 32
       * @throws error if buffer overread would occur
       * @access private
       */
      readUint32: function readUint32(byteArray, position) {
        if (position < 0) {
          throw 'littleEndianByteArrayParser.readUint32: position cannot be less than 0';
        }

        if (position + 4 > byteArray.length) {
          throw 'littleEndianByteArrayParser.readUint32: attempt to read past end of buffer';
        }

        var uint32 = byteArray[position] + byteArray[position + 1] * 256 + byteArray[position + 2] * 256 * 256 + byteArray[position + 3] * 256 * 256 * 256;
        return uint32;
      },

      /**
       * Parses a signed int 32 from a little-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed unsigned int 32
       * @throws error if buffer overread would occur
       * @access private
       */
      readInt32: function readInt32(byteArray, position) {
        if (position < 0) {
          throw 'littleEndianByteArrayParser.readInt32: position cannot be less than 0';
        }

        if (position + 4 > byteArray.length) {
          throw 'littleEndianByteArrayParser.readInt32: attempt to read past end of buffer';
        }

        var int32 = byteArray[position] + (byteArray[position + 1] << 8) + (byteArray[position + 2] << 16) + (byteArray[position + 3] << 24);
        return int32;
      },

      /**
       * Parses 32-bit float from a little-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed 32-bit float
       * @throws error if buffer overread would occur
       * @access private
       */
      readFloat: function readFloat(byteArray, position) {
        if (position < 0) {
          throw 'littleEndianByteArrayParser.readFloat: position cannot be less than 0';
        }

        if (position + 4 > byteArray.length) {
          throw 'littleEndianByteArrayParser.readFloat: attempt to read past end of buffer';
        } // I am sure there is a better way than this but this should be safe


        var byteArrayForParsingFloat = new Uint8Array(4);
        byteArrayForParsingFloat[0] = byteArray[position];
        byteArrayForParsingFloat[1] = byteArray[position + 1];
        byteArrayForParsingFloat[2] = byteArray[position + 2];
        byteArrayForParsingFloat[3] = byteArray[position + 3];
        var floatArray = new Float32Array(byteArrayForParsingFloat.buffer);
        return floatArray[0];
      },

      /**
       * Parses 64-bit float from a little-endian byte array
       *
       * @param byteArray the byte array to read from
       * @param position the position in the byte array to read from
       * @returns {*} the parsed 64-bit float
       * @throws error if buffer overread would occur
       * @access private
       */
      readDouble: function readDouble(byteArray, position) {
        if (position < 0) {
          throw 'littleEndianByteArrayParser.readDouble: position cannot be less than 0';
        }

        if (position + 8 > byteArray.length) {
          throw 'littleEndianByteArrayParser.readDouble: attempt to read past end of buffer';
        } // I am sure there is a better way than this but this should be safe


        var byteArrayForParsingFloat = new Uint8Array(8);
        byteArrayForParsingFloat[0] = byteArray[position];
        byteArrayForParsingFloat[1] = byteArray[position + 1];
        byteArrayForParsingFloat[2] = byteArray[position + 2];
        byteArrayForParsingFloat[3] = byteArray[position + 3];
        byteArrayForParsingFloat[4] = byteArray[position + 4];
        byteArrayForParsingFloat[5] = byteArray[position + 5];
        byteArrayForParsingFloat[6] = byteArray[position + 6];
        byteArrayForParsingFloat[7] = byteArray[position + 7];
        var floatArray = new Float64Array(byteArrayForParsingFloat.buffer);
        return floatArray[0];
      }
    };
    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for parsing implicit and explicit DICOM data sets
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * reads an explicit data set
     * @param byteStream the byte stream to read from
     * @param maxPosition the maximum position to read up to (optional - only needed when reading sequence items)
     */


    dicomParser.parseDicomDataSetExplicit = function (dataSet, byteStream, maxPosition, options) {
      maxPosition = maxPosition === undefined ? byteStream.byteArray.length : maxPosition;
      options = options || {};

      if (byteStream === undefined) {
        throw "dicomParser.parseDicomDataSetExplicit: missing required parameter 'byteStream'";
      }

      if (maxPosition < byteStream.position || maxPosition > byteStream.byteArray.length) {
        throw "dicomParser.parseDicomDataSetExplicit: invalid value for parameter 'maxPosition'";
      }

      var elements = dataSet.elements;

      while (byteStream.position < maxPosition) {
        var element = dicomParser.readDicomElementExplicit(byteStream, dataSet.warnings, options.untilTag);
        elements[element.tag] = element;

        if (element.tag === options.untilTag) {
          return;
        }
      }

      if (byteStream.position > maxPosition) {
        throw 'dicomParser:parseDicomDataSetExplicit: buffer overrun';
      }
    };
    /**
     * reads an implicit data set
     * @param byteStream the byte stream to read from
     * @param maxPosition the maximum position to read up to (optional - only needed when reading sequence items)
     */


    dicomParser.parseDicomDataSetImplicit = function (dataSet, byteStream, maxPosition, options) {
      maxPosition = maxPosition === undefined ? dataSet.byteArray.length : maxPosition;
      options = options || {};

      if (byteStream === undefined) {
        throw "dicomParser.parseDicomDataSetImplicit: missing required parameter 'byteStream'";
      }

      if (maxPosition < byteStream.position || maxPosition > byteStream.byteArray.length) {
        throw "dicomParser.parseDicomDataSetImplicit: invalid value for parameter 'maxPosition'";
      }

      var elements = dataSet.elements;

      while (byteStream.position < maxPosition) {
        var element = dicomParser.readDicomElementImplicit(byteStream, options.untilTag, options.vrCallback);
        elements[element.tag] = element;

        if (element.tag === options.untilTag) {
          return;
        }
      }
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for for parsing DICOM elements
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    function isValidVR(vr) {
      var validVR = {
        OB: true,
        AW: true,
        AE: true,
        AS: true,
        CS: true,
        UI: true,
        DA: true,
        DS: true,
        DT: true,
        IS: true,
        LO: true,
        LT: true,
        OW: true,
        PN: true,
        ST: true,
        TM: true,
        UN: true,
        UT: true,
        SQ: true,
        SH: true,
        FL: true,
        SL: true,
        AT: true,
        UL: true,
        US: true,
        SS: true,
        FD: true
      };
      return !!validVR[vr];
    }

    function getDataLengthSizeInBytesForVR(vr) {
      if (!isValidVR(vr) || vr === 'OB' || vr === 'OW' || vr === 'SQ' || vr === 'OF' || vr === 'UT' || vr === 'UN') {
        return 4;
      } else {
        return 2;
      }
    }

    dicomParser.readDicomElementExplicit = function (byteStream, warnings, untilTag) {
      if (byteStream === undefined) {
        throw "dicomParser.readDicomElementExplicit: missing required parameter 'byteStream'";
      }

      var element = {
        tag: dicomParser.readTag(byteStream),
        vr: byteStream.readFixedString(2) // length set below based on VR
        // dataOffset set below based on VR and size of length

      };

      if (!isValidVR(element.vr)) {
        byteStream.seek(-4);
        element.vr = '';
      }

      var dataLengthSizeBytes = getDataLengthSizeInBytesForVR(element.vr);

      if (dataLengthSizeBytes === 2) {
        element.length = byteStream.readUint16();
        element.dataOffset = byteStream.position;
      } else {
        byteStream.seek(2);
        element.length = byteStream.readUint32();
        element.dataOffset = byteStream.position;
      }

      if (element.length === 4294967295) {
        element.hadUndefinedLength = true;
      }

      if (element.tag === untilTag) {
        return element;
      } // if VR is SQ, parse the sequence items


      if (element.vr === 'SQ') {
        dicomParser.readSequenceItemsExplicit(byteStream, element, warnings);
        return element;
      }

      if (element.length === 4294967295) {
        if (element.tag === 'x7fe00010') {
          dicomParser.findEndOfEncapsulatedElement(byteStream, element, warnings);
          return element;
        } else {
          dicomParser.findItemDelimitationItemAndSetElementLength(byteStream, element, warnings);
          return element;
        }
      }

      byteStream.seek(element.length);
      return element;
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for for parsing DICOM elements
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    function isSequence(element, byteStream, vrCallback) {
      // if a data dictionary callback was provided, use that to verify that the element is a sequence.
      if (typeof vrCallback !== 'undefined') {
        return vrCallback(element.tag) === 'SQ';
      }

      if (byteStream.position + 4 <= byteStream.byteArray.length) {
        var nextTag = dicomParser.readTag(byteStream);
        byteStream.seek(-4); // Item start tag (fffe,e000) or sequence delimiter (i.e. end of sequence) tag (0fffe,e0dd)
        // These are the tags that could potentially be found directly after a sequence start tag (the delimiter
        // is found in the case of an empty sequence). This is not 100% safe because a non-sequence item
        // could have data that has these bytes, but this is how to do it without a data dictionary.

        return nextTag === 'xfffee000' || nextTag === 'xfffee0dd';
      }

      byteStream.warnings.push('eof encountered before finding sequence item tag or sequence delimiter tag in peeking to determine VR');
      return false;
    }

    dicomParser.readDicomElementImplicit = function (byteStream, untilTag, vrCallback) {
      if (byteStream === undefined) {
        throw "dicomParser.readDicomElementImplicit: missing required parameter 'byteStream'";
      }

      var element = {
        tag: dicomParser.readTag(byteStream),
        length: byteStream.readUint32(),
        dataOffset: byteStream.position
      };

      if (element.length === 4294967295) {
        element.hadUndefinedLength = true;
      }

      if (element.tag === untilTag) {
        return element;
      }

      if (isSequence(element, byteStream, vrCallback)) {
        // parse the sequence
        dicomParser.readSequenceItemsImplicit(byteStream, element);
        return element;
      } // if element is not a sequence and has undefined length, we have to
      // scan the data for a magic number to figure out when it ends.


      if (element.hadUndefinedLength) {
        dicomParser.findItemDelimitationItemAndSetElementLength(byteStream, element);
        return element;
      } // non sequence element with known length, skip over the data part


      byteStream.seek(element.length);
      return element;
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Parses a DICOM P10 byte array and returns a DataSet object with the parsed elements.  If the options
   * argument is supplied and it contains the untilTag property, parsing will stop once that
   * tag is encoutered.  This can be used to parse partial byte streams.
   *
   * @param byteArray the byte array
   * @param options object to control parsing behavior (optional)
   * @returns {DataSet}
   * @throws error if an error occurs while parsing.  The exception object will contain a property dataSet with the
   *         elements successfully parsed before the error.
   */


  var dicomParser = function (dicomParser) {
    if (dicomParser === undefined) {
      dicomParser = {};
    }

    dicomParser.readPart10Header = function (byteArray, options) {
      if (byteArray === undefined) {
        throw "dicomParser.readPart10Header: missing required parameter 'byteArray'";
      }

      var littleEndianByteStream = new dicomParser.ByteStream(dicomParser.littleEndianByteArrayParser, byteArray);

      function readPrefix() {
        littleEndianByteStream.seek(128);
        var prefix = littleEndianByteStream.readFixedString(4);

        if (prefix !== 'DICM') {
          throw 'dicomParser.readPart10Header: DICM prefix not found at location 132';
        }
      } // main function here


      function readTheHeader() {
        // Per the DICOM standard, the header is always encoded in Explicit VR Little Endian (see PS3.10, section 7.1)
        // so use littleEndianByteStream throughout this method regardless of the transfer syntax
        try {
          readPrefix();
        } catch (e) {
          littleEndianByteStream.seek(-(128 + 4));
        }

        var warnings = [];
        var elements = {};
        var headMaxPosition = -1;

        while (littleEndianByteStream.position < littleEndianByteStream.byteArray.length) {
          var position = littleEndianByteStream.position;

          if (headMaxPosition >= 0 && position >= headMaxPosition) {
            break;
          }

          var element = dicomParser.readDicomElementExplicit(littleEndianByteStream, warnings);

          if (element.tag == 'x00020000') {
            if (element.length == 2) {
              headMaxPosition = dicomParser.littleEndianByteArrayParser.readUint16(littleEndianByteStream.byteArray, element.dataOffset);
            } else if (element.length == 4) {
              headMaxPosition = dicomParser.littleEndianByteArrayParser.readUint16(littleEndianByteStream.byteArray, element.dataOffset);
            }

            headMaxPosition = littleEndianByteStream.position + headMaxPosition;
          }

          if (element.tag > 'x0002ffff') {
            littleEndianByteStream.position = position;
            break;
          } // Cache the littleEndianByteArrayParser for meta header elements, since the rest of the data set may be big endian
          // and this parser will be needed later if the meta header values are to be read.


          element.parser = dicomParser.littleEndianByteArrayParser;
          elements[element.tag] = element;
        }

        var metaHeaderDataSet = new dicomParser.DataSet(littleEndianByteStream.byteArrayParser, littleEndianByteStream.byteArray, elements);
        metaHeaderDataSet.warnings = littleEndianByteStream.warnings;
        metaHeaderDataSet.position = littleEndianByteStream.position;
        return metaHeaderDataSet;
      } // This is where we actually start parsing


      return readTheHeader();
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for parsing DICOM elements
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    function readDicomDataSetExplicitUndefinedLength(byteStream, warnings) {
      var elements = {};

      while (byteStream.position < byteStream.byteArray.length) {
        var element = dicomParser.readDicomElementExplicit(byteStream, warnings);
        elements[element.tag] = element; // we hit an item delimiter tag, return the current offset to mark
        // the end of this sequence item

        if (element.tag === 'xfffee00d') {
          return new dicomParser.DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);
        }
      } // eof encountered - log a warning and return what we have for the element


      warnings.push('eof encountered before finding item delimiter tag while reading sequence item of undefined length');
      return new dicomParser.DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);
    }

    dicomParser.readDicomDataSetExplicitUndefinedLength = readDicomDataSetExplicitUndefinedLength;

    function readSequenceItemExplicit(byteStream, warnings) {
      var item = dicomParser.readSequenceItem(byteStream);

      if (item.length === 4294967295) {
        item.hadUndefinedLength = true;
        item.dataSet = readDicomDataSetExplicitUndefinedLength(byteStream, warnings);
        item.length = byteStream.position - item.dataOffset;
      } else {
        item.dataSet = new dicomParser.DataSet(byteStream.byteArrayParser, byteStream.byteArray, {});
        dicomParser.parseDicomDataSetExplicit(item.dataSet, byteStream, byteStream.position + item.length);
      }

      return item;
    }

    function readSQElementUndefinedLengthExplicit(byteStream, element, warnings) {
      while (byteStream.position + 4 <= byteStream.byteArray.length) {
        // end reading this sequence if the next tag is the sequence delimitation item
        var nextTag = dicomParser.readTag(byteStream);
        byteStream.seek(-4);

        if (nextTag === 'xfffee0dd') {
          // set the correct length
          byteStream.seek(8);
          element.length = byteStream.position - element.dataOffset;
          return element;
        }

        var item = readSequenceItemExplicit(byteStream, warnings);
        element.items.push(item);
      }

      warnings.push('eof encountered before finding sequence delimitation tag while reading sequence of undefined length');
      element.length = byteStream.position - element.dataOffset;
    }

    function readSQElementKnownLengthExplicit(byteStream, element, warnings) {
      var maxPosition = element.dataOffset + element.length;

      while (byteStream.position < maxPosition) {
        var item = readSequenceItemExplicit(byteStream, warnings);
        element.items.push(item);
      }
    }

    dicomParser.readSequenceItemsExplicit = function (byteStream, element, warnings) {
      if (byteStream === undefined) {
        throw "dicomParser.readSequenceItemsExplicit: missing required parameter 'byteStream'";
      }

      if (element === undefined) {
        throw "dicomParser.readSequenceItemsExplicit: missing required parameter 'element'";
      }

      element.items = [];

      if (element.length === 4294967295) {
        readSQElementUndefinedLengthExplicit(byteStream, element, warnings);
      } else {
        readSQElementKnownLengthExplicit(byteStream, element, warnings);
      }
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for parsing DICOM elements
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    function readDicomDataSetImplicitUndefinedLength(byteStream, vrCallback) {
      var elements = {};

      while (byteStream.position < byteStream.byteArray.length) {
        var element = dicomParser.readDicomElementImplicit(byteStream, undefined, vrCallback);
        elements[element.tag] = element; // we hit an item delimiter tag, return the current offset to mark
        // the end of this sequence item

        if (element.tag === 'xfffee00d') {
          return new dicomParser.DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);
        }
      } // eof encountered - log a warning and return what we have for the element


      byteStream.warnings.push('eof encountered before finding sequence item delimiter in sequence item of undefined length');
      return new dicomParser.DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);
    }

    dicomParser.readDicomDataSetImplicitUndefinedLength = readDicomDataSetImplicitUndefinedLength;

    function readSequenceItemImplicit(byteStream, vrCallback) {
      var item = dicomParser.readSequenceItem(byteStream);

      if (item.length === 4294967295) {
        item.hadUndefinedLength = true;
        item.dataSet = readDicomDataSetImplicitUndefinedLength(byteStream, vrCallback);
        item.length = byteStream.position - item.dataOffset;
      } else {
        item.dataSet = new dicomParser.DataSet(byteStream.byteArrayParser, byteStream.byteArray, {});
        dicomParser.parseDicomDataSetImplicit(item.dataSet, byteStream, byteStream.position + item.length, {
          vrCallback: vrCallback
        });
      }

      return item;
    }

    function readSQElementUndefinedLengthImplicit(byteStream, element, vrCallback) {
      while (byteStream.position + 4 <= byteStream.byteArray.length) {
        // end reading this sequence if the next tag is the sequence delimitation item
        var nextTag = dicomParser.readTag(byteStream);
        byteStream.seek(-4);

        if (nextTag === 'xfffee0dd') {
          // set the correct length
          byteStream.seek(8);
          element.length = byteStream.position - element.dataOffset;
          return element;
        }

        var item = readSequenceItemImplicit(byteStream, vrCallback);
        element.items.push(item);
      }

      byteStream.warnings.push('eof encountered before finding sequence delimiter in sequence of undefined length');
      element.length = byteStream.byteArray.length - element.dataOffset;
    }

    function readSQElementKnownLengthImplicit(byteStream, element, vrCallback) {
      var maxPosition = element.dataOffset + element.length;

      while (byteStream.position < maxPosition) {
        var item = readSequenceItemImplicit(byteStream, vrCallback);
        element.items.push(item);
      }
    }
    /**
     * Reads sequence items for an element in an implicit little endian byte stream
     * @param byteStream the implicit little endian byte stream
     * @param element the element to read the sequence items for
     * @param vrCallback an optional method that returns a VR string given a tag
     */


    dicomParser.readSequenceItemsImplicit = function (byteStream, element, vrCallback) {
      if (byteStream === undefined) {
        throw "dicomParser.readSequenceItemsImplicit: missing required parameter 'byteStream'";
      }

      if (element === undefined) {
        throw "dicomParser.readSequenceItemsImplicit: missing required parameter 'element'";
      }

      element.items = [];

      if (element.length === 4294967295) {
        readSQElementUndefinedLengthImplicit(byteStream, element, vrCallback);
      } else {
        readSQElementKnownLengthImplicit(byteStream, element, vrCallback);
      }
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for parsing DICOM elements
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * Reads the tag and length of a sequence item and returns them as an object with the following properties
     *  tag : string for the tag of this element in the format xggggeeee
     *  length: the number of bytes in this item or 4294967295 if undefined
     *  dataOffset: the offset into the byteStream of the data for this item
     * @param byteStream the byte
     * @returns {{tag: string, length: integer, dataOffset: integer}}
     */


    dicomParser.readSequenceItem = function (byteStream) {
      if (byteStream === undefined) {
        throw "dicomParser.readSequenceItem: missing required parameter 'byteStream'";
      }

      var startPosition = byteStream.position;
      var element = {
        tag: dicomParser.readTag(byteStream),
        length: byteStream.readUint32(),
        dataOffset: byteStream.position
      };

      if (element.tag !== 'xfffee000') {//throw "dicomParser.readSequenceItem: item tag (FFFE,E000) not found at offset " + startPosition;
      }

      return element;
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Internal helper functions for parsing DICOM elements
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }
    /**
     * Reads a tag (group number and element number) from a byteStream
     * @param byteStream the byte stream to read from
     * @returns {string} the tag in format xggggeeee where gggg is the lowercase hex value of the group number
     * and eeee is the lower case hex value of the element number
     */


    dicomParser.readTag = function (byteStream) {
      if (byteStream === undefined) {
        throw "dicomParser.readTag: missing required parameter 'byteStream'";
      }

      var groupNumber = byteStream.readUint16() * 256 * 256;
      var elementNumber = byteStream.readUint16();
      var tag = 'x' + ('00000000' + (groupNumber + elementNumber).toString(16)).substr(-8);
      return tag;
    };

    return dicomParser;
  }(dicomParser);
  /**
   * Version
   */


  var dicomParser = function (dicomParser) {
    'use strict';

    if (dicomParser === undefined) {
      dicomParser = {};
    }

    dicomParser.version = '1.3.0';
    return dicomParser;
  }(dicomParser);

  return dicomParser;
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(981).Buffer))

/***/ }),
/* 981 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(982)
var ieee754 = __webpack_require__(983)
var isArray = __webpack_require__(984)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(41)))

/***/ }),
/* 982 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 983 */
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 984 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 985 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.decodeRLE = void 0;

/* eslint-disable no-param-reassign */
function decode8(imageFrame, pixelData) {
  var frameData = pixelData;
  var frameSize = imageFrame.rows * imageFrame.columns;
  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);
  var header = new DataView(frameData.buffer, frameData.byteOffset);
  var data = new Int8Array(frameData.buffer, frameData.byteOffset);
  var out = new Int8Array(outFrame);
  var outIndex = 0;
  var numSegments = header.getInt32(0, true);

  for (var s = 0; s < numSegments; ++s) {
    outIndex = s;
    var inIndex = header.getInt32((s + 1) * 4, true);
    var maxIndex = header.getInt32((s + 2) * 4, true);

    if (maxIndex === 0) {
      maxIndex = frameData.length;
    }

    var endOfSegment = frameSize * numSegments;

    while (inIndex < maxIndex) {
      var n = data[inIndex++];

      if (n >= 0 && n <= 127) {
        // copy n bytes
        for (var i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {
          out[outIndex] = data[inIndex++];
          outIndex += imageFrame.samplesPerPixel;
        }
      } else if (n <= -1 && n >= -127) {
        var value = data[inIndex++]; // run of n bytes

        for (var j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {
          out[outIndex] = value;
          outIndex += imageFrame.samplesPerPixel;
        }
      }
      /* else if (n === -128) {
      } // do nothing */

    }
  }

  imageFrame.pixelData = new Uint8Array(outFrame);
  return imageFrame;
}

function decode8Planar(imageFrame, pixelData) {
  var frameData = pixelData;
  var frameSize = imageFrame.rows * imageFrame.columns;
  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);
  var header = new DataView(frameData.buffer, frameData.byteOffset);
  var data = new Int8Array(frameData.buffer, frameData.byteOffset);
  var out = new Int8Array(outFrame);
  var outIndex = 0;
  var numSegments = header.getInt32(0, true);

  for (var s = 0; s < numSegments; ++s) {
    outIndex = s * frameSize;
    var inIndex = header.getInt32((s + 1) * 4, true);
    var maxIndex = header.getInt32((s + 2) * 4, true);

    if (maxIndex === 0) {
      maxIndex = frameData.length;
    }

    var endOfSegment = frameSize * numSegments;

    while (inIndex < maxIndex) {
      var n = data[inIndex++];

      if (n >= 0 && n <= 127) {
        // copy n bytes
        for (var i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {
          out[outIndex] = data[inIndex++];
          outIndex++;
        }
      } else if (n <= -1 && n >= -127) {
        var value = data[inIndex++]; // run of n bytes

        for (var j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {
          out[outIndex] = value;
          outIndex++;
        }
      }
      /* else if (n === -128) {
      } // do nothing */

    }
  }

  imageFrame.pixelData = new Uint8Array(outFrame);
  return imageFrame;
}

function decode16(imageFrame, pixelData) {
  var frameData = pixelData;
  var frameSize = imageFrame.rows * imageFrame.columns;
  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);
  var header = new DataView(frameData.buffer, frameData.byteOffset);
  var data = new Int8Array(frameData.buffer, frameData.byteOffset);
  var out = new Int8Array(outFrame);
  var numSegments = header.getInt32(0, true);

  for (var s = 0; s < numSegments; ++s) {
    var outIndex = 0;
    var highByte = s === 0 ? 1 : 0;
    var inIndex = header.getInt32((s + 1) * 4, true);
    var maxIndex = header.getInt32((s + 2) * 4, true);

    if (maxIndex === 0) {
      maxIndex = frameData.length;
    }

    while (inIndex < maxIndex) {
      var n = data[inIndex++];

      if (n >= 0 && n <= 127) {
        for (var i = 0; i < n + 1 && outIndex < frameSize; ++i) {
          out[outIndex * 2 + highByte] = data[inIndex++];
          outIndex++;
        }
      } else if (n <= -1 && n >= -127) {
        var value = data[inIndex++];

        for (var j = 0; j < -n + 1 && outIndex < frameSize; ++j) {
          out[outIndex * 2 + highByte] = value;
          outIndex++;
        }
      }
      /* else if (n === -128) {
      } // do nothing */

    }
  }

  if (imageFrame.pixelRepresentation === 0) {
    imageFrame.pixelData = new Uint16Array(outFrame);
  } else {
    imageFrame.pixelData = new Int16Array(outFrame);
  }

  return imageFrame;
}

var decodeRLE = function decodeRLE(imageFrame, pixelData) {
  if (imageFrame.bitsAllocated === 8) {
    if (imageFrame.planarConfiguration) {
      return decode8Planar(imageFrame, pixelData);
    }

    return decode8(imageFrame, pixelData);
  }

  if (imageFrame.bitsAllocated === 16) {
    return decode16(imageFrame, pixelData);
  }

  throw new Error('unsupported pixel format for RLE');
};

exports.decodeRLE = decodeRLE;

/***/ }),
/* 986 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _dicomimage = __webpack_require__(987);

Object.keys(_dicomimage).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _dicomimage[key];
});

var _dicomseries = __webpack_require__(988);

Object.keys(_dicomseries).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _dicomseries[key];
});

var _parsedicomimage = __webpack_require__(989);

Object.keys(_parsedicomimage).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _parsedicomimage[key];
});

var _parsedicomseries = __webpack_require__(990);

Object.keys(_parsedicomseries).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _parsedicomseries[key];
});

var _dicomwebfetch = __webpack_require__(991);

Object.keys(_dicomwebfetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _dicomwebfetch[key];
});

/***/ }),
/* 987 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Image3DFromDicom = void 0;

var _lodashEs = __webpack_require__(32);

var _image = __webpack_require__(26);

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Image3DFromDicom = /*#__PURE__*/function (_Image3D) {
  _inheritsLoose(Image3DFromDicom, _Image3D);

  function Image3DFromDicom() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Image3D.call.apply(_Image3D, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "getSliceInfo", function (index, tags) {
      var results = _this.cache.getTag(index, tags);

      return (0, _lodashEs.fromPairs)(tags.map(function (tagName, i) {
        return [tagName, results[i]];
      }));
    });

    return _this;
  }

  return Image3DFromDicom;
}(_image.Image3D);

exports.Image3DFromDicom = Image3DFromDicom;

/***/ }),
/* 988 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.DicomSeries = void 0;

var _core = __webpack_require__(30);

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var DicomSeries = /*#__PURE__*/function (_Resource) {
  _inheritsLoose(DicomSeries, _Resource);

  function DicomSeries(count, cache) {
    var _this;

    _this = _Resource.call(this, 'dicomseries') || this;
    _this.count = count;
    _this.cache = cache;
    return _this;
  }

  var _proto = DicomSeries.prototype;

  _proto.force = async function force(priority) {
    return this.cache.force(priority);
  };

  _proto.cancelLoading = function cancelLoading() {
    this.cache.cancelLoading();
  };

  _proto.getImage = async function getImage(index, priority) {
    var pixel = await this.cache.getAsync(index, priority);

    var _this$getTag = this.getTag(index, ['Rows', 'Columns']),
        rows = _this$getTag[0],
        cols = _this$getTag[1];

    return {
      index: index,
      pixel: pixel,
      size: [cols, rows]
    };
  };

  _proto.getTag = function getTag(index, tagName) {
    return this.cache.getTag(index, tagName);
  };

  _createClass(DicomSeries, [{
    key: "isAllDataReady",
    get: function get() {
      return this.cache.isReady();
    }
  }]);

  return DicomSeries;
}(_core.Resource);

exports.DicomSeries = DicomSeries;

/***/ }),
/* 989 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseDicomImage = void 0;

var _core = __webpack_require__(30);

var _image = __webpack_require__(26);

var _dicomtags = __webpack_require__(724);

var _dicomimage = __webpack_require__(987);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var parsePixelBuffer = async function parsePixelBuffer(_ref) {
  var data = _ref.data,
      option = _ref.option;
  var rescaleSlope = option.rescaleSlope,
      rescaleIntercept = option.rescaleIntercept;
  var buffer = new Int16Array(data.getArrayBuffer());

  for (var i = 0; i < buffer.length; i += 1) {
    buffer[i] = buffer[i] * rescaleSlope + rescaleIntercept;
  }

  return new _core.DataResource(new _core.Data(_core.PayLoadType.TYPED_ARRAY, buffer));
};

var parseDicomImage = async function parseDicomImage(_ref2) {
  var data = _ref2.data,
      option = _ref2.option,
      mgr = _ref2.mgr;
  var json = data.getJson();

  if (json.length < 1) {
    throw new Error('dicom image need at least one instance');
  }

  var otherOption = option;
  var slices = json.map(function (slice) {
    var sliceDS = new _dicomtags.DataSet(slice);
    var origin = sliceDS.getElementValueArray('ImagePositionPatient');
    var url = sliceDS.getElementValue('PixelData');

    if (!origin || origin.length !== 3 || !url) {
      throw new Error('parseDicomImage: dicom is not image');
    }

    return {
      origin: origin,
      url: url,
      ds: sliceDS
    };
  });
  slices.sort(function (a, b) {
    return a.origin[2] - b.origin[2];
  });
  var firstSlice = slices[0].ds;
  var width = firstSlice.getElementValue('Columns');
  var height = firstSlice.getElementValue('Rows');
  var spacing = firstSlice.getElementValueArray('PixelSpacing');
  var rescaleIntercept = firstSlice.getElementValue('RescaleIntercept');
  var rescaleSlope = firstSlice.getElementValue('RescaleSlope');

  var newOption = _objectSpread(_objectSpread({}, otherOption), {}, {
    width: width,
    height: height,
    rescaleSlope: rescaleSlope,
    rescaleIntercept: rescaleIntercept
  });

  var resources = [];

  for (var i = 0; i < json.length; i += 1) {
    var resource = mgr.addResource({
      fetchType: _core.FetchType.Url,
      locator: {
        url: slices[i].url
      },
      parse: parsePixelBuffer,
      option: newOption
    });
    resources.push(resource);
  }

  var size = [width, height, json.length];
  var cache = new _image.ResourceBasedImageCache(resources, {
    getBuffer: function getBuffer(r) {
      return r.getTypedArray();
    },
    getTagByNumber: function getTagByNumber(index, tagName) {
      return slices[index].ds.getElementValue(tagName);
    }
  });
  var origin = [-slices[0].origin[0], -slices[0].origin[1], slices[0].origin[2]];
  var imageInfo = {
    origin: origin,
    size: size,
    spacing: [spacing[0], spacing[1], slices.length > 1 ? Math.abs(slices[1].origin[2] - slices[0].origin[2]) : 1]
  };
  var r = new _dicomimage.Image3DFromDicom(imageInfo, cache, Int16Array);
  return r;
};

exports.parseDicomImage = parseDicomImage;

/***/ }),
/* 990 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseDicomSeries = void 0;

var _lodashEs = __webpack_require__(32);

var _core = __webpack_require__(30);

var _image = __webpack_require__(26);

var _dicomtags = __webpack_require__(724);

var _dicomparser = __webpack_require__(965);

var _dicomseries = __webpack_require__(988);

var dicomParse = async function dicomParse(param) {
  return new _core.AnyResource((0, _dicomparser.parseDicom)(param.data.getArrayBuffer()));
};

var parseDicomSeries = async function parseDicomSeries(_ref) {
  var mgr = _ref.mgr,
      data = _ref.data,
      option = _ref.option;
  var json = data.getArray();

  if (json.length < 1) {
    throw new Error('dicom image need at least one instance');
  }

  var dsList = json.map(function (j) {
    return new _dicomtags.DataSet(j);
  }); // sort by InstanceNumber

  var needSort = !dsList.find(function (ds) {
    return !(0, _lodashEs.isNumber)(ds.getElementValue('InstanceNumber'));
  });

  if (needSort) {
    dsList.sort(function (l, r) {
      return l.getElementValue('InstanceNumber') - r.getElementValue('InstanceNumber');
    });
  }

  var resources = dsList.map(function (ds) {
    return mgr.addResource({
      fetchType: _core.FetchType.DicomInstance,
      locator: {
        StudyInstanceUID: ds.StudyInstanceUID,
        SeriesInstanceUID: ds.SeriesInstanceUID,
        SOPInstanceUID: ds.SOPInstanceUID
      },
      parse: dicomParse,
      option: option
    });
  });
  var cache = new _image.ResourceBasedImageCache(resources, {
    getBuffer: function getBuffer(r) {
      var d = r.data;
      return d.pixelData();
    },
    getTagByResource: function getTagByResource(r, tagName) {
      var d = r.data;
      return d.getTag(tagName);
    }
  });
  var r = new _dicomseries.DicomSeries(resources.length, cache);
  return r;
};

exports.parseDicomSeries = parseDicomSeries;

/***/ }),
/* 991 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.createDicomWebFetchers = void 0;

var _lodashEs = __webpack_require__(32);

var _core = __webpack_require__(30);

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var processBaseURL = function processBaseURL(baseurl, urlWithAETitle, option) {
  var AETitle = option.AETitle;
  var usedUrl = baseurl;

  if (AETitle) {
    usedUrl = urlWithAETitle(baseurl, AETitle);
  }

  return usedUrl;
};

var fetchList = async function fetchList(urlFetch, url, option, queryParam) {
  var params = [];
  var filter = queryParam.filter,
      includeField = queryParam.includeField,
      sort = queryParam.sort,
      limit = queryParam.limit,
      offset = queryParam.offset,
      fuzzymatching = queryParam.fuzzymatching;

  if (filter) {
    (0, _lodashEs.forEach)(filter, function (v, k) {
      params.push(k + "=" + v);
    });
  }

  if (includeField) {
    (0, _lodashEs.forEach)(includeField, function (v) {
      params.push("includefield=" + v);
    });
  }

  if (sort) {
    params.push("sort=" + encodeURIComponent(JSON.stringify(sort)));
  }

  if (limit) {
    params.push("limit=" + limit);
  }

  if (offset) {
    params.push("offset=" + offset);
  }

  if (fuzzymatching) {
    params.push("fuzzymatching=true");
  }

  var data = await urlFetch({
    url: "" + url + params.join('&')
  }, option);

  if (data.type === _core.PayLoadType.PAGED_CONTENT) {
    data.getAny().offset = offset || 0;
  }

  return data;
};

var fetchDicomInfo = async function fetchDicomInfo(urlFetch, inputBaseurl, urlWithAETitle, type, locator, option) {
  var StudyInstanceUID = locator.StudyInstanceUID,
      SeriesInstanceUID = locator.SeriesInstanceUID,
      queryParam = _objectWithoutPropertiesLoose(locator, ["StudyInstanceUID", "SeriesInstanceUID"]);

  var baseurl = processBaseURL(inputBaseurl, urlWithAETitle, option);
  var url = null; // fetch study

  if (type === _core.FetchType.SeriesInfo) {
    url = baseurl + "/series?";
  } else if (type === _core.FetchType.InstanceInfo) {
    url = baseurl + "/instances?";
  } else if (type === _core.FetchType.StudyInfo) {
    url = baseurl + "/studies?";
  } else {
    if (!StudyInstanceUID) {
      throw new Error('fetchDicomInfo, StudyInstanceUID not set');
    }

    if (!SeriesInstanceUID) {
      // fetch series
      url = baseurl + "/studies/" + StudyInstanceUID + "/series?";
    } else {
      // fetch instance
      url = baseurl + "/studies/" + StudyInstanceUID + "/series/" + SeriesInstanceUID + "/instances?";
    }
  }

  return fetchList(urlFetch, url, option, queryParam);
};

var fetchDicom = async function fetchDicom(urlFetch, inputBaseurl, urlWithAETitle, type, locator, option) {
  var StudyInstanceUID = locator.StudyInstanceUID,
      SeriesInstanceUID = locator.SeriesInstanceUID,
      SOPInstanceUID = locator.SOPInstanceUID;
  var baseurl = processBaseURL(inputBaseurl, urlWithAETitle, option);

  if (!StudyInstanceUID) {
    throw new Error('fetchDicom: need StudyInstanceUID');
  }

  var url;

  if (!SeriesInstanceUID) {
    // load study metadata
    if (type === _core.FetchType.DicomInstance) {
      throw new Error('fetch DicomInstance need SeriesInstanceUID');
    }

    url = baseurl + "/studies/" + StudyInstanceUID + "/metadata";
  } else if (!SOPInstanceUID) {
    // load series metadata
    if (type === _core.FetchType.DicomInstance) {
      throw new Error('fetch DicomInstance need SOPInstanceUID');
    }

    url = baseurl + "/studies/" + StudyInstanceUID + "/series/" + SeriesInstanceUID + "/metadata";
  } else if (type === _core.FetchType.DicomInstance) {
    url = baseurl + "/studies/" + StudyInstanceUID + "/series/" + SeriesInstanceUID + "/instances/" + SOPInstanceUID;
  } else {
    url = baseurl + "/studies/" + StudyInstanceUID + "/series/" + SeriesInstanceUID + "/instances/" + SOPInstanceUID + "/metadata";
  }

  return urlFetch({
    url: url
  }, option);
};

var createDicomWebFetchers = function createDicomWebFetchers(baseurl, urlFetch, urlWithAETitle) {
  return {
    fetchSeriesInfo: fetchDicomInfo.bind(undefined, urlFetch, baseurl, urlWithAETitle, _core.FetchType.SeriesInfo),
    fetchInstanceInfo: fetchDicomInfo.bind(undefined, urlFetch, baseurl, urlWithAETitle, _core.FetchType.InstanceInfo),
    fetchStudyInfo: fetchDicomInfo.bind(undefined, urlFetch, baseurl, urlWithAETitle, _core.FetchType.StudyInfo),
    fetchDicomInfo: fetchDicomInfo.bind(undefined, urlFetch, baseurl, urlWithAETitle, _core.FetchType.DicomInfo),
    fetchDicomMeta: fetchDicom.bind(undefined, urlFetch, baseurl, urlWithAETitle, _core.FetchType.DicomMeta),
    fetchDicomInstance: fetchDicom.bind(undefined, urlFetch, baseurl, urlWithAETitle, _core.FetchType.DicomInstance)
  };
};

exports.createDicomWebFetchers = createDicomWebFetchers;

/***/ }),
/* 992 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var _exportNames = {
  parseCenterline: true
};
exports.parseCenterline = void 0;

var _core = __webpack_require__(30);

var _vtp = __webpack_require__(698);

var _centerline = __webpack_require__(993);

Object.keys(_centerline).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _centerline[key];
});

var _cltypes = __webpack_require__(994);

Object.keys(_cltypes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _cltypes[key];
});

var _heartcenterline = __webpack_require__(995);

Object.keys(_heartcenterline).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _heartcenterline[key];
});

var parseCenterline = async function parseCenterline(_ref) {
  var data = _ref.data;
  var vtpFile = new _vtp.VTPFile(data.getString());
  var centerline = new _centerline.Centerline(vtpFile);
  return new _core.AnyResource(centerline);
};

exports.parseCenterline = parseCenterline;

/***/ }),
/* 993 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Centerline = void 0;

// TODO: This file is mainly a placeholder now.
// To handle all centerline related query/simple algorithm.
// 为了不容易出错， 本Centerline只给出命名的enum来访问数据, 如果需要随意访问， 请使用VTPFile.
var Centerline = /*#__PURE__*/function () {
  function Centerline(vtpFile) {
    this.vtpFile = vtpFile;
  }

  var _proto = Centerline.prototype;

  _proto.getPointData = function getPointData(type) {
    return this.vtpFile.getPointData(type);
  };

  _proto.getNumberOfCells = function getNumberOfCells() {
    return this.vtpFile.getNumberOfCells();
  };

  _proto.getNumberOfPoints = function getNumberOfPoints() {
    return this.vtpFile.getNumberOfPoints();
  };

  _proto.getFieldData = function getFieldData(type) {
    return this.vtpFile.getFieldData(type);
  };

  _proto.getCellData = function getCellData(type) {
    return this.vtpFile.getCellData(type);
  };

  _proto.getPoints = function getPoints() {
    return this.vtpFile.getPoints();
  };

  _proto.getLines = function getLines() {
    var lines = this.vtpFile.lines;
    var connectivity = lines.connectivity,
        offsets = lines.offsets;
    var start = 0;
    return offsets.data.map(function (v) {
      var sliced = connectivity.data.slice(start, v);
      start = v;
      return sliced;
    });
  };

  return Centerline;
}();

exports.Centerline = Centerline;

/***/ }),
/* 994 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.PointDataType = exports.CellDataType = exports.FieldDataType = exports.Segment3 = exports.Segment18 = exports.Segment8 = exports.SegmentRule = void 0;
// 这里的定义和C++端不同， 这里只定义类型， 关于类型和mask的映射关系按道理应该由业务定义
var SegmentRule;
exports.SegmentRule = SegmentRule;

(function (SegmentRule) {
  SegmentRule[SegmentRule["SegmentRule18"] = 0] = "SegmentRule18";
  SegmentRule[SegmentRule["SegmentRule8"] = 1] = "SegmentRule8";
  SegmentRule[SegmentRule["SegmentRule3"] = 2] = "SegmentRule3";
  SegmentRule[SegmentRule["SegmentRuleUnknown"] = 3] = "SegmentRuleUnknown";
})(SegmentRule || (exports.SegmentRule = SegmentRule = {}));

var Segment8;
exports.Segment8 = Segment8;

(function (Segment8) {
  Segment8[Segment8["Segment8RCA"] = 0] = "Segment8RCA";
  Segment8[Segment8["Segment8PDA"] = 1] = "Segment8PDA";
  Segment8[Segment8["Segment8LAD"] = 2] = "Segment8LAD";
  Segment8[Segment8["Segment8D1"] = 3] = "Segment8D1";
  Segment8[Segment8["Segment8D2"] = 4] = "Segment8D2";
  Segment8[Segment8["Segment8LCX"] = 5] = "Segment8LCX";
  Segment8[Segment8["Segment8OM1"] = 6] = "Segment8OM1";
  Segment8[Segment8["Segment8OM2"] = 7] = "Segment8OM2";
})(Segment8 || (exports.Segment8 = Segment8 = {}));

var Segment18;
exports.Segment18 = Segment18;

(function (Segment18) {
  Segment18[Segment18["Segment18pRCA"] = 0] = "Segment18pRCA";
  Segment18[Segment18["Segment18mRCA"] = 1] = "Segment18mRCA";
  Segment18[Segment18["Segment18dRCA"] = 2] = "Segment18dRCA";
  Segment18[Segment18["Segment18rPDA"] = 3] = "Segment18rPDA";
  Segment18[Segment18["Segment18LM"] = 4] = "Segment18LM";
  Segment18[Segment18["Segment18pLAD"] = 5] = "Segment18pLAD";
  Segment18[Segment18["Segment18mLAD"] = 6] = "Segment18mLAD";
  Segment18[Segment18["Segment18dLAD"] = 7] = "Segment18dLAD";
  Segment18[Segment18["Segment18D1"] = 8] = "Segment18D1";
  Segment18[Segment18["Segment18D2"] = 9] = "Segment18D2";
  Segment18[Segment18["Segment18pLCX"] = 10] = "Segment18pLCX";
  Segment18[Segment18["Segment18OM1"] = 11] = "Segment18OM1";
  Segment18[Segment18["Segment18mdLCX"] = 12] = "Segment18mdLCX";
  Segment18[Segment18["Segment18OM2"] = 13] = "Segment18OM2";
  Segment18[Segment18["Segment18lPDA"] = 14] = "Segment18lPDA";
  Segment18[Segment18["Segment18rPLB"] = 15] = "Segment18rPLB";
  Segment18[Segment18["Segment18RI"] = 16] = "Segment18RI";
  Segment18[Segment18["Segment18lPLB"] = 17] = "Segment18lPLB";
})(Segment18 || (exports.Segment18 = Segment18 = {}));

var Segment3;
exports.Segment3 = Segment3;

(function (Segment3) {
  Segment3[Segment3["Segment3Aorta"] = 0] = "Segment3Aorta";
  Segment3[Segment3["Segment3LeftArtery"] = 1] = "Segment3LeftArtery";
  Segment3[Segment3["Segment3RightArtery"] = 2] = "Segment3RightArtery";
})(Segment3 || (exports.Segment3 = Segment3 = {}));

var FieldDataType;
exports.FieldDataType = FieldDataType;

(function (FieldDataType) {
  FieldDataType["AortaIntensityMean"] = "AortaIntensityMean";
  FieldDataType["AortaIntensitySigma"] = "AortaIntensitySigma";
})(FieldDataType || (exports.FieldDataType = FieldDataType = {}));

var CellDataType;
exports.CellDataType = CellDataType;

(function (CellDataType) {
  CellDataType["ParentCell"] = "ParentCell";
  CellDataType["TerminalCell"] = "TerminalCell";
  CellDataType["SegLabel"] = "SegLabel";
  CellDataType["Label"] = "Label";
})(CellDataType || (exports.CellDataType = CellDataType = {}));

var PointDataType;
exports.PointDataType = PointDataType;

(function (PointDataType) {
  PointDataType["FFR"] = "FFR";
  PointDataType["DVFFR"] = "DVFFR";
  PointDataType["PointType"] = "PointType";
  PointDataType["PixelCount"] = "PixelCount";
  PointDataType["Radius"] = "Radius";
  PointDataType["MajorRadius"] = "MajorRadius";
  PointDataType["MinorRadius"] = "MinorRadius";
  PointDataType["CenterDist"] = "CenterDist";
  PointDataType["Elongation"] = "Elongation";
  PointDataType["Eccentricity"] = "Eccentricity";
  PointDataType["AvgIntensity"] = "AvgIntensity";
  PointDataType["StdIntensity"] = "StdIntensity";
  PointDataType["CenterIntensity"] = "CenterIntensity";
  PointDataType["Normal"] = "Normal";
  PointDataType["Volume"] = "Volume";
  PointDataType["Segment"] = "Segment";
  PointDataType["Stenosis"] = "Stenosis";
  PointDataType["ReferenceRadius"] = "ReferenceRadius";
  PointDataType["PlaqueExists"] = "PlaqueExists";
  PointDataType["StentExists"] = "StentExists";
  PointDataType["Resistance"] = "Resistance";
  PointDataType["SphericalCoordinates"] = "SphericalCoordinates";
  PointDataType["LengthFromRoot"] = "Length_fromRoot";
  PointDataType["NumOfUsBifurcation"] = "Num_ofUsBifurcation";
  PointDataType["AreaOfStem"] = "Area_ofStem";
  PointDataType["AvgUsDiameter"] = "Avg_UsDiameter";
  PointDataType["MinUsDiameter"] = "Min_UsDiameter";
  PointDataType["DistfromMinUsDia"] = "Dist_fromMinUsDia";
  PointDataType["NormalRadius"] = "NormalRadius";
  PointDataType["TotalDsGeoResistance"] = "Total_DsGeoResistance";
  PointDataType["LenghtfromStemEnd"] = "Lenght_fromStemEnd";
  PointDataType["NumofDsBifurcation"] = "Num_ofDsBifurcation";
  PointDataType["AreaofStemEnd"] = "Area_ofStemEnd";
  PointDataType["AvgDsDiameter"] = "Avg_DsDiameter";
  PointDataType["MinDsDiameter"] = "Min_DsDiameter";
  PointDataType["MaxDsDiameter"] = "Max_DsDiameter";
  PointDataType["DistfromMinDsDia"] = "Dist_fromMinDsDia";
  PointDataType["TotalDsLeafResistance"] = "Total_DsLeafResistance";
  PointDataType["AvgDsLeafResistance"] = "Avg_DsLeafResistance";
  PointDataType["MinareaDsLeaf"] = "Min_areaDsLeaf";
  PointDataType["MaxareaDsLeaf"] = "Max_areaDsLeaf";
  PointDataType["AvgareaDsLeaf"] = "Avg_areaDsLeaf";
  PointDataType["DsVolume"] = "Ds_Volume";
  PointDataType["RefRadius"] = "Ref_Radius";
  PointDataType["Stenosisloc"] = "Stenosis_loc";
  PointDataType["AreaReduce"] = "Area_Reduce";
  PointDataType["FlowRatio"] = "FlowRatio";
  PointDataType["FlowRate"] = "FlowRate";
  PointDataType["PressureDropfromRoot"] = "PressureDrop_fromRoot";
  PointDataType["PressureValue"] = "PressureValue";
  PointDataType["fullpdrop"] = "full_pdrop";
})(PointDataType || (exports.PointDataType = PointDataType = {}));

/***/ }),
/* 995 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.HeartCenterline = void 0;

// TODO: Add more visit functions or simple algorithm. This should be interface of all visitation.
var HeartCenterline = /*#__PURE__*/function () {
  function HeartCenterline(left, right) {
    this.left = left;
    this.right = right;
  }

  var _proto = HeartCenterline.prototype;

  _proto.getLeft = function getLeft() {
    return this.left;
  };

  _proto.getRight = function getRight() {
    return this.right;
  };

  return HeartCenterline;
}();

exports.HeartCenterline = HeartCenterline;

/***/ }),
/* 996 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _loadresource = __webpack_require__(997);

Object.keys(_loadresource).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _loadresource[key];
});

/***/ }),
/* 997 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.loadResource = void 0;

var _core = __webpack_require__(30);

// This is helper to only do fetch stuff. every fetched data will be wrapped into a DataResource.
var loadResource = async function loadResource(mgr, params, priority) {
  if (priority === void 0) {
    priority = _core.Priority.Medium;
  }

  var rep = mgr.addResource(params);
  await rep.load(priority);
  return rep;
};

exports.loadResource = loadResource;

/***/ }),
/* 998 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _urlfetch = __webpack_require__(999);

Object.keys(_urlfetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _urlfetch[key];
});

var _parsemultipart = __webpack_require__(1000);

Object.keys(_parsemultipart).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  exports[key] = _parsemultipart[key];
});

/***/ }),
/* 999 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.fetchUrl = exports.processResponse = void 0;

var _core = __webpack_require__(30);

var _parsemultipart = __webpack_require__(1000);

var _logger = _interopRequireDefault(__webpack_require__(683));

var _errors = __webpack_require__(673);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var processResponse = async function processResponse(r) {
  if (r.status >= 400) {
    throw new _errors.NetWorkError(r.status, "code: " + r.status + ", status: " + r.statusText);
  }

  var contentType = r.headers.get('content-type');
  var payLoadType = _core.PayLoadType.ARRAY_BUFFER;

  if (r.status === 204) {
    payLoadType = _core.PayLoadType.NO_CONTENT;
    return new _core.Data(payLoadType, undefined);
  }

  var arrayBuffer = await r.arrayBuffer();
  var data = null;
  var buffers = (0, _parsemultipart.parseMultiPart)(contentType, arrayBuffer);

  if (buffers === undefined) {
    data = new _core.Data(_core.PayLoadType.ARRAY_BUFFER, arrayBuffer);
  } else {
    // choose last one.
    data = new _core.Data(_core.PayLoadType.ARRAY_BUFFER, buffers[buffers.length - 1]);
  }

  var warning = r.headers.get('warning');
  var more = 0;

  if (warning && warning.length > 0) {
    var re = /299.*There are (.*) additional results that can be requested/;
    var matched = re.exec(warning);

    if (matched && matched.length === 2) {
      more = parseInt(matched[1], 10);
    }
  }

  if (more > 0) {
    var pageData = {
      data: data,
      more: more
    };
    return new _core.Data(_core.PayLoadType.PAGED_CONTENT, pageData);
  }

  return data;
};

exports.processResponse = processResponse;

var fetchUrl = async function fetchUrl(locator, option) {
  var url = locator.url,
      payload = locator.payload;
  var method = locator.method || 'GET'; // Authorization should be in locator. But it is hard to implement for now. so hack here.

  var Authorization = option.Authorization;
  var headers = {};

  if (Authorization) {
    headers.Authorization = Authorization;
  }

  var r = await fetch(url, {
    method: method,
    headers: headers,
    body: payload
  });

  _logger.default.log("urlFetch: " + url);

  return processResponse(r);
};

exports.fetchUrl = fetchUrl;

/***/ }),
/* 1000 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseMultiPart = void 0;

var _core = __webpack_require__(30);

var Reader = function Reader(arrayBuffer) {
  var index = 0;
  var size = arrayBuffer.byteLength;
  var uint8Array = new Uint8Array(arrayBuffer);

  var readBuffer = function readBuffer(bytes) {
    if (bytes + index > size) {
      throw new Error('Parse multipart, readBuffer out of index');
    }

    index += bytes;
    return arrayBuffer.slice(index - bytes, index);
  };

  var readLine = function readLine() {
    var start = index;

    while (index + 1 < size) {
      if (uint8Array[index] === 0x0d) {
        if (uint8Array[index + 1] === 0x0a) {
          index += 2;
          return (0, _core.ab2str)(arrayBuffer.slice(start, index - 2));
        }
      }

      index += 1;
    } // reach here only when unit8Array[len - 1] === 0x0d


    index += 1;
    return (0, _core.ab2str)(arrayBuffer.slice(start));
  };

  var isEOF = function isEOF() {
    return index >= size;
  };

  return {
    readLine: readLine,
    isEOF: isEOF,
    readBuffer: readBuffer
  };
};

var readSection = function readSection(reader) {
  var contentSize = 0;

  while (!reader.isEOF()) {
    var l = reader.readLine();

    if (l) {
      var parts = l.split(':').map(function (s) {
        return s.trim();
      });

      if (parts.length === 2) {
        if (parts[0] === 'Content-Length') {
          contentSize = parseInt(parts[1], 10);
        }
      }
    } else if (contentSize !== 0) {
      return reader.readBuffer(contentSize);
    }
  }

  return undefined;
};

var parseMultiPart = function parseMultiPart(contentType, buffer) {
  if (!contentType) {
    return undefined;
  }

  var parts = contentType.split(';').map(function (s) {
    return s.trim();
  });

  if (parts[0] !== 'multipart/related') {
    return undefined;
  }

  var boundary = null;

  for (var i = 1; i < parts.length; i += 1) {
    var kv = parts[i].split('=');

    if (kv.length === 2 && kv[0] === 'boundary') {
      boundary = kv[1]; // eslint-disable-line prefer-destructuring
    }
  }

  if (boundary == null) {
    throw new Error('dicom multipart response parse, no boundary found');
  } // real parse start here.


  var isEndBoundaryReached = false;
  var results = [];
  var reader = Reader(buffer);

  while (!reader.isEOF()) {
    var line = reader.readLine();

    if (line === "--" + boundary) {
      var e = readSection(reader);

      if (e) {
        results.push(e);
      }
    } else if (line === "--" + boundary + "--") {
      isEndBoundaryReached = true;
      break;
    }
  }

  if (!isEndBoundaryReached) {
    return [];
  }

  return results;
};

exports.parseMultiPart = parseMultiPart;

/***/ })
/******/ ]);